(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    129054,       2976]
NotebookOptionsPosition[    120285,       2775]
NotebookOutlinePosition[    120706,       2791]
CellTagsIndexPosition[    120663,       2788]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.7", "HistoryData",
  CellTags->"New"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised"]
}], "History",
 CellChangeTimes->{{3.861612666667642*^9, 3.8616126672582417`*^9}},
 CellID->306604785],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1293352342],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->543337060],

Cell["StianRamsnes/MaXrd", "Categorization",
 CellLabel->"Paclet Name",
 CellID->765500376],

Cell["StianRamsnes`MaXrd`", "Categorization",
 CellLabel->"Context",
 CellID->190290255],

Cell["\<\
StianRamsnes/MaXrd/tutorial/TheAssociationStructureOfCrystallographicData\
\>", "Categorization",
 CellLabel->"URI",
 CellID->605165402]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->532359222],

Cell["XXXX", "Keywords",
 CellID->944570752]
}, Closed]],

Cell[CellGroupData[{

Cell["The association structure of crystallographic data", "Title",
 CellChangeTimes->{{3.6863747695893383`*^9, 3.686374797434338*^9}, {
  3.686374886465823*^9, 3.6863748910103273`*^9}, {3.716743445004421*^9, 
  3.716743448859823*^9}},
 CellID->509267359],

Cell[TextData[{
 "An ",
 Cell[BoxData[
  ButtonBox["Association",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Association"]], "InlineFormula"],
 " is a list structure with entries being a pair of elements, referred to as ",
 Cell[BoxData[
  StyleBox["keys", "TI"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  StyleBox["values", "TI"]], "InlineFormula"],
 ". Each ",
 Cell[BoxData[
  StyleBox["key", "TI"]], "InlineFormula"],
 " is associated with a certain ",
 Cell[BoxData[
  StyleBox["value", "TI"]], "InlineFormula"],
 " using the notation ",
 Cell[BoxData[
  RowBox[{
   StyleBox["key", "TI"], 
   StyleBox["\[Rule]",
    FontSlant->"Plain"], 
   StyleBox["value", "TI"]}]], "InlineFormula"],
 ". One can think of the structure as a one-way dictionary."
}], "Text",
 CellChangeTimes->{{3.686369860714509*^9, 3.6863699018982973`*^9}, {
  3.6863699427575903`*^9, 3.686369959852441*^9}, {3.686370168399777*^9, 
  3.686370225510002*^9}, {3.686370325117484*^9, 3.686370357346979*^9}, {
  3.6863704206682863`*^9, 3.686370535430483*^9}},
 CellID->1534169418],

Cell["\<\
Associations can be nested with both lists and associations. This feature, \
along with a fast and easy way of inquiring values, makes it useful for \
storing information about point groups and space group in an hierarchical \
form. \
\>", "Text",
 CellChangeTimes->{{3.686369860714509*^9, 3.6863699018982973`*^9}, {
  3.6863699427575903`*^9, 3.686369959852441*^9}, {3.686370168399777*^9, 
  3.686370225510002*^9}, {3.686370325117484*^9, 3.686370357346979*^9}, {
  3.6863704206682863`*^9, 3.686370689621606*^9}},
 CellID->588601786],

Cell[CellGroupData[{

Cell["The package must be loaded:", "MathCaption",
 CellChangeTimes->{{3.717256679019158*^9, 3.717256686377759*^9}},
 CellID->1517691727],

Cell[BoxData[
 RowBox[{"<<", "MaXrd`"}]], "Input",
 CellChangeTimes->{{3.7172566881659927`*^9, 3.7172566912817793`*^9}, 
   3.7438364338391333`*^9},
 CellLabel->"In[1]:=",
 CellID->318520214]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["$PointGroups",
      BaseStyle->"Link",
      ButtonData->"paclet:StianRamsnes/MaXrd/ref/$PointGroups"], "[", 
     "\"\<group\>\"", "]"}], Cell[TextData[{
     "returns information on the given point ",
     Cell[BoxData[
      StyleBox["group", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["$SpaceGroups",
      BaseStyle->"Link",
      ButtonData->"paclet:StianRamsnes/MaXrd/ref/$SpaceGroups"], "[", 
     "\"\<group\>\"", "]"}], Cell[TextData[{
     "returns information on the given space ",
     Cell[BoxData[
      StyleBox["group", "TI"]], "InlineFormula"]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["$GroupSymbolRedirect",
      BaseStyle->"Link",
      ButtonData->"paclet:StianRamsnes/MaXrd/ref/$GroupSymbolRedirect"], "[", 
     "\"\<group\>\"", "]"}], Cell[TextData[{
     "redirects group to the appropriate entry of ",
     Cell[BoxData[
      ButtonBox["$PointGroups",
       BaseStyle->"Link",
       ButtonData->"paclet:StianRamsnes/MaXrd/ref/$PointGroups"]], 
      "InlineFormula"],
     " or ",
     Cell[BoxData[
      ButtonBox["$SpaceGroups",
       BaseStyle->"Link",
       ButtonData->"paclet:StianRamsnes/MaXrd/ref/$SpaceGroups"]], 
      "InlineFormula"]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.686370948825653*^9, 3.686371029348624*^9}, {
  3.686371159917512*^9, 3.6863711599175453`*^9}, {3.686372232979349*^9, 
  3.686372346383129*^9}},
 CellID->551264998],

Cell["Looking up point- and space group information.", "Caption",
 CellChangeTimes->{{3.686371173123764*^9, 3.686371188163252*^9}},
 CellID->866368228],

Cell[CellGroupData[{

Cell["Examples of queries", "Section",
 CellChangeTimes->{{3.686372450555173*^9, 3.686372459886261*^9}, {
  3.71842865362467*^9, 3.7184286583663607`*^9}},
 CellID->1477290045],

Cell["First a point group example:", "Text",
 CellChangeTimes->{{3.71842866620957*^9, 3.718428688559402*^9}, {
  3.741688377319235*^9, 3.741688377989004*^9}},
 CellID->904309971],

Cell[CellGroupData[{

Cell[TextData[{
 "Let us inquire information on the point group ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", " ", "/", "m"}], TraditionalForm]], "InlineMath"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.686371203010022*^9, 3.68637132369496*^9}, {
  3.686371444224153*^9, 3.6863714448016253`*^9}},
 CellID->836781195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$PointGroups", "[", "\"\<4/m\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.686371337016368*^9, 3.686371340929102*^9}, {
  3.686375879387252*^9, 3.686375897768057*^9}, {3.861612693753737*^9, 
  3.861612695054933*^9}},
 CellLabel->"In[2]:=",
 CellID->2058623809],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"4/m\"\>"}], ",", 
   RowBox[{"\<\"PointGroupNumber\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"CrystalSystem\"\>", "\[Rule]", "\<\"Tetragonal\"\>"}], ",", 
   RowBox[{"\<\"LaueClass\"\>", "\[Rule]", "\<\"4/m\"\>"}], ",", 
   RowBox[{"\<\"SchoenfliesSymbol\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(4  h\\)]\\)\"\>"}], ",", 
   RowBox[{"\<\"Setting\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"ClassNames\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Groth\"\>", "\[Rule]", "\<\"dipyramidal\"\>"}], ",", 
      RowBox[{"\<\"Friedel\"\>", "\[Rule]", "\<\"parahemihedry\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Properties\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Centrosymmetric\"\>", "\[Rule]", "True"}], ",", 
      RowBox[{"\<\"Enantiomorphic\"\>", "\[Rule]", "False"}], ",", 
      RowBox[{"\<\"Polar\"\>", "\[Rule]", "False"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SymmetryOperations\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"MatrixOperations\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"SymmetryOperationsITA\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"1\"\>", 
         ",", "\<\"\\!\\(\\*SubscriptBox[\\(2\\), \\([001]\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[\\(4\\), \\([001]\\), \
\\(\\(\\\\ \\)\\(+\\)\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[\\(4\\), \\([001]\\), \
\\(\\(\\\\ \\)\\(-\\)\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubscriptBox[\\(m\\), \\([001]\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[OverscriptBox[\\(4\\), \
\\(_\\)], \\([001]\\), \\(\\(\\\\ \\)\\(+\\)\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[OverscriptBox[\\(4\\), \
\\(_\\)], \\([001]\\), \\(\\(\\\\ \\)\\(-\\)\\)]\\)\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"SymmetryOperationsSeitz\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"1\"\>", 
         ",", "\<\"\\!\\(\\*SubscriptBox[\\(2\\), \\(z\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubscriptBox[\\(4\\), \\(z\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[\\(4\\), \\(z\\), \\(\\(\\\\ \
\\)\\(3\\)\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubscriptBox[\\(m\\), \\(z\\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[OverscriptBox[\\(4\\), \
\\(_\\)], \\(z\\), \\(\\\\ \\)]\\)\"\>", 
         ",", "\<\"\\!\\(\\*SubsuperscriptBox[OverscriptBox[\\(4\\), \
\\(_\\)], \\(z\\), \\(\\(\\\\ \\)\\(3\\)\\)]\\)\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Subgroups\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
        RowBox[{"\<\"SubgroupSymmetry\"\>", "\[Rule]", "\<\"1\"\>"}], ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\)\"\>"}], 
        ",", 
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\)\"\>"}], 
        ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", "\[Rule]", "\<\"2\"\>"}], ",", 
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(2\\), \\(z\\)]\\)\"\>"}], 
        ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", "\[Rule]", "\<\"m\"\>"}], ",", 
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(m\\), \\(z\\)]\\)\"\>"}], 
        ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", "\[Rule]", "\<\"2/m\"\>"}], ",", 
        
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(2\\), \
\\(z\\)]\\)/\\!\\(\\*SubscriptBox[\\(m\\), \\(z\\)]\\)\"\>"}], ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}]}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", "\[Rule]", "\<\"4\"\>"}], ",", 
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(4\\), \\(z\\)]\\)\"\>"}], 
        ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*OverscriptBox[\\(4\\), \\(_\\)]\\)\"\>"}], 
        ",", 
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(4\\), \
\\(_\\)], \\(z\\)]\\)\"\>"}], ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "7", ",", "8"}], "}"}]}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"SubgroupClassType\"\>", "\[Rule]", "\<\"4/m\"\>"}], ",", 
        
        RowBox[{"\<\"SubgroupSymmetry\"\>", 
         "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(4\\), \
\\(z\\)]\\)/\\!\\(\\*SubscriptBox[\\(m\\), \\(z\\)]\\)\"\>"}], ",", 
        RowBox[{"\<\"SubgroupList\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8"}], "}"}]}]}], "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.686371341820084*^9, 3.686371479152536*^9, {3.716743314027892*^9, 
   3.71674332667978*^9}, 3.8616126912841473`*^9},
 CellLabel->"Out[2]=",
 CellID->631763700]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Notice how the output is itself an association, with the values of ",
 Cell[BoxData["\"\<Properties\>\""], "InlineFormula"],
 " and ",
 Cell[BoxData["\"\<SymmetryOperations\>\""], "InlineFormula"],
 " being \"sub-associations\". Read more about the output structure on the \
documentation page for ",
 Cell[BoxData[
  ButtonBox["$PointGroups",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/$PointGroups"]], 
  "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.686371494850048*^9, 3.686371563378899*^9}, {
   3.68637159708004*^9, 3.6863716119944344`*^9}, {3.686371791877631*^9, 
   3.686371832971146*^9}, 3.716743333198173*^9},
 CellID->2071765006],

Cell["Now a little more advanced:", "Text",
 CellChangeTimes->{{3.718428679251789*^9, 3.718428684794333*^9}, {
  3.741688387774478*^9, 3.7416883880824757`*^9}},
 CellID->1686878742],

Cell[CellGroupData[{

Cell["Selecting all centrosymmetric point groups:", "MathCaption",
 CellChangeTimes->{{3.6863731095280113`*^9, 3.686373122385004*^9}},
 CellID->439173159],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centr", "=", 
  RowBox[{"Keys", "@", 
   RowBox[{"Select", "[", 
    RowBox[{"$PointGroups", ",", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<Properties\>\"", ",", "\"\<Centrosymmetric\>\""}], "]"}],
        "]"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.716743366952297*^9, 3.716743368990282*^9}},
 CellLabel->"In[4]:=",
 CellID->480581018],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"-1\"\>", ",", "\<\"2/m\"\>", ",", "\<\"mmm\"\>", 
   ",", "\<\"4/m\"\>", ",", "\<\"4/mmm\"\>", ",", "\<\"-3\"\>", 
   ",", "\<\"-3m\"\>", ",", "\<\"6/m\"\>", ",", "\<\"6/mmm\"\>", 
   ",", "\<\"m-3\"\>", ",", "\<\"m-3m\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.68637312440133*^9, {3.686373283893227*^9, 3.686373289341864*^9}, 
   3.686374278737673*^9, {3.716743346656437*^9, 3.7167433725646343`*^9}, 
   3.861612703427577*^9},
 CellLabel->"Out[4]=",
 CellID->294977654]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify that the set of centrosymmetric point groups is the same set as the \
Laue classes:\
\>", "MathCaption",
 CellChangeTimes->{{3.6863732313286858`*^9, 3.686373280708156*^9}},
 CellID->356711628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centr", "===", 
  RowBox[{"Keys", "@", "$LaueClasses"}]}]], "Input",
 CellChangeTimes->{{3.686373129331246*^9, 3.686373133753694*^9}, {
  3.686373219349617*^9, 3.6863732206753263`*^9}, {3.716743374318425*^9, 
  3.716743374686014*^9}, {3.861612780314196*^9, 3.861612780591852*^9}},
 CellLabel->"In[5]:=",
 CellID->1539441892],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.686373134002537*^9, 3.6863732908650312`*^9, 3.686374278867084*^9, {
   3.7167433516892023`*^9, 3.7167433771759367`*^9}, 3.861612708746956*^9, {
   3.861612781211233*^9, 3.861612792300084*^9}},
 CellLabel->"Out[5]=",
 CellID->1326717514]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find the 13 alternative settings of point groups (and obtain the formatted \
symbols):\
\>", "MathCaption",
 CellChangeTimes->{{3.686373350099024*^9, 3.686373372404098*^9}, {
  3.6863739046460457`*^9, 3.686373912732029*^9}, {3.861612964163205*^9, 
  3.861612977348867*^9}},
 CellID->1322872937],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pgWithAlt", "=", 
  RowBox[{"Keys", "@", 
   RowBox[{"DeleteMissing", "@", 
    RowBox[{"$PointGroups", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "\"\<AlternativeSettings\>\""}], 
     "\[RightDoubleBracket]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.68637372168431*^9, 3.6863737232365513`*^9}, {
  3.6863742418865833`*^9, 3.686374242111471*^9}, {3.861612989078608*^9, 
  3.861612996231884*^9}},
 CellLabel->"In[6]:=",
 CellID->477012596],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"2\"\>", ",", "\<\"m\"\>", ",", "\<\"2/m\"\>", 
   ",", "\<\"-42m\"\>", ",", "\<\"3\"\>", ",", "\<\"-3\"\>", 
   ",", "\<\"32\"\>", ",", "\<\"3m\"\>", ",", "\<\"-3m\"\>", 
   ",", "\<\"-62m\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.861612997856367*^9, 3.861613012697975*^9}},
 CellLabel->"Out[6]=",
 CellID->746762832]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$PointGroups", "[", 
    RowBox[{"#", ",", "\"\<Symbol\>\""}], "]"}], "&"}], "/@", 
  "pgWithAlt"}]], "Input",
 CellChangeTimes->{3.8616130052581053`*^9},
 CellLabel->"In[7]:=",
 CellID->569636174],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"2\"\>", ",", "\<\"m\"\>", ",", "\<\"2/m\"\>", 
   ",", "\<\"\\!\\(\\*OverscriptBox[\\(4\\), \\(_\\)]\\)2m\"\>", 
   ",", "\<\"3\"\>", 
   ",", "\<\"\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)\"\>", 
   ",", "\<\"32\"\>", ",", "\<\"3m\"\>", 
   ",", "\<\"\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m\"\>", 
   ",", "\<\"\\!\\(\\*OverscriptBox[\\(6\\), \\(_\\)]\\)2m\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.861613005797076*^9, 3.861613013469541*^9}},
 CellLabel->"Out[7]=",
 CellID->594070146]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "To get an overview of the data stored with a single point group, try ",
 Cell[BoxData[
  ButtonBox["Dataset",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Dataset"]], "InlineFormula"],
 ButtonBox[":",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Dataset"]
}], "MathCaption",
 CellChangeTimes->{{3.71674377129221*^9, 3.716743775763034*^9}, {
  3.716743911040613*^9, 3.716743937942374*^9}, {3.716743993070581*^9, 
  3.716744041223572*^9}},
 CellID->1686196213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"$PointGroups", "[", "\"\<3m\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.716744059178082*^9, 3.716744076842667*^9}},
 CellLabel->"In[8]:=",
 CellID->131592305],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Symbol" -> "3m", "FullSymbol" -> "3m1", "SymbolAlt" -> "3m:h", 
       "FullSymbolAlt" -> "3m1:h", "PointGroupNumber" -> 19, "CrystalSystem" -> 
       "Trigonal", "LaueClass" -> "\!\(\*OverscriptBox[\(3\), \(_\)]\)m", 
       "SchoenfliesSymbol" -> "\!\(\*SubscriptBox[\(C\), \(3  v\)]\)", 
       "Setting" -> "HexagonalAxes", 
       "ClassNames" -> <|
        "Groth" -> "ditrigonal-pyramidal", 
         "Friedel" -> <|
          "Hexagonal" -> "hemimorphic antitetartohedry", "Rhombohedral" -> 
           "antihemihedry"|>|>, 
       "Properties" -> <|
        "Centrosymmetric" -> False, "Enantiomorphic" -> False, "Polar" -> 
         True|>, "SymmetryOperations" -> <|
        "MatrixOperations" -> {{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{0, -1, 
          0}, {1, -1, 0}, {0, 0, 1}}, {{-1, 1, 0}, {-1, 0, 0}, {0, 0, 1}}, {{
          0, -1, 0}, {-1, 0, 0}, {0, 0, 1}}, {{-1, 1, 0}, {0, 1, 0}, {0, 0, 
          1}}, {{1, 0, 0}, {1, -1, 0}, {0, 0, 1}}}, 
         "SymmetryOperationsITA" -> {
          "1", "\!\(\*SubsuperscriptBox[\(3\), \([001]\), \(\(\\ \
\)\(+\)\)]\)", 
           "\!\(\*SubsuperscriptBox[\(3\), \([001]\), \(\(\\ \)\(-\)\)]\)", 
           "\!\(\*SubscriptBox[\(m\), \([110]\)]\)", 
           "\!\(\*SubscriptBox[\(m\), \([100]\)]\)", 
           "\!\(\*SubscriptBox[\(m\), \([010]\)]\)"}, 
         "SymmetryOperationsSeitz" -> {
          "1", "\!\(\*SubscriptBox[\(3\), \(z\)]\)", 
           "\!\(\*SubsuperscriptBox[\(3\), \(z\), \(\(\\ \)\(2\)\)]\)", 
           "\!\(\*SubscriptBox[\(m\), \(x''\)]\)", 
           "\!\(\*SubscriptBox[\(m\), \(x\)]\)", 
           "\!\(\*SubscriptBox[\(m\), \(x'\)]\)"}|>, 
       "Subgroups" -> {<|
         "SubgroupClassType" -> "1", "SubgroupSymmetry" -> "1", 
          "SubgroupList" -> {1}|>, <|
         "SubgroupClassType" -> "m", "SubgroupSymmetry" -> 
          "\!\(\*SubscriptBox[\(m\), \(x\)]\)", "SubgroupList" -> {1, 5}|>, <|
         "SubgroupClassType" -> "m", "SubgroupSymmetry" -> 
          "\!\(\*SubscriptBox[\(m\), \(x'\)]\)", "SubgroupList" -> {1, 6}|>, <|
         "SubgroupClassType" -> "m", "SubgroupSymmetry" -> 
          "\!\(\*SubscriptBox[\(m\), \(x''\)]\)", 
          "SubgroupList" -> {1, 4}|>, <|
         "SubgroupClassType" -> "3", "SubgroupSymmetry" -> 
          "\!\(\*SubscriptBox[\(3\), \(z\)]\)", 
          "SubgroupList" -> {1, 2, 3}|>, <|
         "SubgroupClassType" -> "3m1", "SubgroupSymmetry" -> 
          "\!\(\*SubscriptBox[\(3\), \(z\)]\)\!\(\*SubscriptBox[\(m\), \(x\)]\
\)", "SubgroupList" -> {1, 2, 3, 4, 5, 6}|>}, 
       "AlternativeSettings" -> <|
        "31m" -> <|
          "Symbol" -> "31m", "Setting" -> "HexagonalAxes", 
           "SymmetryOperations" -> <|
            "MatrixOperations" -> {{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{0, -1,
               0}, {1, -1, 0}, {0, 0, 1}}, {{-1, 1, 0}, {-1, 0, 0}, {0, 0, 
              1}}, {{0, 1, 0}, {1, 0, 0}, {0, 0, 1}}, {{1, -1, 0}, {0, -1, 
              0}, {0, 0, 1}}, {{-1, 0, 0}, {-1, 1, 0}, {0, 0, 1}}}, 
             "SymmetryOperationsITA" -> {
              "1", "\!\(\*SubsuperscriptBox[\(3\), \([001]\), \(\(\\ \
\)\(+\)\)]\)", 
               "\!\(\*SubsuperscriptBox[\(3\), \([001]\), \(\(\\ \
\)\(-\)\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \([1 \*OverscriptBox[\(1\), \(_\)] \
0]\)]\)", "\!\(\*SubscriptBox[\(m\), \([120]\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \([210]\)]\)"}, 
             "SymmetryOperationsSeitz" -> {
              "1", "\!\(\*SubscriptBox[\(3\), \(z\)]\)", 
               "\!\(\*SubsuperscriptBox[\(3\), \(z\), \(\(\\ \)\(2\)\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \(y''\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \(y'\)]\)"}|>, 
           "Subgroups" -> {<|
             "SubgroupClassType" -> "1", "SubgroupSymmetry" -> "1", 
              "SubgroupList" -> {1}|>, <|
             "SubgroupClassType" -> "m", "SubgroupSymmetry" -> 
              "\!\(\*SubscriptBox[\(m\), \(y\)]\)", 
              "SubgroupList" -> {1, 5}|>, <|
             "SubgroupClassType" -> "m", "SubgroupSymmetry" -> 
              "\!\(\*SubscriptBox[\(m\), \(y'\)]\)", 
              "SubgroupList" -> {1, 6}|>, <|
             "SubgroupClassType" -> "m", "SubgroupSymmetry" -> 
              "\!\(\*SubscriptBox[\(m\), \(y''\)]\)", 
              "SubgroupList" -> {1, 4}|>, <|
             "SubgroupClassType" -> "3", "SubgroupSymmetry" -> 
              "\!\(\*SubscriptBox[\(3\), \(z\)]\)", 
              "SubgroupList" -> {1, 2, 3}|>, <|
             "SubgroupClassType" -> "31m", "SubgroupSymmetry" -> 
              "\!\(\*SubscriptBox[\(3\), \(z\)]\)\!\(\*SubscriptBox[\(m\), \
\(y\)]\)", "SubgroupList" -> {1, 2, 3, 4, 5, 6}|>}|>, 
         "3m" -> <|
          "Symbol" -> "3m:r", "FullSymbol" -> "3m1:r", "Setting" -> 
           "RhombohedralAxes", 
           "SymmetryOperations" -> <|
            "MatrixOperations" -> {{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{0, 0, 
              1}, {1, 0, 0}, {0, 1, 0}}, {{0, 1, 0}, {0, 0, 1}, {1, 0, 0}}, {{
              0, 0, 1}, {0, 1, 0}, {1, 0, 0}}, {{0, 1, 0}, {1, 0, 0}, {0, 0, 
              1}}, {{1, 0, 0}, {0, 0, 1}, {0, 1, 0}}}, 
             "SymmetryOperationsITA" -> {
              "1", "\!\(\*SubsuperscriptBox[\(3\), \([111]\), \(\(\\ \
\)\(+\)\)]\)", 
               "\!\(\*SubsuperscriptBox[\(3\), \([111]\), \(\(\\ \
\)\(-\)\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \([\*OverscriptBox[\(1\), \(_\)] \
01]\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \([1 \*OverscriptBox[\(1\), \(_\)] \
0]\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \([01 \*OverscriptBox[\(1\), \
\(_\)]]\)]\)"}, 
             "SymmetryOperationsSeitz" -> {
              "1", "\!\(\*SubscriptBox[\(3\), \(p\)]\)", 
               "\!\(\*SubsuperscriptBox[\(3\), \(p\), \(\(\\ \)\(2\)\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \(z \*OverscriptBox[\(x\), \
\(_\)]\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \(x \*OverscriptBox[\(y\), \
\(_\)]\)]\)", 
               "\!\(\*SubscriptBox[\(m\), \(y \*OverscriptBox[\(z\), \
\(_\)]\)]\)"}|>, 
           "Subgroups" -> {<|
             "SubgroupClassType" -> "R1", "SubgroupSymmetry" -> "R1", 
              "SubgroupList" -> {1}|>, <|
             "SubgroupClassType" -> "Rm", "SubgroupSymmetry" -> 
              "R\!\(\*SubscriptBox[\(m\), \(x \*OverscriptBox[\(y\), \
\(_\)]\)]\)", "SubgroupList" -> {1, 5}|>, <|
             "SubgroupClassType" -> "Rm", "SubgroupSymmetry" -> 
              "R\!\(\*SubscriptBox[\(m\), \(z \*OverscriptBox[\(x\), \
\(_\)]\)]\)", "SubgroupList" -> {1, 4}|>, <|
             "SubgroupClassType" -> "Rm", "SubgroupSymmetry" -> 
              "R\!\(\*SubscriptBox[\(m\), \(y \*OverscriptBox[\(z\), \
\(_\)]\)]\)", "SubgroupList" -> {1, 6}|>, <|
             "SubgroupClassType" -> "R3", "SubgroupSymmetry" -> 
              "R\!\(\*SubscriptBox[\(3\), \(p\)]\)", 
              "SubgroupList" -> {1, 2, 3}|>, <|
             "SubgroupClassType" -> "R3m", "SubgroupSymmetry" -> 
              "R\!\(\*SubscriptBox[\(3\), \(p\)]\)\!\(\*SubscriptBox[\(m\), \
\(x \*OverscriptBox[\(y\), \(_\)]\)]\)", 
              "SubgroupList" -> {1, 2, 3, 4, 5, 6}|>}|>|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Symbol"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"FullSymbol"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"SymbolAlt"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "FullSymbolAlt"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {
         "PointGroupNumber"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"CrystalSystem"} -> 
        TypeSystem`PackageScope`AtomShape[89.60000000000001], {"LaueClass"} -> 
        TypeSystem`PackageScope`AtomShape[313.6], {"SchoenfliesSymbol"} -> 
        TypeSystem`PackageScope`AtomShape[324.8], {"Setting"} -> 
        TypeSystem`PackageScope`AtomShape[145.60000000000002`], {
         "ClassNames"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Properties"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"SymmetryOperations"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Subgroups"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"AlternativeSettings"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "Symbol", "FullSymbol", "SymbolAlt", "FullSymbolAlt", 
        "PointGroupNumber", "CrystalSystem", "LaueClass", "SchoenfliesSymbol",
         "Setting", "ClassNames", "Properties", "SymmetryOperations", 
        "Subgroups", "AlternativeSettings"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Groth", "Friedel"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["Hexagonal", "Rhombohedral"]], 
           TypeSystem`Atom[String], 2]}], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Centrosymmetric", "Enantiomorphic", "Polar"]], 
         TypeSystem`Atom[TypeSystem`Boolean], 3], 
        TypeSystem`Struct[{
         "MatrixOperations", "SymmetryOperationsITA", 
          "SymmetryOperationsSeitz"}, {
          TypeSystem`Vector[
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Integer], 3], 3], 6], 
          TypeSystem`Vector[
           TypeSystem`Atom[String], 6], 
          TypeSystem`Vector[
           TypeSystem`Atom[String], 6]}], 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["1", "3", "3m1", "m"]], 
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 6], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "Symbol", "FullSymbol", "Setting", "SymmetryOperations", 
           "Subgroups"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           
           TypeSystem`Struct[{
            "MatrixOperations", "SymmetryOperationsITA", 
             "SymmetryOperationsSeitz"}, {
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 6], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 6], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 6]}], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "1", "3", "31m", "m", "R1", "R3", "R3m", "Rm"]], 
              TypeSystem`Atom[String], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 6]}], 2]}], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Symbol"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"FullSymbol"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"SymbolAlt"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "FullSymbolAlt"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {
         "PointGroupNumber"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"CrystalSystem"} -> 
        TypeSystem`PackageScope`AtomShape[89.60000000000001], {"LaueClass"} -> 
        TypeSystem`PackageScope`AtomShape[313.6], {"SchoenfliesSymbol"} -> 
        TypeSystem`PackageScope`AtomShape[324.8], {"Setting"} -> 
        TypeSystem`PackageScope`AtomShape[145.60000000000002`], {
         "ClassNames"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Properties"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"SymmetryOperations"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"Subgroups"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"AlternativeSettings"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "Symbol", "FullSymbol", "SymbolAlt", "FullSymbolAlt", 
        "PointGroupNumber", "CrystalSystem", "LaueClass", "SchoenfliesSymbol",
         "Setting", "ClassNames", "Properties", "SymmetryOperations", 
        "Subgroups", "AlternativeSettings"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Groth", "Friedel"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["Hexagonal", "Rhombohedral"]], 
           TypeSystem`Atom[String], 2]}], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Centrosymmetric", "Enantiomorphic", "Polar"]], 
         TypeSystem`Atom[TypeSystem`Boolean], 3], 
        TypeSystem`Struct[{
         "MatrixOperations", "SymmetryOperationsITA", 
          "SymmetryOperationsSeitz"}, {
          TypeSystem`Vector[
           TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[Integer], 3], 3], 6], 
          TypeSystem`Vector[
           TypeSystem`Atom[String], 6], 
          TypeSystem`Vector[
           TypeSystem`Atom[String], 6]}], 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["1", "3", "3m1", "m"]], 
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 6], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "Symbol", "FullSymbol", "Setting", "SymmetryOperations", 
           "Subgroups"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           
           TypeSystem`Struct[{
            "MatrixOperations", "SymmetryOperationsITA", 
             "SymmetryOperationsSeitz"}, {
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 6], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 6], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 6]}], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "1", "3", "31m", "m", "R1", "R3", "R3m", "Rm"]], 
              TypeSystem`Atom[String], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 6]}], 2]}], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
     "DataRowCount" -> 14, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Symbol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Symbol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["3m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FullSymbol", 
                  Style[
                  "FullSymbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FullSymbol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullSymbol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["3m1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullSymbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SymbolAlt", 
                  Style[
                  "SymbolAlt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SymbolAlt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SymbolAlt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["3m:h", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SymbolAlt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FullSymbolAlt", 
                  Style[
                  "FullSymbolAlt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FullSymbolAlt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullSymbolAlt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["3m1:h", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullSymbolAlt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PointGroupNumber", 
                  Style[
                  "PointGroupNumber", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PointGroupNumber"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PointGroupNumber"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PointGroupNumber"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CrystalSystem", 
                  Style[
                  "CrystalSystem", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["CrystalSystem"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CrystalSystem"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Trigonal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CrystalSystem"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LaueClass", 
                  Style[
                  "LaueClass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LaueClass"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LaueClass"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*OverscriptBox[\(3\), \(_\)]\)m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LaueClass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SchoenfliesSymbol", 
                  Style[
                  "SchoenfliesSymbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SchoenfliesSymbol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SchoenfliesSymbol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(C\), \(3  v\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SchoenfliesSymbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Setting", 
                  Style[
                  "Setting", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Setting"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Setting"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["HexagonalAxes", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Setting"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ClassNames", 
                  Style[
                  "ClassNames", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ClassNames"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ClassNames"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Groth", "Friedel"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Groth", "Friedel"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ClassNames"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ClassNames"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Properties", 
                  Style[
                  "Properties", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Properties"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Properties"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"Centrosymmetric" -> False, "Enantiomorphic" -> 
                    False, "Polar" -> True|>, ShowStringCharacters -> False], 
                  
                  Style[
                   
                   Style[<|"Centrosymmetric" -> False, "Enantiomorphic" -> 
                    False, "Polar" -> True|>, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Properties"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Properties"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SymmetryOperations", 
                  Style[
                  "SymmetryOperations", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SymmetryOperations"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SymmetryOperations"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    Row[{
                    "MatrixOperations", "SymmetryOperationsITA", 
                    "SymmetryOperationsSeitz"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"MatrixOperations", "SymmetryOperationsITA", 
                    "SymmetryOperationsSeitz"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["SymmetryOperations"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["SymmetryOperations"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Subgroups", 
                  Style[
                  "Subgroups", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Subgroups"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Subgroups"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 6], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 6], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Subgroups"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Subgroups"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AlternativeSettings", 
                  Style[
                  "AlternativeSettings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["AlternativeSettings"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AlternativeSettings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"31m", "3m"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"31m", "3m"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["AlternativeSettings"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AlternativeSettings"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{554., {195.3544921875, 200.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{554., {195.3544921875, 200.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7167440784810133`*^9, 3.861613017840856*^9},
 CellLabel->"Out[8]=",
 CellID->1102655610]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auxiliary tools", "Section",
 CellChangeTimes->{{3.686376308263277*^9, 3.6863763130958967`*^9}, {
  3.716744408225464*^9, 3.716744412537313*^9}, {3.7184288531771507`*^9, 
  3.718428855919881*^9}},
 CellID->938345198],

Cell[TextData[{
 "In this section we will learn more about the two functions ",
 Cell[BoxData[
  ButtonBox["$GroupSymbolRedirect",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/$GroupSymbolRedirect"]], 
  "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["SymmetryData",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/SymmetryData"]], 
  "InlineFormula"],
 ", which are built-in to the ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 " package and help query data from point groups, space groups and crystal \
data."
}], "Text",
 CellChangeTimes->{{3.7184287197091513`*^9, 3.718428790623402*^9}, {
   3.718428888968252*^9, 3.7184288933570538`*^9}, {3.71842893713894*^9, 
   3.718428946827127*^9}, 3.741688405800655*^9, 3.7438364352400627`*^9},
 CellID->1653357919],

Cell[CellGroupData[{

Cell[TextData[{
 "Associations only support a single key for each entry. The associations ",
 Cell[BoxData[
  ButtonBox["$PointGroups",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/$PointGroups"]], 
  "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["$SpaceGroups",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/$SpaceGroups"]], 
  "InlineFormula"],
 " only have one \[OpenCurlyDoubleQuote]main entry\[CloseCurlyDoubleQuote] \
for each group,"
}], "Text",
 CellChangeTimes->{3.716744315951285*^9},
 CellID->1926981462],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"{", 
   RowBox[{"$PointGroups", ",", "$SpaceGroups"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.716744322133171*^9, 3.716744350707019*^9}},
 CellLabel->"In[1]:=",
 CellID->576551427],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "230"}], "}"}]], "Output",
 CellChangeTimes->{{3.716744330590643*^9, 3.716744358568462*^9}, 
   3.8616130385203743`*^9},
 CellLabel->"Out[1]=",
 CellID->1716057647]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "All data concerned with the alternative settings are stored as sub-entries. \
For example, the orthorhombic space group ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", " ", "b", " ", "c", " ", "n"}], TraditionalForm]], 
  "InlineMath"],
 " has five alternative settings: one with an ",
 Cell[BoxData[
 "\"\<ba\!\(\*OverscriptBox[\(c\), \(_\)]\)\>\""], "InlineFormula"],
 "-permutation of the axes, and one with a ",
 Cell[BoxData["\"\<cab\>\""], "InlineFormula"],
 "-permutation, and the remaining versions with ",
 Cell[BoxData[
 "\"\<\!\(\*OverscriptBox[\(c\), \(_\)]\)ba\>\""], "InlineFormula"],
 ", ",
 Cell[BoxData["\"\<bca\>\""], "InlineFormula"],
 " and ",
 Cell[BoxData[
 "\"\<a\!\(\*OverscriptBox[\(c\), \(_\)]\)b\>\""], "InlineFormula"],
 " permutations."
}], "Text",
 CellChangeTimes->{
  3.716744315951285*^9, {3.7167443692857723`*^9, 3.716744385905652*^9}, {
   3.716744467121119*^9, 3.716744471623348*^9}, {3.716744973940619*^9, 
   3.716744999105157*^9}, {3.716745034504237*^9, 3.716745117290059*^9}, {
   3.716745193220418*^9, 3.716745283553286*^9}, {3.716745319770863*^9, 
   3.7167454624542723`*^9}, {3.716747320493487*^9, 3.7167474379708242`*^9}, {
   3.716783089136183*^9, 3.716783091450863*^9}, {3.716783128771977*^9, 
   3.716783137428782*^9}, {3.71842880376167*^9, 3.718428804507594*^9}},
 CellID->791544844],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", 
  RowBox[{"$SpaceGroups", "[", 
   RowBox[{"\"\<Pbcn\>\"", ",", "\"\<AlternativeSettings\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716745000598874*^9, 3.716745028400383*^9}, {
  3.716745157559883*^9, 3.716745176932013*^9}, {3.716745226331367*^9, 
  3.716745232967005*^9}, {3.716745464844709*^9, 3.716745466891328*^9}},
 CellLabel->"In[2]:=",
 CellID->713264434],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AxisPermutationBA-C\"\>", ",", "\<\"AxisPermutationCAB\"\>", 
   ",", "\<\"AxisPermutation-CBA\"\>", ",", "\<\"AxisPermutationBCA\"\>", 
   ",", "\<\"AxisPermutationA-CB\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7167450083408623`*^9, 3.716745028621077*^9}, {
   3.716745158138898*^9, 3.7167451772577143`*^9}, {3.7167452305523767`*^9, 
   3.716745233205578*^9}, {3.7167454671444883`*^9, 3.716745473618479*^9}, 
   3.861613040175199*^9},
 CellLabel->"Out[2]=",
 CellID->572702954]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Let us look at three different ways to access the data of, say the ",
 Cell[BoxData["\"\<bca\>\""], "InlineFormula"],
 "-version:"
}], "Text",
 CellChangeTimes->{{3.716746125265329*^9, 3.716746155333159*^9}, {
  3.7167474424156847`*^9, 3.7167474514578667`*^9}},
 CellID->106117543],

Cell[CellGroupData[{

Cell[TextData[{
 "1. Look up the entry directly in ",
 Cell[BoxData[
  ButtonBox["$SpaceGroups",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/$SpaceGroups"]], 
  "InlineFormula"],
 ":"
}], "MathCaption",
 CellChangeTimes->{{3.7167459859879*^9, 3.716746044256783*^9}, {
  3.7167461600455437`*^9, 3.716746171985755*^9}},
 CellID->529365239],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$SpaceGroups", "[", 
  RowBox[{
  "\"\<Pbcn\>\"", ",", "\"\<AlternativeSettings\>\"", ",", 
   "\"\<AxisPermutationBCA\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716746046317634*^9, 3.7167460724480963`*^9}},
 CellLabel->"In[3]:=",
 CellID->341755647],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Name\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"Pbna\"\>"}], ",", 
      RowBox[{"\<\"HermannMauguinShort\"\>", "\[Rule]", "\<\"P b n a\"\>"}], 
      ",", 
      RowBox[{"\<\"HermannMauguinFull\"\>", 
       "\[Rule]", "\<\"P 2/b 21/n 21/a\"\>"}], ",", 
      RowBox[{"\<\"HallString\"\>", "\[Rule]", "\<\"-P 2ac 2b\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Setting\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"AxisPermutation\"\>", "\[Rule]", "\<\"bca\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SymmetryOperations\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", "0", ",", 
          FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["1", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", "0", ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7167460727268953`*^9, 3.861613046829549*^9},
 CellLabel->"Out[3]=",
 CellID->170117842]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "2. Let ",
 Cell[BoxData[
  ButtonBox["$GroupSymbolRedirect",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/$GroupSymbolRedirect"]], 
  "InlineFormula"],
 " look up the entry automatically (it works almost like a \
\[OpenCurlyDoubleQuote]switchboard\[CloseCurlyDoubleQuote] for the point- and \
space groups). You would need to know the space group symbol in advance:"
}], "MathCaption",
 CellChangeTimes->{{3.7167461787740707`*^9, 3.716746195356154*^9}, {
  3.716746331665493*^9, 3.716746352415016*^9}, {3.716746562583817*^9, 
  3.71674658871974*^9}},
 CellID->1128691895],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$GroupSymbolRedirect", "[", "\"\<Pbna\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7167465912614326`*^9, 3.71674662327201*^9}},
 CellLabel->"In[4]:=",
 CellID->1251013360],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Name\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Symbol\"\>", "\[Rule]", "\<\"Pbna\"\>"}], ",", 
      RowBox[{"\<\"HermannMauguinShort\"\>", "\[Rule]", "\<\"P b n a\"\>"}], 
      ",", 
      RowBox[{"\<\"HermannMauguinFull\"\>", 
       "\[Rule]", "\<\"P 2/b 21/n 21/a\"\>"}], ",", 
      RowBox[{"\<\"HallString\"\>", "\[Rule]", "\<\"-P 2ac 2b\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Setting\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"AxisPermutation\"\>", "\[Rule]", "\<\"bca\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SymmetryOperations\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", "0", ",", 
          FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["1", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", "0", ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "2"]}]}], "}"}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7167466235998983`*^9, 3.8616130495100327`*^9},
 CellLabel->"Out[4]=",
 CellID->1751345404]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "3. Use ",
 Cell[BoxData[
  ButtonBox["SymmetryData",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/SymmetryData"]], 
  "InlineFormula"],
 " to extract the data you want (see valid commands in the documentation). \
Say we want to know the space group number or whether the space group is a \
\[OpenCurlyDoubleQuote]main entry\[CloseCurlyDoubleQuote] or not. A similar \
function (",
 Cell[BoxData[
  ButtonBox["SymmetryOperations",
   BaseStyle->"Link",
   ButtonData->"paclet:StianRamsnes/MaXrd/ref/SymmetryOperations"]], 
  "InlineFormula"],
 ") can also extract the symmetry operations:"
}], "MathCaption",
 CellChangeTimes->{{3.716746852976757*^9, 3.716746893564686*^9}, {
  3.716746940030855*^9, 3.716746962804085*^9}, {3.716747088623993*^9, 
  3.716747140180862*^9}},
 CellID->1860424459],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSymmetryData", "[", 
  RowBox[{"\"\<Pbna\>\"", ",", "\"\<SpaceGroupNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716746966010387*^9, 3.716746978931697*^9}, {
  3.741953096425592*^9, 3.741953096857328*^9}},
 CellLabel->"In[5]:=",
 CellID->1658747158],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{3.7167469793559523`*^9, 3.861613052080413*^9},
 CellLabel->"Out[5]=",
 CellID->567388016]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSymmetryData", "[", 
  RowBox[{"\"\<Pbna\>\"", ",", "\"\<MainEntryQ\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716746980130535*^9, 3.716746990298877*^9}, 
   3.7419530991139603`*^9},
 CellLabel->"In[6]:=",
 CellID->1908267061],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.716746990591655*^9, 3.8616130536545267`*^9},
 CellLabel->"Out[6]=",
 CellID->1372844780]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSymmetryOperations", "[", "\"\<Pbna\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.861613092145939*^9, 3.86161309553196*^9}, {
  3.861613191745529*^9, 3.8616132032124577`*^9}},
 CellLabel->"In[7]:=",
 CellID->204973859],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"1", "0", "0", "0"},
        {"0", "1", "0", "0"},
        {"0", "0", "1", "0"},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "1"}], "0", "0", 
         FractionBox["1", "2"]},
        {"0", 
         RowBox[{"-", "1"}], "0", "0"},
        {"0", "0", "1", 
         FractionBox["1", "2"]},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"1", "0", "0", "0"},
        {"0", 
         RowBox[{"-", "1"}], "0", 
         FractionBox["1", "2"]},
        {"0", "0", 
         RowBox[{"-", "1"}], "0"},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "1"}], "0", "0", 
         FractionBox["1", "2"]},
        {"0", "1", "0", 
         FractionBox["1", "2"]},
        {"0", "0", 
         RowBox[{"-", "1"}], 
         FractionBox["1", "2"]},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "1"}], "0", "0", "0"},
        {"0", 
         RowBox[{"-", "1"}], "0", "0"},
        {"0", "0", 
         RowBox[{"-", "1"}], "0"},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"1", "0", "0", 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", "1", "0", "0"},
        {"0", "0", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "1"}], "0", "0", "0"},
        {"0", "1", "0", 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", "0", "1", "0"},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"1", "0", "0", 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", 
         RowBox[{"-", "1"}], "0", 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", "0", "1", 
         RowBox[{"-", 
          FractionBox["1", "2"]}]},
        {"0", "0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.861613095815696*^9, {3.861613185746192*^9, 3.861613205604653*^9}},
 CellLabel->"Out[7]=",
 CellID->425537202]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->254638124],

Cell["XXXX", "TutorialMoreAbout",
 CellID->1915525244]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->1305423731],

Cell[TextData[ButtonBox["Quick guide to Conditions",
 BaseStyle->"Link",
 ButtonData->
  "paclet:StianRamsnes/MaXrd/tutorial/QuickGuideToConditions"]], \
"RelatedTutorials",
 CellChangeTimes->{{3.861613234972105*^9, 3.8616132494688396`*^9}},
 CellID->1563709165],

Cell["XXXX", "RelatedTutorials",
 CellID->695165664]
}, Open  ]]
}, Open  ]]
},
WindowSize->{700, 771},
WindowMargins->{{184, Automatic}, {110, Automatic}},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 392, 15, 70, "History",ExpressionUUID->"c1395f74-4605-466f-8bab-01170b5d1259",
 CellID->306604785],
Cell[CellGroupData[{
Cell[975, 39, 68, 1, 70, "CategorizationSection",ExpressionUUID->"1d34a0a8-c7cb-428b-ac09-f9edac863ed6",
 CellID->1293352342],
Cell[1046, 42, 82, 2, 70, "Categorization",ExpressionUUID->"6b8e58d1-9451-43e9-9068-c71f48a630ba",
 CellID->543337060],
Cell[1131, 46, 91, 2, 70, "Categorization",ExpressionUUID->"2ec63a75-f9c9-430b-a897-bbc1fdc112ed",
 CellID->765500376],
Cell[1225, 50, 88, 2, 70, "Categorization",ExpressionUUID->"dc3f32f0-227d-4497-ab26-c24f18c748b3",
 CellID->190290255],
Cell[1316, 54, 146, 4, 70, "Categorization",ExpressionUUID->"3effba4c-42ba-43aa-8965-4a6263b28cb6",
 CellID->605165402]
}, Open  ]],
Cell[CellGroupData[{
Cell[1499, 63, 55, 1, 70, "KeywordsSection",ExpressionUUID->"7de22579-cf3b-4293-a970-6eae21286a4a",
 CellID->532359222],
Cell[1557, 66, 44, 1, 70, "Keywords",ExpressionUUID->"772a22f8-a183-49b9-b2cc-15c04baa5033",
 CellID->944570752]
}, Closed]],
Cell[CellGroupData[{
Cell[1638, 72, 255, 4, 70, "Title",ExpressionUUID->"4be52ae6-d3fe-4fea-b0be-907ae395433d",
 CellID->509267359],
Cell[1896, 78, 1062, 31, 70, "Text",ExpressionUUID->"3b47dec5-d146-4fa2-a43e-164eaf95fdcc",
 CellID->1534169418],
Cell[2961, 111, 542, 10, 70, "Text",ExpressionUUID->"db212eb7-31e7-4a2b-888b-472e59507169",
 CellID->588601786],
Cell[CellGroupData[{
Cell[3528, 125, 137, 2, 70, "MathCaption",ExpressionUUID->"f8b696cb-73d6-4b91-9e5a-b08b7da466a4",
 CellID->1517691727],
Cell[3668, 129, 191, 5, 70, "Input",ExpressionUUID->"00ed8726-660a-4665-91e3-2b48ae420d56",
 CellID->318520214]
}, Open  ]],
Cell[3874, 137, 1521, 44, 70, "DefinitionBox",ExpressionUUID->"10606cd3-a85a-44ca-946c-6ed8c43e90df",
 CellID->551264998],
Cell[5398, 183, 151, 2, 70, "Caption",ExpressionUUID->"bfc9d0c1-4653-4875-99ee-dfc9e7a10f1f",
 CellID->866368228],
Cell[CellGroupData[{
Cell[5574, 189, 175, 3, 70, "Section",ExpressionUUID->"36a60df4-2a8c-4a21-8b49-7b697ee6ba5f",
 CellID->1477290045],
Cell[5752, 194, 178, 3, 70, "Text",ExpressionUUID->"375c8dd7-63cd-441e-b7b9-c570f7485258",
 CellID->904309971],
Cell[CellGroupData[{
Cell[5955, 201, 319, 9, 70, "MathCaption",ExpressionUUID->"ccde0226-ea38-4aff-85d2-34ba5f3b6abe",
 CellID->836781195],
Cell[CellGroupData[{
Cell[6299, 214, 283, 6, 70, "Input",ExpressionUUID->"12c95f03-d434-4022-b447-da18a8b0d79e",
 CellID->2058623809],
Cell[6585, 222, 9714, 222, 70, "Output",ExpressionUUID->"0c252b8c-79ba-4cfc-a98e-c309036eb901",
 CellID->631763700]
}, Open  ]]
}, Open  ]],
Cell[16326, 448, 701, 17, 70, "MathCaption",ExpressionUUID->"a4639e4b-ead3-4a3d-88f9-3f2715b55bae",
 CellID->2071765006],
Cell[17030, 467, 181, 3, 70, "Text",ExpressionUUID->"e6691aec-eaa1-4d08-b928-e05e9d0bf31e",
 CellID->1686878742],
Cell[CellGroupData[{
Cell[17236, 474, 154, 2, 70, "MathCaption",ExpressionUUID->"fed7d637-b180-4750-81c6-47384f99d7ca",
 CellID->439173159],
Cell[CellGroupData[{
Cell[17415, 480, 415, 12, 70, "Input",ExpressionUUID->"2975c284-43c0-46da-bc13-197b105621eb",
 CellID->480581018],
Cell[17833, 494, 521, 11, 70, "Output",ExpressionUUID->"be516197-8c07-440e-9c08-19dcd98bf117",
 CellID->294977654]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18403, 511, 209, 5, 70, "MathCaption",ExpressionUUID->"abab88f8-6c53-4779-a926-1a904b1a5147",
 CellID->356711628],
Cell[CellGroupData[{
Cell[18637, 520, 348, 7, 70, "Input",ExpressionUUID->"2c07e045-e60d-4bd4-ac67-d5583cd11050",
 CellID->1539441892],
Cell[18988, 529, 292, 6, 70, "Output",ExpressionUUID->"c5699e21-e022-4ff1-a996-ce9d89cbfc1a",
 CellID->1326717514]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19329, 541, 304, 7, 70, "MathCaption",ExpressionUUID->"e1134b4f-32a7-4e3a-a0c7-5eca16d83415",
 CellID->1322872937],
Cell[CellGroupData[{
Cell[19658, 552, 469, 11, 70, "Input",ExpressionUUID->"6f3f54cf-38b5-44d7-a0b4-ffd9655b4c65",
 CellID->477012596],
Cell[20130, 565, 367, 8, 70, "Output",ExpressionUUID->"d3778e75-f005-48cb-bd56-9202f31181d7",
 CellID->746762832]
}, Open  ]],
Cell[CellGroupData[{
Cell[20534, 578, 244, 8, 70, "Input",ExpressionUUID->"152a9c92-2415-478e-8273-19906e76cbcb",
 CellID->569636174],
Cell[20781, 588, 546, 12, 70, "Output",ExpressionUUID->"488289f8-1c28-432c-8c18-057c2d41a2d4",
 CellID->594070146]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21376, 606, 482, 13, 70, "MathCaption",ExpressionUUID->"5532d20e-b000-4553-9e67-5c9d99f481c8",
 CellID->1686196213],
Cell[CellGroupData[{
Cell[21883, 623, 212, 5, 70, "Input",ExpressionUUID->"aad8e1c9-d194-4a7d-9454-54f5cd404380",
 CellID->131592305],
Cell[22098, 630, 73657, 1392, 70, "Output",ExpressionUUID->"4a6b577c-575b-40a7-8534-1c8d129ed5a6",
 CellID->1102655610]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95816, 2029, 222, 4, 70, "Section",ExpressionUUID->"2e557956-85b6-46ac-9bc2-65f38c173af5",
 CellID->938345198],
Cell[96041, 2035, 811, 22, 70, "Text",ExpressionUUID->"df429fbd-2667-4c7c-b7d4-8676b2ca1ca0",
 CellID->1653357919],
Cell[CellGroupData[{
Cell[96877, 2061, 569, 17, 70, "Text",ExpressionUUID->"3f52064b-d9b5-4081-ae30-81b93d88c5fd",
 CellID->1926981462],
Cell[CellGroupData[{
Cell[97471, 2082, 233, 6, 70, "Input",ExpressionUUID->"455195cf-fa7c-4611-bc8b-2e280f58bd90",
 CellID->576551427],
Cell[97707, 2090, 214, 6, 70, "Output",ExpressionUUID->"d2f52d9d-65df-443e-ae80-917692d8d234",
 CellID->1716057647]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97970, 2102, 1346, 30, 70, "Text",ExpressionUUID->"4f1dde56-6863-49f7-bb39-89f1952069a3",
 CellID->791544844],
Cell[CellGroupData[{
Cell[99341, 2136, 409, 9, 70, "Input",ExpressionUUID->"d84f0a05-8971-42dd-aa9c-755fd03f1020",
 CellID->713264434],
Cell[99753, 2147, 528, 10, 70, "Output",ExpressionUUID->"bfce134b-eea3-46f4-ade5-97e317452ffa",
 CellID->572702954]
}, Open  ]]
}, Open  ]],
Cell[100308, 2161, 299, 7, 70, "Text",ExpressionUUID->"931b3f19-9532-4e65-8a72-043da2b06371",
 CellID->106117543],
Cell[CellGroupData[{
Cell[100632, 2172, 361, 11, 70, "MathCaption",ExpressionUUID->"7e654c27-50cc-4dcb-b089-b7d6cbe5067a",
 CellID->529365239],
Cell[CellGroupData[{
Cell[101018, 2187, 278, 7, 70, "Input",ExpressionUUID->"fa2ff7b3-1a5f-4078-948f-812d17c95132",
 CellID->341755647],
Cell[101299, 2196, 5156, 149, 70, "Output",ExpressionUUID->"fb628637-a51f-4ff9-8d0a-fec82da9ff93",
 CellID->170117842]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106504, 2351, 612, 14, 70, "MathCaption",ExpressionUUID->"59e97e54-a867-42df-8e46-cad6cc8b215c",
 CellID->1128691895],
Cell[CellGroupData[{
Cell[107141, 2369, 195, 4, 70, "Input",ExpressionUUID->"97134fbe-65ef-45c3-83ba-9fb57590f2ec",
 CellID->1251013360],
Cell[107339, 2375, 5159, 149, 70, "Output",ExpressionUUID->"0cadc785-7ddb-4c90-a266-9d2517a6e1c3",
 CellID->1751345404]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112547, 2530, 833, 21, 70, "MathCaption",ExpressionUUID->"2bedad8d-8fcb-4545-873a-586886eda819",
 CellID->1860424459],
Cell[CellGroupData[{
Cell[113405, 2555, 284, 6, 70, "Input",ExpressionUUID->"1857498a-d90d-402b-98f4-f1c77a5ac864",
 CellID->1658747158],
Cell[113692, 2563, 138, 3, 70, "Output",ExpressionUUID->"c363a2df-66e9-40cc-8ac8-09e15aedc251",
 CellID->567388016]
}, Open  ]],
Cell[CellGroupData[{
Cell[113867, 2571, 257, 6, 70, "Input",ExpressionUUID->"5898f36b-8a4a-407d-9d93-b84850cb808f",
 CellID->1908267061],
Cell[114127, 2579, 142, 3, 70, "Output",ExpressionUUID->"718b8826-050b-4a65-b1b2-b57292790a2e",
 CellID->1372844780]
}, Open  ]],
Cell[CellGroupData[{
Cell[114306, 2587, 244, 5, 70, "Input",ExpressionUUID->"ff4bc5a4-0d88-496b-b705-2ba819cbd5dc",
 CellID->204973859],
Cell[114553, 2594, 5019, 148, 70, "Output",ExpressionUUID->"a67f9e1a-706d-49b2-aae3-8feebae71eab",
 CellID->425537202]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119633, 2749, 136, 2, 70, "TutorialMoreAboutSection",ExpressionUUID->"e5b46771-d33e-4042-a5ea-db957878f14b",
 CellID->254638124],
Cell[119772, 2753, 54, 1, 70, "TutorialMoreAbout",ExpressionUUID->"270d9404-1ad7-4e31-b975-23b634c90b78",
 CellID->1915525244]
}, Open  ]],
Cell[CellGroupData[{
Cell[119863, 2759, 74, 1, 70, "RelatedTutorialsSection",ExpressionUUID->"4a65631d-41ee-4f14-ac62-dff9cffe5e2f",
 CellID->1305423731],
Cell[119940, 2762, 262, 6, 70, "RelatedTutorials",ExpressionUUID->"305566be-6f26-4a19-a409-037b72226d3e",
 CellID->1563709165],
Cell[120205, 2770, 52, 1, 70, "RelatedTutorials",ExpressionUUID->"e2a2c292-74a7-4841-8cd0-ba78e1d5c45f",
 CellID->695165664]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
