(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2291677,      44240]
NotebookOptionsPosition[   2259128,      43704]
NotebookOutlinePosition[   2259872,      43729]
CellTagsIndexPosition[   2259745,      43723]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as a platform for crystallographic computing"
}], "Title",
 CellChangeTimes->{
  3.775880231623179*^9},ExpressionUUID->"5c93ced9-8547-45f8-bf11-\
c73c3bb6a617"],

Cell[CellGroupData[{

Cell[TextData[{
 "A demonstration notebook for the ",
 StyleBox["Notebook Archive",
  FontSlant->"Italic"]
}], "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.775880248062008*^9, 3.775880266066803*^9}, {
  3.779176988981201*^9, 3.779176993153417*^9}, {3.779177049442843*^9, 
  3.779177049674968*^9}, {3.77917720142966*^9, 3.779177204449346*^9}, {
  3.7791772389153748`*^9, 
  3.779177274503257*^9}},ExpressionUUID->"5e33d4d4-118d-40bc-8512-\
4a60b818bf9f"],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " X-ray diffraction package (",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 ") contains\[Ellipsis]"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7758807772516127`*^9, 3.775880811706272*^9}, {
   3.775880851606729*^9, 3.7758808594868298`*^9}, {3.775881001552416*^9, 
   3.775881038168737*^9}, 
   3.779177274503642*^9},ExpressionUUID->"2fd1badb-816a-40c6-8873-\
737c510b4ca8"],

Cell[TextData[{
 "Essential symmetry information found in the ",
 StyleBox["International Tables for Crystallography",
  FontSlant->"Italic"],
 ", vol. A"
}], "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.775881039817231*^9, 3.775881046705697*^9}, 
   3.77588154778913*^9, {3.778138976553479*^9, 3.77813897655938*^9}, 
   3.7791772745050383`*^9},ExpressionUUID->"42551f7f-cf69-494d-88f0-\
e34bf0f697fc"],

Cell[TextData[{
 "Scattering factors from ",
 StyleBox["XOP (DABAX)",
  FontSlant->"Italic"],
 " and cross sections from ",
 StyleBox["xraylib",
  FontSlant->"Italic"]
}], "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.775881039817231*^9, 3.775881071983374*^9}, {
   3.775881530083099*^9, 3.7758815506797247`*^9}, 3.7791772745053577`*^9, {
   3.7803282724408207`*^9, 
   3.780328282517578*^9}},ExpressionUUID->"49dd628d-6cb6-4de3-9f9b-\
20aa4bde52af"],

Cell["\<\
Capability of creating and tweaking crystal structures and plot them in both \
direct and reciprocal space\
\>", "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.775881039817231*^9, 3.775881071983374*^9}, {
   3.775881530083099*^9, 3.775881551279182*^9}, {3.7758816661053877`*^9, 
   3.775881667877342*^9}, {3.775881813676249*^9, 3.7758818391010103`*^9}, {
   3.775882039899584*^9, 3.7758820719768553`*^9}, 
   3.7791772745055933`*^9},ExpressionUUID->"5adb3a53-28c2-4e00-b578-\
102d79151e7e"],

Cell["\<\
Included are of course tools and functionality to make use of all this. This \
notebook will give quick insight to the package contents with examples along \
the way.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.776579431576477*^9, 3.7765794427668962`*^9}, 
   3.779177274505681*^9, {3.7806438326608458`*^9, 3.780643869939217*^9}, {
   3.780643971753749*^9, 3.7806439790646887`*^9}, {3.7806788341144114`*^9, 
   3.780678858441646*^9}},ExpressionUUID->"55458afa-17f3-4eed-842c-\
26d4af46f4e0"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MaXrd`\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.775882195500752*^9, 3.775882213321024*^9}, 
   3.779177274505782*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"8d04d698-c886-4a11-b954-7890da6f139f"],

Cell[BoxData["$MaXrdVersion"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.778217654068842*^9, 3.778217656872013*^9}, 
   3.779177274505866*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"138a2659-d35a-4350-a28e-129f70991604"]
}, Open  ]],

Cell[BoxData["\<\"1.8.0\"\>"], "Output",
 CellChangeTimes->{3.780678795240155*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c17c4377-bcb3-4a04-ba7a-95849dfd425a"],

Cell[BoxData[
 RowBox[{"DateString", "[", "\"\<ISODate\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7791772503012867`*^9, 3.779177274506081*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ed93c953-a6c1-4960-88f5-25deced0fdaa"],

Cell[BoxData["\<\"2019-10-21\"\>"], "Output",
 CellChangeTimes->{3.780678795303727*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"74cdad6f-3863-4ffb-aa6c-a916b909bc76"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<GitHub repository\>\"", ",", 
   "\"\<https://github.com/Stianpr20/MaXrd\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7802879153725863`*^9, 3.7802879428573837`*^9}, 
   3.7806368147982807`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"562ec71c-0aac-45a0-9491-2848c7d84846"],

Cell[BoxData[
 TemplateBox[{"\"GitHub repository\"","https://github.com/Stianpr20/MaXrd"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.780678795434184*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4b10d269-4858-42d9-bf6b-ad75231f3d9e"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Main documentation page\>\"", ",", 
   "\"\<paclet:MaXrd/guide/MaXrd\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.780321667327312*^9, 3.7803217204721413`*^9}, 
   3.780636814798483*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"e32aa39c-086e-4620-ba64-3a68c6499238"],

Cell[BoxData[
 TemplateBox[{"\"Main documentation page\"","paclet:MaXrd/guide/MaXrd"},
  "HyperlinkPaclet"]], "Output",
 CellChangeTimes->{3.7806787976817636`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"961c93fc-2198-4e5f-8b1b-5895f81631d2"],

Cell[CellGroupData[{

Cell["Crystallographic core", "Chapter",
 CellChangeTimes->{{3.775882117894498*^9, 
  3.775882138458815*^9}},ExpressionUUID->"bc4dc222-3789-47d3-a1ae-\
16d383f8c74a"],

Cell[TextData[{
 "In this section we will look at how the point- and space group data \
acquired from the ",
 StyleBox["International Tables for Crystallography",
  FontSlant->"Italic"],
 " is structured and how to extract the relevant information."
}], "Text",
 CellChangeTimes->{{3.7782114490583477`*^9, 3.778211452786367*^9}, {
  3.7782134599429827`*^9, 3.778213497869419*^9}, {3.779171458342952*^9, 
  3.779171466541761*^9}},ExpressionUUID->"2e1077d7-001a-4fc2-a810-\
1ea1fab21269"],

Cell[CellGroupData[{

Cell["Point- and space groups", "Section",
 CellChangeTimes->{{3.778138995891547*^9, 3.778139000202639*^9}},
 CellTags->
  "point_space_group",ExpressionUUID->"3ae03b8b-791a-4b96-b230-a7d6e1492318"],

Cell[CellGroupData[{

Cell["A quick overview", "Subsection",
 CellChangeTimes->{{3.7802900704348497`*^9, 
  3.78029007463378*^9}},ExpressionUUID->"9a6a3603-0a9b-47ba-8ad5-\
b3ef690b8a96"],

Cell[TextData[{
 "In the core of ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 " we find ",
 Cell[BoxData[
  FormBox[
   ButtonBox["$PointGroups",
    BaseStyle->"Link",
    ButtonData->"paclet:MaXrd/ref/$PointGroups"], TraditionalForm]],
  ExpressionUUID->"9bc9dd42-8cfc-4c1f-b8fc-ab7c2bc9db61"],
 " and ",
 ButtonBox["$SpaceGroups",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/$SpaceGroups"],
 " which are two ",
 ButtonBox["Associations",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " containing all the basic symmetry information of the 32 point groups and \
the 230 space groups."
}], "Text",
 CellChangeTimes->{{3.775882188373654*^9, 3.775882192233307*^9}, {
  3.775882345852886*^9, 3.775882384251898*^9}, {3.776579648947036*^9, 
  3.776579721432242*^9}, {3.776684269983342*^9, 3.7766842700580378`*^9}, {
  3.776685531924917*^9, 3.7766855869531107`*^9}, {3.7766865092255917`*^9, 
  3.776686546005756*^9}, {3.7802965226718187`*^9, 3.780296548007626*^9}, {
  3.7802965902943*^9, 3.78029659029613*^9}, {3.780296645823387*^9, 
  3.780296699664936*^9}, {3.780678923040824*^9, 
  3.780678923041439*^9}},ExpressionUUID->"dc48abd7-3565-42c2-b445-\
4fca996466cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"{", 
   RowBox[{"$PointGroups", ",", "$SpaceGroups"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.778214555055485*^9, 3.778214562654961*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f28337b4-718e-4038-af26-19ab95d2bd8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"32", ",", "230"}], "}"}]], "Output",
 CellChangeTimes->{3.780678930498514*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"cd8b55f1-999c-4d7e-ab96-7dd47df5e39e"]
}, Open  ]],

Cell["\<\
The keys are plain string representations of the Hermann\[Dash]Mauguin \
symbols:\
\>", "Text",
 CellChangeTimes->{{3.778219992600977*^9, 3.778219992928565*^9}, {
   3.778220023360651*^9, 3.778220031815867*^9}, {3.7782200758878202`*^9, 
   3.778220113413928*^9}, 
   3.779170967984645*^9},ExpressionUUID->"3e7044e1-12f1-4551-9134-\
4e7d7ca0ae8e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Keys", "@", "$PointGroups"}], "\[IndentingNewLine]", 
 RowBox[{"Keys", "@", "$SpaceGroups"}]}], "Input",
 CellChangeTimes->{{3.7782201225745564`*^9, 3.778220132510667*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8c2051d6-1bbb-4d50-8a03-af1c717782fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"-1\"\>", ",", "\<\"2\"\>", ",", "\<\"m\"\>", 
   ",", "\<\"2/m\"\>", ",", "\<\"222\"\>", ",", "\<\"mm2\"\>", 
   ",", "\<\"mmm\"\>", ",", "\<\"4\"\>", ",", "\<\"-4\"\>", 
   ",", "\<\"4/m\"\>", ",", "\<\"422\"\>", ",", "\<\"4mm\"\>", 
   ",", "\<\"-42m\"\>", ",", "\<\"4/mmm\"\>", ",", "\<\"3\"\>", 
   ",", "\<\"-3\"\>", ",", "\<\"32\"\>", ",", "\<\"3m\"\>", 
   ",", "\<\"-3m\"\>", ",", "\<\"6\"\>", ",", "\<\"-6\"\>", 
   ",", "\<\"6/m\"\>", ",", "\<\"622\"\>", ",", "\<\"6mm\"\>", 
   ",", "\<\"-62m\"\>", ",", "\<\"6/mmm\"\>", ",", "\<\"23\"\>", 
   ",", "\<\"m-3\"\>", ",", "\<\"432\"\>", ",", "\<\"-43m\"\>", 
   ",", "\<\"m-3m\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.78067893261395*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"f8eafe44-775d-4e49-abaf-a95ba2c3cf4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P1\"\>", ",", "\<\"P-1\"\>", ",", "\<\"P2\"\>", 
   ",", "\<\"P21\"\>", ",", "\<\"C2\"\>", ",", "\<\"Pm\"\>", 
   ",", "\<\"Pc\"\>", ",", "\<\"Cm\"\>", ",", "\<\"Cc\"\>", 
   ",", "\<\"P2/m\"\>", ",", "\<\"P21/m\"\>", ",", "\<\"C2/m\"\>", 
   ",", "\<\"P2/c\"\>", ",", "\<\"P21/c\"\>", ",", "\<\"C2/c\"\>", 
   ",", "\<\"P222\"\>", ",", "\<\"P2221\"\>", ",", "\<\"P21212\"\>", 
   ",", "\<\"P212121\"\>", ",", "\<\"C2221\"\>", ",", "\<\"C222\"\>", 
   ",", "\<\"F222\"\>", ",", "\<\"I222\"\>", ",", "\<\"I212121\"\>", 
   ",", "\<\"Pmm2\"\>", ",", "\<\"Pmc21\"\>", ",", "\<\"Pcc2\"\>", 
   ",", "\<\"Pma2\"\>", ",", "\<\"Pca21\"\>", ",", "\<\"Pnc2\"\>", 
   ",", "\<\"Pmn21\"\>", ",", "\<\"Pba2\"\>", ",", "\<\"Pna21\"\>", 
   ",", "\<\"Pnn2\"\>", ",", "\<\"Cmm2\"\>", ",", "\<\"Cmc21\"\>", 
   ",", "\<\"Ccc2\"\>", ",", "\<\"Amm2\"\>", ",", "\<\"Aem2\"\>", 
   ",", "\<\"Ama2\"\>", ",", "\<\"Aea2\"\>", ",", "\<\"Fmm2\"\>", 
   ",", "\<\"Fdd2\"\>", ",", "\<\"Imm2\"\>", ",", "\<\"Iba2\"\>", 
   ",", "\<\"Ima2\"\>", ",", "\<\"Pmmm\"\>", ",", "\<\"Pnnn\"\>", 
   ",", "\<\"Pccm\"\>", ",", "\<\"Pban\"\>", ",", "\<\"Pmma\"\>", 
   ",", "\<\"Pnna\"\>", ",", "\<\"Pmna\"\>", ",", "\<\"Pcca\"\>", 
   ",", "\<\"Pbam\"\>", ",", "\<\"Pccn\"\>", ",", "\<\"Pbcm\"\>", 
   ",", "\<\"Pnnm\"\>", ",", "\<\"Pmmn\"\>", ",", "\<\"Pbcn\"\>", 
   ",", "\<\"Pbca\"\>", ",", "\<\"Pnma\"\>", ",", "\<\"Cmcm\"\>", 
   ",", "\<\"Cmce\"\>", ",", "\<\"Cmmm\"\>", ",", "\<\"Cccm\"\>", 
   ",", "\<\"Cmme\"\>", ",", "\<\"Ccce\"\>", ",", "\<\"Fmmm\"\>", 
   ",", "\<\"Fddd\"\>", ",", "\<\"Immm\"\>", ",", "\<\"Ibam\"\>", 
   ",", "\<\"Ibca\"\>", ",", "\<\"Imma\"\>", ",", "\<\"P4\"\>", 
   ",", "\<\"P41\"\>", ",", "\<\"P42\"\>", ",", "\<\"P43\"\>", 
   ",", "\<\"I4\"\>", ",", "\<\"I41\"\>", ",", "\<\"P-4\"\>", 
   ",", "\<\"I-4\"\>", ",", "\<\"P4/m\"\>", ",", "\<\"P42/m\"\>", 
   ",", "\<\"P4/n\"\>", ",", "\<\"P42/n\"\>", ",", "\<\"I4/m\"\>", 
   ",", "\<\"I41/a\"\>", ",", "\<\"P422\"\>", ",", "\<\"P4212\"\>", 
   ",", "\<\"P4122\"\>", ",", "\<\"P41212\"\>", ",", "\<\"P4222\"\>", 
   ",", "\<\"P42212\"\>", ",", "\<\"P4322\"\>", ",", "\<\"P43212\"\>", 
   ",", "\<\"I422\"\>", ",", "\<\"I4122\"\>", ",", "\<\"P4mm\"\>", 
   ",", "\<\"P4bm\"\>", ",", "\<\"P42cm\"\>", ",", "\<\"P42nm\"\>", 
   ",", "\<\"P4cc\"\>", ",", "\<\"P4nc\"\>", ",", "\<\"P43mc\"\>", 
   ",", "\<\"P42bc\"\>", ",", "\<\"I4mm\"\>", ",", "\<\"I4cm\"\>", 
   ",", "\<\"I41md\"\>", ",", "\<\"I41cd\"\>", ",", "\<\"P-42m\"\>", 
   ",", "\<\"P-42c\"\>", ",", "\<\"P-421m\"\>", ",", "\<\"P-421c\"\>", 
   ",", "\<\"P-4m2\"\>", ",", "\<\"P-4c2\"\>", ",", "\<\"P-4b2\"\>", 
   ",", "\<\"P-4n2\"\>", ",", "\<\"I-4m2\"\>", ",", "\<\"I-4c2\"\>", 
   ",", "\<\"I-42m\"\>", ",", "\<\"I-42d\"\>", ",", "\<\"P4/mmm\"\>", 
   ",", "\<\"P4/mcc\"\>", ",", "\<\"P4/nbm\"\>", ",", "\<\"P4/nnc\"\>", 
   ",", "\<\"P4/mbm\"\>", ",", "\<\"P4/mnc\"\>", ",", "\<\"P4/nmm\"\>", 
   ",", "\<\"P4/ncc\"\>", ",", "\<\"P42/mmc\"\>", ",", "\<\"P42/mcm\"\>", 
   ",", "\<\"P42/nbc\"\>", ",", "\<\"P42/nnm\"\>", ",", "\<\"P42/mbc\"\>", 
   ",", "\<\"P42/mnm\"\>", ",", "\<\"P42/nmc\"\>", ",", "\<\"P42/ncm\"\>", 
   ",", "\<\"I4/mmm\"\>", ",", "\<\"I4/mcm\"\>", ",", "\<\"I41/amd\"\>", 
   ",", "\<\"I41/acd\"\>", ",", "\<\"P3\"\>", ",", "\<\"P31\"\>", 
   ",", "\<\"P32\"\>", ",", "\<\"R3\"\>", ",", "\<\"P-3\"\>", 
   ",", "\<\"R-3\"\>", ",", "\<\"P312\"\>", ",", "\<\"P321\"\>", 
   ",", "\<\"P3112\"\>", ",", "\<\"P3121\"\>", ",", "\<\"P3212\"\>", 
   ",", "\<\"P3221\"\>", ",", "\<\"R32\"\>", ",", "\<\"P3m1\"\>", 
   ",", "\<\"P31m\"\>", ",", "\<\"P3c1\"\>", ",", "\<\"P31c\"\>", 
   ",", "\<\"R3m\"\>", ",", "\<\"R3c\"\>", ",", "\<\"P-31m\"\>", 
   ",", "\<\"P-31c\"\>", ",", "\<\"P-3m1\"\>", ",", "\<\"P-3c1\"\>", 
   ",", "\<\"R-3m\"\>", ",", "\<\"R-3c\"\>", ",", "\<\"P6\"\>", 
   ",", "\<\"P61\"\>", ",", "\<\"P65\"\>", ",", "\<\"P62\"\>", 
   ",", "\<\"P64\"\>", ",", "\<\"P63\"\>", ",", "\<\"P-6\"\>", 
   ",", "\<\"P6/m\"\>", ",", "\<\"P63/m\"\>", ",", "\<\"P622\"\>", 
   ",", "\<\"P6122\"\>", ",", "\<\"P6522\"\>", ",", "\<\"P6222\"\>", 
   ",", "\<\"P6422\"\>", ",", "\<\"P6322\"\>", ",", "\<\"P6mm\"\>", 
   ",", "\<\"P6cc\"\>", ",", "\<\"P63cm\"\>", ",", "\<\"P63mc\"\>", 
   ",", "\<\"P-6m2\"\>", ",", "\<\"P-6c2\"\>", ",", "\<\"P-62m\"\>", 
   ",", "\<\"P-62c\"\>", ",", "\<\"P6/mmm\"\>", ",", "\<\"P6/mcc\"\>", 
   ",", "\<\"P63/mcm\"\>", ",", "\<\"P63/mmc\"\>", ",", "\<\"P23\"\>", 
   ",", "\<\"F23\"\>", ",", "\<\"I23\"\>", ",", "\<\"P213\"\>", 
   ",", "\<\"I213\"\>", ",", "\<\"Pm-3\"\>", ",", "\<\"Pn-3\"\>", 
   ",", "\<\"Fm-3\"\>", ",", "\<\"Fd-3\"\>", ",", "\<\"Im-3\"\>", 
   ",", "\<\"Pa-3\"\>", ",", "\<\"Ia-3\"\>", ",", "\<\"P432\"\>", 
   ",", "\<\"P4232\"\>", ",", "\<\"F432\"\>", ",", "\<\"F4132\"\>", 
   ",", "\<\"I432\"\>", ",", "\<\"P4332\"\>", ",", "\<\"P4132\"\>", 
   ",", "\<\"I4132\"\>", ",", "\<\"P-43m\"\>", ",", "\<\"F-43m\"\>", 
   ",", "\<\"I-43m\"\>", ",", "\<\"P-43n\"\>", ",", "\<\"F-43c\"\>", 
   ",", "\<\"I-43d\"\>", ",", "\<\"Pm-3m\"\>", ",", "\<\"Pn-3n\"\>", 
   ",", "\<\"Pm-3n\"\>", ",", "\<\"Pn-3m\"\>", ",", "\<\"Fm-3m\"\>", 
   ",", "\<\"Fm-3c\"\>", ",", "\<\"Fd-3m\"\>", ",", "\<\"Fd-3c\"\>", 
   ",", "\<\"Im-3m\"\>", ",", "\<\"Ia-3d\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.780678932619268*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"185b7338-0254-407e-8302-9ab83a90e2fa"]
}, Open  ]],

Cell[TextData[{
 "We can explore a random entry from each group with the ",
 ButtonBox["Dataset",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Dataset"],
 " function to get a sense of the data fields they contain:"
}], "Text",
 CellChangeTimes->{{3.776752224947191*^9, 3.776752227818709*^9}, {
  3.778214359419335*^9, 3.7782144018240967`*^9}, {3.778218827109146*^9, 
  3.778218843803763*^9}},ExpressionUUID->"91fca746-a2fb-480f-b77f-\
e24973ad11c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"RandomChoice", "@", "$PointGroups"}]}]], "Input",
 CellChangeTimes->{{3.7766865661823606`*^9, 3.77668657454978*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7ffb7f83-222a-4ab2-924c-77bb4044cbbe"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 10, "InitialType" -> 
        TypeSystem`Struct[{
          "Symbol", "PointGroupNumber", "CrystalSystem", "LaueClass", 
           "SchoenfliesSymbol", "Setting", "ClassNames", "Properties", 
           "SymmetryOperations", "Subgroups"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
           TypeSystem`UnknownType, TypeSystem`UnknownType, 
            TypeSystem`AnyLength], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration["Friedel", "Groth"]], 
            TypeSystem`Atom[String], 2], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Centrosymmetric", "Enantiomorphic", "Polar"]], 
            TypeSystem`Atom[TypeSystem`Boolean], 3], 
           
           TypeSystem`Struct[{
            "MatrixOperations", "SymmetryOperationsITA", 
             "SymmetryOperationsSeitz"}, {
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 1], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 1], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 1]}], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], 1]}], 1]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"Symbol"} -> 
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], {
            "PointGroupNumber"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"CrystalSystem"} -> 
           TypeSystem`PackageScope`AtomShape[86.4], {"LaueClass"} -> 
           TypeSystem`PackageScope`AtomShape[259.20000000000005`], {
            "SchoenfliesSymbol"} -> 
           TypeSystem`PackageScope`AtomShape[249.60000000000002`], {
            "Setting"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"ClassNames"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Properties"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"SymmetryOperations"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Subgroups"} -> 
           TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1553425522], "Type" -> 
        TypeSystem`Struct[{
          "Symbol", "PointGroupNumber", "CrystalSystem", "LaueClass", 
           "SchoenfliesSymbol", "Setting", "ClassNames", "Properties", 
           "SymmetryOperations", "Subgroups"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
           TypeSystem`UnknownType, TypeSystem`UnknownType, 
            TypeSystem`AnyLength], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration["Friedel", "Groth"]], 
            TypeSystem`Atom[String], 2], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Centrosymmetric", "Enantiomorphic", "Polar"]], 
            TypeSystem`Atom[TypeSystem`Boolean], 3], 
           
           TypeSystem`Struct[{
            "MatrixOperations", "SymmetryOperationsITA", 
             "SymmetryOperationsSeitz"}, {
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 1], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 1], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 1]}], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], 1]}], 1]}], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1553425522]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Symbol\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Symbol\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Symbol"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Symbol"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Symbol"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PointGroupNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PointGroupNumber\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["PointGroupNumber"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["PointGroupNumber"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["PointGroupNumber"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CrystalSystem\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CrystalSystem\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["CrystalSystem"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["CrystalSystem"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Triclinic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["CrystalSystem"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LaueClass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LaueClass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["LaueClass"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["LaueClass"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["\!\(\*OverscriptBox[\(1\), \(_\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["LaueClass"]]], "Mouse"], 
                ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SchoenfliesSymbol\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SchoenfliesSymbol\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["SchoenfliesSymbol"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["SchoenfliesSymbol"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["\!\(\*SubscriptBox[\(C\), \(1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["SchoenfliesSymbol"]]], "Mouse"], 
                ImageSize -> {{249.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Setting\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Setting\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Setting"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Setting"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[], ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Setting"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Setting"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ClassNames\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ClassNames\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["ClassNames"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["ClassNames"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "Groth" -> "pedial (asymmetric)", "Friedel" -> 
                    "hemihedry"], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "Groth" -> "pedial (asymmetric)", "Friedel" -> 
                    "hemihedry"], ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["ClassNames"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["ClassNames"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Properties\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Properties\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Properties"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Properties"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "Centrosymmetric" -> False, "Enantiomorphic" -> True, 
                    "Polar" -> True], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "Centrosymmetric" -> False, "Enantiomorphic" -> True, 
                    "Polar" -> True], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Properties"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Properties"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SymmetryOperations\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SymmetryOperations\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["SymmetryOperations"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["SymmetryOperations"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"MatrixOperations", "SymmetryOperationsITA", 
                    "SymmetryOperationsSeitz"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"MatrixOperations", "SymmetryOperationsITA", 
                    "SymmetryOperationsSeitz"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["SymmetryOperations"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["SymmetryOperations"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Subgroups\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Subgroups\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Subgroups"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Subgroups"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][{
                    
                    Key["Subgroups"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
                 
                  GeneralUtilities`Slice[
                   Key["Subgroups"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 467416186]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[467416186][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {550., {127.634033203125, 133.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.780678942303912*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"807f1bd2-4ab4-43a8-867b-758e094765b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"RandomChoice", "@", "$SpaceGroups"}]}]], "Input",
 CellChangeTimes->{{3.7766866002211018`*^9, 3.776686602485692*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"638f4a33-d367-4a10-bd39-0055aa1daf1f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 9, "InitialType" -> 
        TypeSystem`Struct[{
          "Name", "SpaceGroupNumber", "LaueClass", "CrystalSystem", 
           "Properties", "Setting", "SymmetryOperations", "SpecialPositions", 
           "AlternativeSettings"}, {
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "HallString", "HermannMauguinFull", "HermannMauguinShort", 
              "SchoenfliesSymbol", "Symbol"]], 
            TypeSystem`Atom[String], 5], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration["CentrosymmetricQ", "SohnckeGroupQ"]], 
            TypeSystem`Atom[TypeSystem`Boolean], 2], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 1], 
           TypeSystem`Vector[
            TypeSystem`Tuple[{
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 3]}], 4], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "Multiplicity", "WyckoffLetter", "SiteSymmetry", "Coordinates"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["1", ".2.", "2.."]], 
              TypeSystem`Vector[
               TypeSystem`Vector[TypeSystem`AnyType, 3], 
               TypeSystem`AnyLength]}], 5], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Name", "Setting", "SymmetryOperations"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "HallString", "HermannMauguinFull", "HermannMauguinShort", 
                 "Symbol"]], 
               TypeSystem`Atom[String], 4], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 1], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[Integer], 3], 3], 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 3]}], 4]}], 2]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"Name"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"SpaceGroupNumber"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"LaueClass"} -> 
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], {
            "CrystalSystem"} -> 
           TypeSystem`PackageScope`AtomShape[115.20000000000002`], {
            "Properties"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Setting"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"SymmetryOperations"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"SpecialPositions"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"AlternativeSettings"} -> 
           TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1416188158], "Type" -> 
        TypeSystem`Struct[{
          "Name", "SpaceGroupNumber", "LaueClass", "CrystalSystem", 
           "Properties", "Setting", "SymmetryOperations", "SpecialPositions", 
           "AlternativeSettings"}, {
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "HallString", "HermannMauguinFull", "HermannMauguinShort", 
              "SchoenfliesSymbol", "Symbol"]], 
            TypeSystem`Atom[String], 5], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration["CentrosymmetricQ", "SohnckeGroupQ"]], 
            TypeSystem`Atom[TypeSystem`Boolean], 2], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 1], 
           TypeSystem`Vector[
            TypeSystem`Tuple[{
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 3]}], 4], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "Multiplicity", "WyckoffLetter", "SiteSymmetry", "Coordinates"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["1", ".2.", "2.."]], 
              TypeSystem`Vector[
               TypeSystem`Vector[TypeSystem`AnyType, 3], 
               TypeSystem`AnyLength]}], 5], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Name", "Setting", "SymmetryOperations"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "HallString", "HermannMauguinFull", "HermannMauguinShort", 
                 "Symbol"]], 
               TypeSystem`Atom[String], 4], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 1], 
              TypeSystem`Vector[
               TypeSystem`Tuple[{
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[Integer], 3], 3], 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 3]}], 4]}], 2]}], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1416188158]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["Name"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["Name"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "Symbol" -> "\!\(\*SubscriptBox[\(P222\), \(1\)]\)", 
                    "HermannMauguinShort" -> "P 2 2 21", "HermannMauguinFull" -> 
                    "P 2 2 21", "SchoenfliesSymbol" -> 
                    "\!\(\*SubsuperscriptBox[\(D\), \(2\), \(2\)]\)", 
                    "HallString" -> "P 2c 2"], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "Symbol" -> "\!\(\*SubscriptBox[\(P222\), \(1\)]\)", 
                    "HermannMauguinShort" -> "P 2 2 21", "HermannMauguinFull" -> 
                    "P 2 2 21", "SchoenfliesSymbol" -> 
                    "\!\(\*SubsuperscriptBox[\(D\), \(2\), \(2\)]\)", 
                    "HallString" -> "P 2c 2"], ShowStringCharacters -> False],
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["Name"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["Name"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpaceGroupNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpaceGroupNumber\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["SpaceGroupNumber"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["SpaceGroupNumber"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["SpaceGroupNumber"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LaueClass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LaueClass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["LaueClass"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["LaueClass"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["mmm", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["LaueClass"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CrystalSystem\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CrystalSystem\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["CrystalSystem"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["CrystalSystem"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Orthorhombic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["CrystalSystem"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Properties\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Properties\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["Properties"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["Properties"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "CentrosymmetricQ" -> False, "SohnckeGroupQ" -> True], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "CentrosymmetricQ" -> False, "SohnckeGroupQ" -> True], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["Properties"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["Properties"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Setting\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Setting\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["Setting"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["Setting"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association["AxisPermutation" -> "abc"], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association["AxisPermutation" -> "abc"], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["Setting"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["Setting"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SymmetryOperations\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SymmetryOperations\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["SymmetryOperations"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["SymmetryOperations"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 4], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 4], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["SymmetryOperations"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["SymmetryOperations"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpecialPositions\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpecialPositions\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["SpecialPositions"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["SpecialPositions"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["SpecialPositions"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["SpecialPositions"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AlternativeSettings\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AlternativeSettings\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["AlternativeSettings"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["AlternativeSettings"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"AxisPermutationCAB", "AxisPermutationBCA"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"AxisPermutationCAB", "AxisPermutationBCA"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][{
                    
                    Key["AlternativeSettings"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
                 
                  GeneralUtilities`Slice[
                   Key["AlternativeSettings"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 536213310]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[536213310][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {961., {115.134033203125, 120.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.780678946448429*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"3811745f-ae8c-46e8-9e83-c25af8489261"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Looking up and extracting data", "Subsection",
 CellChangeTimes->{{3.77821412967983*^9, 3.7782141396554117`*^9}, {
  3.778906432682356*^9, 
  3.778906457195157*^9}},ExpressionUUID->"1947ef94-8016-42a6-9d1a-\
73889a4e18bf"],

Cell[CellGroupData[{

Cell["Option 1: Manual lookup", "Subsubsection",
 CellChangeTimes->{{3.778220155165612*^9, 
  3.7782201796607847`*^9}},ExpressionUUID->"6b8eecde-80e1-4e61-b69d-\
e7aa034908cb"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   ButtonBox["$PointGroups",
    BaseStyle->"Link",
    ButtonData->"paclet:MaXrd/ref/$PointGroups"], TraditionalForm]],
  ExpressionUUID->"20b89a72-9426-42d2-83bb-0138a28ff237"],
 " and ",
 ButtonBox["$SpaceGroups",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/$SpaceGroups"],
 " are stored as ",
 Cell[BoxData[
  FormBox[
   ButtonBox["associations",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Association"], TraditionalForm]],ExpressionUUID->
  "cc82bec3-0790-42ce-9f21-6c03e12523bd"],
 " in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", one can look up data by using the keys shown above. The entries are also \
sorted by point- and space group number. "
}], "Text",
 CellChangeTimes->{{3.778912528237568*^9, 3.778912750687278*^9}, {
   3.779171021838127*^9, 3.7791710685350513`*^9}, {3.77917860591819*^9, 
   3.7791786059188128`*^9}, {3.780296616518062*^9, 3.7802966172544203`*^9}, 
   3.780298377572048*^9},ExpressionUUID->"548b5ff9-d86b-45fc-bae9-\
6d084dabcb1b"],

Cell["Some examples:", "Text",
 CellChangeTimes->{{3.779171125159094*^9, 
  3.779171129890881*^9}},ExpressionUUID->"d196d2b0-65ca-4e2b-9bdb-\
2e4aad1bb9d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"$PointGroups", "[", "\"\<mm2\>\"", "]"}], "//", 
  "Dataset"}]], "Input",
 CellChangeTimes->{{3.77917107126366*^9, 3.7791710982108727`*^9}, {
  3.780241921533985*^9, 3.7802419231235037`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"99fb1dfc-7348-4d3a-b8da-9a20653e47c2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 10, "InitialType" -> 
        TypeSystem`Struct[{
          "Symbol", "PointGroupNumber", "CrystalSystem", "LaueClass", 
           "SchoenfliesSymbol", "Setting", "ClassNames", "Properties", 
           "SymmetryOperations", "Subgroups"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
           TypeSystem`UnknownType, TypeSystem`UnknownType, 
            TypeSystem`AnyLength], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration["Friedel", "Groth"]], 
            TypeSystem`Atom[String], 2], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Centrosymmetric", "Enantiomorphic", "Polar"]], 
            TypeSystem`Atom[TypeSystem`Boolean], 3], 
           
           TypeSystem`Struct[{
            "MatrixOperations", "SymmetryOperationsITA", 
             "SymmetryOperationsSeitz"}, {
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 4], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 4], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 4]}], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 5]}], 
        "Shape" -> TypeSystem`PackageScope`DocumentShape[
          
          Association[{"Symbol"} -> 
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], {
            "PointGroupNumber"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"CrystalSystem"} -> 
           TypeSystem`PackageScope`AtomShape[115.20000000000002`], {
            "LaueClass"} -> 
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], {
            "SchoenfliesSymbol"} -> 
           TypeSystem`PackageScope`AtomShape[278.40000000000003`], {
            "Setting"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"ClassNames"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Properties"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"SymmetryOperations"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"Subgroups"} -> 
           TypeSystem`PackageScope`ElidedShape[1]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1317184749], "Type" -> 
        TypeSystem`Struct[{
          "Symbol", "PointGroupNumber", "CrystalSystem", "LaueClass", 
           "SchoenfliesSymbol", "Setting", "ClassNames", "Properties", 
           "SymmetryOperations", "Subgroups"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
           TypeSystem`UnknownType, TypeSystem`UnknownType, 
            TypeSystem`AnyLength], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration["Friedel", "Groth"]], 
            TypeSystem`Atom[String], 2], 
           TypeSystem`Assoc[
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Centrosymmetric", "Enantiomorphic", "Polar"]], 
            TypeSystem`Atom[TypeSystem`Boolean], 3], 
           
           TypeSystem`Struct[{
            "MatrixOperations", "SymmetryOperationsITA", 
             "SymmetryOperationsSeitz"}, {
             TypeSystem`Vector[
              TypeSystem`Vector[
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 3], 3], 4], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 4], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], 4]}], 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "SubgroupClassType", "SubgroupSymmetry", "SubgroupList"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 5]}], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1317184749]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Symbol\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Symbol\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Symbol"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Symbol"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["mm2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Symbol"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PointGroupNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"PointGroupNumber\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["PointGroupNumber"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["PointGroupNumber"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["PointGroupNumber"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CrystalSystem\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CrystalSystem\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["CrystalSystem"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["CrystalSystem"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Orthorhombic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["CrystalSystem"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LaueClass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LaueClass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["LaueClass"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["LaueClass"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["mmm", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["LaueClass"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SchoenfliesSymbol\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SchoenfliesSymbol\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["SchoenfliesSymbol"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["SchoenfliesSymbol"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["\!\(\*SubscriptBox[\(C\), \(2  v\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["SchoenfliesSymbol"]]], "Mouse"], 
                ImageSize -> {{278.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Setting\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Setting\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Setting"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Setting"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[], ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Setting"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Setting"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ClassNames\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ClassNames\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["ClassNames"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["ClassNames"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "Groth" -> "pyramidal", "Friedel" -> "antihemihedry"], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "Groth" -> "pyramidal", "Friedel" -> "antihemihedry"], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["ClassNames"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["ClassNames"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Properties\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Properties\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Properties"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Properties"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association[
                    "Centrosymmetric" -> False, "Enantiomorphic" -> False, 
                    "Polar" -> True], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    "Centrosymmetric" -> False, "Enantiomorphic" -> False, 
                    "Polar" -> True], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Properties"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Properties"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SymmetryOperations\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SymmetryOperations\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["SymmetryOperations"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["SymmetryOperations"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"MatrixOperations", "SymmetryOperationsITA", 
                    "SymmetryOperationsSeitz"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    Row[{"MatrixOperations", "SymmetryOperationsITA", 
                    "SymmetryOperationsSeitz"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["SymmetryOperations"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["SymmetryOperations"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Subgroups\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Subgroups\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Subgroups"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Subgroups"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][{
                    
                    Key["Subgroups"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
                 
                  GeneralUtilities`Slice[
                   Key["Subgroups"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 955856472]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[955856472][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {554., {127.634033203125, 133.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.780678989338357*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"85ccac8b-9890-4346-99ef-16c523397a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$SpaceGroups", "\[LeftDoubleBracket]", 
  RowBox[{"14", ",", "\"\<Name\>\""}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.779171121588039*^9, 3.779171155586128*^9}, {
  3.779171214778214*^9, 3.779171257171206*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"416de16b-eb36-45aa-9d53-2137088eec01"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Symbol\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/c\"\>"}], ",", 
   RowBox[{"\<\"HermannMauguinShort\"\>", "\[Rule]", "\<\"P 21/c\"\>"}], ",", 
   
   RowBox[{"\<\"HermannMauguinFull\"\>", "\[Rule]", "\<\"P 1 21/c 1\"\>"}], 
   ",", 
   RowBox[{"\<\"SchoenfliesSymbol\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubsuperscriptBox[\\(C\\), \\(2  h\\), \
\\(5\\)]\\)\"\>"}], ",", 
   RowBox[{"\<\"HallString\"\>", "\[Rule]", "\<\"-P 2ybc\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.780678991240979*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"15f4cc3e-9147-49b3-90ae-453e49188d48"]
}, Open  ]],

Cell[TextData[{
 "Since each entry can only have one key, alternative group descriptions are \
stored as sub-association. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "\[VeryThinSpace]", 
    SubscriptBox["2", "1"], "\[VeryThinSpace]", "n", "\[VeryThinSpace]", 
    "b"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "236e3b69-1515-4312-a979-67763d36263f"],
 " is permuted alternative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "P", "\[VeryThinSpace]", "n", "\[VeryThinSpace]", "a", "\[VeryThinSpace]", 
    
    SubscriptBox["2", "1"]}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "417481de-5da0-487b-96f0-c8dd32bf5a14"],
 ", but is not a \[OpenCurlyDoubleQuote]main entry\[CloseCurlyDoubleQuote]\
\[NonBreakingSpace]in ",
 ButtonBox["$SpaceGroups",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/$SpaceGroups"],
 ":"
}], "Text",
 CellChangeTimes->{{3.779171644368778*^9, 3.779171674848502*^9}, {
   3.7791754361788483`*^9, 3.7791754675870523`*^9}, {3.779175682265691*^9, 
   3.779175763383667*^9}, {3.779175825520629*^9, 3.779175858970087*^9}, {
   3.779175889292836*^9, 3.779175898635229*^9}, {3.779176077745533*^9, 
   3.779176086283045*^9}, {3.7791761634953814`*^9, 3.779176219656939*^9}, {
   3.779176318719352*^9, 3.7791763335272017`*^9}, {3.779176394221427*^9, 
   3.779176460047431*^9}, 3.78029838220302*^9, {3.780678995951264*^9, 
   3.780678996334751*^9}},ExpressionUUID->"30cc7961-ff50-41d0-a570-\
436d2ff6e395"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$SpaceGroups", "[", "\"\<P21nb\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7791766372923107`*^9, 3.779176646123534*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"47fb0f93-2009-49e6-a2c1-73727f24b795"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"P21nb\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.78067901215823*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"cb308b57-b5f5-4e54-ac39-167bea30c47e"]
}, Open  ]],

Cell["\<\
The next section will cover methods that simplify extraction of such data.\
\>", "Text",
 CellChangeTimes->{
  3.779176080454709*^9},ExpressionUUID->"250e83a3-adc6-4fa8-ab53-\
64fbab970d23"]
}, Closed]],

Cell[CellGroupData[{

Cell["Option 2: Use dedicated lookup function", "Subsubsection",
 CellChangeTimes->{{3.778220164333194*^9, 
  3.778220197516205*^9}},ExpressionUUID->"304e3a64-a99c-4e27-8d6b-\
d46546eb3995"],

Cell["\<\
Dedicated functions have been created for easy access to the most often \
queried entries. In the current context these are:\
\>", "Text",
 CellChangeTimes->{{3.778912776652607*^9, 3.778912777068552*^9}, {
  3.778912814588841*^9, 3.778912819896536*^9}, {3.7789129128131037`*^9, 
  3.7789129270327663`*^9}, {3.778913060852881*^9, 3.7789131083730927`*^9}, {
  3.778917327592042*^9, 3.778917374284727*^9}, {3.779176673849489*^9, 
  3.779176763745146*^9}, {3.7791769203408127`*^9, 3.7791769226939087`*^9}, {
  3.779178103776682*^9, 
  3.779178117207121*^9}},ExpressionUUID->"1f52f3bf-2516-4ced-971f-\
3ff1f7dc3d9e"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox["$GroupSymbolRedirect",
   BaseStyle->"Link",
   ButtonData->"paclet:MaXrd/ref/$GroupSymbolRedirect"], 
  TraditionalForm]],ExpressionUUID->"6401f418-c25d-47f8-b790-850000aed4b4"]], \
"Item",
 CellChangeTimes->{{3.77917692354*^9, 3.779176938629261*^9}, {
  3.7802983908094254`*^9, 
  3.780298406990196*^9}},ExpressionUUID->"63925332-0f5a-4e05-8266-\
089b5e77ba70"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox["GetLaueClass",
   BaseStyle->"Link",
   ButtonData->"paclet:MaXrd/ref/GetLaueClass"], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"02322ff6-ca63-4dfe-b87f-2173fce7076a"]], \
"Item",
 CellChangeTimes->{{3.779176946250651*^9, 3.7791769546612177`*^9}, {
  3.780298418200594*^9, 
  3.780298434718687*^9}},ExpressionUUID->"1d3ec888-0970-44f8-92e2-\
187dc0df96b0"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox["GetSymmetryOperations",
   BaseStyle->"Link",
   ButtonData->"paclet:MaXrd/ref/GetSymmetryOperations"], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"c9b4a030-bed0-4e8e-ba02-aa3dd7f41e2f"]], \
"Item",
 CellChangeTimes->{{3.7791767643870993`*^9, 3.779176790731328*^9}, {
  3.779176964200427*^9, 3.779176964201233*^9}, {3.780298438785071*^9, 
  3.7802984508043137`*^9}},ExpressionUUID->"39e883f1-58ee-4d96-9f5f-\
c69962c6a437"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox["GetSymmetryData",
   BaseStyle->"Link",
   ButtonData->"paclet:MaXrd/ref/GetSymmetryData"], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"ee7ba0be-0e6d-4d44-89ef-293050a4a0fd"]], \
"Item",
 CellChangeTimes->{{3.7791767643870993`*^9, 3.7791767946348143`*^9}, {
  3.779176972387052*^9, 3.779176972388129*^9}, {3.78029845520757*^9, 
  3.7802984719753637`*^9}},ExpressionUUID->"f3c87da7-c630-4628-ad86-\
96f91f624256"]
}, Open  ]],

Cell[TextData[{
 "The first is item on the list is actually just a large ",
 Cell[BoxData[
  FormBox[
   ButtonBox["association",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Association"], TraditionalForm]],ExpressionUUID->
  "ed1cc52b-f7c3-4ab1-b432-c25eee0c0d0c"],
 " that acts as a \[OpenCurlyDoubleQuote]switchboard\[CloseCurlyDoubleQuote] \
mapping most symbols (including formatted strings or those representing an \
alternative setting) to the right \[OpenCurlyDoubleQuote]address\
\[CloseCurlyDoubleQuote] in ",
 Cell[BoxData[
  FormBox[
   ButtonBox["$PointGroups",
    BaseStyle->"Link",
    ButtonData->"paclet:MaXrd/ref/$PointGroups"], TraditionalForm]],
  ExpressionUUID->"afefb94b-3b62-42cd-a013-ef00e41a9376"],
 " or ",
 ButtonBox["$SpaceGroups",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/$SpaceGroups"],
 ". "
}], "Text",
 CellChangeTimes->{{3.779178531983355*^9, 3.779178600024414*^9}, {
   3.780223005304975*^9, 3.780223102241929*^9}, {3.780223150222494*^9, 
   3.780223235349679*^9}, 3.780296627998226*^9, {3.780298481865391*^9, 
   3.780298505181638*^9}, {3.7806790343267517`*^9, 
   3.780679035372966*^9}},ExpressionUUID->"44278b1a-e295-416d-8b6f-\
6a2c7e73dd6d"],

Cell[CellGroupData[{

Cell[BoxData["$GroupSymbolRedirect"], "Input",
 CellChangeTimes->{{3.779171626259223*^9, 3.779171630522092*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2c87512c-0d2a-4f4f-9230-e597b40f46cb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           
           RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(1\\), \\(_\\)]\\)\"\>", 
            "\[RuleDelayed]", 
            RowBox[{"$PointGroups", "[", "\<\"-1\"\>", "]"}]}], ",", 
           RowBox[{"\<\"-1\"\>", "\[RuleDelayed]", 
            RowBox[{"$PointGroups", "[", "\<\"-1\"\>", "]"}]}], ",", 
           
           RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(1\\),\\(_\\)]\\)\"\>", 
            "\[RuleDelayed]", 
            RowBox[{"$PointGroups", "[", "\<\"-1\"\>", "]"}]}], ",", 
           TemplateBox[{"3944"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"P3*-2\"\>", "\[RuleDelayed]", 
            RowBox[{"$SpaceGroups", "[", 
             
             RowBox[{"\<\"R3m\"\>", ",", "\<\"AlternativeSettings\"\>", 
              ",", "\<\"RhombohedralAxes\"\>"}], "]"}]}], ",", 
           RowBox[{"\<\"R3m:r\"\>", "\[RuleDelayed]", 
            RowBox[{"$SpaceGroups", "[", 
             
             RowBox[{"\<\"R3m\"\>", ",", "\<\"AlternativeSettings\"\>", 
              ",", "\<\"RhombohedralAxes\"\>"}], "]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 14, 26734181734947726152, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 14, 26734181734947726152, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 14, 26734181734947726152, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[26734181734947726152 === $SessionID, 
   Out[14], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7806790463353662`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"27b0c7d1-62db-415d-88c6-6d504b887add"]
}, Open  ]],

Cell[TextData[{
 "We can use this function to quickly access data on the previously mentioned \
alternative space group, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "\[VeryThinSpace]", 
    SubscriptBox["2", "1"], "\[VeryThinSpace]", "n", "\[VeryThinSpace]", 
    "b"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "74b01135-5ab1-499f-bbae-0fe73af7e9b8"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7802424890312033`*^9, 3.780242489910338*^9}, {
  3.780243591624741*^9, 3.780243620489585*^9}, {3.780243695486261*^9, 
  3.780243731396947*^9}, {3.780245575003598*^9, 
  3.780245575938635*^9}},ExpressionUUID->"3021a381-6900-46e7-b79a-\
c6e2812a1f72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"$GroupSymbolRedirect", "[", "\"\<P21nb\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.78024223040633*^9, 3.7802422447161417`*^9}, {
  3.78024232962875*^9, 3.7802423932806873`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8bfcc749-1d75-4e18-b629-ca199a28ab47"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Name\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Symbol\"\>", 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)nb\"\>"}], 
      ",", 
      RowBox[{"\<\"HermannMauguinShort\"\>", "\[Rule]", "\<\"P 21 n b\"\>"}], 
      ",", 
      RowBox[{"\<\"HermannMauguinFull\"\>", "\[Rule]", "\<\"P 21 n b\"\>"}], 
      ",", 
      RowBox[{"\<\"HallString\"\>", "\[Rule]", "\<\"P -2bc 2a\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Setting\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"AxisPermutation\"\>", "\[Rule]", "\<\"cab\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SymmetryOperations\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"], ",", 
          FractionBox["1", "2"]}], "}"}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.780679055324752*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"32324642-6e6f-4a34-b974-fb6cbff6a8df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "==", 
  RowBox[{"$SpaceGroups", "[", 
   RowBox[{
   "\"\<Pna21\>\"", ",", "\"\<AlternativeSettings\>\"", ",", 
    "\"\<AxisPermutationCAB\>\""}], "]"}]}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"90349d94-9d03-4499-a9ee-5b5de50dcd24"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.780679056801221*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5a56eb59-c1b7-4f4b-8bb2-efbc94c1776a"]
}, Open  ]],

Cell[TextData[{
 "Functions in ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 " that simply assist in acquiring information with no or little computation \
start with ",
 StyleBox["Get", "Program"],
 ":"
}], "Text",
 CellChangeTimes->{{3.780245637929657*^9, 3.780245651312942*^9}, {
  3.780245912348407*^9, 
  3.7802459566362*^9}},ExpressionUUID->"483ced79-a9ba-44f9-b062-1d5c3309b381"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<MaXrd`Get*\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.778912826797896*^9, 3.778912861471957*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"2fc17864-9ba4-429f-8d03-8d0946f29683"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"GetAtomicScatteringFactors\"\>"},
     {"\<\"GetCrystalMetric\"\>"},
     {"\<\"GetElements\"\>"},
     {"\<\"GetLatticeParameters\"\>"},
     {"\<\"GetLaueClass\"\>"},
     {"\<\"GetScatteringCrossSections\"\>"},
     {"\<\"GetSymmetryData\"\>"},
     {"\<\"GetSymmetryOperations\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7806790649086227`*^9},
 CellLabel->
  "Out[17]//TableForm=",ExpressionUUID->"c5e93240-ec34-4d08-8b2e-\
dddba0c279c4"]
}, Open  ]],

Cell["\<\
he second item on our \[OpenCurlyDoubleQuote]current context list\
\[CloseCurlyDoubleQuote] is rather self-explanatory:\
\>", "Text",
 CellChangeTimes->{{3.7802463097710047`*^9, 3.780246382044923*^9}, {
  3.7802469566374607`*^9, 3.7802469574052134`*^9}, {3.780679084180874*^9, 
  3.780679119916135*^9}},ExpressionUUID->"80be5aa3-0acc-4a8f-867d-\
4dc8b94b5621"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetLaueClass"}]], "Input",
 CellChangeTimes->{{3.776579744185211*^9, 3.776579747680394*^9}, 
   3.7802463259640083`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"3410758d-04e0-41a1-841d-ea862e571e8d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/GetLaueClass",
              ButtonNote->"paclet:MaXrd/ref/GetLaueClass"],
             "\"paclet:MaXrd/ref/GetLaueClass\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GetLaueClass\\\", \\\"[\\\", \
StyleBox[\\\"pg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns \
the Laue class of point group \\\", Cell[BoxData[StyleBox[\\\"pg\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"GetLaueClass\\\", \\\"[\\\", \
StyleBox[\\\"sg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns \
the Laue class of space group \\\", Cell[BoxData[StyleBox[\\\"sg\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"GetLaueClass\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"returns the Laue class of the space group of \\\", \
Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/GetLaueClass", 
                    "paclet:MaXrd/ref/GetLaueClass", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "GetLaueClass", "[", "MaXrd`Private`symbol_String", "]"}],
                     ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`g", ",", "MaXrd`Private`extract"}],
                     "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`g", "=", 
                    RowBox[{
                    RowBox[{
                    "$CrystalData", "[", "MaXrd`Private`symbol", "]"}], 
                    "[", "\<\"SpaceGroup\"\>", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "MaXrd`Private`g", "]"}], ",", 
                    RowBox[{"Goto", "[", "\<\"End\"\>", "]"}]}], "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`symbol", 
                    "\[Equal]", "\<\"\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\
\\)1m\"\>"}], "||", 
                    RowBox[{
                    "MaXrd`Private`symbol", "\[Equal]", "\<\"-31m\"\>"}]}], 
                    ",", 
                    RowBox[{
                    "Return", 
                    "[", "\<\"\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)1m\"\
\>", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`symbol", 
                    "\[Equal]", "\<\"\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\
\\)m:r\"\>"}], "||", 
                    RowBox[{
                    "MaXrd`Private`symbol", "\[Equal]", "\<\"-3m:r\"\>"}]}], 
                    ",", 
                    RowBox[{
                    "Return", 
                    "[", "\<\"\\!\\(\\*OverscriptBox[\\(3\\), \
\\(_\\)]\\)m:r\"\>", "]"}], ",", "True", ",", "Null"}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`g", "=", 
                    RowBox[{
                    RowBox[{
                    "$GroupSymbolRedirect", "[", "MaXrd`Private`symbol", 
                    "]"}], "[", "\<\"LaueClass\"\>", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "MaXrd`Private`g", "]"}], ",", 
                    RowBox[{"Return", "[", "MaXrd`Private`g", "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"MaXrd`Private`extract", "=", 
                    RowBox[{
                    RowBox[{"FullForm", "[", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    "$GroupSymbolRedirect", ",", "MaXrd`Private`symbol", ",", 
                    "Inactivate"}], "]"}], "]"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`g", "=", 
                    RowBox[{
                    RowBox[{
                    "$GroupSymbolRedirect", "[", "MaXrd`Private`extract", 
                    "]"}], "[", "\<\"LaueClass\"\>", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringQ", "[", "MaXrd`Private`g", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"GetLaueClass", "::", "missing"}], "MessageName"],
                     ",", "MaXrd`Private`symbol"}], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}], ",", 
                    RowBox[{"Return", "[", "MaXrd`Private`g", "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"Label", "[", "\<\"End\"\>", "]"}], ";", 
                    RowBox[{"GetLaueClass", "[", "MaXrd`Private`g", "]"}]}]}],
                     "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "GetLaueClass", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`GetLaueClass] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`GetLaueClass\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/GetLaueClass",
              ButtonNote->"paclet:MaXrd/ref/GetLaueClass"],
             "\"paclet:MaXrd/ref/GetLaueClass\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GetLaueClass\\\", \\\"[\\\", \
StyleBox[\\\"pg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns \
the Laue class of point group \\\", Cell[BoxData[StyleBox[\\\"pg\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"GetLaueClass\\\", \\\"[\\\", \
StyleBox[\\\"sg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns \
the Laue class of space group \\\", Cell[BoxData[StyleBox[\\\"sg\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"GetLaueClass\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"returns the Laue class of the space group of \\\", \
Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"GetLaueClass\", \"[\", StyleBox[\"pg\", \"TI\"], \"]\"}]\
\) \!\(\*RowBox[{\"returns the Laue class of point group \", \
Cell[BoxData[StyleBox[\"pg\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\
\!\(\*RowBox[{\"GetLaueClass\", \"[\", StyleBox[\"sg\", \"TI\"], \"]\"}]\) \!\
\(\*RowBox[{\"returns the Laue class of space group \", \
Cell[BoxData[StyleBox[\"sg\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\
\!\(\*RowBox[{\"GetLaueClass\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\
\) \!\(\*RowBox[{\"returns the Laue class of the space group of \", \
Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)", 
    "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/GetLaueClass"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`GetLaueClass, {MaXrd`GetLaueClass[
         Pattern[MaXrd`Private`symbol, 
          Blank[String]]] :> 
       Block[{MaXrd`Private`g, MaXrd`Private`extract}, 
         MaXrd`Private`g = 
          MaXrd`$CrystalData[MaXrd`Private`symbol]["SpaceGroup"]; If[
           StringQ[MaXrd`Private`g], 
           Goto["End"]]; Which[
           Or[
           MaXrd`Private`symbol == "\!\(\*OverscriptBox[\(3\), \(_\)]\)1m", 
            MaXrd`Private`symbol == "-31m"], 
           Return["\!\(\*OverscriptBox[\(3\), \(_\)]\)1m"], 
           Or[
           MaXrd`Private`symbol == "\!\(\*OverscriptBox[\(3\), \(_\)]\)m:r", 
            MaXrd`Private`symbol == "-3m:r"], 
           Return["\!\(\*OverscriptBox[\(3\), \(_\)]\)m:r"], True, Null]; 
         MaXrd`Private`g = 
          MaXrd`$GroupSymbolRedirect[MaXrd`Private`symbol]["LaueClass"]; If[
           StringQ[MaXrd`Private`g], 
           Return[MaXrd`Private`g]]; MaXrd`Private`extract = Part[
            FullForm[
             Quiet[
              Extract[
              MaXrd`$GroupSymbolRedirect, MaXrd`Private`symbol, Inactivate]]],
             1, 1]; MaXrd`Private`g = 
          MaXrd`$GroupSymbolRedirect[MaXrd`Private`extract]["LaueClass"]; If[
           Not[
            StringQ[MaXrd`Private`g]], Message[
             MessageName[MaXrd`GetLaueClass, "missing"], 
             MaXrd`Private`symbol]; Abort[], 
           Return[MaXrd`Private`g]]; Label["End"]; 
         MaXrd`GetLaueClass[MaXrd`Private`g]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`GetLaueClass, {
      SyntaxInformation[MaXrd`GetLaueClass] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {}, "FullName" -> "MaXrd`GetLaueClass"], 
   False]]], "Output",
 CellChangeTimes->{3.780679108650734*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"9c8a9706-d5e7-4970-a6a5-2185f487dcfd"]
}, Open  ]],

Cell["\<\
Next are some simple demonstrations of the remaining functions.\
\>", "Text",
 CellChangeTimes->{{3.780246974308329*^9, 
  3.780246992416667*^9}},ExpressionUUID->"2b780b54-4336-429a-ae3e-\
0767a84cf5ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetSymmetryOperations"}]], "Input",
 CellChangeTimes->{{3.7782202079344177`*^9, 3.778220212741211*^9}, {
  3.780246960861867*^9, 3.78024696377516*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"876a758f-963e-4c74-8a8d-f8ae4aaec373"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/GetSymmetryOperations",
              ButtonNote->"paclet:MaXrd/ref/GetSymmetryOperations"],
             "\"paclet:MaXrd/ref/GetSymmetryOperations\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GetSymmetryOperations\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns the symmetry operations of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/GetSymmetryOperations", 
                    "paclet:MaXrd/ref/GetSymmetryOperations", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"GetSymmetryOperations", "[", 
                    RowBox[{"MaXrd`Private`input_String", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`temp1", ",", "MaXrd`Private`temp2", ",", 
                    "MaXrd`Private`c"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp1", "=", 
                    RowBox[{"$GroupSymbolRedirect", "[", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`input", 
                    ",", "\<\"GetPointSpaceGroupCrystal\"\>"}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    "MaXrd`Private`temp1", ",", "\<\"MatrixOperations\"\>"}], 
                    "]"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{
                    "MaXrd`Private`temp1", "[", "\<\"MatrixOperations\"\>", 
                    "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`temp2", "=", 
                    RowBox[{
                    "MaXrd`Private`temp1", "[", "\<\"SymmetryOperations\"\>", 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    "MaXrd`Private`temp2", ",", "\<\"MatrixOperations\"\>"}], 
                    "]"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{
                    "MaXrd`Private`temp2", "[", "\<\"MatrixOperations\"\>", 
                    "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\<\"UseCentring\"\>", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`c", "=", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp1", "[", 
                    
                    RowBox[{"\<\"Name\"\>", 
                    ",", "\<\"HermannMauguinShort\"\>"}], "]"}], ",", "1"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`c", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`c", ",", "\<\"GetCentringVectors\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`temp2", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp2", "\[LeftDoubleBracket]", 
                    RowBox[{"MaXrd`Private`i", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp2", "\[LeftDoubleBracket]", 
                    RowBox[{"MaXrd`Private`i", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "MaXrd`Private`c", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`j", "\[RightDoubleBracket]"}]}], ",", 
                    "1"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`c", "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`temp2", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MaXrd`Private`temp2", ",", "1"}], "]"}]}], ",", 
                    "MaXrd`Private`temp2"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "GetSymmetryOperations", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`GetSymmetryOperations] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"\<\"UseCentring\"\>", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`GetSymmetryOperations\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/GetSymmetryOperations",
              ButtonNote->"paclet:MaXrd/ref/GetSymmetryOperations"],
             "\"paclet:MaXrd/ref/GetSymmetryOperations\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GetSymmetryOperations\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns the symmetry operations of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"GetSymmetryOperations\", \"[\", StyleBox[\"group\", \"TI\
\"], \"]\"}]\)\!\(\*RowBox[{\" returns the symmetry operations of \", \
Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)", 
    "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/GetSymmetryOperations"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`GetSymmetryOperations, {MaXrd`GetSymmetryOperations[
         Pattern[MaXrd`Private`input, 
          Blank[String]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`temp1, MaXrd`Private`temp2, MaXrd`Private`c}, 
         MaXrd`Private`temp1 = MaXrd`$GroupSymbolRedirect[
            MaXrd`InputCheck[
            MaXrd`Private`input, "GetPointSpaceGroupCrystal"]]; If[
           KeyExistsQ[MaXrd`Private`temp1, "MatrixOperations"], 
           Return[
            MaXrd`Private`temp1["MatrixOperations"]]]; 
         MaXrd`Private`temp2 = MaXrd`Private`temp1["SymmetryOperations"]; If[
           KeyExistsQ[MaXrd`Private`temp2, "MatrixOperations"], 
           Return[
            MaXrd`Private`temp2["MatrixOperations"]]]; If[
           OptionValue["UseCentring"], MaXrd`Private`c = StringTake[
              MaXrd`Private`temp1["Name", "HermannMauguinShort"], 1]; 
           MaXrd`Private`c = 
            MaXrd`InputCheck[MaXrd`Private`c, "GetCentringVectors"]; 
           MaXrd`Private`temp2 = Table[{
               Part[MaXrd`Private`temp2, MaXrd`Private`i, 1], 
               Mod[
               Part[MaXrd`Private`temp2, MaXrd`Private`i, 2] + 
                Part[MaXrd`Private`c, MaXrd`Private`j], 1]}, {MaXrd`Private`j, 
               Length[MaXrd`Private`c]}, {MaXrd`Private`i, 
               Length[MaXrd`Private`temp2]}]; Flatten[MaXrd`Private`temp2, 1],
            MaXrd`Private`temp2]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`GetSymmetryOperations, {
      SyntaxInformation[MaXrd`GetSymmetryOperations] -> {"ArgumentsPattern" -> {
           Blank[], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {"UseCentring" -> False}, "Attributes" -> {}, "FullName" -> 
    "MaXrd`GetSymmetryOperations"], False]]], "Output",
 CellChangeTimes->{3.78067912495923*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"29a4051a-7cbd-47e6-aecd-242b48b5b302"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSymmetryOperations", "[", "\"\<P64\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780246996340254*^9, 3.780247058676717*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"47202298-6440-4cfe-9542-cd8772e5e5d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["2", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["2", "3"]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.78067912617763*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f18d1b26-30f6-4140-b359-8fbe6a086c2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetSymmetryData"}]], "Input",
 CellChangeTimes->{{3.778220202214883*^9, 3.778220205702351*^9}, 
   3.780247062107273*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"e2f4137d-6f83-47af-9207-6c244b23d497"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/GetSymmetryData",
              ButtonNote->"paclet:MaXrd/ref/GetSymmetryData"],
             "\"paclet:MaXrd/ref/GetSymmetryData\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GetSymmetryData\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"label\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" extracts the data \
associated with \\\", Cell[BoxData[StyleBox[\\\"label\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" from the given point- or space \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/GetSymmetryData", 
                    "paclet:MaXrd/ref/GetSymmetryData", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"GetSymmetryData", "[", 
                    RowBox[{"MaXrd`Private`input_String", ",", 
                    RowBox[{
                    "MaXrd`Private`label_String", ":", "\<\"Lookup\"\>"}], 
                    ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`group", ",", "MaXrd`Private`validLabels", 
                    ",", "MaXrd`Private`type", ",", "MaXrd`Private`data", ",",
                     "MaXrd`Private`dataMain", ",", "MaXrd`Private`temp"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`group", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`input", 
                    ",", "\<\"GetPointSpaceGroupCrystal\"\>"}], "]"}]}], ";", 
                    
                    RowBox[{"MaXrd`Private`validLabels", "=", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Lookup\"\>", ",", "\<\"Symbol\"\>", 
                    ",", "\<\"HermannMauguinFull\"\>", 
                    ",", "\<\"HermannMauguinShort\"\>", 
                    ",", "\<\"HallString\"\>", 
                    ",", "\<\"PointGroupNumber\"\>", 
                    ",", "\<\"SpaceGroupNumber\"\>", ",", "\<\"LaueClass\"\>",
                     ",", "\<\"CrystalSystem\"\>", ",", "\<\"Centring\"\>", 
                    ",", "\<\"MainEntryQ\"\>", ",", "\<\"GroupType\"\>", 
                    ",", "\<\"Setting\"\>"}], "}"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "MaXrd`Private`validLabels", ",", "MaXrd`Private`label"}],
                     "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"GetSymmetryData", "::", "invalid"}], 
                    "MessageName"], ",", "MaXrd`Private`label"}], "]"}], ";", 
                    
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`data", "=", 
                    RowBox[{
                    "$GroupSymbolRedirect", "[", "MaXrd`Private`group", 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "$PointGroups", ",", "MaXrd`Private`data", ",", 
                    "\[Infinity]"}], "]"}], ",", 
                    RowBox[{"MaXrd`Private`type", "=", "\<\"PointGroup\"\>"}],
                     ",", 
                    RowBox[{
                    "MaXrd`Private`type", "=", "\<\"SpaceGroup\"\>"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`type", "===", "\<\"PointGroup\"\>"}], "&&", 
                    RowBox[{
                    "MaXrd`Private`label", 
                    "===", "\<\"SpaceGroupNumber\"\>"}]}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`type", "===", "\<\"SpaceGroup\"\>"}], "&&", 
                    RowBox[{
                    "MaXrd`Private`label", 
                    "===", "\<\"PointGroupNumber\"\>"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"GetSymmetryData", "::", "incompatible"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`label", "===", "\<\"GroupType\"\>"}], ",", 
                    
                    RowBox[{"Return", "[", "MaXrd`Private`type", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`type", "===", "\<\"SpaceGroup\"\>"}], ",", 
                    
                    RowBox[{"MaXrd`Private`group", "=", 
                    RowBox[{"MaXrd`Private`data", "[", 
                    
                    RowBox[{"\<\"Name\"\>", 
                    ",", "\<\"HermannMauguinFull\"\>"}], "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`type", 
                    "===", "\<\"PointGroup\"\>"}], ",", 
                    RowBox[{"MaXrd`Private`group", "===", 
                    RowBox[{"MaXrd`Private`data", "[", 
                    RowBox[{"\<\"Name\"\>", ",", "\<\"Symbol\"\>"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`label", "\[Equal]", "\<\"Centring\"\>"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`type", "\[Equal]", "\<\"PointGroup\"\>"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"GetSymmetryData", "::", "incompatible"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{"MaXrd`Private`group", ",", "1"}], "]"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`type", "\[Equal]", "\<\"SpaceGroup\"\>"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"Position", "[", 
                    RowBox[{"$SpaceGroups", ",", "MaXrd`Private`group"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`dataMain", "=", 
                    RowBox[{"$SpaceGroups", "[", 
                    RowBox[{"MaXrd`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}]}], ",", 
                    RowBox[{
                    "MaXrd`Private`type", "\[Equal]", "\<\"PointGroup\"\>"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"Position", "[", 
                    RowBox[{"$PointGroups", ",", "MaXrd`Private`data"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`dataMain", "=", 
                    RowBox[{"$PointGroups", "[", 
                    RowBox[{"MaXrd`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\<\"UseMainEntry\"\>", "]"}],
                     ",", 
                    RowBox[{
                    "MaXrd`Private`data", "=", "MaXrd`Private`dataMain"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`label", "===", "\<\"Lookup\"\>"}], 
                    ",", 
                    RowBox[{"Return", "[", "MaXrd`Private`data", "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`label", "===", "\<\"MainEntryQ\"\>"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"MaXrd`Private`data", ",", 
                    RowBox[{"MaXrd`Private`type", "<>", "\<\"Number\"\>"}]}], 
                    "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Symbol\"\>", 
                    ",", "\<\"HermannMauguinFull\"\>", 
                    ",", "\<\"HermannMauguinShort\"\>", 
                    ",", "\<\"HallString\"\>"}], "}"}], ",", 
                    "MaXrd`Private`label"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "OptionValue", "[", "\<\"UnambiguousSymbol\"\>", "]"}], "&&", 
                    RowBox[{
                    "MaXrd`Private`label", "===", "\<\"Symbol\"\>"}]}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"MaXrd`Private`data", "[", 
                    
                    RowBox[{"\<\"Name\"\>", 
                    ",", "\<\"HermannMauguinFull\"\>"}], "]"}]}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{
                    "ToStandardSetting", "[", "MaXrd`Private`temp", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"MaXrd`Private`data", "[", 
                    RowBox[{"\<\"Name\"\>", ",", "MaXrd`Private`label"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"PointGroupNumber\"\>", 
                    ",", "\<\"SpaceGroupNumber\"\>", ",", "\<\"LaueClass\"\>",
                     ",", "\<\"CrystalSystem\"\>", ",", "\<\"Setting\"\>"}], 
                    "}"}], ",", "MaXrd`Private`label"}], "]"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{
                    "MaXrd`Private`dataMain", "[", "MaXrd`Private`label", 
                    "]"}], "]"}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "GetSymmetryData", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`GetSymmetryData] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"UnambiguousSymbol\"\>", "\[Rule]", "True"}], 
                    ",", 
                    RowBox[{"\<\"UseMainEntry\"\>", "\[Rule]", "False"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`GetSymmetryData\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/GetSymmetryData",
              ButtonNote->"paclet:MaXrd/ref/GetSymmetryData"],
             "\"paclet:MaXrd/ref/GetSymmetryData\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GetSymmetryData\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"label\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" extracts the data \
associated with \\\", Cell[BoxData[StyleBox[\\\"label\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" from the given point- or space \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"GetSymmetryData\", \"[\", StyleBox[\"group\", \"TI\"], \
\",\", StyleBox[\"label\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" extracts the \
data associated with \", Cell[BoxData[StyleBox[\"label\", \"TI\"]], \
\"InlineFormula\"], \" from the given point- or space \", \
Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)", 
    "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/GetSymmetryData"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`GetSymmetryData, {MaXrd`GetSymmetryData[
         Pattern[MaXrd`Private`input, 
          Blank[String]], 
         Optional[
          Pattern[MaXrd`Private`label, 
           Blank[String]], "Lookup"], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`group, MaXrd`Private`validLabels, 
          MaXrd`Private`type, MaXrd`Private`data, MaXrd`Private`dataMain, 
          MaXrd`Private`temp}, 
         MaXrd`Private`group = 
          MaXrd`InputCheck[MaXrd`Private`input, "GetPointSpaceGroupCrystal"]; 
         MaXrd`Private`validLabels = {
           "Lookup", "Symbol", "HermannMauguinFull", "HermannMauguinShort", 
            "HallString", "PointGroupNumber", "SpaceGroupNumber", "LaueClass",
             "CrystalSystem", "Centring", "MainEntryQ", "GroupType", 
            "Setting"}; If[
           Not[
            MemberQ[MaXrd`Private`validLabels, MaXrd`Private`label]], 
           Message[
             MessageName[MaXrd`GetSymmetryData, "invalid"], 
             MaXrd`Private`label]; Abort[]]; 
         MaXrd`Private`data = MaXrd`$GroupSymbolRedirect[MaXrd`Private`group]; 
         If[
           MemberQ[MaXrd`$PointGroups, MaXrd`Private`data, Infinity], 
           MaXrd`Private`type = "PointGroup", MaXrd`Private`type = 
           "SpaceGroup"]; If[
           Or[
            And[
            MaXrd`Private`type === "PointGroup", MaXrd`Private`label === 
             "SpaceGroupNumber"], 
            And[
            MaXrd`Private`type === "SpaceGroup", MaXrd`Private`label === 
             "PointGroupNumber"]], Message[
             MessageName[MaXrd`GetSymmetryData, "incompatible"]]; Abort[]]; 
         If[MaXrd`Private`label === "GroupType", 
           Return[MaXrd`Private`type]]; 
         Which[MaXrd`Private`type === "SpaceGroup", MaXrd`Private`group = 
           MaXrd`Private`data["Name", "HermannMauguinFull"], 
           MaXrd`Private`type === "PointGroup", MaXrd`Private`group === 
           MaXrd`Private`data["Name", "Symbol"]]; 
         If[MaXrd`Private`label == "Centring", 
           If[MaXrd`Private`type == "PointGroup", Message[
               MessageName[MaXrd`GetSymmetryData, "incompatible"]]; Abort[]]; 
           Return[
             StringTake[MaXrd`Private`group, 1]]]; 
         Which[MaXrd`Private`type == "SpaceGroup", 
           MaXrd`Private`temp = 
            Position[MaXrd`$SpaceGroups, MaXrd`Private`group]; 
           MaXrd`Private`dataMain = MaXrd`$SpaceGroups[
              Part[MaXrd`Private`temp, 1, 1, 1]], MaXrd`Private`type == 
           "PointGroup", 
           MaXrd`Private`temp = 
            Position[MaXrd`$PointGroups, MaXrd`Private`data]; 
           MaXrd`Private`dataMain = MaXrd`$PointGroups[
              Part[MaXrd`Private`temp, 1, 1, 1]]]; If[
           OptionValue["UseMainEntry"], MaXrd`Private`data = 
           MaXrd`Private`dataMain]; If[MaXrd`Private`label === "Lookup", 
           Return[MaXrd`Private`data]]; 
         If[MaXrd`Private`label === "MainEntryQ", 
           Return[
            KeyExistsQ[MaXrd`Private`data, 
             StringJoin[MaXrd`Private`type, "Number"]]]]; If[
           
           MemberQ[{
            "Symbol", "HermannMauguinFull", "HermannMauguinShort", 
             "HallString"}, MaXrd`Private`label], 
           If[
            And[
             OptionValue["UnambiguousSymbol"], MaXrd`Private`label === 
             "Symbol"], 
            MaXrd`Private`temp = 
             MaXrd`Private`data["Name", "HermannMauguinFull"]; Return[
              MaXrd`ToStandardSetting[MaXrd`Private`temp]], 
            Return[
             MaXrd`Private`data["Name", MaXrd`Private`label]]]]; If[
           
           MemberQ[{
            "PointGroupNumber", "SpaceGroupNumber", "LaueClass", 
             "CrystalSystem", "Setting"}, MaXrd`Private`label], 
           Return[
            MaXrd`Private`dataMain[MaXrd`Private`label]]]]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`GetSymmetryData, {
      SyntaxInformation[MaXrd`GetSymmetryData] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {"UnambiguousSymbol" -> True, "UseMainEntry" -> False}, 
    "Attributes" -> {}, "FullName" -> "MaXrd`GetSymmetryData"], 
   False]]], "Output",
 CellChangeTimes->{3.780679128254024*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"19332ba1-b4a5-45cc-9f36-ab010c7aa3d4"]
}, Open  ]],

Cell[TextData[{
 "This function requires a label\[LongDash]there are 13 of them and they are \
listed in the ",
 ButtonBox["documentation page",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/GetSymmetryData"],
 ". A couple of examples are shown here:"
}], "Text",
 CellChangeTimes->{{3.780288107693351*^9, 3.7802881611559687`*^9}, {
   3.780289078207971*^9, 3.780289089143108*^9}, 3.780326025799741*^9, {
   3.780679146202079*^9, 
   3.7806791462024393`*^9}},ExpressionUUID->"72c24f82-349e-4fc7-80e6-\
0b3b49b169d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSymmetryData", "[", 
  RowBox[{"\"\<Bbmb\>\"", ",", "\"\<HallString\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.780247079034809*^9, 3.7802470938575277`*^9}, {
  3.780288180590047*^9, 3.780288198141034*^9}, {3.780288957013331*^9, 
  3.780289018741745*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"8c993c45-4705-45fb-ae24-6c0354ddc1c3"],

Cell[BoxData["\<\"-B 2b 2b\"\>"], "Output",
 CellChangeTimes->{3.7806791526004543`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"743eeb41-7ade-4fd3-8a17-b07097c15fc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSymmetryData", "[", 
  RowBox[{"\"\<Bbmb\>\"", ",", "\"\<SpaceGroupNumber\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7802890435368357`*^9, 3.780289068210326*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"790a301d-0441-4e62-8a43-e44006bc117a"],

Cell[BoxData["66"], "Output",
 CellChangeTimes->{3.7806791543122883`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"30186716-6dbe-45b6-b438-d79f61643743"]
}, Open  ]],

Cell[TextData[{
 "We conclude this section with a graph showing where ",
 ButtonBox["$GroupSymbolRedirect",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/$GroupSymbolRedirect"],
 " is applied internally in ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.7802894181843348`*^9, 3.7802894547364397`*^9}, {
  3.780289868856488*^9, 3.780289883198711*^9}, {3.780298524943296*^9, 
  3.780298547386776*^9}},ExpressionUUID->"082ce2a5-d8b4-48fe-a849-\
d90f424a715d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelatedFunctionsGraph", "[", 
  RowBox[{"$GroupSymbolRedirect", ",", 
   RowBox[{"\"\<ShowDependent\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780246093945866*^9, 3.78024609570465*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"af57cfaf-01ab-470a-bd5c-864149fecfdd"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {0.541196100146197, 
      1.8477590650225735`}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {0., 
      1.3065629648763766`}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {0., 
      0.5411961001461969}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {0.5411961001461965, 
      1.1102230246251565`*^-16}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {1.3065629648763768`,
       0.}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {1.8477590650225733`,
       0.5411961001461962}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {1.8477590650225735`,
       1.3065629648763766`}}]}, 
    {Arrowheads[{{Automatic, 0.5}}], 
     ArrowBox[{{0.9238795325112867, 0.9238795325112866}, {1.3065629648763772`,
       1.847759065022573}}]}}, 
   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{0.5238795325112867, 0.8738795325112866}, \
{1.3238795325112869, 0.9738795325112867}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{
         "\"$GroupSymbolRedirect\"","paclet:MaXrd/ref/$GroupSymbolRedirect"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {0.9238795325112867, 0.9238795325112866}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{0.201196100146197, 1.7977590650225734}, \
{0.881196100146197, 1.8977590650225735}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{
         "\"ExportCrystalData\"","paclet:MaXrd/ref/ExportCrystalData"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {0.541196100146197, 1.8477590650225735}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{-0.24, 1.2565629648763765}, {0.24, 1.3565629648763766}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{"\"GetLaueClass\"","paclet:MaXrd/ref/GetLaueClass"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {0., 1.3065629648763766}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{-0.3, 0.4911961001461969}, {0.3, 0.591196100146197}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{"\"GetSymmetryData\"","paclet:MaXrd/ref/GetSymmetryData"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {0., 0.5411961001461969}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{0.12119610014619647, -0.04999999999999989}, \
{0.9611961001461964, 0.050000000000000114}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{
         "\"GetSymmetryOperations\"","paclet:MaXrd/ref/GetSymmetryOperations"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {0.5411961001461965, 1.1102230246251565*^-16}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{1.1065629648763768, -0.05}, {1.5065629648763768, 0.05}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{"\"InputCheck\"","paclet:MaXrd/ref/InputCheck"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {1.3065629648763768, 0.}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{1.2677590650225734, 0.49119610014619625}, \
{2.427759065022573, 0.5911961001461963}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{
         "\"SymmetryEquivalentReflections\"",
          "paclet:MaXrd/ref/SymmetryEquivalentReflections"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {1.8477590650225733, 0.5411961001461962}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{1.5077590650225734, 1.2565629648763765}, \
{2.1877590650225733, 1.3565629648763766}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{
         "\"ToStandardSetting\"","paclet:MaXrd/ref/ToStandardSetting"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {1.8477590650225735, 1.3065629648763766}]}}, 
    {GrayLevel[1], EdgeForm[None], 
     RectangleBox[{0.8665629648763773, 1.797759065022573}, \
{1.7465629648763772, 1.897759065022573}], 
     {GrayLevel[0], InsetBox[
       StyleBox[
        TemplateBox[{
         "\"UnitCellTransformation\"",
          "paclet:MaXrd/ref/UnitCellTransformation"},
         "HyperlinkPaclet"], "Program",
        StripOnInput->False,
        FontSize->11], {1.3065629648763772, 1.847759065022573}]}}}},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{3.780679157677415*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"51360212-e23d-4e5f-aedf-37978a69fc7d"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetry utilities", "Section",
 CellChangeTimes->{{3.778139007538459*^9, 3.778139011266341*^9}, {
  3.77813905072163*^9, 3.778139056424963*^9}, {3.77821132757163*^9, 
  3.778211331954867*^9}},ExpressionUUID->"9f3b2e67-1d43-46a8-b9ee-\
c29e09df2ba8"],

Cell[CellGroupData[{

Cell["Symmetry equivalent reflections and positions", "Subsection",
 CellChangeTimes->{{3.778220241683813*^9, 
  3.778220249219204*^9}},ExpressionUUID->"91d4d6ac-b616-4a89-912e-\
2de4ecaf81e5"],

Cell[TextData[{
 "In the ",
 StyleBox[ButtonBox["Point- and space group",
  BaseStyle->"Hyperlink",
  ButtonData->"point_space_group"],
  FontSlant->"Italic"],
 ButtonBox[" section",
  BaseStyle->"Hyperlink",
  ButtonData->"point_space_group"],
 " we touch upon a couple of functions for extraction of symmetry-related \
data, namely ",
 ButtonBox["GetSymmetryOperations",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/GetSymmetryOperations"],
 " and the more general ",
 ButtonBox["GetSymmetryData",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/GetSymmetryData"],
 ". Here we will explore a few more functions that are helpful when working \
with reflections, i.e. lists of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"h", ",", "k", ",", "l"}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"9b830e02-800e-4a6f-9a57-8965d81f490e"],
 "."
}], "Text",
 CellChangeTimes->{{3.7802957072475986`*^9, 3.780295715071763*^9}, {
  3.7802957547443867`*^9, 3.780295766266424*^9}, {3.780295973628422*^9, 
  3.7802960075130587`*^9}, {3.780296160382592*^9, 3.780296228736806*^9}, {
  3.780296481838901*^9, 3.780296482085832*^9}, {3.7802985706150513`*^9, 
  3.78029858457178*^9}, {3.7802990899329643`*^9, 3.780299108428104*^9}, {
  3.780299181513627*^9, 
  3.780299224481606*^9}},ExpressionUUID->"52c1e5ed-aaeb-464e-81df-\
6ff97f9a502e"],

Cell[TextData[{
 "See also the tutorial ",
 ButtonBox["Computations on reflections",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/tutorial/ComputationsOnReflections"],
 "."
}], "Text",
 CellChangeTimes->{{3.780294062731248*^9, 3.780294078850004*^9}, {
  3.7802941122348433`*^9, 3.780294129485449*^9}, {3.78029925978445*^9, 
  3.780299261111027*^9}},ExpressionUUID->"eb0cc77a-30ca-4f9a-8048-\
485bd8b3db5f"],

Cell[CellGroupData[{

Cell["Symmetry equivalence", "Subsubsection",
 CellChangeTimes->{{3.7802954912932243`*^9, 
  3.780295501796193*^9}},ExpressionUUID->"bdd8de3a-4d04-4e95-812e-\
8c47627b1637"],

Cell["\<\
Simple demonstrations are presented here. Learn more on the respective \
documentation pages.\
\>", "Text",
 CellChangeTimes->{{3.780300416180789*^9, 3.78030042464468*^9}, {
  3.780300543131304*^9, 
  3.780300552301527*^9}},ExpressionUUID->"c4c97679-6219-4a49-b998-\
277f538ffb95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SymmetryEquivalentReflections"}]], "Input",
 CellChangeTimes->{{3.780299283543971*^9, 3.780299286248282*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"db4671fc-985a-4967-b0ef-8f77b991e5a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SymmetryEquivalentReflections",
              ButtonNote->"paclet:MaXrd/ref/SymmetryEquivalentReflections"],
             "\"paclet:MaXrd/ref/SymmetryEquivalentReflections\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SymmetryEquivalentReflections\\\
\", \\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns a list of reflections that are \
equivalent to a general reflection under the symmetry of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"SymmetryEquivalentReflections\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\
\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns a list of reflections that are \
equivalent to \\\", Cell[BoxData[StyleBox[\\\"hkl\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" under the symmetry of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/SymmetryEquivalentReflections", 
                    "paclet:MaXrd/ref/SymmetryEquivalentReflections", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SymmetryEquivalentReflections", "[", 
                    RowBox[{"MaXrd`Private`group_String", ",", 
                    RowBox[{"MaXrd`Private`hkl_List", ":", 
                    RowBox[{"{", 
                    RowBox[{"\<\"h\"\>", ",", "\<\"k\"\>", ",", "\<\"l\"\>"}],
                     "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "MaXrd`Private`s", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    "$GroupSymbolRedirect", ",", "MaXrd`Private`group"}], 
                    "]"}]}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"$CrystalData", ",", "MaXrd`Private`group"}], 
                    "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"GetSymmetryOperations", "::", "missing"}], 
                    "MessageName"], ",", "MaXrd`Private`group"}], "]"}], ";", 
                    
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`hkl", ",", "\<\"1hkl\"\>", 
                    ",", "\<\"StringSymbol\"\>"}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "$PointGroups", "]"}], ",", 
                    "MaXrd`Private`group"}], "]"}], ",", 
                    RowBox[{"MaXrd`Private`s", "=", 
                    RowBox[{
                    "GetSymmetryOperations", "[", "MaXrd`Private`group", 
                    "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`s", "=", 
                    RowBox[{"GetSymmetryOperations", "[", 
                    RowBox[{"GetLaueClass", "[", "MaXrd`Private`group", "]"}],
                     "]"}]}]}], "]"}], ";", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "MaXrd`Private`s", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "]"}], ".", 
                    "MaXrd`Private`hkl"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`s", "]"}]}], 
                    "}"}]}], "]"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "SymmetryEquivalentReflections",
                     "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`SymmetryEquivalentReflections] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`SymmetryEquivalentReflections\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SymmetryEquivalentReflections",
              ButtonNote->"paclet:MaXrd/ref/SymmetryEquivalentReflections"],
             "\"paclet:MaXrd/ref/SymmetryEquivalentReflections\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SymmetryEquivalentReflections\\\
\", \\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns a list of reflections that are \
equivalent to a general reflection under the symmetry of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"SymmetryEquivalentReflections\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\
\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns a list of reflections that are \
equivalent to \\\", Cell[BoxData[StyleBox[\\\"hkl\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" under the symmetry of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"SymmetryEquivalentReflections\", \"[\", StyleBox[\"group\
\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns a list of reflections that are \
equivalent to a general reflection under the symmetry of \", \
Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\
\!\(\*RowBox[{\"SymmetryEquivalentReflections\", \"[\", StyleBox[\"group\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", \
StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \
\!\(\*RowBox[{\"returns a list of reflections that are equivalent to \", \
Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" under the \
symmetry of \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \
\"InlineFormula\"], \".\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/SymmetryEquivalentReflections"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`SymmetryEquivalentReflections, {
      MaXrd`SymmetryEquivalentReflections[
         Pattern[MaXrd`Private`group, 
          Blank[String]], 
         Optional[
          Pattern[MaXrd`Private`hkl, 
           Blank[List]], {"h", "k", "l"}]] :> Block[{MaXrd`Private`s}, If[
           And[
            Not[
             KeyExistsQ[MaXrd`$GroupSymbolRedirect, MaXrd`Private`group]], 
            Not[
             KeyExistsQ[MaXrd`$CrystalData, MaXrd`Private`group]]], Message[
             MessageName[MaXrd`GetSymmetryOperations, "missing"], 
             MaXrd`Private`group]; Abort[]]; 
         MaXrd`InputCheck[MaXrd`Private`hkl, "1hkl", "StringSymbol"]; If[
           MemberQ[
            Keys[MaXrd`$PointGroups], MaXrd`Private`group], MaXrd`Private`s = 
           MaXrd`GetSymmetryOperations[MaXrd`Private`group], MaXrd`Private`s = 
           MaXrd`GetSymmetryOperations[
             MaXrd`GetLaueClass[MaXrd`Private`group]]]; DeleteDuplicates[
           Table[
            Dot[
             Transpose[
              Part[MaXrd`Private`s, MaXrd`Private`i]], MaXrd`Private`hkl], {
            MaXrd`Private`i, 
             Length[MaXrd`Private`s]}]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`SymmetryEquivalentReflections, {
      SyntaxInformation[MaXrd`SymmetryEquivalentReflections] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "MaXrd`SymmetryEquivalentReflections"], False]]], "Output",
 CellChangeTimes->{3.7806792001505747`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"c1fc6051-c93a-4069-948d-8bcaaf36de9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymmetryEquivalentReflections", "[", 
  RowBox[{"\"\<m\!\(\*OverscriptBox[\(3\), \(_\)]\)m\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7803003392968893`*^9, 3.780300369801703*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"6fcd0579-823d-44e4-b490-191ac100ae18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679201469181*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"39941fa0-dc08-43f0-bff2-da61ced2e9fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymmetryEquivalentReflections", "[", 
  RowBox[{"\"\<P-1\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "0"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.780300375686305*^9, 3.7803003948936653`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"0fe637fa-c0b3-4ec3-a155-8024831ec6aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\<\"a\"\>"}], ",", 
     RowBox[{"-", "\<\"b\"\>"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679203191257*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1415eec5-2f8a-4c42-98f8-17bbb79ab59d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MergeSymmetryEquivalentReflections"}]], "Input",
 CellChangeTimes->{{3.780292101115377*^9, 3.780292101271388*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2dd166c1-480c-4df8-9b42-0637aa455d40"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections",
              
              ButtonNote->
               "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections"],
             "\"paclet:MaXrd/ref/MergeSymmetryEquivalentReflections\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"\
MergeSymmetryEquivalentReflections\\\", \\\"[\\\", StyleBox[\\\"group\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"h\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"l\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" merges reflections \\\", \
Cell[BoxData[SubscriptBox[StyleBox[\\\"hkl\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]], \\\"InlineFormula\\\"], \\\" that are symmetry equivalent \
in the given \\\", Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections", 
                    "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"MergeSymmetryEquivalentReflections", "[", 
                    RowBox[{
                    "MaXrd`Private`group_String", ",", 
                    "MaXrd`Private`hkl_List", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`input", ",", "MaXrd`Private`sg", ",", 
                    "MaXrd`Private`merged"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`input", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`hkl", ",", "\<\"Integer\"\>", 
                    ",", "\<\"WrapSingle\"\>"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`sg", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`group", 
                    ",", "\<\"GetPointSpaceGroupCrystal\"\>"}], "]"}]}], ";", 
                    
                    RowBox[{"MaXrd`Private`merged", "=", 
                    RowBox[{"DeleteDuplicatesBy", "[", 
                    RowBox[{"MaXrd`Private`input", ",", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"SymmetryEquivalentReflections", "[", 
                    RowBox[{"MaXrd`Private`sg", ",", "#1"}], "]"}], "]"}], 
                    "&"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "OptionValue", "[", "\<\"ToStandardSetting\"\>", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ToStandardSetting", "[", 
                    RowBox[{"MaXrd`Private`sg", ",", "#1"}], "]"}], "&"}], 
                    ")"}], "/@", "MaXrd`Private`merged"}], ",", 
                    "MaXrd`Private`merged"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", 
                    "MergeSymmetryEquivalentReflections", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[
                    MaXrd`MergeSymmetryEquivalentReflections] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"\<\"ToStandardSetting\"\>", "\[Rule]", "True"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"MaXrd`MergeSymmetryEquivalentReflections\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              
              ButtonData->
               "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections",
              
              ButtonNote->
               "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections"],
             "\"paclet:MaXrd/ref/MergeSymmetryEquivalentReflections\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"\
MergeSymmetryEquivalentReflections\\\", \\\"[\\\", StyleBox[\\\"group\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"h\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"l\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" merges reflections \\\", \
Cell[BoxData[SubscriptBox[StyleBox[\\\"hkl\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]], \\\"InlineFormula\\\"], \\\" that are symmetry equivalent \
in the given \\\", Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"MergeSymmetryEquivalentReflections\", \"[\", \
StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \
\"]\"}]\)\!\(\*RowBox[{\" merges reflections \", \
Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]], \"InlineFormula\"], \" that are symmetry equivalent in the given \
\", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)",
     "Documentation" -> 
    Association[
     "Local" -> "paclet:MaXrd/ref/MergeSymmetryEquivalentReflections"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`MergeSymmetryEquivalentReflections, {
      MaXrd`MergeSymmetryEquivalentReflections[
         Pattern[MaXrd`Private`group, 
          Blank[String]], 
         Pattern[MaXrd`Private`hkl, 
          Blank[List]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`input, MaXrd`Private`sg, MaXrd`Private`merged}, 
         MaXrd`Private`input = 
          MaXrd`InputCheck[MaXrd`Private`hkl, "Integer", "WrapSingle"]; 
         MaXrd`Private`sg = 
          MaXrd`InputCheck[MaXrd`Private`group, "GetPointSpaceGroupCrystal"]; 
         MaXrd`Private`merged = DeleteDuplicatesBy[MaXrd`Private`input, Sort[
             MaXrd`SymmetryEquivalentReflections[MaXrd`Private`sg, #]]& ]; 
         If[
           OptionValue["ToStandardSetting"], 
           Map[
           MaXrd`ToStandardSetting[MaXrd`Private`sg, #]& , 
            MaXrd`Private`merged], MaXrd`Private`merged]]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`MergeSymmetryEquivalentReflections, {
      SyntaxInformation[MaXrd`MergeSymmetryEquivalentReflections] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {"ToStandardSetting" -> True}, "Attributes" -> {}, 
    "FullName" -> "MaXrd`MergeSymmetryEquivalentReflections"], 
   False]]], "Output",
 CellChangeTimes->{3.780679204439927*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"fbe6f47c-1303-431f-8aef-4547f56bca87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MergeSymmetryEquivalentReflections", "[", 
  RowBox[{"\"\<6/mmm\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "8", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"00640bd6-c8db-4449-9ca1-420922524054"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679205534018*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"f2099a6a-40aa-4d2e-9bc2-09676edcfc6b"]
}, Open  ]],

Cell["\<\
Crystal labels can be used; its space group is found automatically:\
\>", "Text",
 CellChangeTimes->{{3.78030058017297*^9, 
  3.7803006049937363`*^9}},ExpressionUUID->"51fd31f1-d82f-49e3-802d-\
8c0366251bdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MergeSymmetryEquivalentReflections", "[", 
  RowBox[{"\"\<Polonium\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7802921485686283`*^9, 3.780292149574039*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9cee2f8c-0cd4-41a8-be71-9c56556edc5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679210658505*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c38f3c55-74ce-4cfb-b657-93068184a7a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SymmetryEquivalentPositions"}]], "Input",
 CellChangeTimes->{{3.780299277252974*^9, 3.780299281079571*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"fcc11280-4c48-41f8-94a6-26ebf7890aa2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SymmetryEquivalentPositions",
              ButtonNote->"paclet:MaXrd/ref/SymmetryEquivalentPositions"],
             "\"paclet:MaXrd/ref/SymmetryEquivalentPositions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SymmetryEquivalentPositions\\\"\
, \\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns a \
list of coordinates that are equivalent to \\\", Cell[BoxData[RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"}\\\"}]], \
\\\"InlineFormula\\\"], \\\" under the symmetry of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"SymmetryEquivalentPositions\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"returns a list of coordinates, each entry containg the \
equivalents of \\\", Cell[BoxData[SubscriptBox[RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]], \\\"InlineFormula\\\"], \\\" under the \
symmetry of \\\", Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/SymmetryEquivalentPositions", 
                    "paclet:MaXrd/ref/SymmetryEquivalentPositions", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SymmetryEquivalentPositions", "[", 
                    RowBox[{"MaXrd`Private`input_String", ",", 
                    RowBox[{"MaXrd`Private`xyzInput_List", ":", 
                    RowBox[{"{", 
                    RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}],
                     "}"}]}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`group", ",", "MaXrd`Private`\[Delta]", ",",
                     "MaXrd`Private`useCentringQ", ",", "MaXrd`Private`fracs",
                     ",", "MaXrd`Private`r", ",", "MaXrd`Private`xyz", ",", 
                    "MaXrd`Private`s", ",", "MaXrd`Private`R", ",", 
                    "MaXrd`Private`T", ",", "MaXrd`Private`equiv", ",", 
                    "MaXrd`Private`rationalise", ",", "MaXrd`Private`mod", 
                    ",", "MaXrd`Private`generate", ",", 
                    "MaXrd`Private`gather", ",", "MaXrd`Private`centring", 
                    ",", "MaXrd`Private`final", ",", "MaXrd`Private`t", ",", 
                    "MaXrd`Private`sym", ",", "MaXrd`Private`c", ",", 
                    "MaXrd`Private`add", ",", "MaXrd`Private`pos", ",", 
                    "MaXrd`Private`temp"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`group", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`input", 
                    ",", "\<\"GetPointSpaceGroupCrystal\"\>"}], "]"}]}], ";", 
                    
                    RowBox[{"MaXrd`Private`xyz", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`xyzInput", ",", "\<\"WrapSingle\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`\[Delta]", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"RationaliseThreshold\"\>", 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", "#1", "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"Negative", "[", "#1", "]"}]}]}], ")"}]}], "&"}], 
                    ")"}], "[", "MaXrd`Private`\[Delta]", "]"}], ",", 
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"SymmetryEquivalentPositions", "::", 
                    "threshold"}], "MessageName"], "]"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`useCentringQ", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"UseCentring\"\>", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`fracs", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "12"], ",", 
                    FractionBox["1", "8"], ",", 
                    FractionBox["1", "6"], ",", 
                    FractionBox["1", "4"], ",", 
                    FractionBox["1", "3"], ",", 
                    FractionBox["3", "8"], ",", 
                    FractionBox["5", "12"], ",", 
                    FractionBox["1", "2"], ",", 
                    FractionBox["7", "12"], ",", 
                    FractionBox["5", "8"], ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["3", "4"], ",", 
                    FractionBox["5", "6"], ",", 
                    FractionBox["7", "8"], ",", 
                    FractionBox["11", "12"]}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`rationalise", "[", "MaXrd`Private`coord_", 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Reap", "[", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"MaXrd`Private`fracs", ",", 
                    RowBox[{"MaXrd`Private`r", "=", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`i", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"0.`", "\[Rule]", "0"}], "}"}]}], ",", 
                    "MaXrd`Private`\[Delta]"}], "]"}]}]}], "]"}], ",", 
                    "MaXrd`Private`r", ",", "MaXrd`Private`i"}], "]"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "MaXrd`Private`coord"}], 
                    "}"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`mod", "[", "MaXrd`Private`X_", "]"}], ":=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", "MaXrd`Private`X", "]"}], ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"MaXrd`Private`X", ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Head", "[", "MaXrd`Private`X", "]"}], "===", 
                    "Plus"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`t", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"MaXrd`Private`X", ",", "NumericQ"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`sym", "=", 
                    RowBox[{"MaXrd`Private`X", "-", "MaXrd`Private`t"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"MaXrd`Private`t", ",", "1"}], "]"}], "+", 
                    "MaXrd`Private`sym"}]}], ",", "True", ",", 
                    "MaXrd`Private`X"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`s", "=", 
                    RowBox[{
                    "GetSymmetryOperations", "[", "MaXrd`Private`group", 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`R", ",", "MaXrd`Private`T"}], 
                    "}"}], "=", 
                    RowBox[{"Transpose", "[", "MaXrd`Private`s", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "MaXrd`Private`s", "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"_", ",", "3", ",", "3"}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`generate", "[", "MaXrd`Private`coord_", 
                    "]"}], ":=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "MaXrd`Private`s", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "]"}], ".", 
                    "MaXrd`Private`coord"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`s", "]"}]}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`generate", "[", "MaXrd`Private`coord_", 
                    "]"}], ":=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`R", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], ".", 
                    "MaXrd`Private`coord"}], "+", 
                    RowBox[{
                    "MaXrd`Private`T", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`s", "]"}]}], 
                    "}"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`gather", "[", "MaXrd`Private`list_", "]"}],
                     ":=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    "MaXrd`Private`mod", ",", "MaXrd`Private`list", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`c", "=", 
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"GetSymmetryData", "[", 
                    RowBox[{
                    "MaXrd`Private`group", 
                    ",", "\<\"HermannMauguinFull\"\>"}], "]"}], ",", "1"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`add", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`c", ",", "\<\"GetCentringVectors\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`useCentringQ", ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`centring", "[", "MaXrd`Private`list_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`equiv", "=", 
                    RowBox[{
                    "DeleteDuplicates", "[", "MaXrd`Private`list", "]"}]}], 
                    ";", 
                    RowBox[{
                    "MaXrd`Private`temp", "=", "MaXrd`Private`equiv"}], ";", 
                    RowBox[{"MaXrd`Private`equiv", "=", 
                    RowBox[{
                    RowBox[{"Reap", "[", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "+", 
                    RowBox[{
                    "MaXrd`Private`add", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], "&"}], 
                    ")"}], "/@", "MaXrd`Private`temp"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`add", "]"}]}], 
                    "}"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`equiv", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MaXrd`Private`equiv", ",", "1"}], "]"}]}], ";", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    "MaXrd`Private`mod", ",", "MaXrd`Private`equiv", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`centring", "[", "MaXrd`Private`list_", 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`mod", "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`list", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "MaXrd`Private`add", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`j", "\[RightDoubleBracket]"}]}], ")"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`add", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`list", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`pos", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"MaXrd`Private`list", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "MaXrd`Private`i", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`list", "]"}]}], 
                    "}"}]}], "]"}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`temp"}]}], ";", 
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"Transpose", "[", "MaXrd`Private`pos", "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`temp", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], ",", "1"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`temp", "]"}]}], 
                    "}"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MaXrd`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"Flatten", "[", "MaXrd`Private`temp", "]"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`final", "[", "MaXrd`Private`list_", "]"}], 
                    ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`temp", "=", 
                    RowBox[{"MaXrd`Private`list", "/.", "\[VeryThinSpace]", 
                    RowBox[{"MaXrd`Private`x_Real", "\[RuleDelayed]", 
                    RowBox[{"Round", "[", 
                    RowBox[{"MaXrd`Private`x", ",", 
                    FractionBox["1", 
                    SuperscriptBox["10.`", "6"]]}], "]"}]}]}]}], ";", 
                    RowBox[{
                    "DeleteDuplicates", "[", "MaXrd`Private`temp", "]"}]}], 
                    ")"}]}], ";", 
                    RowBox[{"MaXrd`Private`xyz", "=", 
                    RowBox[{"MaXrd`Private`final", "/@", 
                    RowBox[{"MaXrd`Private`centring", "/@", 
                    RowBox[{"MaXrd`Private`gather", "/@", 
                    RowBox[{"MaXrd`Private`generate", "/@", 
                    RowBox[{
                    "MaXrd`Private`rationalise", "/@", 
                    "MaXrd`Private`xyz"}]}]}]}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"MaXrd`Private`xyzInput", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", 
                    RowBox[{"!", 
                    RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`y", ",", 
                    "MaXrd`Private`z"}], "}"}], ",", "ListQ"}], "]"}]}]}]}], 
                    "]"}], ",", 
                    RowBox[{"Return", "[", 
                    RowBox[{"First", "[", "MaXrd`Private`xyz", "]"}], "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "MaXrd`Private`xyz", "]"}]}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "SymmetryEquivalentPositions", 
                    "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`SymmetryEquivalentPositions] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"UseCentring\"\>", "\[Rule]", "True"}], ",", 
                    
                    RowBox[{"\<\"RationaliseThreshold\"\>", "\[Rule]", 
                    "0.001`"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`SymmetryEquivalentPositions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SymmetryEquivalentPositions",
              ButtonNote->"paclet:MaXrd/ref/SymmetryEquivalentPositions"],
             "\"paclet:MaXrd/ref/SymmetryEquivalentPositions\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SymmetryEquivalentPositions\\\"\
, \\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns a \
list of coordinates that are equivalent to \\\", Cell[BoxData[RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"}\\\"}]], \
\\\"InlineFormula\\\"], \\\" under the symmetry of \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"SymmetryEquivalentPositions\\\", \
\\\"[\\\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"returns a list of coordinates, each entry containg the \
equivalents of \\\", Cell[BoxData[SubscriptBox[RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]], \\\"InlineFormula\\\"], \\\" under the \
symmetry of \\\", Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"SymmetryEquivalentPositions\", \"[\", \
StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \
\"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \
\"}\"}], \"]\"}]\)\!\(\*RowBox[{\" returns a list of coordinates that are \
equivalent to \", Cell[BoxData[RowBox[{\"{\", RowBox[{StyleBox[\"x\", \
\"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \
\"}\"}]], \"InlineFormula\"], \" under the symmetry of \", \
Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\
\!\(\*RowBox[{\"SymmetryEquivalentPositions\", \"[\", StyleBox[\"group\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \
\"]\"}]\) \!\(\*RowBox[{\"returns a list of coordinates, each entry containg \
the equivalents of \", Cell[BoxData[SubscriptBox[RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"z\", \"TI\"]}], \"}\"}], StyleBox[\"i\", \"TI\"]]], \
\"InlineFormula\"], \" under the symmetry of \", \
Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)", 
    "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/SymmetryEquivalentPositions"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`SymmetryEquivalentPositions, {
      MaXrd`SymmetryEquivalentPositions[
         Pattern[MaXrd`Private`input, 
          Blank[String]], 
         Optional[
          Pattern[MaXrd`Private`xyzInput, 
           Blank[List]], {"x", "y", "z"}], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`group, MaXrd`Private`\[Delta], 
          MaXrd`Private`useCentringQ, MaXrd`Private`fracs, MaXrd`Private`r, 
          MaXrd`Private`xyz, MaXrd`Private`s, MaXrd`Private`R, 
          MaXrd`Private`T, MaXrd`Private`equiv, MaXrd`Private`rationalise, 
          MaXrd`Private`mod, MaXrd`Private`generate, MaXrd`Private`gather, 
          MaXrd`Private`centring, MaXrd`Private`final, MaXrd`Private`t, 
          MaXrd`Private`sym, MaXrd`Private`c, MaXrd`Private`add, 
          MaXrd`Private`pos, MaXrd`Private`temp}, 
         MaXrd`Private`group = 
          MaXrd`InputCheck[MaXrd`Private`input, "GetPointSpaceGroupCrystal"]; 
         MaXrd`Private`xyz = 
          MaXrd`InputCheck[MaXrd`Private`xyzInput, "WrapSingle"]; 
         MaXrd`Private`\[Delta] = OptionValue["RationaliseThreshold"]; If[
           (Not[
            And[
             NumericQ[#], 
             Not[
              Negative[#]]]]& )[MaXrd`Private`\[Delta]], 
           Message[
            MessageName[MaXrd`SymmetryEquivalentPositions, "threshold"]]]; 
         MaXrd`Private`useCentringQ = OptionValue["UseCentring"]; 
         MaXrd`Private`fracs = {
           1/12, 1/8, 1/6, 1/4, 1/3, 3/8, 5/12, 1/2, 7/12, 5/8, 2/3, 3/4, 5/6,
             7/8, 11/12}; MaXrd`Private`rationalise[
            Pattern[MaXrd`Private`coord, 
             Blank[]]] := Part[
            Reap[
             Do[
              Sow[
               If[
                MemberQ[MaXrd`Private`fracs, MaXrd`Private`r = Rationalize[
                   ReplaceAll[MaXrd`Private`i, {0. -> 0}], 
                   MaXrd`Private`\[Delta]]], MaXrd`Private`r, 
                MaXrd`Private`i]], {MaXrd`Private`i, MaXrd`Private`coord}]], 
            2, 1]; MaXrd`Private`mod[
            Pattern[MaXrd`Private`X, 
             Blank[]]] := Which[
            NumericQ[MaXrd`Private`X], 
            Mod[MaXrd`Private`X, 1], Head[MaXrd`Private`X] === Plus, 
            MaXrd`Private`t = Select[MaXrd`Private`X, NumericQ]; 
            MaXrd`Private`sym = MaXrd`Private`X - MaXrd`Private`t; 
            Mod[MaXrd`Private`t, 1] + MaXrd`Private`sym, True, 
            MaXrd`Private`X]; 
         MaXrd`Private`s = 
          MaXrd`GetSymmetryOperations[MaXrd`Private`group]; {
           MaXrd`Private`R, MaXrd`Private`T} = Transpose[MaXrd`Private`s]; 
         If[
           MatchQ[
            Dimensions[MaXrd`Private`s], {
             Blank[], 3, 3}], MaXrd`Private`generate[
             Pattern[MaXrd`Private`coord, 
              Blank[]]] := Table[
             Dot[
              Transpose[
               Part[MaXrd`Private`s, MaXrd`Private`i]], 
              MaXrd`Private`coord], {MaXrd`Private`i, 
              Length[MaXrd`Private`s]}], MaXrd`Private`generate[
             Pattern[MaXrd`Private`coord, 
              Blank[]]] := Table[Dot[
               Part[MaXrd`Private`R, MaXrd`Private`i], MaXrd`Private`coord] + 
             Part[MaXrd`Private`T, MaXrd`Private`i], {MaXrd`Private`i, 
              Length[MaXrd`Private`s]}]]; MaXrd`Private`gather[
            Pattern[MaXrd`Private`list, 
             Blank[]]] := Map[MaXrd`Private`mod, MaXrd`Private`list, {2}]; 
         MaXrd`Private`c = StringTake[
            MaXrd`GetSymmetryData[MaXrd`Private`group, "HermannMauguinFull"], 
            1]; MaXrd`Private`add = 
          MaXrd`InputCheck[MaXrd`Private`c, "GetCentringVectors"]; 
         If[MaXrd`Private`useCentringQ, MaXrd`Private`centring[
             Pattern[MaXrd`Private`list, 
              Blank[]]] := (
            MaXrd`Private`equiv = DeleteDuplicates[MaXrd`Private`list]; 
            MaXrd`Private`temp = MaXrd`Private`equiv; 
            MaXrd`Private`equiv = Part[
               Reap[
                Do[
                 Sow[
                  
                  Map[# + Part[MaXrd`Private`add, MaXrd`Private`i]& , 
                   MaXrd`Private`temp]], {MaXrd`Private`i, 
                  Length[MaXrd`Private`add]}]], 2, 1]; 
            MaXrd`Private`equiv = Flatten[MaXrd`Private`equiv, 1]; 
            Map[MaXrd`Private`mod, MaXrd`Private`equiv, {2}]), 
           MaXrd`Private`centring[
             Pattern[MaXrd`Private`list, 
              Blank[]]] := (MaXrd`Private`temp = Table[
               Map[
               MaXrd`Private`mod, Part[MaXrd`Private`list, MaXrd`Private`i] + 
                Part[MaXrd`Private`add, MaXrd`Private`j]], {MaXrd`Private`j, 
                Length[MaXrd`Private`add]}, {MaXrd`Private`i, 
                Length[MaXrd`Private`list]}]; MaXrd`Private`pos = Map[Table[
                Position[MaXrd`Private`list, 
                 Part[#, MaXrd`Private`i]], {MaXrd`Private`i, 
                 Length[MaXrd`Private`list]}]& , MaXrd`Private`temp]; 
            MaXrd`Private`temp = Transpose[MaXrd`Private`pos]; 
            MaXrd`Private`temp = DeleteDuplicates[
               Table[
                Sort[
                 Flatten[
                  Part[MaXrd`Private`temp, MaXrd`Private`i], 1]], {
                MaXrd`Private`i, 
                 Length[MaXrd`Private`temp]}]]; MaXrd`Private`temp = Flatten[
               Part[MaXrd`Private`temp, All, 1]]; Part[MaXrd`Private`list, 
              Flatten[MaXrd`Private`temp]])]; MaXrd`Private`final[
            Pattern[MaXrd`Private`list, 
             Blank[]]] := (
           MaXrd`Private`temp = 
            ReplaceAll[MaXrd`Private`list, Pattern[MaXrd`Private`x, 
                Blank[Real]] :> Round[MaXrd`Private`x, 10.^(-6)]]; 
           DeleteDuplicates[MaXrd`Private`temp]); 
         MaXrd`Private`xyz = Map[MaXrd`Private`final, 
            Map[MaXrd`Private`centring, 
             Map[MaXrd`Private`gather, 
              Map[MaXrd`Private`generate, 
               Map[MaXrd`Private`rationalise, MaXrd`Private`xyz]]]]]; If[
           MatchQ[MaXrd`Private`xyzInput, 
            Condition[{
              Pattern[MaXrd`Private`x, 
               Blank[]], 
              Pattern[MaXrd`Private`y, 
               Blank[]], 
              Pattern[MaXrd`Private`z, 
               Blank[]]}, 
             Not[
              
              AnyTrue[{MaXrd`Private`x, MaXrd`Private`y, MaXrd`Private`z}, 
               ListQ]]]], 
           Return[
            First[MaXrd`Private`xyz]], 
           Return[MaXrd`Private`xyz]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`SymmetryEquivalentPositions, {
      SyntaxInformation[MaXrd`SymmetryEquivalentPositions] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {"UseCentring" -> True, "RationaliseThreshold" -> 0.001}, 
    "Attributes" -> {}, "FullName" -> "MaXrd`SymmetryEquivalentPositions"], 
   False]]], "Output",
 CellChangeTimes->{3.780679212069222*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"fa6a07a9-0f86-4c8c-b8b1-e9163f8d8253"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymmetryEquivalentPositions", "[", 
  RowBox[{"\"\<Pnma\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "y", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.780300993387271*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"f65ecf3d-0985-4319-b349-f9909ce3f559"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "y", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"-", "y"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], "+", "y"}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{
      FractionBox["1", "2"], "-", "y"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "y"}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "y", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], "-", "y"}], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{
      FractionBox["1", "2"], "+", "y"}], ",", "0"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.7806792144025507`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"c1fd0d24-4714-4131-9498-067a1e21ee26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymmetryEquivalentPositions", "[", 
  RowBox[{"\"\<Fd-3m:2\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "8"}], ",", 
     RowBox[{"1", "/", "8"}], ",", 
     RowBox[{"1", "/", "8"}]}], "}"}], ",", 
   RowBox[{"\"\<UseCentring\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780300962027445*^9, 3.780300964531289*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"63a89265-bbb7-4455-a05d-6acca60cefb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679215836155*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"8bc10883-e5be-420c-a2dc-0211486598ca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Working with lists of reflections", "Subsubsection",
 CellChangeTimes->{{3.7802932843875713`*^9, 
  3.780293294282399*^9}},ExpressionUUID->"ed6d7dd2-f85a-41c5-a6a5-\
c87c7721af3c"],

Cell[TextData[{
 "Reflections are basic input parameters in many tasks. A basic operation is \
to check whether a reflection is systematically absent (extinct) or not; ",
 ButtonBox["SystematicAbsentQ",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/SystematicAbsentQ"],
 " is made for this:"
}], "Text",
 CellChangeTimes->{{3.780313674411643*^9, 3.7803137845800877`*^9}, {
  3.780679247674148*^9, 
  3.7806792490738*^9}},ExpressionUUID->"2e952497-d9e6-4eb3-81e8-cf8ba639006d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SystematicAbsentQ"}]], "Input",
 CellChangeTimes->{3.78030186270115*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"9d351478-aebb-48ed-acc2-6fe396f5f8e6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SystematicAbsentQ",
              ButtonNote->"paclet:MaXrd/ref/SystematicAbsentQ"],
             "\"paclet:MaXrd/ref/SystematicAbsentQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SystematicAbsentQ\\\", \\\"[\\\
\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\
\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns \\\", Cell[BoxData[\\\"True\\\"], \
\\\"InlineFormula\\\"], \\\" if the \\\", Cell[BoxData[StyleBox[\\\"hkl\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" reflection is systematically \
absent for space \\\", Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\", and \\\", Cell[BoxData[\\\"False\\\"], \
\\\"InlineFormula\\\"], \\\" \
otherwise.\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"SystematicAbsentQ\\\", \\\"[\\\", \
StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"h\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"l\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"h\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"l\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns a \
list where each reflection \\\", Cell[BoxData[SubscriptBox[StyleBox[\\\"hkl\\\
\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]], \\\"InlineFormula\\\"], \
\\\" has been checked for systematical absence for space \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/SystematicAbsentQ", 
                    "paclet:MaXrd/ref/SystematicAbsentQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SystematicAbsentQ", "[", 
                    RowBox[{
                    "MaXrd`Private`group_String", ",", 
                    "MaXrd`Private`hkl_List", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`sgHM", ",", "MaXrd`Private`centring", ",", 
                    "MaXrd`Private`symop", ",", "MaXrd`Private`r", ",", 
                    "MaXrd`Private`t", ",", "MaXrd`Private`\[Delta]", ",", 
                    "MaXrd`Private`crystalQ", ",", "MaXrd`Private`\[Lambda]", 
                    ",", "MaXrd`Private`check"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"$CrystalData", ",", "MaXrd`Private`group"}], 
                    "]"}], ",", 
                    RowBox[{"MaXrd`Private`sgHM", "=", 
                    RowBox[{"$CrystalData", "[", 
                    RowBox[{
                    "MaXrd`Private`group", ",", "\<\"SpaceGroup\"\>"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    "MaXrd`Private`sgHM", "=", "MaXrd`Private`group"}]}], 
                    "]"}], ";", 
                    RowBox[{"MaXrd`Private`sgHM", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`sgHM", 
                    ",", "\<\"InterpretSpaceGroup\"\>"}], "]"}]}], ";", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{"MaXrd`Private`hkl", ",", "\<\"Integer\"\>"}], 
                    "]"}], ";", 
                    RowBox[{"MaXrd`Private`sgHM", "=", 
                    RowBox[{"GetSymmetryData", "[", 
                    RowBox[{
                    "MaXrd`Private`sgHM", ",", "\<\"HermannMauguinFull\"\>"}],
                     "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`centring", "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"MaXrd`Private`sgHM", ",", "1"}], "]"}], 
                    ",", "\<\"GetCentringVectors\"\>"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`symop", "=", 
                    RowBox[{
                    "GetSymmetryOperations", "[", "MaXrd`Private`sgHM", 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`\[Delta]", "=", 
                    RowBox[{"OptionValue", "[", "\<\"Threshold\"\>", "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`crystalQ", "=", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"$CrystalData", ",", "MaXrd`Private`group"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NumericQ", "[", "MaXrd`Private`\[Delta]", "]"}], 
                    "&&", 
                    RowBox[{"MaXrd`Private`\[Delta]", ">", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`\[Lambda]", "=", 
                    RowBox[{"$CrystalData", "[", 
                    RowBox[{
                    "MaXrd`Private`group", ",", "\<\"Wavelength\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MissingQ", "[", "MaXrd`Private`\[Lambda]", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`\[Lambda]", "=", "1.`"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`crystalQ", "=", "False"}]}], "]"}],
                     ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`check", "[", "MaXrd`Private`input_", "]"}],
                     ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`input", ".", "#1"}], "&"}], ")"}], 
                    "/@", "MaXrd`Private`centring"}], ",", "IntegerQ"}], 
                    "]"}]}], ",", 
                    RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`r", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`input", "\[Equal]", "#1"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"MaXrd`Private`symop", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], ".", "MaXrd`Private`input"}], "]"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`t", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", 
                    RowBox[{"MaXrd`Private`input", ".", "#1"}], "]"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{"MaXrd`Private`symop", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`r", ",", "MaXrd`Private`t"}], 
                    "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`crystalQ", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"First", "[", 
                    RowBox[{"StructureFactor", "[", 
                    RowBox[{
                    "MaXrd`Private`group", ",", "MaXrd`Private`input", ",", 
                    "MaXrd`Private`\[Lambda]", ",", 
                    RowBox[{"\<\"Units\"\>", "\[Rule]", "False"}], ",", 
                    
                    RowBox[{"\<\"IgnoreSystematicAbsence\"\>", "\[Rule]", 
                    "True"}]}], "]"}], "]"}], "]"}], "<", 
                    "MaXrd`Private`\[Delta]"}], ",", 
                    RowBox[{"Return", "[", "True", "]"}]}], "]"}]}], "]"}], 
                    ";", "False"}], ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", "MaXrd`Private`hkl", "]"}], ",", 
                    RowBox[{
                    RowBox[{"Reap", "[", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"MaXrd`Private`check", "[", 
                    RowBox[{
                    "MaXrd`Private`hkl", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`hkl", "]"}]}], 
                    "}"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MaXrd`Private`check", "[", "MaXrd`Private`hkl", "]"}]}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "SystematicAbsentQ", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`SystematicAbsentQ] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"\<\"Threshold\"\>", "\[Rule]", "0"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`SystematicAbsentQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SystematicAbsentQ",
              ButtonNote->"paclet:MaXrd/ref/SystematicAbsentQ"],
             "\"paclet:MaXrd/ref/SystematicAbsentQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SystematicAbsentQ\\\", \\\"[\\\
\", StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\
\\\"}]\\)\\!\\(\\*RowBox[{\\\" returns \\\", Cell[BoxData[\\\"True\\\"], \
\\\"InlineFormula\\\"], \\\" if the \\\", Cell[BoxData[StyleBox[\\\"hkl\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" reflection is systematically \
absent for space \\\", Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\", and \\\", Cell[BoxData[\\\"False\\\"], \
\\\"InlineFormula\\\"], \\\" \
otherwise.\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"SystematicAbsentQ\\\", \\\"[\\\", \
StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"h\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"l\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"h\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"l\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \\!\\(\\*RowBox[{\\\"returns a \
list where each reflection \\\", Cell[BoxData[SubscriptBox[StyleBox[\\\"hkl\\\
\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]], \\\"InlineFormula\\\"], \
\\\" has been checked for systematical absence for space \\\", \
Cell[BoxData[StyleBox[\\\"group\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\
\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"SystematicAbsentQ\", \"[\", StyleBox[\"group\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \
\"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" \
returns \", Cell[BoxData[\"True\"], \"InlineFormula\"], \" if the \", \
Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection is \
systematically absent for space \", Cell[BoxData[StyleBox[\"group\", \
\"TI\"]], \"InlineFormula\"], \", and \", Cell[BoxData[\"False\"], \
\"InlineFormula\"], \" otherwise.\"}]\)\n\!\(\*RowBox[{\"SystematicAbsentQ\", \
\"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\
\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\
\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) \!\(\*RowBox[{\"returns a list where each reflection \", \
Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]], \"InlineFormula\"], \" has been checked for systematical absence \
for space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \
\".\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/SystematicAbsentQ"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`SystematicAbsentQ, {MaXrd`SystematicAbsentQ[
         Pattern[MaXrd`Private`group, 
          Blank[String]], 
         Pattern[MaXrd`Private`hkl, 
          Blank[List]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`sgHM, MaXrd`Private`centring, MaXrd`Private`symop,
           MaXrd`Private`r, MaXrd`Private`t, MaXrd`Private`\[Delta], 
          MaXrd`Private`crystalQ, MaXrd`Private`\[Lambda], 
          MaXrd`Private`check}, If[
           KeyExistsQ[MaXrd`$CrystalData, MaXrd`Private`group], 
           MaXrd`Private`sgHM = 
           MaXrd`$CrystalData[MaXrd`Private`group, "SpaceGroup"], 
           MaXrd`Private`sgHM = MaXrd`Private`group]; 
         MaXrd`Private`sgHM = 
          MaXrd`InputCheck[MaXrd`Private`sgHM, "InterpretSpaceGroup"]; 
         MaXrd`InputCheck[MaXrd`Private`hkl, "Integer"]; 
         MaXrd`Private`sgHM = 
          MaXrd`GetSymmetryData[MaXrd`Private`sgHM, "HermannMauguinFull"]; 
         MaXrd`Private`centring = MaXrd`InputCheck[
            StringTake[MaXrd`Private`sgHM, 1], "GetCentringVectors"]; 
         MaXrd`Private`symop = 
          MaXrd`GetSymmetryOperations[MaXrd`Private`sgHM]; 
         MaXrd`Private`\[Delta] = OptionValue["Threshold"]; 
         MaXrd`Private`crystalQ = 
          KeyExistsQ[MaXrd`$CrystalData, MaXrd`Private`group]; If[
           And[
            NumericQ[MaXrd`Private`\[Delta]], MaXrd`Private`\[Delta] > 0], 
           MaXrd`Private`\[Lambda] = 
            MaXrd`$CrystalData[MaXrd`Private`group, "Wavelength"]; If[
             MissingQ[MaXrd`Private`\[Lambda]], MaXrd`Private`\[Lambda] = 1.],
            MaXrd`Private`crystalQ = False]; MaXrd`Private`check[
            Pattern[MaXrd`Private`input, 
             Blank[]]] := (If[
             Not[
              AllTrue[
               Map[Dot[MaXrd`Private`input, #]& , MaXrd`Private`centring], 
               IntegerQ]], 
             Return[True]]; 
           MaXrd`Private`r = Map[MaXrd`Private`input == #& , 
              Transpose[
               Dot[
                Transpose[
                 Part[MaXrd`Private`symop, All, 1]], MaXrd`Private`input]]]; 
           MaXrd`Private`t = Map[IntegerQ[
               Dot[MaXrd`Private`input, #]]& , 
              Part[MaXrd`Private`symop, All, 2]]; If[
             MemberQ[
              Transpose[{MaXrd`Private`r, MaXrd`Private`t}], {True, False}], 
             Return[True]]; If[MaXrd`Private`crystalQ, 
             If[Abs[
                First[
                 MaXrd`StructureFactor[
                 MaXrd`Private`group, MaXrd`Private`input, 
                  MaXrd`Private`\[Lambda], "Units" -> False, 
                  "IgnoreSystematicAbsence" -> True]]] < 
              MaXrd`Private`\[Delta], 
              Return[True]]]; False); If[
           MatrixQ[MaXrd`Private`hkl], 
           Part[
            Reap[
             Do[
              Sow[
               MaXrd`Private`check[
                Part[MaXrd`Private`hkl, MaXrd`Private`i]]], {
              MaXrd`Private`i, 
               Length[MaXrd`Private`hkl]}]], 2, 1], 
           MaXrd`Private`check[MaXrd`Private`hkl]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`SystematicAbsentQ, {
      SyntaxInformation[MaXrd`SystematicAbsentQ] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {"Threshold" -> 0}, "Attributes" -> {}, "FullName" -> 
    "MaXrd`SystematicAbsentQ"], False]]], "Output",
 CellChangeTimes->{3.780679264148692*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"997162dd-cac4-47c5-a72a-708335d5f92e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SystematicAbsentQ", "[", 
  RowBox[{"\"\<Silicon\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780301869127241*^9, 3.780301887420692*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"2a27e5bb-5f6c-4b9f-9118-9cf6df6d6e00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.780679265290379*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"ace92439-f619-4428-a458-3077359f9632"]
}, Open  ]],

Cell[TextData[{
 "The easiest way to produce a list of suitable reflections is to use ",
 ButtonBox["ReflectionList",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ReflectionList"],
 ", which simply requires a crystal label and a wavelength (can be omitted if \
imported along with the crystal data)."
}], "Text",
 CellChangeTimes->{{3.7803012592353687`*^9, 3.780301262762785*^9}, {
  3.7803028491547728`*^9, 3.780302850752797*^9}, {3.780306744152218*^9, 
  3.7803067939495296`*^9}, {3.7803074273762093`*^9, 3.780307488078191*^9}, {
  3.780313672479416*^9, 3.7803136737090693`*^9}, {3.780313814337653*^9, 
  3.7803138174862137`*^9}},ExpressionUUID->"5dd16e09-8112-4c5a-85b7-\
7e1acb9893aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReflectionList", "[", 
  RowBox[{"\"\<Quartz\>\"", ",", "1.54"}], "]"}]], "Input",
 CellChangeTimes->{{3.780301175159268*^9, 3.780301207197278*^9}, {
  3.7803012495097933`*^9, 3.78030124955411*^9}, {3.7803068290252542`*^9, 
  3.780306829477357*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"d7363300-5410-4fe6-8fa5-58afd927fd99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679277103753*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"460dc2a6-342d-4150-9ce4-a59183373e04"]
}, Open  ]],

Cell[TextData[{
 "Underneath \[OpenCurlyDoubleQuote]the hood\[CloseCurlyDoubleQuote], the \
function applies two functions we\[CloseCurlyQuote]ve seen already\[LongDash]",
 ButtonBox["SystematicAbsentQ",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/SystematicAbsentQ"],
 " and ",
 ButtonBox["MergeSymmetryEquivalentReflections",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/MergeSymmetryEquivalentReflections"],
 "\[LongDash]and furthermore removes reflections not applicable with the \
given wavelength limit. ",
 ButtonBox["ReflectionList",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ReflectionList"],
 " is also capable of filtering reflections to user-defined conditions, angle \
thresholds, index limits and more."
}], "Text",
 CellChangeTimes->{{3.78030750122156*^9, 3.780307502545792*^9}, {
   3.780307537301895*^9, 3.780307604298566*^9}, {3.7803078180665627`*^9, 
   3.780307856402542*^9}, {3.780308337892688*^9, 3.780308338176952*^9}, {
   3.7803084801932507`*^9, 3.780308486254509*^9}, {3.78030856014377*^9, 
   3.780308564401396*^9}, {3.78030859555938*^9, 3.780308614189788*^9}, {
   3.780308708412163*^9, 3.7803087090757027`*^9}, {3.780308878145228*^9, 
   3.780308915809778*^9}, {3.780311316108227*^9, 3.780311393795926*^9}, {
   3.780326002626019*^9, 3.780326010673647*^9}, 
   3.780679284057111*^9},ExpressionUUID->"a710f6ae-ef47-4d85-94ee-\
6a0872d836de"],

Cell[TextData[{
 "The final function presented here is ",
 ButtonBox["ToStandardSetting",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ToStandardSetting"],
 ". When we have multiple symmetry equivalent reflections to choose from, \
this function simply returns the \[OpenCurlyDoubleQuote]standard\
\[CloseCurlyDoubleQuote] representative:"
}], "Text",
 CellChangeTimes->{{3.780312976016451*^9, 
  3.7803131024571657`*^9}},ExpressionUUID->"1750ec7d-92ad-4187-85dd-\
be37277d3067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToStandardSetting", "[", 
  RowBox[{"\"\<m\!\(\*OverscriptBox[\(3\), \(_\)]\)m\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"9fe7e1af-5a14-47f4-96b7-fc939b33689f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7806793044327707`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"9d7c5728-1f5b-499b-aeed-76a0c6f24bb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToStandardSetting", "[", 
  RowBox[{"\"\<6/mmm\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7"}], ",", "5", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"f8a383b6-1b58-4cab-b6df-60d5265d607c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.780679306704604*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ba8b82c4-532e-42f9-bc3d-4a5879f80156"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Transform among alternative space group settings", "Subsection",
 CellChangeTimes->{{3.778211421018635*^9, 
  3.7782114327622957`*^9}},ExpressionUUID->"b905e203-50cf-4c5c-b5a3-\
a89c77b2eff1"],

Cell[TextData[{
 "In the introduction to space groups it was mentioned how information about \
the alternative settings are stored within the \
\[OpenCurlyDoubleQuote]standard\[CloseCurlyDoubleQuote] space group entry. In \
this subsection we will see how to transform between the different settings \
using ",
 ButtonBox["UnitCellTransformation",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/UnitCellTransformation"],
 ". The examples are taken from the documentation page and presented in \
shorter versions here."
}], "Text",
 CellChangeTimes->{
  3.780314482161355*^9, {3.780314612527512*^9, 3.7803146896609993`*^9}, {
   3.780316539057757*^9, 
   3.780316701492029*^9}},ExpressionUUID->"8b411596-f59f-433c-8fad-\
f9ecb25b65d9"],

Cell[TextData[{
 "We will be working with the ",
 StyleBox["diamond",
  FontSlant->"Italic"],
 " crystal. First, notice that it is stored using the alternative origin:"
}], "Text",
 CellChangeTimes->{{3.780316882351035*^9, 3.780316938278042*^9}, {
  3.7803172390570498`*^9, 
  3.780317240527608*^9}},ExpressionUUID->"ee4d3f7c-de22-44d1-9bc0-\
22d186a85272"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$CrystalData", "[", 
  RowBox[{"\"\<Diamond\>\"", ",", "\"\<SpaceGroup\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.780316870251444*^9, 3.780316878247548*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"59f2985f-2e07-4160-9b23-975d74044a2b"],

Cell[BoxData["\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m:2\"\>"], \
"Output",
 CellChangeTimes->{3.780679342610136*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"abccd659-8e79-4a1e-ae44-3b81b592369b"]
}, Open  ]],

Cell[TextData[{
 "We can compare the unit cell before and after the transformation using ",
 ButtonBox["CrystalPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/CrystalPlot"],
 " (more about this function and ",
 ButtonBox["ExpandCrystal",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ExpandCrystal"],
 " in ",
 ButtonBox["Constructing structures",
  BaseStyle->"Hyperlink",
  ButtonData->"construct_structures"],
 "):"
}], "Text",
 CellChangeTimes->{{3.7803173033901577`*^9, 3.7803173461303453`*^9}, {
  3.7803174380276203`*^9, 3.780317450090028*^9}, {3.780324213706518*^9, 
  3.780324229057798*^9}},ExpressionUUID->"684a2b72-5968-4d42-b50c-\
91a11df29478"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "@", 
  RowBox[{"ExpandCrystal", "[", "\"\<Diamond\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.780317406039303*^9, 3.7803174154360123`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ac3ddfd7-27d5-4fa3-aaab-eec572ae5869"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {3.567, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 3.567, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 3.567}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 3.567, 0.}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 3.567}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 3.567}, {3.567, 3.567, 3.567}}]}, 
   {RGBColor[0.4, 0.4, 0.4], 
    SphereBox[{{0.445875, 0.445875, 0.445875}, {2.229375, 0.445875, 
     2.229375}, {0.445875, 2.229375, 2.229375}, {2.229375, 2.229375, 
     0.445875}, {3.121125, 1.337625, 1.337625}, {3.121125, 3.121125, 
     3.121125}, {1.337625, 1.337625, 3.121125}, {1.337625, 3.121125, 
     1.337625}}, 0.67]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.7806793456656446`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"3a260b3a-de09-4451-8f49-0e065a405e3f"]
}, Open  ]],

Cell[TextData[{
 "Now we carry out the transformation that shifts the origin. It can be done \
either by specifying ",
 StyleBox["\[OpenCurlyDoubleQuote]CellOrigin\[CloseCurlyDoubleQuote]\[Rule]1",
   "CodeText"],
 " or by setting the target space group to ",
 StyleBox["\[OpenCurlyDoubleQuote]Fd-3m\[CloseCurlyDoubleQuote]", 
  "CodeText"],
 " (alternatively, ",
 StyleBox["\[OpenCurlyDoubleQuote]Fd-3m:1\[CloseCurlyDoubleQuote]", 
  "CodeText"],
 "):"
}], "Text",
 CellChangeTimes->{{3.780317468203521*^9, 3.78031762274314*^9}, {
   3.780317689741445*^9, 3.780317739067663*^9}, 3.780317781721789*^9, {
   3.7806793605441093`*^9, 
   3.780679361006961*^9}},ExpressionUUID->"180c1615-e194-4f90-8edb-\
c77b62cadc71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"\"\<Diamond\>\"", ",", "\"\<Fd-3m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.780314310724699*^9, 3.7803143133270197`*^9}, {
  3.78031778552971*^9, 3.780317821074348*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6cfb0ef3-1c3c-4b1f-8178-f547d126918a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m\"\>"}], 
   ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.78067934878619*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"94798027-7251-42c6-b2c7-ecb466ef9e9b"]
}, Open  ]],

Cell["\<\
Notice how the space group no longer has the number two attached to it. Also, \
let us see the change visually:\
\>", "Text",
 CellChangeTimes->{{3.780317830874051*^9, 
  3.7803178880081043`*^9}},ExpressionUUID->"d504a575-5383-4aae-bf86-\
c981627a82a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "@", 
  RowBox[{"ExpandCrystal", "[", "\"\<Diamond\>\"", "]"}]}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"27a2d6ea-ea28-4af5-9727-9a087ca4b2b6"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {3.567, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 3.567, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 3.567}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 3.567, 0.}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 3.567}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 3.567}, {3.567, 3.567, 3.567}}]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQAmJmBsLgw/Jj3uadf+xx0ejq0Plf/l6peJnG6gDhv8Hg
46Jh6nDRMHXY3cvjgN29PA7o6rD7E6Efu7kImlL7cZmHSx4A0Q+pSQ==
     "], 0.67]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679350758823*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"94c121d9-2681-4e5c-8d04-b8d88b16cff9"]
}, Open  ]],

Cell[TextData[{
 "Another, interactive example from the documentation page is added here: the \
crystal data of ",
 StyleBox["ferrocene",
  FontSlant->"Italic"],
 " is first imported. This is in a monoclinic space group that has several \
settings to choose from."
}], "Text",
 CellChangeTimes->{{3.780317924079692*^9, 3.780317946806519*^9}, {
  3.78032178142127*^9, 
  3.780321836106668*^9}},ExpressionUUID->"b0c70a21-0919-4533-bf86-\
2a195557e24b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportCrystalData", "@", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
    "$MaXrdPath", ",", "\"\<ExampleFiles\>\"", ",", "\"\<CIF\>\"", ",", 
     "\"\<Ferrocene.cif\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7803218442499933`*^9, 3.780321846300207*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"04d05c89-5979-4a4a-afef-14f95fdd724e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/n\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9285`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{
        "93.156`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.780679391103581*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"8212bb7a-a79e-4611-9a95-82ea3841f022"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"UnitCellTransformation", "[", 
    RowBox[{"\"\<Ferrocene\>\"", ",", 
     RowBox[{"\"\<UniqueAxis\>\"", "\[Rule]", "a"}], ",", 
     RowBox[{"\"\<CellChoice\>\"", "\[Rule]", "c"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "\"\<b\>\"", ",", "\"\<Unique axis\>\""}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}],
          "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c", ",", "2", ",", "\"\<Cell choice\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Spacer", "[", "10", "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7803218619240017`*^9, 3.7803219299373627`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2bf3f81e-b822-4b00-9db4-967405038a25"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = "b", $CellContext`c$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], "b", "Unique axis"}, {"a", "b", "c"}}, {{
       Hold[$CellContext`c$$], 2, "Cell choice"}, {1, 2, 3}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}, 
        Spacer[10]]], Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    636., {65.150390625, 13.86962890625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$16437$$ = 0, $CellContext`c$16442$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = "b", $CellContext`c$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$16437$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$16442$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      MaXrd`UnitCellTransformation[
       "Ferrocene", "UniqueAxis" -> $CellContext`a$$, 
        "CellChoice" -> $CellContext`c$$], 
      "Specifications" :> {{{$CellContext`a$$, "b", "Unique axis"}, {
         "a", "b", "c"}, ControlPlacement -> 
         1}, {{$CellContext`c$$, 2, "Cell choice"}, {1, 2, 3}, 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, 
         Spacer[10]]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{681., {82., 88.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.780679392797432*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"8e52a4f3-0e39-472c-b9a3-65e1e5e739c8"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Working with crystallographic data", "Chapter",
 CellChangeTimes->{{3.778211365866692*^9, 3.7782113941943693`*^9}, {
  3.77917141118729*^9, 3.779171424984785*^9}, {3.780290185376586*^9, 
  3.7802901891217337`*^9}},ExpressionUUID->"3628edaf-93d5-453b-9ffc-\
3647ac6654a6"],

Cell[TextData[{
 "Up to this point, most demonstrations have been showcasing the more \
theoretical aspects of ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 ". In this chapter the focus will be towards coupling the package with \
experimental data."
}], "Text",
 CellChangeTimes->{{3.780322180251739*^9, 
  3.780322322921187*^9}},ExpressionUUID->"5d9ee696-4848-4a1d-9289-\
908df2af1a00"],

Cell[TextData[{
 "First we need some data to work with. ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 " comes with a handful of \[OpenCurlyDoubleQuote]demo crystals\
\[CloseCurlyDoubleQuote] so that ",
 ButtonBox["$CrystalData",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/$CrystalData"],
 "\[LongDash]the symbol that stores crystal data in memory as an association\
\[LongDash]has some content when the package is loaded. New content is \
conveniently added with the ",
 ButtonBox["ImportCrystalData",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ImportCrystalData"],
 " function. If not done already, import data from the ",
 StyleBox["ferrocene",
  FontSlant->"Italic"],
 " ",
 StyleBox["cif", "Program"],
 " file:"
}], "Text",
 CellChangeTimes->{{3.780324514018877*^9, 3.78032455469027*^9}, {
  3.7803245863692427`*^9, 3.780324628536562*^9}, {3.780325966918805*^9, 
  3.780325991937108*^9}, {3.780326085918947*^9, 3.780326100438381*^9}, {
  3.780326184189865*^9, 3.780326232934663*^9}, {3.7803263152107162`*^9, 
  3.780326341457376*^9}},ExpressionUUID->"4f7dc6e2-c31c-4f35-a265-\
5d29c3076360"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportCrystalData", "@", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
    "$MaXrdPath", ",", "\"\<ExampleFiles\>\"", ",", "\"\<CIF\>\"", ",", 
     "\"\<Ferrocene.cif\>\""}], "}"}], "]"}]}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"6f253736-8c8f-4a8a-a433-0a26b7d27f41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/n\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9285`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{
        "93.156`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{
        "90",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.780679445769232*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"e09ad54f-f70e-4295-9ffc-7768cdcb5d9f"]
}, Open  ]],

Cell["\<\
In the next session we will perform some basic crystallographic calculations \
on this demo crystal.\
\>", "Text",
 CellChangeTimes->{{3.7803268195505447`*^9, 3.780326841541636*^9}, {
  3.7803271316806383`*^9, 
  3.780327154870688*^9}},ExpressionUUID->"815cadef-e353-4a47-aad1-\
2ee0ade4b231"],

Cell[CellGroupData[{

Cell["Computations", "Section",
 CellChangeTimes->{{3.778211407298554*^9, 3.778211410250227*^9}, {
   3.779171394059146*^9, 3.7791713959352703`*^9}, 
   3.7803278389767323`*^9},ExpressionUUID->"887e3b22-9221-4d89-af8f-\
ea7091a6998a"],

Cell["\<\
Below are some fairly plain examples. Please consult the documentation pages \
for more information and depth about syntax and options.\
\>", "Text",
 CellChangeTimes->{{3.780327290364141*^9, 3.780327338138495*^9}, {
  3.780327625556312*^9, 
  3.7803276454921227`*^9}},ExpressionUUID->"bd344120-9c82-4e66-aa4b-\
0b473e37ad1a"],

Cell[CellGroupData[{

Cell["Basic crystallography", "Subsection",
 CellChangeTimes->{{3.780327841191403*^9, 
  3.7803278576069317`*^9}},ExpressionUUID->"82e7ae51-5e91-404f-afa1-\
b68e37ac2468"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crystal", "=", "\"\<Ferrocene\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wavelength", "=", "1.5418"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reflections", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "5", ",", "3"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780327662189398*^9, 3.780327710554534*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"a6017f36-19bb-429e-9a9b-34c56ab223a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BraggAngle", "[", 
  RowBox[{"crystal", ",", "wavelength", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7803276536422033`*^9, 3.780327672475354*^9}, {
  3.7803277131782417`*^9, 3.780327720081398*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"48e90b3d-6b79-4a4b-8e2d-aa7e4177201f"],

Cell[BoxData[
 TemplateBox[{
  "10.896373163604228`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
   "degrees","\"AngularDegrees\""},
  "QuantityPostfix"]], "Output",
 CellChangeTimes->{3.780679461493585*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"b825d167-3e61-4095-96f0-10d81bd512f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BraggAngle", "[", 
  RowBox[{"crystal", ",", "wavelength", ",", "reflections"}], "]"}]], "Input",\

 CellChangeTimes->{{3.780327724094635*^9, 3.780327731314888*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"ce7606d5-d910-4e2a-ac05-46dd62d8dcb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "9.833944564553795`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{
    "10.896373163604228`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{
    "11.452875019997466`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{
    "22.21397279257869`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{
    "22.04041280517722`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{
    "46.70398937554725`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"], ",", "Undefined"}], "}"}]], "Output",
 CellChangeTimes->{3.78067946273461*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"96648cf5-8439-4450-a4fe-ab7754270602"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InterplanarSpacing", "[", 
  RowBox[{"crystal", ",", "reflections"}], "]"}]], "Input",
 CellChangeTimes->{{3.7803277364812717`*^9, 3.780327757753475*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"aac2aa83-3945-4542-8b8e-5ef7939aba0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "4.513643927649438`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
     "\"Angstroms\""},
    "Quantity"], ",", 
   TemplateBox[{
    "4.078117790093188`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
     "\"Angstroms\""},
    "Quantity"], ",", 
   TemplateBox[{
    "3.8824166594126632`","\"\[CapitalARing]\"",
     "\[ARing]ngstr\[ODoubleDot]ms","\"Angstroms\""},
    "Quantity"], ",", 
   TemplateBox[{
    "2.039058895046594`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
     "\"Angstroms\""},
    "Quantity"], ",", 
   TemplateBox[{
    "2.054306402230488`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
     "\"Angstroms\""},
    "Quantity"], ",", 
   TemplateBox[{
    "1.0591897200752611`","\"\[CapitalARing]\"",
     "\[ARing]ngstr\[ODoubleDot]ms","\"Angstroms\""},
    "Quantity"], ",", 
   TemplateBox[{
    "0.710032397849139`","\"\[CapitalARing]\"","\[ARing]ngstr\[ODoubleDot]ms",
     "\"Angstroms\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.78067946374187*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"854e6183-9e10-40e3-9ff1-a1d9ee2b63ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalDensity", "@", "crystal"}]], "Input",
 CellChangeTimes->{{3.7803277692607613`*^9, 3.780327774275339*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"1cd53263-7cdd-42cf-9fa0-d36fb3bc7e92"],

Cell[BoxData[
 TemplateBox[{
  "1.5166063042583413`",
   RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     SuperscriptBox["\"cm\"", "3"]}],"grams per centimeter cubed",FractionBox[
   "\"Grams\"", 
    SuperscriptBox["\"Centimeters\"", "3"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.780679465069639*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"544adf9f-b47e-482e-954b-05a32b8f063d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetCrystalMetric", "@", "crystal"}]], "Input",
 CellChangeTimes->{{3.780327780653517*^9, 3.780327783672103*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"1a75b7f6-ba1e-41bd-9f56-f5a4f8adb754"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"35.14711225`", ",", "0.`", ",", 
     RowBox[{"-", "2.950910369236791`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "57.942544`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.950910369236791`"}], ",", "0.`", ",", "81.739681`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679466048346*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"4f4f4c4f-0752-4e72-936a-890e922f16a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Obtain scattering factors (atomic form factors)", "Subsection",
 CellChangeTimes->{{3.780328464498622*^9, 3.7803284692974243`*^9}, {
  3.780328506057523*^9, 
  3.780328509656424*^9}},ExpressionUUID->"535144a2-3be4-4b51-a6f9-\
26095fc2d5eb"],

Cell[TextData[{
 "This function looks up scattering factors and dispersion corrections from \
tabulated sources (e.g. from ",
 ButtonBox["Waasmaier & Kirfel",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://scripts.iucr.org/cgi-bin/paper?S0108767394013292"], None},
  ButtonNote->"http://scripts.iucr.org/cgi-bin/paper?S0108767394013292"],
 " and ",
 ButtonBox["Cromer & Liberman",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://scripts.iucr.org/cgi-bin/paper?S0567739481000600"], None},
  ButtonNote->"http://scripts.iucr.org/cgi-bin/paper?S0567739481000600"],
 ", respectively)."
}], "Text",
 CellChangeTimes->{{3.780328528312088*^9, 3.7803285332622004`*^9}, {
  3.780328577551361*^9, 3.7803285834051943`*^9}, {3.7803287013499117`*^9, 
  3.78032870411445*^9}, {3.7803289307360888`*^9, 
  3.780329013938468*^9}},ExpressionUUID->"7fdc4a3a-b0f5-4cd2-9862-\
6647dc12edfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetAtomicScatteringFactors", "[", 
  RowBox[{"\"\<Quartz\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7803284708517523`*^9, 3.7803284781538343`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"b0bc712b-1155-4cff-a825-4036e234be89"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Si\"\>", "\[Rule]", "7.04131723242042`"}], ",", 
   RowBox[{"\<\"O\"\>", "\[Rule]", "2.8694134766170873`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.780679468584592*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"ef7e015a-314d-4347-aef5-05679b174fa6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetAtomicScatteringFactors", "[", 
  RowBox[{"\"\<Quartz\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "0.709317"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7803284871617727`*^9, 3.780328489317644*^9}, 
   3.780329053169886*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"b32de96e-921b-488b-b5f4-24f76f44565a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Si\"\>", "\[Rule]", 
    RowBox[{"7.12359957624587`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.070378685421789`", " ", "\[ImaginaryI]"}]}]}], ",", 
   RowBox[{"\<\"O\"\>", "\[Rule]", 
    RowBox[{"2.880245699176211`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.0060394212469790974`", " ", "\[ImaginaryI]"}]}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7806794704003267`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"8031e43a-53f8-4037-86d8-c46fa93fc2a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structure factors", "Subsection",
 CellChangeTimes->{{3.780327848039748*^9, 
  3.780327861766809*^9}},ExpressionUUID->"4f941761-ec72-444f-8686-\
19358ee89ea8"],

Cell[TextData[{
 "The structure factor of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "111", ")"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "c4730921-ef39-4b8f-9aee-d02fe18a7525"],
 " reflection of silicon, with the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Mo", "\[VeryThinSpace]", 
    SubscriptBox["K\[Alpha]", "1"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"37c49e3b-9b1a-4f49-a749-9662d07af8a5"],
 " wavelength:"
}], "Text",
 CellChangeTimes->{{3.780327916285487*^9, 
  3.780327969339531*^9}},ExpressionUUID->"b6d287ce-6114-4cb3-bad3-\
822f872f48c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StructureFactor", "[", 
  RowBox[{"\"\<Silicon\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "0.709317"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7803278827893057`*^9, 3.7803279063742027`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"2808d5a9-cb8c-415d-a351-dbc044c9879d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"59.37443090894123`", ",", 
   TemplateBox[{
    RowBox[{"-", "179.62029050603581`"}],
     RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],"degrees",
     "\"AngularDegrees\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{3.780679472427853*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"4cf55945-9438-42f5-8ca0-e04e92bfe2ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StructureFactor", "[", 
  RowBox[{"\"\<Ferrocene\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "2"}], "}"}], ",", "1.541"}], "]"}]], "Input",\

 CellChangeTimes->{{3.780327978253422*^9, 3.780327992242197*^9}, {
  3.7803280282707233`*^9, 3.780328119858597*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"7cf1ccf3-dda2-429b-8f31-938119e4daa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20.33009807624568`", ",", 
   TemplateBox[{
    "10.939020398348728`",RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}],
     "degrees","\"AngularDegrees\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{3.780679473509968*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"5fbb36af-9d8a-476d-97a0-7b3a71de053c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Attenuation coefficients", "Subsection",
 CellChangeTimes->{{3.7803278634147387`*^9, 
  3.78032786742282*^9}},ExpressionUUID->"7a4f05cd-d09c-4e2a-b2aa-\
7521b7f4bfbc"],

Cell[TextData[{
 "Total scattering cross sections have been acquired with ",
 StyleBox[ButtonBox["xraylib",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/tschoonj/xraylib"], None},
  ButtonNote->"https://github.com/tschoonj/xraylib"],
  FontSlant->"Italic"],
 ", and are found in the ",
 StyleBox["Core",
  FontSlant->"Italic"],
 " directory of ",
 StyleBox["MaXrd",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.7803281548090277`*^9, 
  3.78032826229058*^9}},ExpressionUUID->"191e7ee7-70e9-4b78-a005-\
67bb3b2ba3c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AttenuationCoefficient", "[", 
  RowBox[{"\"\<Silicon\>\"", ",", "1.1573"}], "]"}]], "Input",
 CellChangeTimes->{{3.78032813959021*^9, 3.780328148617152*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"55af662e-a6c2-4994-967e-552b00336b26"],

Cell[BoxData[
 TemplateBox[{
  "64.50908064808958`",RowBox[{"\"/\"", "\[InvisibleSpace]", "\"cm\""}],
   "reciprocal centimeters",FractionBox["1", "\"Centimeters\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.78067947500725*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"b21004f1-c879-4a89-9723-5eb3ebaa996c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AttenuationCoefficient", "[", 
  RowBox[{"\"\<GalliumArsenide\>\"", ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"1.18667*^-2", ",", "\"\<Megaelectronvolts\>\""}], "]"}], ",", 
   RowBox[{"\"\<Coefficient\>\"", "\[Rule]", "\"\<MassAbsorption\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7803283549223433`*^9, 3.7803283824727592`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"a6dad6e0-46ed-47fc-802d-e4819cc2d459"],

Cell[BoxData[
 TemplateBox[{"88.9799668107443`",RowBox[{
     SuperscriptBox["\"cm\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", "\"g\""}],"centimeters squared per gram",FractionBox[
    SuperscriptBox["\"Centimeters\"", "2"], "\"Grams\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.780679478376816*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"f2942d8d-7c33-4d40-b44a-fe31abb022da"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Customising structures", "Section",
 CellChangeTimes->{{3.780322105036878*^9, 3.7803221477074966`*^9}, {
  3.780644208156331*^9, 3.780644213403329*^9}},
 CellTags->
  "construct_structures",ExpressionUUID->"86329515-8aa7-4225-824c-\
a72bca529798"],

Cell[TextData[{
 "There is a module of the package dedicated to \[LeftGuillemet]crystal tools\
\[RightGuillemet]; a set of functions which enables the user to \
\[OpenCurlyDoubleQuote]customise\[CloseCurlyDoubleQuote] structures in a \
simple manner. Visualisation is possible for both direct space and reciprocal \
space (the latter using ",
 StyleBox[ButtonBox["DISCUS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/tproffen/DiffuseCode"], None},
  ButtonNote->"https://github.com/tproffen/DiffuseCode"],
  FontSlant->"Italic"],
 ")."
}], "Text",
 CellChangeTimes->{{3.780637172128251*^9, 3.7806371781664257`*^9}, {
  3.7806373880015097`*^9, 3.780637411868196*^9}, {3.780637803840251*^9, 
  3.780637804295598*^9}, {3.7806378858942337`*^9, 3.780637890741541*^9}, {
  3.78063800094705*^9, 3.780638020746455*^9}, {3.780638133360515*^9, 
  3.7806381392399607`*^9}, {3.780638276541388*^9, 3.780638284868622*^9}, {
  3.780638372508045*^9, 3.78063842364179*^9}, {3.780638595990222*^9, 
  3.780638655036475*^9}, {3.780679501437461*^9, 
  3.780679501437846*^9}},ExpressionUUID->"4d2461ed-8dbb-4175-a9c9-\
6fb70765f47e"],

Cell["\<\
In the coming sections, we will construct an inclusion compound with \
ferrocene being the guest phase of a thiourea host.\
\>", "Text",
 CellChangeTimes->{{3.780643771165159*^9, 3.780643810116564*^9}, {
  3.7806440132005444`*^9, 
  3.780644077934565*^9}},ExpressionUUID->"123e7306-4967-4d97-80e1-\
02d3dfa3d2d8"],

Cell[CellGroupData[{

Cell["Step 1: Making the foundation", "Subsection",
 CellChangeTimes->{{3.780638994404948*^9, 
  3.7806389982605247`*^9}},ExpressionUUID->"bb5dd0cc-ace2-4496-8e8e-\
4e2fb6e9ed3b"],

Cell[TextData[{
 "At the start of this chapter we imported ",
 StyleBox["ferrocene",
  FontSlant->"Italic"],
 " into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". We can plot the crystal structure using ",
 ButtonBox["CrystalPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/CrystalPlot"],
 ", but we will only see the asymmetric unit:"
}], "Text",
 CellChangeTimes->{{3.780639146153474*^9, 3.780639150865464*^9}, {
  3.780639303174801*^9, 3.780639306125948*^9}, {3.780639544121011*^9, 
  3.780639621057476*^9}},ExpressionUUID->"32296e41-1731-4fb7-a83a-\
068f82add962"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CrystalPlot"}]], "Input",
 CellChangeTimes->{{3.7806551715562277`*^9, 3.7806551726431932`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1a3ec29e-957d-4548-a358-4af2f8b42a15"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/CrystalPlot",
              ButtonNote->"paclet:MaXrd/ref/CrystalPlot"],
             "\"paclet:MaXrd/ref/CrystalPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CrystalPlot\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
plots the atom structure of \\\", Cell[BoxData[StyleBox[\\\"crystal\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/CrystalPlot", 
                    "paclet:MaXrd/ref/CrystalPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"CrystalPlot", "[", 
                    RowBox[{"MaXrd`Private`crystalInput_String", ",", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"CrystalPlot", ",", "Graphics3D"}], "}"}], 
                    "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`crystalDataOriginal", "=", 
                    "$CrystalData"}], ",", 
                    RowBox[{
                    "MaXrd`Private`crystal", "=", 
                    "MaXrd`Private`crystalInput"}], ",", 
                    RowBox[{"MaXrd`Private`structureSize", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"StructureSize\"\>", "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`rgbStyle", "=", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"OptionValue", "[", "\<\"RGBStyle\"\>", "]"}], 
                    "]"}]}], ",", "MaXrd`Private`latticeStyleList", ",", 
                    "MaXrd`Private`CreateBoxEdges", ",", 
                    "MaXrd`Private`toCartesianMatrix", ",", 
                    "MaXrd`Private`MakeSpheres", ",", 
                    RowBox[{"MaXrd`Private`latticePlotFunction", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"AxisFunction\"\>", "]"}]}], ",", 
                    "MaXrd`Private`crystalData", ",", 
                    "MaXrd`Private`atomData", ",", 
                    "MaXrd`Private`coordinates", ",", 
                    "MaXrd`Private`atomDataTemp", ",", 
                    "MaXrd`Private`spheres", ",", 
                    "MaXrd`Private`basisArrowCoordinates", ",", 
                    "MaXrd`Private`translations", ",", 
                    "MaXrd`Private`coordinatePairs", ",", 
                    "MaXrd`Private`unitCellPlotData", ",", 
                    RowBox[{"MaXrd`Private`unitCellDisplay", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"UnitCellDisplay\"\>", "]"}]}], 
                    ",", "MaXrd`Private`plotOptions"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`structureSize", "=!=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"ExpandCrystal", "[", 
                    RowBox[{
                    "MaXrd`Private`crystalInput", ",", 
                    "MaXrd`Private`structureSize", ",", 
                    RowBox[{"\<\"StoreTemporarily\"\>", "\[Rule]", "True"}]}],
                     "]"}], ";", 
                    RowBox[{"MaXrd`Private`crystal", "=", 
                    RowBox[{
                    RowBox[{
                    "Keys", "[", "MaXrd`Private`$TempCrystalData", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{
                    "$CrystalData", "=", "MaXrd`Private`$TempCrystalData"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "ValueQ", "[", "MaXrd`Private`atomRadiusTable", "]"}]}], 
                    ",", 
                    RowBox[{"MaXrd`Private`atomRadiusTable", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\<\"H\"\>", "\[Rule]", "0.53`"}], ",", 
                    RowBox[{"\<\"He\"\>", "\[Rule]", "0.31`"}], ",", 
                    RowBox[{"\<\"Li\"\>", "\[Rule]", "1.67`"}], ",", 
                    RowBox[{"\<\"Be\"\>", "\[Rule]", "1.12`"}], ",", 
                    RowBox[{"\<\"B\"\>", "\[Rule]", "0.87`"}], ",", 
                    RowBox[{"\<\"C\"\>", "\[Rule]", "0.67`"}], ",", 
                    RowBox[{"\<\"N\"\>", "\[Rule]", "0.56`"}], ",", 
                    RowBox[{"\<\"O\"\>", "\[Rule]", "0.48`"}], ",", 
                    RowBox[{"\<\"F\"\>", "\[Rule]", "0.42`"}], ",", 
                    RowBox[{"\<\"Ne\"\>", "\[Rule]", "0.38`"}], ",", 
                    RowBox[{"\<\"Na\"\>", "\[Rule]", "1.9`"}], ",", 
                    RowBox[{"\<\"Mg\"\>", "\[Rule]", "1.45`"}], ",", 
                    RowBox[{"\<\"Al\"\>", "\[Rule]", "1.18`"}], ",", 
                    RowBox[{"\<\"Si\"\>", "\[Rule]", "1.11`"}], ",", 
                    RowBox[{"\<\"P\"\>", "\[Rule]", "0.98`"}], ",", 
                    RowBox[{"\<\"S\"\>", "\[Rule]", "0.87`"}], ",", 
                    RowBox[{"\<\"Cl\"\>", "\[Rule]", "0.79`"}], ",", 
                    RowBox[{"\<\"Ar\"\>", "\[Rule]", "0.71`"}], ",", 
                    RowBox[{"\<\"K\"\>", "\[Rule]", "2.43`"}], ",", 
                    RowBox[{"\<\"Ca\"\>", "\[Rule]", "1.94`"}], ",", 
                    RowBox[{"\<\"Sc\"\>", "\[Rule]", "1.84`"}], ",", 
                    RowBox[{"\<\"Ti\"\>", "\[Rule]", "1.76`"}], ",", 
                    RowBox[{"\<\"V\"\>", "\[Rule]", "1.71`"}], ",", 
                    RowBox[{"\<\"Cr\"\>", "\[Rule]", "1.66`"}], ",", 
                    RowBox[{"\<\"Mn\"\>", "\[Rule]", "1.61`"}], ",", 
                    RowBox[{"\<\"Fe\"\>", "\[Rule]", "1.56`"}], ",", 
                    RowBox[{"\<\"Co\"\>", "\[Rule]", "1.52`"}], ",", 
                    RowBox[{"\<\"Ni\"\>", "\[Rule]", "1.49`"}], ",", 
                    RowBox[{"\<\"Cu\"\>", "\[Rule]", "1.45`"}], ",", 
                    RowBox[{"\<\"Zn\"\>", "\[Rule]", "1.42`"}], ",", 
                    RowBox[{"\<\"Ga\"\>", "\[Rule]", "1.36`"}], ",", 
                    RowBox[{"\<\"Ge\"\>", "\[Rule]", "1.25`"}], ",", 
                    RowBox[{"\<\"As\"\>", "\[Rule]", "1.14`"}], ",", 
                    RowBox[{"\<\"Se\"\>", "\[Rule]", "1.03`"}], ",", 
                    RowBox[{"\<\"Br\"\>", "\[Rule]", "0.94`"}], ",", 
                    RowBox[{"\<\"Kr\"\>", "\[Rule]", "0.87`"}], ",", 
                    RowBox[{"\<\"Rb\"\>", "\[Rule]", "2.65`"}], ",", 
                    RowBox[{"\<\"Sr\"\>", "\[Rule]", "2.19`"}], ",", 
                    RowBox[{"\<\"Y\"\>", "\[Rule]", "2.12`"}], ",", 
                    RowBox[{"\<\"Zr\"\>", "\[Rule]", "2.06`"}], ",", 
                    RowBox[{"\<\"Nb\"\>", "\[Rule]", "1.98`"}], ",", 
                    RowBox[{"\<\"Mo\"\>", "\[Rule]", "1.9`"}], ",", 
                    RowBox[{"\<\"Tc\"\>", "\[Rule]", "1.83`"}], ",", 
                    RowBox[{"\<\"Ru\"\>", "\[Rule]", "1.78`"}], ",", 
                    RowBox[{"\<\"Rh\"\>", "\[Rule]", "1.73`"}], ",", 
                    RowBox[{"\<\"Pd\"\>", "\[Rule]", "1.69`"}], ",", 
                    RowBox[{"\<\"Ag\"\>", "\[Rule]", "1.65`"}], ",", 
                    RowBox[{"\<\"Cd\"\>", "\[Rule]", "1.61`"}], ",", 
                    RowBox[{"\<\"In\"\>", "\[Rule]", "1.56`"}], ",", 
                    RowBox[{"\<\"Sn\"\>", "\[Rule]", "1.45`"}], ",", 
                    RowBox[{"\<\"Sb\"\>", "\[Rule]", "1.33`"}], ",", 
                    RowBox[{"\<\"Te\"\>", "\[Rule]", "1.23`"}], ",", 
                    RowBox[{"\<\"I\"\>", "\[Rule]", "1.15`"}], ",", 
                    RowBox[{"\<\"Xe\"\>", "\[Rule]", "1.08`"}], ",", 
                    RowBox[{"\<\"Cs\"\>", "\[Rule]", "2.98`"}], ",", 
                    RowBox[{"\<\"Ba\"\>", "\[Rule]", "2.53`"}], ",", 
                    RowBox[{"\<\"La\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Ce\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Pr\"\>", "\[Rule]", "2.47`"}], ",", 
                    RowBox[{"\<\"Nd\"\>", "\[Rule]", "2.06`"}], ",", 
                    RowBox[{"\<\"Pm\"\>", "\[Rule]", "2.05`"}], ",", 
                    RowBox[{"\<\"Sm\"\>", "\[Rule]", "2.38`"}], ",", 
                    RowBox[{"\<\"Eu\"\>", "\[Rule]", "2.31`"}], ",", 
                    RowBox[{"\<\"Gd\"\>", "\[Rule]", "2.33`"}], ",", 
                    RowBox[{"\<\"Tb\"\>", "\[Rule]", "2.25`"}], ",", 
                    RowBox[{"\<\"Dy\"\>", "\[Rule]", "2.28`"}], ",", 
                    RowBox[{"\<\"Ho\"\>", "\[Rule]", "2.26`"}], ",", 
                    RowBox[{"\<\"Er\"\>", "\[Rule]", "2.26`"}], ",", 
                    RowBox[{"\<\"Tm\"\>", "\[Rule]", "2.22`"}], ",", 
                    RowBox[{"\<\"Yb\"\>", "\[Rule]", "2.22`"}], ",", 
                    RowBox[{"\<\"Lu\"\>", "\[Rule]", "2.17`"}], ",", 
                    RowBox[{"\<\"Hf\"\>", "\[Rule]", "2.08`"}], ",", 
                    RowBox[{"\<\"Ta\"\>", "\[Rule]", "2.`"}], ",", 
                    RowBox[{"\<\"W\"\>", "\[Rule]", "1.93`"}], ",", 
                    RowBox[{"\<\"Re\"\>", "\[Rule]", "1.88`"}], ",", 
                    RowBox[{"\<\"Os\"\>", "\[Rule]", "1.85`"}], ",", 
                    RowBox[{"\<\"Ir\"\>", "\[Rule]", "1.8`"}], ",", 
                    RowBox[{"\<\"Pt\"\>", "\[Rule]", "1.77`"}], ",", 
                    RowBox[{"\<\"Au\"\>", "\[Rule]", "1.74`"}], ",", 
                    RowBox[{"\<\"Hg\"\>", "\[Rule]", "1.71`"}], ",", 
                    RowBox[{"\<\"Tl\"\>", "\[Rule]", "1.56`"}], ",", 
                    RowBox[{"\<\"Pb\"\>", "\[Rule]", "1.54`"}], ",", 
                    RowBox[{"\<\"Bi\"\>", "\[Rule]", "1.43`"}], ",", 
                    RowBox[{"\<\"Po\"\>", "\[Rule]", "1.35`"}], ",", 
                    RowBox[{"\<\"At\"\>", "\[Rule]", "1.27`"}], ",", 
                    RowBox[{"\<\"Rn\"\>", "\[Rule]", "1.2`"}], ",", 
                    RowBox[{"\<\"Fr\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Ra\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Ac\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Th\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Pa\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"U\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Np\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Pu\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Am\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Cm\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Bk\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Cf\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Es\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Fm\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Md\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"No\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Lr\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Rf\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Db\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Sg\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Bh\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Hs\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Mt\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Ds\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Rg\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Cn\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Nh\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Fl\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Mc\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Lv\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Ts\"\>", "\[Rule]", "1.5`"}], ",", 
                    RowBox[{"\<\"Og\"\>", "\[Rule]", "1.5`"}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"MaXrd`Private`latticeStyleList", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"Black", ",", "12"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`rgbStyle", ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`latticeStyleList", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], "=", 
                    
                    RowBox[{"{", 
                    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}]}], 
                    "]"}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`CreateBoxEdges", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`a_", ",", "MaXrd`Private`b_", ",", 
                    "MaXrd`Private`c_"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`t1_", ",", "MaXrd`Private`t2_", ",", 
                    "MaXrd`Private`t3_"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`a", ",", "MaXrd`Private`b", ",", 
                    "MaXrd`Private`c", ",", 
                    RowBox[{"MaXrd`Private`t2", "[", "MaXrd`Private`a", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`t1", "[", "MaXrd`Private`b", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`t1", "[", "MaXrd`Private`c", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`t2", "[", "MaXrd`Private`c", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`t1", "[", 
                    RowBox[{"MaXrd`Private`t2", "[", "MaXrd`Private`c", "]"}],
                     "]"}], ",", 
                    RowBox[{"MaXrd`Private`t3", "[", "MaXrd`Private`a", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`t3", "[", "MaXrd`Private`b", "]"}],
                     ",", 
                    RowBox[{"MaXrd`Private`t3", "[", 
                    RowBox[{"MaXrd`Private`t2", "[", "MaXrd`Private`a", "]"}],
                     "]"}], ",", 
                    RowBox[{"MaXrd`Private`t3", "[", 
                    RowBox[{"MaXrd`Private`t1", "[", "MaXrd`Private`b", "]"}],
                     "]"}]}], "}"}]}], ";", 
                    RowBox[{"MaXrd`Private`toCartesianMatrix", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"GetCrystalMetric", "[", 
                    RowBox[{"MaXrd`Private`crystal", ",", 
                    RowBox[{"\<\"ToCartesian\"\>", "\[Rule]", "True"}]}], 
                    "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`MakeSpheres", "[", 
                    RowBox[{
                    "MaXrd`Private`element_", ",", 
                    "MaXrd`Private`coordinateList_"}], "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "\<\"Atoms\"\>", "]"}], "[", 
                    "MaXrd`Private`element", "]"}], ",", 
                    RowBox[{"Sphere", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", "MaXrd`Private`toCartesianMatrix", 
                    "]"}], ".", "#1"}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`coordinateList"}], ",", 
                    RowBox[{
                    "MaXrd`Private`atomRadiusTable", "[", 
                    "MaXrd`Private`element", "]"}]}], "]"}]}], "}"}]}], ";", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`crystal", ",", "\<\"CrystalQ\"\>"}], "]"}],
                     ";", 
                    RowBox[{"MaXrd`Private`crystalData", "=", 
                    RowBox[{
                    "$CrystalData", "[", "MaXrd`Private`crystal", "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`atomData", "=", 
                    RowBox[{
                    "MaXrd`Private`crystalData", "[", "\<\"AtomData\"\>", 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`atomData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "\<\"Element\"\>"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"StringDelete", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`atomData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "\<\"Element\"\>"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"+\"\>", ",", "\<\"-\"\>", ",", 
                    "DigitCharacter"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinates", "=", 
                    RowBox[{
                    "MaXrd`Private`atomData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomDataTemp", "=", 
                    RowBox[{"GatherBy", "[", 
                    RowBox[{
                    RowBox[{"Lookup", "[", 
                    RowBox[{"MaXrd`Private`atomData", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Element\"\>", 
                    ",", "\<\"FractionalCoordinates\"\>"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomDataTemp", "=", 
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`atomDataTemp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{
                    "MaXrd`Private`atomDataTemp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`spheres", "=", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    "MaXrd`Private`MakeSpheres", ",", 
                    "MaXrd`Private`atomDataTemp"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`basisArrowCoordinates", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#1"}], 
                    "}"}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`toCartesianMatrix"}]}], ";", 
                    RowBox[{"MaXrd`Private`translations", "=", 
                    RowBox[{
                    "TranslationTransform", "/@", 
                    "MaXrd`Private`toCartesianMatrix"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`unitCellDisplay", "===", "\<\"Box\"\>"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`coordinatePairs", "=", 
                    RowBox[{"MaXrd`Private`CreateBoxEdges", "[", 
                    RowBox[{
                    "MaXrd`Private`basisArrowCoordinates", ",", 
                    "MaXrd`Private`translations"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`unitCellPlotData", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`latticeStyleList", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`i", ">", "3"}], ",", "#1", ",", 
                    RowBox[{"Arrow", "[", "#1", "]"}]}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{"MaXrd`Private`latticePlotFunction", "[", 
                    RowBox[{
                    "MaXrd`Private`coordinatePairs", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{
                    "Length", "[", "MaXrd`Private`coordinatePairs", "]"}]}], 
                    "}"}]}], "]"}]}]}], ",", 
                    RowBox[{"MaXrd`Private`unitCellDisplay", 
                    "===", "\<\"Axes\"\>"}], ",", 
                    RowBox[{"MaXrd`Private`unitCellPlotData", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`rgbStyle", ",", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"Black", ",", "3"}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Arrow", "[", 
                    RowBox[{"MaXrd`Private`latticePlotFunction", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "#1"}], 
                    "}"}], "]"}], "]"}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`toCartesianMatrix"}]}], "}"}], "]"}]}], 
                    ",", 
                    RowBox[{
                    "MaXrd`Private`unitCellDisplay", "===", "\<\"None\"\>"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`unitCellPlotData", "=", 
                    RowBox[{"{", "}"}]}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"CrystalPlot", "::", "InvalidDisplay"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`structureSize", "=!=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{
                    "$CrystalData", "=", 
                    "MaXrd`Private`crystalDataOriginal"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`plotOptions", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"Options", "[", "CrystalPlot", "]"}], "]"}]}], 
                    ",", 
                    RowBox[{"Options", "[", "Graphics3D", "]"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\<\"Trigonal\"\>", ",", "\<\"Hexagonal\"\>"}], 
                    "}"}], ",", 
                    RowBox[{"GetSymmetryData", "[", 
                    RowBox[{
                    "MaXrd`Private`crystal", ",", "\<\"CrystalSystem\"\>"}], 
                    "]"}]}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\<\"ViewPoint\"\>", "]"}], "===", 
                    RowBox[{"OptionValue", "[", 
                    RowBox[{"Graphics3D", ",", "ViewPoint"}], "]"}]}]}], ",", 
                    
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"MaXrd`Private`plotOptions", ",", 
                    RowBox[{"ViewPoint", "\[Rule]", "Above"}]}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    "MaXrd`Private`unitCellPlotData", ",", 
                    "MaXrd`Private`spheres"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{
                    "Normal", "[", "MaXrd`Private`plotOptions", "]"}]}]}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "CrystalPlot", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"CrystalPlot", ",", "Graphics3D"}], "}"}], 
                    "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`CrystalPlot] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    OptionsPattern[{MaXrd`CrystalPlot, Graphics3D}]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AutomaticImageSize", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesEdge", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"\<\"AxisFunction\"\>", "\[Rule]", "Line"}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Boxed", "\[Rule]", "False"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BoxStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClipPlanes", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerLinking", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ControllerPath", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FaceGrids", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FaceGridsStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Lighting", "\[Rule]", "\<\"Neutral\"\>"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"\<\"RGBStyle\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"RotationAction", "\[Rule]", "\<\"Fit\"\>"}]},
                    {
                    RowBox[{"SphericalRegion", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"StructureSize\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}]},
                    {
                    
                    RowBox[{"\<\"UnitCellDisplay\"\>", 
                    "\[Rule]", "\<\"Box\"\>"}]},
                    {
                    RowBox[{"ViewAngle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewCenter", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1.3`", ",", 
                    RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}]},
                    {
                    RowBox[{"ViewProjection", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ViewVector", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ViewVertical", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","57","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","57","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`CrystalPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/CrystalPlot",
              ButtonNote->"paclet:MaXrd/ref/CrystalPlot"],
             "\"paclet:MaXrd/ref/CrystalPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CrystalPlot\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
plots the atom structure of \\\", Cell[BoxData[StyleBox[\\\"crystal\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"CrystalPlot\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\
\"}]\)\!\(\*RowBox[{\" plots the atom structure of \", Cell[BoxData[StyleBox[\
\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/CrystalPlot"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`CrystalPlot, {MaXrd`CrystalPlot[
         Pattern[MaXrd`Private`crystalInput, 
          Blank[String]], 
         OptionsPattern[{MaXrd`CrystalPlot, Graphics3D}]] :> 
       Block[{MaXrd`Private`crystalDataOriginal = MaXrd`$CrystalData, 
          MaXrd`Private`crystal = MaXrd`Private`crystalInput, 
          MaXrd`Private`structureSize = OptionValue["StructureSize"], 
          MaXrd`Private`rgbStyle = TrueQ[
            OptionValue["RGBStyle"]], MaXrd`Private`latticeStyleList, 
          MaXrd`Private`CreateBoxEdges, MaXrd`Private`toCartesianMatrix, 
          MaXrd`Private`MakeSpheres, MaXrd`Private`latticePlotFunction = 
          OptionValue["AxisFunction"], MaXrd`Private`crystalData, 
          MaXrd`Private`atomData, MaXrd`Private`coordinates, 
          MaXrd`Private`atomDataTemp, MaXrd`Private`spheres, 
          MaXrd`Private`basisArrowCoordinates, MaXrd`Private`translations, 
          MaXrd`Private`coordinatePairs, MaXrd`Private`unitCellPlotData, 
          MaXrd`Private`unitCellDisplay = OptionValue["UnitCellDisplay"], 
          MaXrd`Private`plotOptions}, 
         If[MaXrd`Private`structureSize =!= {0, 0, 0}, 
           MaXrd`ExpandCrystal[
            MaXrd`Private`crystalInput, MaXrd`Private`structureSize, 
             "StoreTemporarily" -> True]; MaXrd`Private`crystal = Part[
              Keys[MaXrd`Private`$TempCrystalData], 1]; 
           MaXrd`$CrystalData = MaXrd`Private`$TempCrystalData; Null]; If[
           Not[
            ValueQ[MaXrd`Private`atomRadiusTable]], 
           MaXrd`Private`atomRadiusTable = 
           Association[
            "H" -> 0.53, "He" -> 0.31, "Li" -> 1.67, "Be" -> 1.12, "B" -> 
             0.87, "C" -> 0.67, "N" -> 0.56, "O" -> 0.48, "F" -> 0.42, "Ne" -> 
             0.38, "Na" -> 1.9, "Mg" -> 1.45, "Al" -> 1.18, "Si" -> 1.11, "P" -> 
             0.98, "S" -> 0.87, "Cl" -> 0.79, "Ar" -> 0.71, "K" -> 2.43, "Ca" -> 
             1.94, "Sc" -> 1.84, "Ti" -> 1.76, "V" -> 1.71, "Cr" -> 1.66, 
             "Mn" -> 1.61, "Fe" -> 1.56, "Co" -> 1.52, "Ni" -> 1.49, "Cu" -> 
             1.45, "Zn" -> 1.42, "Ga" -> 1.36, "Ge" -> 1.25, "As" -> 1.14, 
             "Se" -> 1.03, "Br" -> 0.94, "Kr" -> 0.87, "Rb" -> 2.65, "Sr" -> 
             2.19, "Y" -> 2.12, "Zr" -> 2.06, "Nb" -> 1.98, "Mo" -> 1.9, "Tc" -> 
             1.83, "Ru" -> 1.78, "Rh" -> 1.73, "Pd" -> 1.69, "Ag" -> 1.65, 
             "Cd" -> 1.61, "In" -> 1.56, "Sn" -> 1.45, "Sb" -> 1.33, "Te" -> 
             1.23, "I" -> 1.15, "Xe" -> 1.08, "Cs" -> 2.98, "Ba" -> 2.53, 
             "La" -> 1.5, "Ce" -> 1.5, "Pr" -> 2.47, "Nd" -> 2.06, "Pm" -> 
             2.05, "Sm" -> 2.38, "Eu" -> 2.31, "Gd" -> 2.33, "Tb" -> 2.25, 
             "Dy" -> 2.28, "Ho" -> 2.26, "Er" -> 2.26, "Tm" -> 2.22, "Yb" -> 
             2.22, "Lu" -> 2.17, "Hf" -> 2.08, "Ta" -> 2., "W" -> 1.93, "Re" -> 
             1.88, "Os" -> 1.85, "Ir" -> 1.8, "Pt" -> 1.77, "Au" -> 1.74, 
             "Hg" -> 1.71, "Tl" -> 1.56, "Pb" -> 1.54, "Bi" -> 1.43, "Po" -> 
             1.35, "At" -> 1.27, "Rn" -> 1.2, "Fr" -> 1.5, "Ra" -> 1.5, "Ac" -> 
             1.5, "Th" -> 1.5, "Pa" -> 1.5, "U" -> 1.5, "Np" -> 1.5, "Pu" -> 
             1.5, "Am" -> 1.5, "Cm" -> 1.5, "Bk" -> 1.5, "Cf" -> 1.5, "Es" -> 
             1.5, "Fm" -> 1.5, "Md" -> 1.5, "No" -> 1.5, "Lr" -> 1.5, "Rf" -> 
             1.5, "Db" -> 1.5, "Sg" -> 1.5, "Bh" -> 1.5, "Hs" -> 1.5, "Mt" -> 
             1.5, "Ds" -> 1.5, "Rg" -> 1.5, "Cn" -> 1.5, "Nh" -> 1.5, "Fl" -> 
             1.5, "Mc" -> 1.5, "Lv" -> 1.5, "Ts" -> 1.5, "Og" -> 1.5]]; 
         MaXrd`Private`latticeStyleList = ConstantArray[Black, 12]; 
         If[MaXrd`Private`rgbStyle, Part[MaXrd`Private`latticeStyleList, 
             Span[1, 3]] = {Red, Green, Blue}]; 
         MaXrd`Private`CreateBoxEdges[{
             Pattern[MaXrd`Private`a, 
              Blank[]], 
             Pattern[MaXrd`Private`b, 
              Blank[]], 
             Pattern[MaXrd`Private`c, 
              Blank[]]}, {
             Pattern[MaXrd`Private`t1, 
              Blank[]], 
             Pattern[MaXrd`Private`t2, 
              Blank[]], 
             Pattern[MaXrd`Private`t3, 
              Blank[]]}] := {
           MaXrd`Private`a, MaXrd`Private`b, MaXrd`Private`c, 
            MaXrd`Private`t2[MaXrd`Private`a], 
            MaXrd`Private`t1[MaXrd`Private`b], 
            MaXrd`Private`t1[MaXrd`Private`c], 
            MaXrd`Private`t2[MaXrd`Private`c], 
            MaXrd`Private`t1[
             MaXrd`Private`t2[MaXrd`Private`c]], 
            MaXrd`Private`t3[MaXrd`Private`a], 
            MaXrd`Private`t3[MaXrd`Private`b], 
            MaXrd`Private`t3[
             MaXrd`Private`t2[MaXrd`Private`a]], 
            MaXrd`Private`t3[
             MaXrd`Private`t1[MaXrd`Private`b]]}; 
         MaXrd`Private`toCartesianMatrix = Transpose[
            MaXrd`GetCrystalMetric[
            MaXrd`Private`crystal, "ToCartesian" -> True]]; 
         MaXrd`Private`MakeSpheres[
            Pattern[MaXrd`Private`element, 
             Blank[]], 
            Pattern[MaXrd`Private`coordinateList, 
             Blank[]]] := {
            ColorData["Atoms"][MaXrd`Private`element], 
            Sphere[
             Map[Dot[
               Transpose[MaXrd`Private`toCartesianMatrix], #]& , 
              MaXrd`Private`coordinateList], 
             MaXrd`Private`atomRadiusTable[MaXrd`Private`element]]}; 
         MaXrd`InputCheck[MaXrd`Private`crystal, "CrystalQ"]; 
         MaXrd`Private`crystalData = 
          MaXrd`$CrystalData[MaXrd`Private`crystal]; 
         MaXrd`Private`atomData = MaXrd`Private`crystalData["AtomData"]; 
         Part[MaXrd`Private`atomData, All, "Element"] = StringDelete[
            Part[MaXrd`Private`atomData, All, "Element"], {
            "+", "-", DigitCharacter}]; 
         MaXrd`Private`coordinates = 
          Part[MaXrd`Private`atomData, All, "FractionalCoordinates"]; 
         MaXrd`Private`atomDataTemp = GatherBy[
            Lookup[
            MaXrd`Private`atomData, {"Element", "FractionalCoordinates"}], 
            Part[#, 1]& ]; 
         MaXrd`Private`atomDataTemp = 
          AssociationThread[
           Part[MaXrd`Private`atomDataTemp, All, 1, 1] -> 
            Part[MaXrd`Private`atomDataTemp, All, All, 2]]; 
         MaXrd`Private`spheres = 
          KeyValueMap[MaXrd`Private`MakeSpheres, MaXrd`Private`atomDataTemp]; 
         MaXrd`Private`basisArrowCoordinates = 
          Map[{{0, 0, 0}, #}& , MaXrd`Private`toCartesianMatrix]; 
         MaXrd`Private`translations = 
          Map[TranslationTransform, MaXrd`Private`toCartesianMatrix]; 
         Which[MaXrd`Private`unitCellDisplay === "Box", 
           MaXrd`Private`coordinatePairs = 
            MaXrd`Private`CreateBoxEdges[
             MaXrd`Private`basisArrowCoordinates, MaXrd`Private`translations]; 
           MaXrd`Private`unitCellPlotData = Table[{
               Part[MaXrd`Private`latticeStyleList, MaXrd`Private`i], 
               (If[MaXrd`Private`i > 3, #, 
                Arrow[#]]& )[
                MaXrd`Private`latticePlotFunction[
                 Part[MaXrd`Private`coordinatePairs, MaXrd`Private`i]]]}, {
              MaXrd`Private`i, 
               Length[MaXrd`Private`coordinatePairs]}], 
           MaXrd`Private`unitCellDisplay === "Axes", 
           MaXrd`Private`unitCellPlotData = Transpose[{
              If[MaXrd`Private`rgbStyle, {Red, Green, Blue}, 
               ConstantArray[Black, 3]], 
              Map[Arrow[
                MaXrd`Private`latticePlotFunction[{{0, 0, 0}, #}]]& , 
               MaXrd`Private`toCartesianMatrix]}], 
           MaXrd`Private`unitCellDisplay === "None", 
           MaXrd`Private`unitCellPlotData = {}, True, Message[
             MessageName[MaXrd`CrystalPlot, "InvalidDisplay"]]; Abort[]]; 
         If[MaXrd`Private`structureSize =!= {0, 0, 0}, MaXrd`$CrystalData = 
           MaXrd`Private`crystalDataOriginal]; 
         MaXrd`Private`plotOptions = Association[
            FilterRules[
             Map[# -> OptionValue[#]& , 
              Keys[
               Options[MaXrd`CrystalPlot]]], 
             Options[Graphics3D]]]; If[
           And[
            MemberQ[{"Trigonal", "Hexagonal"}, 
             MaXrd`GetSymmetryData[MaXrd`Private`crystal, "CrystalSystem"]], 
            OptionValue["ViewPoint"] === OptionValue[Graphics3D, ViewPoint]], 
           
           AssociateTo[MaXrd`Private`plotOptions, ViewPoint -> Above]]; 
         Graphics3D[
           Join[MaXrd`Private`unitCellPlotData, MaXrd`Private`spheres], 
           Apply[Sequence, 
            Normal[MaXrd`Private`plotOptions]]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`CrystalPlot, {
      SyntaxInformation[MaXrd`CrystalPlot] -> {"ArgumentsPattern" -> {
           Blank[], 
           OptionsPattern[{MaXrd`CrystalPlot, Graphics3D}]}}}], "NValues" -> 
    None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> 
      False, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, 
      AxesOrigin -> Automatic, AxesStyle -> {}, "AxisFunction" -> Line, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      Boxed -> False, BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> 
      None, ClipPlanesStyle -> Automatic, ColorOutput -> Automatic, 
      ContentSelectable -> Automatic, ControllerLinking -> Automatic, 
      ControllerMethod -> Automatic, ControllerPath -> Automatic, 
      CoordinatesToolOptions -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, FaceGrids -> None, 
      FaceGridsStyle -> {}, FormatType :> TraditionalForm, ImageMargins -> 0.,
       ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic,
       LabelStyle -> {}, Lighting -> "Neutral", Method -> Automatic, 
      PlotLabel -> None, PlotRange -> All, PlotRangePadding -> Automatic, 
      PlotRegion -> Automatic, PreserveImageOptions -> Automatic, 
      Prolog -> {}, "RGBStyle" -> True, RotationAction -> "Fit", 
      SphericalRegion -> True, "StructureSize" -> {0, 0, 0}, Ticks -> 
      Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, 
      "UnitCellDisplay" -> "Box", ViewAngle -> Automatic, ViewCenter -> 
      Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, 
      ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, 
      ViewVertical -> {0, 0, 1}}, "Attributes" -> {}, "FullName" -> 
    "MaXrd`CrystalPlot"], False]]], "Output",
 CellChangeTimes->{3.780679552149372*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"6c128ba4-536f-4168-bdbd-8c5bf41acb43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", "\"\<Ferrocene\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780329218503284*^9, 3.7803292204836483`*^9}, {
  3.7806391160673237`*^9, 3.780639118761866*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"ee94062e-9e4c-445f-9450-a5f8f1a57217"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {5.9285, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 7.612, 0.}}]]}, 
   {RGBColor[0, 0, 1], 
    Arrow3DBox[
     Line3DBox[{{0, 0, 0}, {-0.4977499146895153, 0., 9.027287855298876}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 7.612, 0.}, {5.9285, 7.612, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{5.9285, 0., 0.}, {5.9285, 7.612, 0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{5.9285, 0., 0.}, {5.430750085310485, 0., 
     9.027287855298876}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 7.612, 0.}, {-0.4977499146895153, 7.612, 
     9.027287855298876}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{5.9285, 7.612, 0.}, {5.430750085310485, 7.612, 
     9.027287855298876}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-0.4977499146895153, 0., 9.027287855298876}, {
     5.430750085310485, 0., 9.027287855298876}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-0.4977499146895153, 0., 
     9.027287855298876}, {-0.4977499146895153, 7.612, 9.027287855298876}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-0.4977499146895153, 7.612, 9.027287855298876}, {
     5.430750085310485, 7.612, 9.027287855298876}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{5.430750085310485, 0., 9.027287855298876}, {5.430750085310485,
      7.612, 9.027287855298876}}]}, 
   {RGBColor[0.878431, 0.4, 0.2], 
    SphereBox[{{2.7153750426552423`, 3.806, 4.513643927649438}}, 1.56]}, 
   {RGBColor[0.4, 0.4, 0.4], 
    SphereBox[{{4.208060921332124, 5.1335328, 4.90272003421282}, {
     4.102309981023395, 4.3038248, 5.928219934574772}, {2.9097168111676175`, 
     4.3327504, 6.472565392249294}, {3.0287179444297, 5.7896872, 
     4.701411515039656}, {2.101978203899164, 5.3070864, 5.70344046697783}}, 
     0.67]}, 
   {RGBColor[0.65, 0.7, 0.7], 
    SphereBox[{{4.97611036650355, 5.2530412, 4.391775541602903}, {
     4.795376358864234, 3.7618503999999997`, 6.228828620156224}, {
     2.6245022430862983`, 3.8341644, 7.204678437314033}, {2.8502517880314135`,
      6.4755284, 4.024364925892239}, {1.1859039805456564`, 5.6077604, 
     5.877667122585098}}, 0.53]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.7806795532486887`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"88e668b1-4922-48bc-883c-5c8d05320381"]
}, Open  ]],

Cell["\<\
Before we continue, a couple of prepared structures should be loaded:\
\>", "Text",
 CellChangeTimes->{{3.780640199274063*^9, 3.7806402446169167`*^9}, {
  3.780643091924371*^9, 3.780643104060039*^9}, {3.7806440980380983`*^9, 
  3.780644105797853*^9}, {3.7806443489450607`*^9, 
  3.780644358872357*^9}},ExpressionUUID->"e691f63f-3225-495d-83bc-\
a7a82824388d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$CrystalData", ",", 
    RowBox[{"\"\<FerroceneMolecule\>\"", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<ChemicalFormula\>\"", "\[Rule]", "\"\<C10 H10 Fe\>\""}], 
       ",", 
       RowBox[{"\"\<SpaceGroup\>\"", "\[Rule]", "\"\<P21/n\>\""}], ",", 
       RowBox[{
       "\"\<LatticeParameters\>\"", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<a\>\"", "\[Rule]", "5.9286"}], ",", 
          RowBox[{"\"\<b\>\"", "\[Rule]", "7.612"}], ",", 
          RowBox[{"\"\<c\>\"", "\[Rule]", "9.0411"}], ",", 
          RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", "90"}], ",", 
          RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", "93.156"}], ",", 
          RowBox[{"\"\<\[Gamma]\>\"", "\[Rule]", "90"}]}], 
         "\[RightAssociation]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<AtomData\>\"", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<Fe\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.000", ",", "0.000", ",", "0.000"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.208"}], ",", 
               RowBox[{"-", "0.020"}], ",", 
               RowBox[{"-", "0.190"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.364"}], ",", 
               RowBox[{"-", "0.043"}], ",", 
               RowBox[{"-", "0.196"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.116"}], ",", "0.138", ",", 
               RowBox[{"-", "0.181"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.200"}], ",", "0.240", ",", 
               RowBox[{"-", "0.180"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.042"}], ",", 
               RowBox[{"-", "0.143"}], ",", 
               RowBox[{"-", "0.188"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.064"}], ",", 
               RowBox[{"-", "0.263"}], ",", 
               RowBox[{"-", "0.194"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.109", ",", "0.135", ",", 
               RowBox[{"-", "0.174"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.208", ",", "0.231", ",", 
               RowBox[{"-", "0.168"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.175", ",", 
               RowBox[{"-", "0.051"}], ",", 
               RowBox[{"-", "0.177"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.322", ",", 
               RowBox[{"-", "0.098"}], ",", 
               RowBox[{"-", "0.173"}]}], "}"}]}]}], "|>"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.208", ",", "0.020", ",", "0.190"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.364", ",", "0.043", ",", "0.196"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.116", ",", 
               RowBox[{"-", "0.138"}], ",", "0.181"}], "}"}]}]}], "|>"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.200", ",", 
               RowBox[{"-", "0.240"}], ",", "0.180"}], "}"}]}]}], "|>"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.042", ",", "0.143", ",", "0.188"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.064", ",", "0.263", ",", "0.194"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.109"}], ",", 
               RowBox[{"-", "0.135"}], ",", "0.174"}], "}"}]}]}], "|>"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.208"}], ",", 
               RowBox[{"-", "0.231"}], ",", "0.168"}], "}"}]}]}], "|>"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.175"}], ",", "0.051", ",", "0.177"}], 
              "}"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.322"}], ",", "0.098", ",", "0.173"}], 
              "}"}]}]}], "|>"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[RightAssociation]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$CrystalData", ",", 
    RowBox[{"\"\<ThioureaHost\>\"", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
       "\"\<ChemicalFormula\>\"", "\[Rule]", "\"\<C13 H22 Fe N6 S3\>\""}], 
       ",", 
       RowBox[{"\"\<SpaceGroup\>\"", "\[Rule]", "\"\<R-3c\>\""}], ",", 
       RowBox[{
       "\"\<LatticeParameters\>\"", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<a\>\"", "\[Rule]", "16.3249"}], ",", 
          RowBox[{"\"\<b\>\"", "\[Rule]", "16.3249"}], ",", 
          RowBox[{"\"\<c\>\"", "\[Rule]", "12.4163"}], ",", 
          RowBox[{"\"\<\[Alpha]\>\"", "\[Rule]", "90"}], ",", 
          RowBox[{"\"\<\[Beta]\>\"", "\[Rule]", "90"}], ",", 
          RowBox[{"\"\<\[Gamma]\>\"", "\[Rule]", "120"}]}], 
         "\[RightAssociation]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<AtomData\>\"", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<S\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.639", ",", "0.667", ",", "0.417"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<N\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.792", ",", "0.682", ",", "0.507"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.845", ",", "0.682", ",", "0.507"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<H\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.771", ",", "0.692", ",", "0.566"}], "}"}]}]}], 
           "|>"}], ",", "\[IndentingNewLine]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Element\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
            RowBox[{"\"\<FractionalCoordinates\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.744", ",", "0.667", ",", "0.417"}], "}"}]}]}], 
           "|>"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[RightAssociation]"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.78064071513483*^9, 3.7806407772202044`*^9}, {
   3.7806408168176603`*^9, 3.780640840511505*^9}, {3.780640871783559*^9, 
   3.780640918805956*^9}, 3.780641022271532*^9, 3.780641152744196*^9, {
   3.7806411876312027`*^9, 3.780641199926117*^9}, {3.78064124381921*^9, 
   3.7806413648026257`*^9}, {3.780641400291922*^9, 3.7806414899848213`*^9}, {
   3.780641737991397*^9, 3.780641767444833*^9}, {3.780641897484943*^9, 
   3.780641902072453*^9}, {3.780642221882515*^9, 3.780642222043129*^9}, {
   3.780642254876054*^9, 3.780642264938202*^9}, {3.780642602744011*^9, 
   3.780642740477683*^9}, {3.7806429945692987`*^9, 3.780643018474696*^9}, 
   3.780643356774604*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"32400666-3b46-4b7d-82db-6285caeb6ab8"],

Cell[TextData[{
 "The first one, ",
 StyleBox["FerroceneMolecule",
  FontSlant->"Italic"],
 ", is just the ferrocene structure expanded to a single molecule and placed \
upright in a staggered conformation:"
}], "Text",
 CellChangeTimes->{{3.780643108875743*^9, 3.780643134368999*^9}, {
  3.780643320183961*^9, 3.780643338350947*^9}, {3.780644520125651*^9, 
  3.7806445423804827`*^9}},ExpressionUUID->"9f2d187a-575d-4c32-91d1-\
8cad9c73ef68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", "\"\<FerroceneMolecule\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780643339488249*^9, 3.780643344702526*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"ad845e1f-01ee-412e-9e3c-7a066bb3df0b"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {5.9286, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 7.612, 0.}}]]}, 
   {RGBColor[0, 0, 1], 
    Arrow3DBox[
     Line3DBox[{{0, 0, 0}, {-0.4977554201636297, 0., 9.027387703632638}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 7.612, 0.}, {5.9286, 7.612, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{5.9286, 0., 0.}, {5.9286, 7.612, 0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{5.9286, 0., 0.}, {5.4308445798363705`, 0., 
     9.027387703632638}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 7.612, 0.}, {-0.4977554201636297, 7.612, 
     9.027387703632638}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{5.9286, 7.612, 0.}, {5.4308445798363705`, 7.612, 
     9.027387703632638}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-0.4977554201636297, 0., 9.027387703632638}, {
     5.4308445798363705`, 0., 9.027387703632638}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-0.4977554201636297, 0., 
     9.027387703632638}, {-0.4977554201636297, 7.612, 9.027387703632638}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-0.4977554201636297, 7.612, 9.027387703632638}, {
     5.4308445798363705`, 7.612, 9.027387703632638}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{5.4308445798363705`, 0., 9.027387703632638}, {
     5.4308445798363705`, 7.612, 9.027387703632638}}]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[{{0., 0., 0.}}, 1.56]}, 
   {RGBColor[0.4, 0.4, 0.4], 
    SphereBox[{{-1.1385752701689102`, -0.15224000000000001`, \
-1.715203663690201}, {-0.5976238689503831, 
     1.050456, -1.6339571743575074`}, {-0.15542318100923763`, \
-1.0885159999999998`, -1.6971488882829358`}, {0.7328268431084716, 
     1.02762, -1.5707654604320789`}, {
     1.1256077093689623`, -0.388212, -1.5978476235429768`}, {
     1.1385752701689102`, 0.15224000000000001`, 1.715203663690201}, {
     0.5976238689503831, -1.050456, 1.6339571743575074`}, {
     0.15542318100923763`, 1.0885159999999998`, 
     1.6971488882829358`}, {-0.7328268431084716, -1.02762, 
     1.5707654604320789`}, {-1.1256077093689623`, 0.388212, 
     1.5978476235429768`}}, 0.67]}, 
   {RGBColor[0.65, 0.7, 0.7], 
    SphereBox[{{-2.0604503376479286`, -0.327316, -1.769367989911997}, \
{-1.0961240243705468`, 
     1.82688, -1.6249297866538748`}, {-0.2828658484882558, \
-2.0019560000000003`, -1.7513132145047317`}, {1.3167717105874897`, 
     1.758372, -1.5166011342102832`}, {
     1.995120887688308, -0.7459760000000001, -1.5617380727284462`}, {
     2.0604503376479286`, 0.327316, 1.769367989911997}, {
     1.0961240243705468`, -1.82688, 1.6249297866538748`}, {0.2828658484882558,
      2.0019560000000003`, 
     1.7513132145047317`}, {-1.3167717105874897`, -1.758372, 
     1.5166011342102832`}, {-1.995120887688308, 0.7459760000000001, 
     1.5617380727284462`}}, 0.53]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679572743951*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"51f29997-484f-4b14-b391-afb74c7181ea"]
}, Open  ]],

Cell[TextData[{
 "The second prepared structure, ",
 StyleBox["ThioureaHost",
  FontSlant->"Italic"],
 ", is the asymmetric unit of thiourea, which will serve as the host part of \
the custom inclusion compound we will be making."
}], "Text",
 CellChangeTimes->{{3.780643375861637*^9, 
  3.780643454860454*^9}},ExpressionUUID->"d8063e49-54d9-4fcb-afca-\
647acb62dd6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", "\"\<ThioureaHost\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780642940744083*^9, 3.780642943047419*^9}, {
  3.780643457854145*^9, 3.780643458772545*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"af5459f8-f1bb-4b6d-9a6b-b1a70b391eea"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], 
    SphereBox[{{4.987256949999999, 9.429898002198467, 5.1775971}}, 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], 
    SphereBox[{{7.362529900000001, 9.641964673912076, 6.2950641}}, 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], 
    SphereBox[{{8.2277496, 9.641964673912076, 6.2950641}, {6.9380825, 
     9.78334245505448, 7.027625799999999}}, 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], 
    SphereBox[{{6.701371449999998, 9.429898002198467, 5.1775971}}, 0.67]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679578566147*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"086e58b0-e8e7-49e6-9109-114072142ecc"]
}, Open  ]],

Cell[TextData[{
 "We can grow the structure to arbitrary size using ",
 ButtonBox["ExpandCrystal",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ExpandCrystal"],
 ". Symmetry equivalent atoms will be generated automatically from the space \
group information. Let us now make our host structure:"
}], "Text",
 CellChangeTimes->{{3.780639636934845*^9, 3.7806397082317038`*^9}, {
  3.7806397965612297`*^9, 3.7806398149388514`*^9}, {3.780644385296476*^9, 
  3.780644390223732*^9}},ExpressionUUID->"d081e75b-23e9-4342-a91f-\
a3cd1e75f4de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpandCrystal"}]], "Input",
 CellChangeTimes->{{3.780639828883292*^9, 3.7806398301556*^9}, 
   3.780642936841959*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"569a542c-bfcb-4ee3-837e-7290385dde7c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/ExpandCrystal",
              ButtonNote->"paclet:MaXrd/ref/ExpandCrystal"],
             "\"paclet:MaXrd/ref/ExpandCrystal\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ExpandCrystal\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
expands the asymmetric unit of \\\", Cell[BoxData[StyleBox[\\\"crystal\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" to the complete the unit \
cell.\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"ExpandCrystal\\\", \\\"[\\\", StyleBox[\
\\\"crystal\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\
\\\"A\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"B\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"C\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \\!\
\\(\\*RowBox[{\\\"completes the unit cell of \\\", \
Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\" and expands it to a structure of \\\", \
Cell[BoxData[StyleBox[RowBox[{\\\"A\\\", \\\"\[Times]\\\", \\\"B\\\", \\\"\
\[Times]\\\", \\\"C\\\"}], \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" unit \
cells.\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/ExpandCrystal", 
                    "paclet:MaXrd/ref/ExpandCrystal", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ExpandCrystal", "[", 
                    RowBox[{"MaXrd`Private`crystal_String", ",", 
                    RowBox[{"MaXrd`Private`structureSize_List", ":", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`crystalDataOriginal", "=", 
                    "$CrystalData"}], ",", 
                    RowBox[{"MaXrd`Private`newLabel", "=", 
                    RowBox[{"OptionValue", "[", "\<\"NewLabel\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"MaXrd`Private`changeCell", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"FirstTransformTo\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"MaXrd`Private`storeTempQ", "=", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    "OptionValue", "[", "\<\"StoreTemporarily\"\>", "]"}], 
                    "]"}]}], ",", "MaXrd`Private`crystalData", ",", 
                    "MaXrd`Private`crystalCopy", ",", 
                    "MaXrd`Private`atomData", ",", 
                    "MaXrd`Private`coordinates", ",", 
                    "MaXrd`Private`spaceGroup", ",", 
                    "MaXrd`Private`generated", ",", 
                    "MaXrd`Private`copyTranslations", ",", 
                    "MaXrd`Private`mid", ",", 
                    "MaXrd`Private`atomDataMapUnitCell", ",", 
                    "MaXrd`Private`cutoffFunction", ",", 
                    "MaXrd`Private`atomDataMapExpanded", ",", 
                    "MaXrd`Private`lengths", ",", 
                    "MaXrd`Private`newAtomData"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"MaXrd`Private`structureSize", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Positive", "[", "#1", "]"}], "&&", 
                    RowBox[{"IntegerQ", "[", "#1", "]"}]}], "&"}]}], "]"}], 
                    "\[Nand]", 
                    RowBox[{
                    RowBox[{
                    "Length", "[", "MaXrd`Private`structureSize", "]"}], "===",
                     "3"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"ExpandCrystal", "::", "InvalidSize"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`crystal", ",", "\<\"CrystalQ\"\>"}], "]"}],
                     ";", 
                    RowBox[{"MaXrd`Private`crystalData", "=", 
                    RowBox[{"MaXrd`Private`crystalCopy", "=", 
                    RowBox[{
                    "$CrystalData", "[", "MaXrd`Private`crystal", "]"}]}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`crystal", "===", 
                    "MaXrd`Private`newLabel"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ExpandCrystal", "::", "DuplicateLabel"}], 
                    "MessageName"], ",", "MaXrd`Private`newLabel"}], "]"}], 
                    ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`newLabel", "===", "\<\"\"\>"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`newLabel", "=", 
                    RowBox[{
                    "MaXrd`Private`crystal", "<>", "\<\"_\"\>", "<>", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{"ToString", "/@", "MaXrd`Private`structureSize"}],
                     ",", "\<\"x\"\>"}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`changeCell", "=!=", "False"}], ",", 
                    RowBox[{
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`changeCell", 
                    ",", "\<\"InterpretSpaceGroup\"\>"}], "]"}], ";", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"$CrystalData", ",", 
                    RowBox[{
                    "MaXrd`Private`newLabel", "\[Rule]", 
                    "MaXrd`Private`crystalCopy"}]}], "]"}], ";", 
                    RowBox[{"UnitCellTransformation", "[", 
                    RowBox[{
                    "MaXrd`Private`newLabel", ",", 
                    "MaXrd`Private`changeCell"}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`crystalData", "=", 
                    RowBox[{"MaXrd`Private`crystalCopy", "=", 
                    RowBox[{
                    "$CrystalData", "[", "MaXrd`Private`newLabel", 
                    "]"}]}]}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`atomData", "=", 
                    RowBox[{
                    "MaXrd`Private`crystalData", "[", "\<\"AtomData\"\>", 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinates", "=", 
                    RowBox[{
                    "MaXrd`Private`atomData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`spaceGroup", "=", 
                    RowBox[{
                    "MaXrd`Private`crystalData", "[", "\<\"SpaceGroup\"\>", 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`generated", "=", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SymmetryEquivalentPositions", "[", 
                    RowBox[{"MaXrd`Private`spaceGroup", ",", "#1"}], "]"}], 
                    "&"}], ")"}], "/@", "MaXrd`Private`coordinates"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomDataMapUnitCell", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "MaXrd`Private`atomData", "]"}], 
                    "]"}], "\[Rule]", "MaXrd`Private`generated"}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`copyTranslations", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "MaXrd`Private`j", ",", 
                    "MaXrd`Private`k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "0", ",", "#1"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", "0", ",", "#2"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`k", ",", "0", ",", "#3"}], "}"}]}],
                     "]"}], "&"}], ")"}], "@@", 
                    RowBox[{"N", "[", "MaXrd`Private`structureSize", "]"}]}], 
                    ",", "2"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomDataMapExpanded", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    "Plus", ",", "MaXrd`Private`copyTranslations", ",", "#1", 
                    ",", "1"}], "]"}], ",", "1"}], "]"}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`atomDataMapUnitCell"}]}], ";", 
                    RowBox[{"MaXrd`Private`cutoffFunction", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    "OptionValue", "[", "\<\"IncludeBoundary\"\>", "]"}], 
                    "]"}], ",", "Greater", ",", "GreaterEqual"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`atomDataMapExpanded", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"MaXrd`Private`atomDataMapExpanded", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", 
                    RowBox[{"Or", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"MaXrd`Private`cutoffFunction", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`y", ",", 
                    "MaXrd`Private`z"}], "}"}], ",", 
                    "MaXrd`Private`structureSize"}], "}"}]}], "]"}]}]}], ",", 
                    
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    "OptionValue", "[", "\<\"ExpandIntoNegative\"\>", "]"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`mid", "=", 
                    RowBox[{"Floor", "[", 
                    FractionBox["MaXrd`Private`structureSize", "2.`"], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomDataMapExpanded", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "-", "MaXrd`Private`mid"}], "&"}], ",", 
                    "MaXrd`Private`atomDataMapExpanded", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`lengths", "=", 
                    RowBox[{"Values", "[", 
                    RowBox[{
                    "Length", "/@", "MaXrd`Private`atomDataMapExpanded"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`newAtomData", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`atomData", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MaXrd`Private`lengths", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`atomData", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`newAtomData", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "All", ",", "All", ",", "\<\"FractionalCoordinates\"\>"}],
                     "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "Values", "[", "MaXrd`Private`atomDataMapExpanded", 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`newAtomData", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MaXrd`Private`newAtomData", ",", "1"}], "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`crystalCopy", "[", "\<\"AtomData\"\>", 
                    "]"}], "=", "MaXrd`Private`newAtomData"}], ";", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"MaXrd`Private`crystalCopy", ",", 
                    RowBox[{"\<\"Notes\"\>", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    
                    RowBox[{"\<\"StructureSize\"\>", "\[Rule]", 
                    "MaXrd`Private`structureSize"}], ",", 
                    RowBox[{"\<\"UnitCellAtomsCount\"\>", "\[Rule]", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Length", "/@", "MaXrd`Private`generated"}], 
                    "]"}]}], ",", 
                    RowBox[{"\<\"AsymetricUnitAtomsCount\"\>", "\[Rule]", 
                    RowBox[{
                    "Length", "[", "MaXrd`Private`atomDataMapUnitCell", 
                    "]"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`storeTempQ", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`$TempCrystalData", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    "MaXrd`Private`newLabel", "\[Rule]", 
                    "MaXrd`Private`crystalCopy"}], "]"}]}], ";", 
                    RowBox[{
                    "$CrystalData", "=", 
                    "MaXrd`Private`crystalDataOriginal"}]}], ",", 
                    RowBox[{
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"$CrystalData", ",", 
                    RowBox[{
                    "MaXrd`Private`newLabel", "\[Rule]", 
                    "MaXrd`Private`crystalCopy"}]}], "]"}], ";", 
                    RowBox[{"$CrystalData", "=", 
                    RowBox[{"KeySort", "[", "$CrystalData", "]"}]}], ";", 
                    RowBox[{
                    "InputCheck", 
                    "[", "\<\"Update$CrystalDataAutoCompletion\"\>", "]"}], 
                    ";"}]}], "]"}], ";", "MaXrd`Private`newLabel"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ExpandCrystal", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`ExpandCrystal] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    
                    RowBox[{"\<\"ExpandIntoNegative\"\>", "\[Rule]", 
                    "False"}]},
                    {
                    RowBox[{"\<\"FirstTransformTo\"\>", "\[Rule]", 
                    "False"}]},
                    {
                    RowBox[{"\<\"IncludeBoundary\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"NewLabel\"\>", "\[Rule]", "\<\"\"\>"}]},
                    {
                    
                    RowBox[{"\<\"StoreTemporarily\"\>", "\[Rule]", 
                    "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","5","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    
                    RowBox[{"\<\"ExpandIntoNegative\"\>", "\[Rule]", 
                    "False"}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","5","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`ExpandCrystal\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/ExpandCrystal",
              ButtonNote->"paclet:MaXrd/ref/ExpandCrystal"],
             "\"paclet:MaXrd/ref/ExpandCrystal\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ExpandCrystal\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
expands the asymmetric unit of \\\", Cell[BoxData[StyleBox[\\\"crystal\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" to the complete the unit \
cell.\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"ExpandCrystal\\\", \\\"[\\\", StyleBox[\
\\\"crystal\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\
\\\"A\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"B\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"C\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \\!\
\\(\\*RowBox[{\\\"completes the unit cell of \\\", \
Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\" and expands it to a structure of \\\", \
Cell[BoxData[StyleBox[RowBox[{\\\"A\\\", \\\"\[Times]\\\", \\\"B\\\", \\\"\
\[Times]\\\", \\\"C\\\"}], \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" unit \
cells.\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ExpandCrystal\", \"[\", StyleBox[\"crystal\", \"TI\"], \
\"]\"}]\)\!\(\*RowBox[{\" expands the asymmetric unit of \", \
Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" to the \
complete the unit cell.\"}]\)\n\!\(\*RowBox[{\"ExpandCrystal\", \"[\", \
StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"A\", \
\"TI\"], \",\", StyleBox[\"B\", \"TI\"], \",\", StyleBox[\"C\", \"TI\"]}], \
\"}\"}], \"]\"}]\) \!\(\*RowBox[{\"completes the unit cell of \", \
Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and \
expands it to a structure of \", Cell[BoxData[StyleBox[RowBox[{\"A\", \"\
\[Times]\", \"B\", \"\[Times]\", \"C\"}], \"TI\"]], \"InlineFormula\"], \" \
unit cells.\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/ExpandCrystal"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`ExpandCrystal, {MaXrd`ExpandCrystal[
         Pattern[MaXrd`Private`crystal, 
          Blank[String]], 
         Optional[
          Pattern[MaXrd`Private`structureSize, 
           Blank[List]], {1, 1, 1}], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`crystalDataOriginal = MaXrd`$CrystalData, 
          MaXrd`Private`newLabel = OptionValue["NewLabel"], 
          MaXrd`Private`changeCell = OptionValue["FirstTransformTo"], 
          MaXrd`Private`storeTempQ = TrueQ[
            OptionValue["StoreTemporarily"]], MaXrd`Private`crystalData, 
          MaXrd`Private`crystalCopy, MaXrd`Private`atomData, 
          MaXrd`Private`coordinates, MaXrd`Private`spaceGroup, 
          MaXrd`Private`generated, MaXrd`Private`copyTranslations, 
          MaXrd`Private`mid, MaXrd`Private`atomDataMapUnitCell, 
          MaXrd`Private`cutoffFunction, MaXrd`Private`atomDataMapExpanded, 
          MaXrd`Private`lengths, MaXrd`Private`newAtomData}, If[
           Nand[
            AllTrue[MaXrd`Private`structureSize, And[
              Positive[#], 
              IntegerQ[#]]& ], Length[MaXrd`Private`structureSize] === 3], 
           Message[
             MessageName[MaXrd`ExpandCrystal, "InvalidSize"]]; Abort[]]; 
         MaXrd`InputCheck[MaXrd`Private`crystal, "CrystalQ"]; 
         MaXrd`Private`crystalData = (MaXrd`Private`crystalCopy = 
           MaXrd`$CrystalData[MaXrd`Private`crystal]); 
         If[MaXrd`Private`crystal === MaXrd`Private`newLabel, Message[
             MessageName[MaXrd`ExpandCrystal, "DuplicateLabel"], 
             MaXrd`Private`newLabel]; Abort[]]; 
         If[MaXrd`Private`newLabel === "", MaXrd`Private`newLabel = 
           StringJoin[MaXrd`Private`crystal, "_", 
             Riffle[
              Map[ToString, MaXrd`Private`structureSize], "x"]]]; 
         If[MaXrd`Private`changeCell =!= False, 
           MaXrd`InputCheck[MaXrd`Private`changeCell, "InterpretSpaceGroup"]; 
           AssociateTo[
            MaXrd`$CrystalData, MaXrd`Private`newLabel -> 
             MaXrd`Private`crystalCopy]; 
           MaXrd`UnitCellTransformation[
            MaXrd`Private`newLabel, MaXrd`Private`changeCell]; 
           MaXrd`Private`crystalData = (MaXrd`Private`crystalCopy = 
             MaXrd`$CrystalData[MaXrd`Private`newLabel])]; 
         MaXrd`Private`atomData = MaXrd`Private`crystalData["AtomData"]; 
         MaXrd`Private`coordinates = 
          Part[MaXrd`Private`atomData, All, "FractionalCoordinates"]; 
         MaXrd`Private`spaceGroup = MaXrd`Private`crystalData["SpaceGroup"]; 
         MaXrd`Private`generated = N[
            Map[
            MaXrd`SymmetryEquivalentPositions[MaXrd`Private`spaceGroup, #]& , 
             MaXrd`Private`coordinates]]; 
         MaXrd`Private`atomDataMapUnitCell = Association[
            Thread[Range[
               Length[MaXrd`Private`atomData]] -> MaXrd`Private`generated]]; 
         MaXrd`Private`copyTranslations = Flatten[
            Apply[
            Table[{MaXrd`Private`i, MaXrd`Private`j, MaXrd`Private`k}, {
              MaXrd`Private`i, 0, #}, {MaXrd`Private`j, 0, #2}, {
              MaXrd`Private`k, 0, #3}]& , 
             N[MaXrd`Private`structureSize]], 2]; 
         MaXrd`Private`atomDataMapExpanded = Map[Flatten[
             Outer[Plus, MaXrd`Private`copyTranslations, #, 1], 1]& , 
            MaXrd`Private`atomDataMapUnitCell]; 
         MaXrd`Private`cutoffFunction = If[
            TrueQ[
             OptionValue["IncludeBoundary"]], Greater, GreaterEqual]; 
         MaXrd`Private`atomDataMapExpanded = 
          DeleteCases[MaXrd`Private`atomDataMapExpanded, 
            Condition[{
              Pattern[MaXrd`Private`x, 
               Blank[]], 
              Pattern[MaXrd`Private`y, 
               Blank[]], 
              Pattern[MaXrd`Private`z, 
               Blank[]]}, 
             Apply[Or, 
              MapThread[
              MaXrd`Private`cutoffFunction, {{
                MaXrd`Private`x, MaXrd`Private`y, MaXrd`Private`z}, 
                MaXrd`Private`structureSize}]]], {2}]; If[
           TrueQ[
            OptionValue["ExpandIntoNegative"]], 
           MaXrd`Private`mid = Floor[MaXrd`Private`structureSize/2.]; 
           MaXrd`Private`atomDataMapExpanded = 
            Map[# - MaXrd`Private`mid& , MaXrd`Private`atomDataMapExpanded, {
              2}]; Null]; MaXrd`Private`lengths = Values[
            Map[Length, MaXrd`Private`atomDataMapExpanded]]; 
         MaXrd`Private`newAtomData = Table[
            ConstantArray[
             Part[MaXrd`Private`atomData, MaXrd`Private`i], 
             Part[MaXrd`Private`lengths, MaXrd`Private`i]], {
            MaXrd`Private`i, 
             Length[MaXrd`Private`atomData]}]; 
         Part[MaXrd`Private`newAtomData, All, All, "FractionalCoordinates"] = 
          Values[MaXrd`Private`atomDataMapExpanded]; 
         MaXrd`Private`newAtomData = Flatten[MaXrd`Private`newAtomData, 1]; 
         MaXrd`Private`crystalCopy["AtomData"] = MaXrd`Private`newAtomData; 
         AssociateTo[
          MaXrd`Private`crystalCopy, "Notes" -> 
           Association[
            "StructureSize" -> MaXrd`Private`structureSize, 
             "UnitCellAtomsCount" -> Total[
               Map[Length, MaXrd`Private`generated]], 
             "AsymetricUnitAtomsCount" -> 
             Length[MaXrd`Private`atomDataMapUnitCell]]]; 
         If[MaXrd`Private`storeTempQ, 
           MaXrd`Private`$TempCrystalData = 
            Association[MaXrd`Private`newLabel -> MaXrd`Private`crystalCopy]; 
           MaXrd`$CrystalData = MaXrd`Private`crystalDataOriginal, 
           AssociateTo[
            MaXrd`$CrystalData, MaXrd`Private`newLabel -> 
             MaXrd`Private`crystalCopy]; 
           MaXrd`$CrystalData = KeySort[MaXrd`$CrystalData]; 
           MaXrd`InputCheck["Update$CrystalDataAutoCompletion"]; Null]; 
         MaXrd`Private`newLabel]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`ExpandCrystal, {
      SyntaxInformation[MaXrd`ExpandCrystal] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "ExpandIntoNegative" -> False, "FirstTransformTo" -> False, 
      "IncludeBoundary" -> True, "NewLabel" -> "", "StoreTemporarily" -> 
      False}, "Attributes" -> {}, "FullName" -> "MaXrd`ExpandCrystal"], 
   False]]], "Output",
 CellChangeTimes->{3.780679587581809*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"b9aab15b-3686-4438-a5ee-e709c6686a43"]
}, Open  ]],

Cell["We can see what the unit cell looks like:", "Text",
 CellChangeTimes->{{3.780644640714082*^9, 
  3.780644648370002*^9}},ExpressionUUID->"7862a3bd-f28c-438b-9243-\
7eb1ede4ecc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandCrystal", "[", "\"\<ThioureaHost\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780639822166545*^9, 3.780639840674365*^9}, {
  3.780639887907503*^9, 3.780639896040806*^9}, {3.780644398385741*^9, 
  3.78064440003997*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"574436ea-112f-418b-ae5c-9462b41f727e"],

Cell[BoxData["\<\"ThioureaHost_1x1x1\"\>"], "Output",
 CellChangeTimes->{3.780679590344558*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"cc87a118-575b-4b13-bd71-ab3903ee17f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", "\"\<ThioureaHost_1x1x1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780639842414198*^9, 3.780639852001741*^9}, {
  3.7806398901228657`*^9, 3.780639899504797*^9}, {3.780644403193891*^9, 
  3.780644404096079*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"867d88eb-4f5c-4774-86e2-dc7125cf52dd"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQA2JmIJ6rsJ1lz1dhB+7HnK2bbio5PGAqVl2wUcQh5nON
xr6vzAfq/qXzutVpw8Xv+358sBMoXpU4ycUqSwQu/tKzJqpmtZhDWoTIjlxB
JYfVvXFNIn0f7HdxXFvO5aflYOCzfNWGm0Jwca3ybWZVQPXzQzbOm8lx0x4m
XraguscqkROufrvnorRVP2QcnLfO1J8ToApXDxN/cnqb7GygOMxemPg9iDsd
YO6cfmXf1qTDag5Q/x6A+RcmDvWvA8y/MPFosLiwAwMU7PzT/uX2fCWoOPOB
2SmNR7U8BR1g4jB/Xb02p/zrQmV08QMwcZ9lXG6qVzmg4mpw82HiUPMdYObD
xH/9eu9ilsh5QLkz9laXmw7c/B8QcQeYOEw945arB16u0HZAdycsPNHdAwDL
tu1e
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmIH7keZDTuljWocn9//T1HsoO3E/7PFT1JB0YzZ9d
qNURdLCzXnLl1cMf9jDxyyukm1eu1HR4+EJtfnkbO1z9mQSn3T/XCDm8Ojf5
05sUNYe3bSdclq7QcNhkPpfz04yX+x2a97Rs+y0IF19fLPtl22e+A7sZT9b7
amnCxbdA1NvD1Pemtzmr1kg4rIKod4Cph4mfhdh7AGYvTFxEIVV+/yduuDsX
rOdfyOCwzf6Ft8ix3W8U4f6FiYdfbUySEtCA+xcmvkCmXdcWGD6/ZCP3uuw/
bX/urWib3D0VB5/aC/NzXmo4/I+6EK8tJOkAE+815rj/GxgOCw5YVb2ZIwcX
74GK/43zz7kc+cf+0naJg+KmAg4w83c83zh9c5aSA0zcG2r+oao/r7KdOOHi
bqbfr+8Buh+mnn/9xGa5VhUHLcmV1ruB4QNTDxO/sNKs/q6/OtxedHGYO/1N
FY+JPxdwcIeaD/MvTFwbaj7MvzDxFWdPqzPPfLn/mlN467rtwg6f7zzmlHZg
dHBKUVhbDUw/xVnz7r//qgoXn3j0Q9rhT9wHnOdezgnYrQEXnwQVXxrYYKX5
QdJhCfevpJmJCnDzV6tkHO+9rg0Xh5nvvv1VyKsqebj4gYV5rx8A0w9M/efD
S/+b7vhvf4BzzZd6HcEDMPUw8RlVN6/vAqYTmL3o4jB3JnvVpc7chTAf5l+4
ONR8mH9h4gBhp5ab
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxl0mtMU2cYB/DasimXFcol1FGwFCp3ZgdkEXHnGReBTSfiEEeYASZKQGlg
MOIAxxCwU4tACNCJAQbESiO3JVxE4AwMboHJRGBDDBkgMBWGTRlmsKU7Sc/z
kuiH8+WXf/7P+7zndUyQRyZyORxOGPPxmK8pJqvqWoYY8kP1lS1hTmC6UBwm
9d4Jxdyar/RzfDBZK6m4KOcSXz8Ucc59xBWyLP9MX7i4jbiVRnNjU2sBhQX1
uaVPXGCl6KfgRrUrwK608+c6Wym4cKegY1NAvETeqJzyFdDig91r6qatvNiQ
78e88nRRkDRHCFcNecA8OjuXxrnoistlB3qSzMk5a1vM6zjQQXlX5Lb3yrb2
Rffdc+iMasWV7ItuHBzTVM3cz4b9p73B/cPU/RWbIocZZ5BL3qhYMXUF36HV
zAyBCNAf5qYN/8fcQ0qU3cn663bEx1h/WnhqLtvDCMY6hT/a+lkA9ncttVX+
kCwhnsr2H2vo7ZsK4hG/8nXc3T7ZVt68pfSCQ6EzHA5MaZtm7gfz6LeMuN/G
ermSuejNrOM5D/s5DtkuWYCS7cd90T9m+3Ff9Dz5v1dedLRSk4HRhc2dVqB7
PG9sB9vA8jMrn03m/bwlbk4uz3QhbiRzKO5PMqfVS4Ozmn2v+6M7NRHpqyJo
MN1IUMWLSb/GOeme8jcP4hZsv+Dg8Pt12Vt5zuiCnNvV2o953WCj3q9LT5mp
3Qd483wa88QX39R3MO8E577qeM7PPzyfqLothj/uG/pxX3RTth/3Re8aedpe
RdsBh+8cZFnqBBlv81+Ei0Tg2Wi/kqoQAP90KAzMaCn0yNYUMTfKHbh7BwK+
WTQm+WH53N9NPGuY3/C8/GxECu8t79CWyVwgv8Qzjlup6w9ZT/fWJguIR1c2
94zv49MfVH9S1m7iTjzPkKcw7/Tu9mpOsQ0cM+QB8+gjhrk0zkUXcqVNsSHG
5JwH6uwipHufUTkmeVqzIQnZFz3Q4dS445wL2Rc9s6Zl8jvmfjpOhAy+fD5J
5SsmpvZE7YZ432WvRFs3WJN2+8cfsQX0S4HqnbeYe2hL2hGuHdn1mvf0CWW0
6iX1q5GPz6LSBL5k+/0dlcsREgmgJ7D9vz9x9+PcNSP+WJfA4zPnx3yM9dg7
ZnwneBjgz5ti7gfz6Ee+X5wtaNhN5r7qeM7bybVnAyasYJrtx33RsR/3Rc+e
Dlo1Yf7vg9Ha6S/CrOFe6Nzxk6LtcHYs+uczzPtZHrX85ZKNlHjFjVZtXIgx
/VGa/3jkUTfi5ayX32xPcaaFMDOb4cCfsIcctt/rRJDI46oH8VS2322ds//R
dTFxRYjNg38qdBTmw/9Sx9frddTzrHmLNIWAxjz6tVhVwnHmneBc9CrW8ZzC
hf3dGpmE9OO+6NiP+6L/D0uD6bM=
     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQA2JmIE5um3zzzwUpB+7HnK2bbio5PGAqVl2wUcTBzcXj
zE1bYQe5MykHLOs+2sPE3zY3zpX6pOkQaCRT6vKFB66eTZzvw22g+v4asb2V
nKoOq3vjmkT6PtifX9l6tDD0+34Dn+WrNtwUgosrREb+/XeB68C89wGLDotp
wcUvQNTbw9Rv91yUtuqHjIMaRL0DTD1MnBVi7wGYvTDxpZvPbv0FVA9z5/Qr
+7YmHVZzWKKrfe+WrTLcvzDxLecupOSwq8P9CxNXBtsr5cAABTv/tH+5PV8J
Ks514N2a1vNOluIOMHF3aLit2TSr6OVKBXTxAzBxn2VcbqpXOaDiynDzYeJQ
8x1g5sPEr8TlmWUCw1O5M/ZWl5sO3PwbEHF7mDhMff+sed2SwPhCdyfMv+ju
AQAwNfFt
     "], 0.67]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679592405304*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"cecacc6c-7731-4503-92cd-d5b5aa4d6eb5"]
}, Open  ]],

Cell["In our demo, 4\[Times]3\[Times]1 is an appropriate size to work with:", \
"Text",
 CellChangeTimes->{{3.78064483746236*^9, 3.780644931964499*^9}, {
  3.780645199680159*^9, 
  3.780645203495039*^9}},ExpressionUUID->"b6c1297e-61d2-4fa1-910f-\
35d2400765f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandCrystal", "[", 
  RowBox[{"\"\<ThioureaHost\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7806444809503508`*^9, 3.780644496357346*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"d982e1ef-2343-46c6-9102-73dccc1481d7"],

Cell[BoxData["\<\"ThioureaHost_4x3x1\"\>"], "Output",
 CellChangeTimes->{3.780679596372624*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"4c0848ce-221b-4b24-88ce-1b1c0e7772de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", "\"\<ThioureaHost_4x3x1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.780644489037414*^9, 3.7806444987032957`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"9900ff34-043c-49b4-a45a-c374611110ad"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxl1n1MllUYBnBE/wCZpIJmhSx14JvoVBBoKHnkM0hRwZozNHQCzvyoNLEX
piYzkak5rfwAFdkSlRViiFiobyk5ZCusJMCGpuCAuYWpy1Cp5+25r7N1HTf/
uXb2cO77nPd3n1FLVqdmenp4eNyx/ve3/h988cyA2od+yue295ZTLaPVTc81
QSWV/ir9fp7j/MP+rg192YMSNoTo/MasezfPWrlz8e64qOX+Ou9KyluQVz5c
Zc33r1k5ZLQq37Fos//OnulfezWVDUwZpybNLDtxsmWozsflVEc4rfWH51Ue
2u/VMh35upLc7VGLvfX6M0mlWSceBajY0/snFs8J0uuRtzdUjyyycvxd5G32
PhX2ufeX86eXXAxWUq8L9SKXehXqRf7mf7mf8pB/Z59sfXD98GjJ+7uKln5Y
Ny5piEKOuq41Fec8PDKGcxfymUcHJgRd85I8WH8fuXxf4fvI19r9cT1b/VVF
4K5I3X/pj6vx4q01y25N1fltuz+unvS0vp+jw3R+U86xruflpCchkfpciuU+
HNrbvLeyJVTnuA/1fmllP/pO0Pkh6SfWo//oJ9Yj/03OBX8Xead9f/Q+0X+5
P7pe5Ogn6kXe2/tHXITVnzHbFrYWJozX/Ud/akZ+HLjr/VCdz5e6Hk986lAP
InXuUXXN1XUsROfo/yP7+wrfRx4i+8H3kW/L2P9qbnmwa170u76nWmJ0/5uH
Fy5vvxrqmnypoKfJM17nY0v3/X7byl2Dvz29/aTSeYecY3lr2PWSshjd//Vy
H0Z8mb85d4PSOepdl9KsvjgxTeffSD+xHv1HP7Ee+V05F/xd5G8drPmp2+oP
9on+71HHjhbNCdf1Iu8n/US9/z/HYDmvabr/6E/Qvba65TOVzmOkroTeYQ3f
+cTqPGK4I8ynL1zn6L99D/3095F7yn7wfeQNOSNWpW0Mc7UGfz+mc0q8/v7z
f9ac9bH6hhzrP7HrNfyU7yv2M8Pum2I/7xQ+V2vt3/CzPi/z78nOaMNPqdfw
03nX+y9r/4afg9ISzzkfRxl+Lmp7fYo7Zz8d9j00/Cy077NiP+W8DD/texhu
+Cn3QbGfqIv9hP/sp/07nWr4if2wn7Uyj9jP8eI2+9ktc439lPuv2E+5/4af
4oliPwukn+znr7J/9hPnwn6KD4r9FB8U+xkn/WQ/5Z4r9hNzjf1EXexnhvjP
fl6xf1+Gnzhf9rNE5hH7CbfZz2aZa+xnu5wj+4n3CfvpkHrZz3ekn+ynuKTY
z1tyLuxnp8xB9lPmr+En+sl+im+K/ZT1hp+oi/2U3PDTIe8T9lP6r9hPmY+G
nz0yN9nPTelDgtuvxhh+rkzt2HJk7CuGnwGXm3xLrZz9PN7vyqRiR6zhZ1Hv
6tkVdxIMP+cmzr1bZK1nP9eExqSorhmGn+c6MirTyuINPzNDOle4c/Yzece2
2ILdMww/Kx2Xk7otr9jP0kTPAvd69tN2LMbwE/1hP1EX++kr/rOftrfxhp/Y
D/vZIPOI/YwUt9lPzDX2E+fIfuI+sJ9vS73sZ4X0k/3E/tlPnAv7iTnIfubK
PGU/n5F+sp/Oe29sDrX6w35irrGfK6Qu9hPzi/18YX29t/t+sp84X/bzU5lH
7CfeJ+znEplrxvtTzpH9xPuE/QyXetnPD6Sf7CfeJ+znQjkX9vMlmYPsJ94n
7GeL9JP9jJP3CfuJucZ+4hzZT8xT9hPvE/YT58t+Bsj8ZT8xN9nP6n0/rHc+
Tjb8XNFRMSw7OtHw89JhxwJ3zn7eiN6aH5r6muFnY8SE0vjBsw0/t+b7Tnev
Zz+Pr/qnpGlosuHn/VGBA7obZxl+Hsj+/EKXlbOfm+oTPgusTTL83NlYkuP2
ynh/5l9oda9nP+3fRbLhJ/rDfqIu9hP+s5/27zfFfH/KftjPYplH7GequM1+
Yq6xnzhH9rNK7gP7iXrZT/ST/cT+2c+Nci7sJ+Yg+7lW5in7eV76yX7er+rc
4+4P+4m5ZvgpdbGf8J/9nFv1Ubr7frKfOF/2E/OI/cT8ZT9HylxjP4/JObKf
B+Q+sJ9zpF728z3pJ/tZK/tnP5fKubCfmIPsJ94n7Cf6yX7ifcJ+Yq6xnzhH
9hPzi/3E+4T9xH7YT8xf9hNzk/0sHbVy2dOs2YYD8Ip/7/CB7yF+L3zfcD+5
D7hvXO+/YK/YpQ==
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxl2H1UFmUaBvAXK4v0KCgpiOJHpoCKIRAh6ju9oBKQkLiJayuFGobfZWX4
WSpqpEfEBLdURF2x2DS2xARltPVbSLMQE01ljSRJQ0wRg5057309nXPNX5xz
nTn3zDzvcw+/5+6ZPHP05FY2m223i832kPH36vMHXcPf7Ka9P7Ile1fUk1qb
a6ujngrw0lxCfz69oL+7Nix82/e1V+7ZkZ/N916yc6efduWXPpvfSX9UXX/q
FUdxY0EHrbY8q/7GpD5aXfqxyO35vlph6EbX+pzrpdqSkqV7mtxVvuvNbg17
brfTi12OL3rB30/lXzqvt+P6VSnpEU/N99Q+dV6v4XrkZc776rgvco8ek7uX
1rdRz5m7q/0Wm7bH/kuMx5HiGz3V+yIf+8N7yV3cfNX7Is/tunzAUGN97ncb
tz+y9KS9vO6JdJ9LvbXYBac3T7vuq7X8/XRSvw5eGvJVQY/91GSsQ64+OO3G
Jz4q/1DyPyfETTs77oH9uyLPg51D3DTU31vzRfZ/UntpyGOk/qG0B7VTHa4q
HxFy91yJ8fy4vv2uzCU+y3pr/l47w4uN9cH1yE/vfGbRxbi+6r6c4znjQnoe
6Vzjpo2U+nhf5P2kPt4XeX7Zyb4PbbheWuEYu+zzoo7a7apqV2/NRXNM6vHv
ecb+eTN100837zyl8szDt177pr6NHrHx7LT4Yl+Vr5V8+4uLB/vd8tK2tbmf
vOHVHqr+Z72nHF11rp/KUX9kUe2Y2rTuKte3zPj1srF/cP3tb7a3hOxtseuu
BQ2L+rvruB55Ttr5c/uMfYL7co7nnBi9cPKGfX/Vx/uqXOrjfZHvlv2fMCUg
bOPRUNUvu2X/Z7jVBx9LHqjycumjz7d0fNXDI1Dlsp/11gVzfy7+W5jqF9nP
evK1f7QLyhuk8kTnftZnDe84YNrewSqXflfXo18edva7uh75d85+V/dFLs+p
4znRL7r0L94XeYH0L95XXe9cz9KP60bXLf+qv+oXWU/txQu9hp9OCVb5Oufv
on89Z3/G4hMhKl8veau3akYePjNQ9QvqT9/7aNjmxFCVH5D6tQmra9fGBKo8
17nf7Lge/RLh3G86rke+zrlvNdyXczwn+mW31Mf7Ipf9rON9qR/1kR8tbRfo
HqT6pb+zH/WTjX++PNQnTOVnnH2tB2flbK1bPFjl0u96U2V5cdzmYNUv8j3R
ayquxrdtP0TlqD/xjddb2Vo9o/JNzu+Vuh79It9DdT3yDOd3T90X+WrJ8Zzo
F/keqvdFjvp4X+TY/2+sD0iYfceh+kW+53rFqR3Ld34/1NJH2muO8nGhdpW/
oSdMrzLWJ3bv2Z2LSyJUv/glHw1p6B6o3x9zZGhJsvZXH/VpXrI1MFh3eaRn
WeX0SJW/3G28/4m2A9X16JffsupWTTWeH9cj3+wW4zG1OVjdF7n8n1XPiX5B
/+J9kdukf/G+yFcmB365z1ifpPDKia4Lh6h+ebo8s6DQ+H1//9b3/AfDn1O5
27lZ4y8Y67C969sPrv7xV95B8g6Lern7th2m+mWF1F88zDuhfr9D5c9K/fme
+8dWzrCrvPc7TdeeNZ4f16NfVn/6+PxUY31wPXK31fOz7xr7BPdF3lZyPCf6
BfXxvshXSX28L/LzFXsPmL/vjYLzQ8P/qal+2XNg0hxvY/8EJHWafDA3QuU+
mYkdlp0J0qs/m7jCa3SkyrtLfqR84broV59T/YL6JWWP/eTrNVzlRVI/zftU
UV4Hh8qLWw8bctLYP7ge/VKVtj0vdlOwuh558NrmdZ8a+wT3RT5Icjwn+qVE
6uN9kV+Q+nhf5P87UZvStCvU4sMBrb/0Mq63+LAi9rEUF9+hFh/KPrf4cIKz
XzT24Q1nv2jsQ39nP2rswyvOfrT4UPpaYx/O7JqycumZIIsPX9m0dMUHz4dZ
fNh5YnFF2PghFh+us1fdMteHfehelHzn6tEhFh/GLRuy0VwH9iFy9iHqsw87
Sn32oVvHt90zjOdnH679+Gbbbcb6sA/HlD0x2bsp3OLDBMnZh6jPPsyU+uzD
B0FzPY8bvy/7cH7moTUxxv5hH84pfXZ2vnG+YB8iZx/+KfXZh6jPPkyr+6Hg
trF/2If3ft0U72X4n31YuuMtm7lP2IfI2Yeozz68K/XZh+Nl/7MP62T/sw9z
pY/YhziXsQ9xvmMfyv8LjX1YI+cj9uFLcj5iH3aVcxb7EH3HPkT/sg8vS/+y
D+V7qLEP5Xtl8WGQ87unsQ+Rsw/le6ixD+V7a/Hhj87vucY+lO+5xj6U/xcW
HyJnH6I++1D+H2nswx7O/3ca+1D+32nsw3bO/5sa+1D+z2rsQ/l/qrEPP5T6
7EPxgMY+FG9o7ENxhcY+dJecfYj67MP+Up99WCX7n30o5x2Nffi99BH7EPMN
9mGunO/YhzjfsQ9xPmIf5sv5iH0o97X40FP6jn2I+Qb7EP3LPvxE5g/sw2iZ
P7AP18gcg32I+Qb7EPMN9iHmJ+zDKJk/sA99Zf7APsQcg32InH2I+Qn7EPXZ
h7rMH9iHkTJ/YB+ukTkG+zBHcvahnDdL2Yea1GcfYv7APsT8gX24RuYY7EPM
N9iHqM8+RH32Yf6WwtbrXCItPoy1ZyeVzHVYfLgl+bnW2ftHWHyY/t+rVSfz
HRYfdnk0f1/mebvFh8mO2dNM/7APY+pyp6/5WrP4cEdciccUh8Piw22Jvau6
GM5hH04/MSs70VhH9uFrGS3rx5dHWnx4qK7LsKCxIyw+dHm5X4y5PuzDA9kz
ypavGmHx4aWF43ueMtaBfYicfWiT+uzDUqnPPjwwfO4F8/nZhy2uIePM9WEf
Xu4V9UjvviMsPkTOPkR99iHqsw+nrt0TaP6+7MOGpT7e5v5hH/at7HTJZpwv
2IfI2YepUp99iPrsw/pBvn7m/mEfvv7b8RdM/7MPn3C7N9rcJ+zDTpKzDxuk
PvtwitRnH2L/sw+x/9mH6CP2Ic5l7EOc79iH/eV8xz7E+Yh96CnnI/bhDDln
sQ/Rd+xD9C/7EP3LPjw1b0PEWmN92IfbGttvM39f9mH6wcab5jqwD5GzD49L
ffYh6rMP83Z4FZrPzz48dq4gabCxPuzDw0uvXzD3CfsQOftwq9RnHx6X+uzD
kJcaL903fl/2YWHZouorxv5hH976eFxGqnG+YB/+Ljn7EPXZh19IffbhLr+s
lpXG/mEfBhW2bcoz/M8+vFM9KMHcJ+zDBsnZh19IffbhIKnPPsT+Zx9i/7MP
0UfsQ5zL2IcyD9TYh5hvsA9xPmIfyrzR4sNZcs5iH6Lv2IfoX/Yh+pd9+JHM
H9iHmG+wD+NljsE+xHyDfZgl9dmHqM8+bC/zB/Yh5g/sQ8wx2IeYe7APUZ99
mCX12YfNMn9gHy6Q+QP78G2ZY7APMd9gH6I++3Ce1GcfvivzB/bhfZk/sA8P
yByDfYj5BvtwntRnH6I++/DSxZnj/PvFWnz4/rwxhaPzoi0+PLepOXFAzSiL
D0tsuQOTv4u2+PAbu/vTSZ2iLD5MuXhnhekf9uF7fhP0PtVRFh9ezHg3pXlq
tMWHK6Z8qz9pOId9uLV1QO1v4dEWH35ytOT673djLT6851e55vjiURYfhub8
stFcH/bhnbP9evgUjbL40KPYc465DuxD5OzDZ6Q++xD12YcN74UE1N+Ntfgw
ZET9Z+b6sA87JT2SuC9+lMWHnSVnH6I++xD12YfTluX8OsH4fdmH/gcvTDf3
D/swOv/YwfXG+YJ9+Lzk7MOpUp99iPrsQ9+Z1+aZ+4d9mBqU1zjI8D/7MCb2
q+3mPmEfxkrOPvSX+uxD1GcfYv+zD7H/2YfoI/YhzmXsQ5zv2Ic437EPcT5i
H+J8xD7EOYt9iL5jH6J/2YfoX/Zh1/sr55jrwz78MaTsD/P3ZR82dt0Xba4D
+xA5+7CL1Gcfoj77sLK64uG+1VEWH3bJz3rfXB/2YZP+r4Cbxj5hHz6QnH14
XuqzD1GffRhfE3Yoy/h92Yftn1wQae4f9mHA46k55vmCfYicfYj67MN2Up99
2O5M+mhz/7AP4z+KOJ1i+J99+PTnL8039wn7EDn7EPXZh3FSn32I/c8+xP5n
H6KP2Ic4l7EPcb5jH+J8xz7E+Yh9iPMR+xDnLPYh+o59iP5lH6J/2YeYP7AP
dZk/sA8xx2AfImcfoj77EPMT9iHmD+zDZpk/sA8xx2AfXpGcfYj67EPb4876
7EPMN9iHmD+wDzHHYB/2kZx9iPrsQ9RnH2K+wT7EfIN9iPkG+xDzDfYh5hvs
Q9RnH/4fXinnrg==
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxl2XdUVdfWBfAr+ETRIBqNKGgQexcBDQqyvWBDg8T2LAkqlhhFscZuiJWI
GOUhgkLEQiQ2bCFYuWqiybNEjb3F3o2xJMb2/M757pqbMeYZw7/m2GNxyl7n
/vayemx818EuNputv6vNZvyzre0zIX3ZOF81o/3bJXkdaqjSNxd0qNW4slrg
snzy22seyv3ZwrS58S46//vD6En1D9dVE8rfGXNzbjGdv7tu3ZpXjz3V7Fmr
pi26UUc9nPNzRE5uXaXeHz190g+bwtTMXbPyX5XT+cL4nORzgeUcvp23P8td
W7Te17m+EOuTP50TXmuql/rauV5hPXL5uw78XeSJSSntdg4tq68zO6/sCpvK
D2ucNm3Lbv+i+0Ue2PTDuIyHdfX9Ii8V0WdtpvF8XlbtvTui8FDY0YcV51S7
XFPF+/0r7WHpuirwwKPx48r5KOS/TRt96I3xHIb38B60Kstb5yckvzt7yLUp
DYqrEz947a0U5KlQv+D25iVbh/npfKTU77l6955z4a46n/9F/x/3+BetL5u3
aGa12TVVF/vwzReM54P1yDcUd/nq40Z19d9FvlFyXGeXoOoHKt32VMlSH/eL
PErq436RJ8S/nv9n/qaw0/Z/z974w7vq6cXrpbxVMVX+k3cDXhn75x3fjcNS
x9fReXH/agsKh5Z15N7ef3VdK2t+ftfy6DGPfNTq0i9jMwb46vrrag49mHym
gc49pX65zodar5hStN726814l4JNhVj/dH/O26CCt2Flcuvvc73u4cB6nd8q
8Tbf2Cf4u5zjOgdGTh+cscNXXTnqrI/7RV5a6uN+kdtk/3cb2jg462AL3S8p
sv/fvW7r33x0U51XkD66ciDJ2969KJ/v3M+Ok3NsDRdUbKn7RfazI/bmJx4B
K5vpXPazY+WwpNsZ/wTrfJ2z3/V69MtCZ7/r9cil3/XfRS7X6cB1ol/kfgtx
v8gXSP/ifpEnOJ9n2LKHXR/O/b6h7hd5X6pa/tp5K+sE6byk8704HmQEtdvo
XpR7SN5l8ZS723Kb6n5B/REFbsHLe7XQeUmpX3VSiRxHUtF626j/32+FWI9+
kf3swHrkNue+Vfi7yEtKjuukfinE/SKvIPVxv9SPjvaLZ3n4lwvQ/RLt7EdH
+snZK8teDta59LtjSIFnjPfeolz63fHz1p7F/PoF6X6R74nj9ulr0WXKhugc
9dOWXN3VyF60Xr5Xej36Rb6Hej3yk87vnv67yOV7qK8T/eIu9XG/yFEf94u8
iez/MWmNu43+y677JUD2/6o1TY5MSW2t81nSR6OTdiTOnVCUR3m/P6Gv8Xy2
5Cw5/JlPhO6Xzm6vG4y3N3W87H4gdFes0nn0yeslB2YHOjIqfbL20TtF65Pu
/lPtxsCi9egXz2C/WQ+M68d65E0HDv563deB+u8i/0v6DteJfkH/4n6Rz5f+
xf0iP7Z+afYu4/n0a3V2YKnpIbpfjmX+/tkZ4/322v3g1dicNjr/wz9kcB/j
OYQ12XLuRZo1v9J7bc+Xh1rrfvlV6ie09u72ZLdd5yel/obQoPIl8orWdx6d
OmfpuKL16JdNXcLG3DeeD9Yj73n25swX5ndG/i7y7pLjOtEvqI/7RY76uF/k
b6Y83Ga+3wfrz4W2Wqp0v6RUbjp9qbF/Ujufn7vWFqHz+a1bL4lQgY4pe5YP
bvokXOfJkjfaZf8hYG8b3S+vpf6uIyV/r1u5rc4XS/0KjUsu3r6laH3LmHtr
zP2D9eiXkUcKqyY3CdTrkfdsEZDUwNgn+LvIu0uO60S/tJL6uF/kI6Q+7hf5
vlr5oycnf2Dx4Z5eR1PnNwm0+HDIcr9rbbaHWHzo79znFh/Od/aLYh9Kvyj2
4YfOflTsQ+lHiw+jnX2t2IeXfunsYbwviw9nhG+fXjruA4sP53iu6PvilxCL
D8csXfPSfD7sw5Wlpo2q0TvE4sOrZ3p6rTeeA/sQOftwtNRnH66S+uzDZgVr
3crEfWDxoa3jqUXm82Ef7p/86u75z0IsPtwnOfswQOqzD1GffXhxnFvadeP9
sg89blwsbe4f9uGSQSM+rWecL9iHyNmHqM8+RH32YWaK+6px9qL16JdT7Yb1
STf8zz5s3KPv7HBjn7APkbMPs6Q++/C01GcfYv+zD7H/2Yfye2HxofxeKPah
/F4o9qF4T7EPG8n5iH2I8xH7UFyq2IddpO/Yh/J7qtiH6F/2YYjze6XYh3HO
75XFh/I9VOzDHpKzD+V7qNiH8j20+FC+54p9mOr8niv2ofxeWHyInH2I+uxD
+b1Q7EP5vVPsQ/m9U+xD+T1V7EP5PVXsQ9RnH+ZJffbhUacHFPvwhNMDin0o
rlDsw0eSsw9Rn30o3lDsQ8w32Ifpsv/Zh5hvsA9xLmMf2nyd5zv2IeYb7EOc
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
j/u3LeXoNLrlya7d6uk8VfLU77YMr+nwUpevjqvmcaqqmir1G8WE+zT4uoHO
R0r9en/bQs9n+eo8sW3F4y/SnoZhfcc/cgesevs07P6E656jE8s5sB75so8z
YnsZ+wR/F3m65LhOr5uh29f5++n6uF/kqI/7RS77uTDlkGPB0fstdL/IfnYU
/3yI38AZjXX+X+mjLaUPplbs769z2c8OF/tPW3aUCtb9IvvZUWPGoYJi05vp
vI1zPzs2l++d/03dVjqXftfr0S/S73o9cul3/XeRH5G+w3WiX9C/uF/kvaR/
cb/I5zufZ2HlbRPS771pqPvlnvN5qrIel3ZmPQ/QeabzvTj2XB5V+OV7zS35
q+yEK/uCm+h+kfdV2LjH+OsjAlvo/IHUb1j95NifdvrrPMG538KwHv0i+82B
9chl3yr8Xc5xneiXiVIf94s8XurjfpFLvzvm/PPeoNigAN0vZ5396EhsWPCb
+8YPdN7V2deOFm86nfnjcEudS787no/0TozqFqj75bzUzx0b/er8vVY6Pyn1
vw3LS2o2prnOxzm/V3o9+kW+h3o98iTnd0//XeTzJcd1ol8mSH3cL3L5Hur7
RT5N9n/5n5+/+cotXPeLfM8di98O+N/ng0J17iN9FHHsr2J9Z4bp/EmB67GZ
xvOJdH1ZNiEtXPfLuDbTDmXO93f0qfEmZVW0Kvr96vRnyJoqgY4V9/eXe5IT
ofODMY/+NzGgsV6PfnHpVMpnkHH9WI+8X4WnsZW6B+m/y32H60S/7JD+xf0i
byz9i/tF7lM96/fSxvPJ+mbY9pYrQ3S/nH3sN+6Y8X6j785OHf1OG52n/Oq7
Z4bxHNYc75J23ceu8/9IXrZi/KXajlDdL1Wl/pUyXXPPrbPrHPX33HS56v57
mM7/eVHj6zTj+rEe/bJqQG33gcbzwXrkHlk+J3KNfYK/i7yM5LhO9Avq436R
r5T6uF/kNfNHds8y3u/8yyvvdFuvdL+sdOt4y8/YP8kTx/rmDg3Xeb/kTfvP
Tglw3Ogf6ldlYoTOYyT/sXLOy46t2uh+Qf2qmWGBnm5tdZ4t9b1d4l/vjLTr
vG6HE56Tjf2D9eiXIT233u3wfaBej3xTRlQzV2Of4O8i3yI5rhP9gvq4X+Sf
Sn3cL/Kl9wNPdA1vYfHhD1f39jfWW3yYGr3p+w3TQi0+lH1u8aH0i2IfFnf2
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
     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1: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
Yp553vBecx8wb1zvfyouo9A=
     "], 0.67]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679599734733*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"326310cd-bee6-44fe-b14d-8c82eb1dc1fe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 2: Embedding guest into host", "Subsection",
 CellChangeTimes->{{3.780644443430492*^9, 
  3.780644454982114*^9}},ExpressionUUID->"68d93dec-681d-4190-b7ba-\
17c90f0693b6"],

Cell["\<\
Now we wish to insert a ferrocene molecule into each \
\[OpenCurlyDoubleQuote]cavity\[CloseCurlyDoubleQuote] in the host \
\[OpenCurlyDoubleQuote]honeycomb\[CloseCurlyDoubleQuote] lattice. For this \
space group, these are the positions symmetry equivalent to (0, 0, 1/4).\
\>", "Text",
 CellChangeTimes->{{3.7806449728685837`*^9, 3.780645019618832*^9}, {
  3.780645066562853*^9, 3.780645083473659*^9}, {3.780645158505013*^9, 
  3.780645210127122*^9}},ExpressionUUID->"efafd4ea-7f1f-470d-9768-\
4778d5fa9116"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"targetPositions", "=", 
  RowBox[{"N", "@", 
   RowBox[{"SymmetryEquivalentPositions", "[", 
    RowBox[{"\"\<R-3c\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"1", "/", "4"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"107a5f4d-5698-44a5-bae0-567c7d807feb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6666666666666666`", ",", "0.3333333333333333`", ",", 
     "0.5833333333333334`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6666666666666666`", ",", "0.3333333333333333`", ",", 
     "0.08333333333333333`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3333333333333333`", ",", "0.6666666666666666`", ",", 
     "0.9166666666666666`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3333333333333333`", ",", "0.6666666666666666`", ",", 
     "0.4166666666666667`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679620427026*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"ca8ce88b-c8fa-4960-bf88-9440f216a8b6"]
}, Open  ]],

Cell["\<\
In each unit cell, these six positions will be the target of whatever we \
choose to embed. By default, this list is set to match the size of the host.\
\>", "Text",
 CellChangeTimes->{{3.780645230238449*^9, 3.7806452544539557`*^9}, {
  3.780645358909198*^9, 
  3.780645394203113*^9}},ExpressionUUID->"8a76f72e-2903-43c1-a4ec-\
30479549d1f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EmbedStructure"}]], "Input",
 CellChangeTimes->{{3.780645027742272*^9, 3.780645029268364*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"6d52ad6a-78e3-4fc3-9c1c-dac954fa6fa2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/EmbedStructure",
              ButtonNote->"paclet:MaXrd/ref/EmbedStructure"],
             "\"paclet:MaXrd/ref/EmbedStructure\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EmbedStructure\\\", \\\"[\\\", \
StyleBox[\\\"guestUnits\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"targetPositions\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"hostCrystal\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" embeds \\\", \
Cell[BoxData[StyleBox[\\\"guestUnits\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" at \\\", \
Cell[BoxData[StyleBox[\\\"targetPositions\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" into \\\", Cell[BoxData[StyleBox[\\\"hostCrystal\
\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/EmbedStructure", 
                    "paclet:MaXrd/ref/EmbedStructure", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"EmbedStructure", "[", 
                    RowBox[{
                    "MaXrd`Private`guestUnitsInput_", ",", 
                    "MaXrd`Private`targetPositionsInput_List", ",", 
                    "MaXrd`Private`hostCrystal_String", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`newStructureLabel", "=", 
                    RowBox[{"OptionValue", "[", "\<\"NewLabel\"\>", "]"}]}], 
                    ",", "MaXrd`Private`invAbort", ",", 
                    RowBox[{"MaXrd`Private`conditionFilterQ", "=", "False"}], 
                    ",", 
                    RowBox[{
                    "MaXrd`Private`crystalDataOriginal", "=", 
                    "$CrystalData"}], ",", "MaXrd`Private`hostStructureSize", 
                    ",", "MaXrd`Private`newSize", ",", 
                    "MaXrd`Private`guestUnits", ",", 
                    "MaXrd`Private`guestCopies", ",", 
                    "MaXrd`Private`crystalLabels", ",", 
                    "MaXrd`Private`nonVoidRange", ",", 
                    "MaXrd`Private`makeElementCrystal", ",", 
                    RowBox[{"MaXrd`Private`matchHostSizeQ", "=", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    "OptionValue", "[", "\<\"MatchHostSize\"\>", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`rotationOrder", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"RotationOrder\"\>", "]"}]}], ",", 
                    RowBox[{
                    "MaXrd`Private`targetPositions", "=", 
                    "MaXrd`Private`targetPositionsInput"}], ",", 
                    "MaXrd`Private`numberOfHosts", ",", 
                    "MaXrd`Private`copyTranslations", ",", 
                    "MaXrd`Private`hostCoordinates", ",", "MaXrd`Private`mid",
                     ",", "MaXrd`Private`latticeParameters", ",", 
                    "MaXrd`Private`latticeParametersABC", ",", 
                    "MaXrd`Private`hostM", ",", "MaXrd`Private`hostMinverse", 
                    ",", "MaXrd`Private`targetPositionsCartesian", ",", 
                    "MaXrd`Private`completed", ",", "MaXrd`Private`M", ",", 
                    "MaXrd`Private`T", ",", "MaXrd`Private`p", ",", 
                    "MaXrd`Private`P", ",", 
                    "MaXrd`Private`CheckAndMakeRuleList", ",", 
                    "MaXrd`Private`distortions", ",", 
                    "MaXrd`Private`rotations", ",", 
                    "MaXrd`Private`performShift", ",", 
                    "MaXrd`Private`performTwist", ",", 
                    "MaXrd`Private`conditions", ",", "MaXrd`Private`list", 
                    ",", "MaXrd`Private`shift", ",", "MaXrd`Private`twist", 
                    ",", "MaXrd`Private`MakeAlteration", ",", 
                    "MaXrd`Private`PrepareAlterationList", ",", 
                    RowBox[{
                    "MaXrd`Private`conditionedDistortionsQ", "=", "False"}], 
                    ",", 
                    RowBox[{
                    "MaXrd`Private`conditionedRotationsQ", "=", "False"}], 
                    ",", "MaXrd`Private`coordinatesCrystal", ",", 
                    "MaXrd`Private`coordinatesCartesian", ",", 
                    "MaXrd`Private`coordinatesCrystalEmbedded", ",", 
                    "MaXrd`Private`coordinatesCrystalEmbeddedTranslated", ",",
                     "MaXrd`Private`newCoordinates", ",", 
                    "MaXrd`Private`newCoordinatesCartesian", ",", 
                    "MaXrd`Private`atomDataHost", ",", 
                    "MaXrd`Private`atomDataGuest", ",", 
                    "MaXrd`Private`joinedAtomData", ",", 
                    "MaXrd`Private`boundary", ",", "MaXrd`Private`hostCopy", 
                    ",", "MaXrd`Private`findOverlap", ",", 
                    "MaXrd`Private`intervals", ",", "MaXrd`Private`checks", 
                    ",", "MaXrd`Private`atomData1", ",", 
                    "MaXrd`Private`atomData2", ",", "MaXrd`Private`xyz1", ",",
                     "MaXrd`Private`xyz2", ",", "MaXrd`Private`nearestList", 
                    ",", "MaXrd`Private`overlappingCoordinates", ",", 
                    RowBox[{"MaXrd`Private`overlapPrecedence", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"OverlapPrecedence\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"MaXrd`Private`overlapRadius", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"OverlapRadius\"\>", "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`hostCrystal", "===", "\<\"Void\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "VoidHost"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`boundary", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"TrimBoundary\"\>", "]"}]}], ";", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Box\"\>", ",", "\<\"None\"\>", 
                    ",", "\<\"OuterEdges\"\>"}], "}"}], ",", 
                    "MaXrd`Private`boundary"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidTrimming"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sort", "[", "MaXrd`Private`rotationOrder", "]"}],
                     "=!=", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidRotationOrder"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "NumericQ", "[", "MaXrd`Private`overlapRadius", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidOverlapRadius"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`invAbort", "[", "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidGuestInput"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}], ")"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "ListQ", "[", "MaXrd`Private`guestUnitsInput", "]"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`guestUnitsInput", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"MaXrd`Private`invAbort", "[", "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"MaXrd`Private`guestUnitsInput", ",", "StringQ"}],
                     "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Depth", "[", "MaXrd`Private`guestUnitsInput", "]"}], "===",
                     "2"}]}], ",", "Null", ",", 
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"MaXrd`Private`guestUnitsInput", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "===", "Rule"}], 
                    "&"}]}], "]"}], "&&", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`guestUnitsInput", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "===", "Condition"}], 
                    "&"}]}], "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`conditionFilterQ", "=", "True"}], 
                    ",", "True", ",", 
                    RowBox[{"MaXrd`Private`invAbort", "[", "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "Head", "[", "MaXrd`Private`guestUnitsInput", "]"}], "===",
                     "Rule"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"Length", "/@", "MaXrd`Private`guestUnitsInput"}],
                     ",", 
                    RowBox[{"MaXrd`Private`x_", "\[Rule]", 
                    RowBox[{"MaXrd`Private`x_", "/;", 
                    RowBox[{
                    "MaXrd`Private`x", "\[Equal]", "MaXrd`Private`x"}]}]}]}], 
                    "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`invAbort", "[", "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`guestUnitsInput", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "0.`", "\[LessEqual]", "#1", "\[LessEqual]", "1.`"}], 
                    "&"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidProbabilities"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ",", "True", 
                    ",", 
                    RowBox[{"MaXrd`Private`invAbort", "[", "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{
                    "Dimensions", "[", "MaXrd`Private`targetPositionsInput", 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "3"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "EmbedStructure", "::", "InvalidTargetPositions"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`crystalLabels", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`hostCrystal", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`conditionFilterQ", ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",",
                     "#1"}], "]"}], "&"}], ")"}], "[", 
                    "MaXrd`Private`guestUnitsInput", "]"}]}], "}"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`crystalLabels", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    "MaXrd`Private`crystalLabels", ",", "\<\"Void\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`makeElementCrystal", "[", 
                    "MaXrd`Private`x_", "]"}], ":=", 
                    RowBox[{"ImportCrystalData", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`x", 
                    ",", "\<\"P1\"\>"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "1.`", ",", "1.`", ",", "1.`", ",", "90.`", ",", "90.`", 
                    ",", "90.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\<\"Element\"\>", "\[Rule]", "MaXrd`Private`x"}],
                     ",", 
                    RowBox[{"\<\"FractionalCoordinates\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], ",", 
                    
                    RowBox[{"\<\"DisplacementParameters\"\>", "\[Rule]", 
                    "0"}], ",", 
                    RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Uiso\"\>"}]}], 
                    "]"}], "}"}], ",", 
                    
                    RowBox[{"\<\"OverwriteWarning\"\>", "\[Rule]", 
                    "False"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`makeElementCrystal", "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    "MaXrd`Private`crystalLabels", "\[Intersection]", 
                    RowBox[{"Keys", "[", "$PeriodicTable", "]"}]}], ")"}]}], 
                    ";", 
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"InputCheck", "[", 
                    RowBox[{"#1", ",", "\<\"CrystalQ\"\>"}], "]"}], "&"}], 
                    ",", "MaXrd`Private`crystalLabels"}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`overlapRadius", "=", 
                    FractionBox["MaXrd`Private`overlapRadius", 
                    RowBox[{
                    RowBox[{"GetLatticeParameters", "[", 
                    RowBox[{"MaXrd`Private`hostCrystal", ",", 
                    RowBox[{"\<\"Units\"\>", "\[Rule]", "False"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]]}], ";", 
                    RowBox[{"MaXrd`Private`hostCopy", "=", 
                    RowBox[{"$CrystalData", "[", "MaXrd`Private`hostCrystal", 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`hostCoordinates", "=", 
                    RowBox[{
                    "MaXrd`Private`hostCopy", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"\<\"AtomData\"\>", ",", "All", 
                    ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`hostStructureSize", "=", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`hostCopy", "[", "\<\"Notes\"\>", "]"}], 
                    "[", "\<\"StructureSize\"\>", "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "ListQ", "[", "MaXrd`Private`hostStructureSize", "]"}]}], 
                    ",", 
                    RowBox[{"MaXrd`Private`hostStructureSize", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ";", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`matchHostSizeQ", "&&", 
                    RowBox[{"MaXrd`Private`hostStructureSize", "=!=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`copyTranslations", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "MaXrd`Private`j", ",", 
                    "MaXrd`Private`k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "0", ",", "#1"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", "0", ",", "#2"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`k", ",", "0", ",", "#3"}], "}"}]}],
                     "]"}], "&"}], ")"}], "@@", 
                    "MaXrd`Private`hostStructureSize"}], ",", "2"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`targetPositions", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{
                    "Plus", ",", "MaXrd`Private`copyTranslations", ",", 
                    "MaXrd`Private`targetPositions", ",", "1"}], "]"}], ",", 
                    "1"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`targetPositions", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"MaXrd`Private`targetPositions", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", 
                    RowBox[{"Or", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Greater", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`y", ",", 
                    "MaXrd`Private`z"}], "}"}], ",", 
                    "MaXrd`Private`hostStructureSize"}], "}"}]}], "]"}]}]}]}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{
                    "Flatten", "[", "MaXrd`Private`hostCoordinates", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"#1", "<", 
                    RowBox[{"-", "1.`"}]}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`mid", "=", 
                    RowBox[{"Floor", "[", 
                    FractionBox["MaXrd`Private`hostStructureSize", "2.`"], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`targetPositions", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "-", "MaXrd`Private`mid"}], "&"}], ")"}], "/@",
                     "MaXrd`Private`targetPositions"}]}]}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"MaXrd`Private`numberOfHosts", "=", 
                    RowBox[{
                    "Length", "[", "MaXrd`Private`targetPositions", "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`guestUnits", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{"MaXrd`Private`conditionFilterQ", ",", 
                    RowBox[{
                    "MaXrd`Private`targetPositions", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Append", "[", 
                    RowBox[{"MaXrd`Private`guestUnitsInput", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", "True"}], 
                    "\[Rule]", "\<\"Void\"\>"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Head", "[", "MaXrd`Private`guestUnitsInput", "]"}], "===",
                     "Rule"}], ",", 
                    RowBox[{"RandomChoice", "[", 
                    RowBox[{"MaXrd`Private`guestUnitsInput", ",", 
                    RowBox[{
                    "Length", "[", "MaXrd`Private`targetPositions", "]"}]}], 
                    "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "Length", "[", "MaXrd`Private`targetPositions", "]"}], 
                    ",", "#1"}], "]"}], "&"}], ")"}], "[", 
                    "MaXrd`Private`guestUnitsInput", "]"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`guestCopies", "=", 
                    RowBox[{
                    "$CrystalData", "/@", "MaXrd`Private`guestUnits"}]}], ";", 
                    RowBox[{"MaXrd`Private`nonVoidRange", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{
                    "Range", "[", "MaXrd`Private`numberOfHosts", "]"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{"MaXrd`Private`guestCopies", ",", "_Missing"}], 
                    "]"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`nonVoidRange", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"Goto", "[", "\<\"End\"\>", "]"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`latticeParameters", "=", 
                    RowBox[{"GetLatticeParameters", "[", 
                    RowBox[{"MaXrd`Private`hostCrystal", ",", 
                    RowBox[{"\<\"Units\"\>", "\[Rule]", "False"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`latticeParametersABC", "=", 
                    RowBox[{
                    "MaXrd`Private`latticeParameters", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`hostM", "=", 
                    RowBox[{"GetCrystalMetric", "[", 
                    RowBox[{"MaXrd`Private`hostCrystal", ",", 
                    RowBox[{"\<\"ToCartesian\"\>", "\[Rule]", "True"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`hostMinverse", "=", 
                    RowBox[{"Inverse", "[", "MaXrd`Private`hostM", "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`targetPositionsCartesian", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`hostM", ".", "#1"}], "&"}], ")"}], 
                    "/@", "MaXrd`Private`targetPositions"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`MakeAlteration", "[", "MaXrd`Private`c_", 
                    "]"}], ":=", "MaXrd`Private`c"}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`MakeAlteration", "[", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`min_", ",", "MaXrd`Private`max_"}],
                     "}"}], "]"}], ":=", 
                    RowBox[{"Hold", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`min", ",", "MaXrd`Private`max"}], 
                    "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`MakeAlteration", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "]"}], ":=", 
                    RowBox[{"MaXrd`Private`MakeAlteration", "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`y", ",", 
                    "MaXrd`Private`z"}], "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`PrepareAlterationList", "[", 
                    RowBox[{
                    "MaXrd`Private`conditionsQ_", ",", 
                    "MaXrd`Private`ruleList_List"}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`conditionsQ", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`conditions", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"MaXrd`Private`ruleList", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", "True"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`list", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    "MaXrd`Private`MakeAlteration", ",", 
                    "MaXrd`Private`conditions", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "/.", "\[VeryThinSpace]", 
                    RowBox[{"ReleaseHold", "[", "MaXrd`Private`list", "]"}]}],
                     "&"}], ")"}], "/@", "MaXrd`Private`targetPositions"}]}], 
                    ",", 
                    RowBox[{"ReleaseHold", "[", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`MakeAlteration", "/@", 
                    "MaXrd`Private`ruleList"}], ",", 
                    "MaXrd`Private`numberOfHosts"}], "]"}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`distortions", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"Distortions\"\>", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`performShift", "=", 
                    RowBox[{"MaXrd`Private`distortions", "=!=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`rotations", "=", 
                    RowBox[{"OptionValue", "[", "\<\"Rotations\"\>", "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`performTwist", "=", 
                    RowBox[{"MaXrd`Private`rotations", "=!=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`rotations", "=", 
                    RowBox[{
                    "MaXrd`Private`rotations", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "MaXrd`Private`c_Condition", "\[Rule]", 
                    "MaXrd`Private`r_List"}], ")"}], "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{"N", "[", "MaXrd`Private`c", "]"}], "\[Rule]", 
                    RowBox[{"N", "[", 
                    RowBox[{"MaXrd`Private`r", " ", "\[Degree]"}], "]"}]}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`r1_", ",", "MaXrd`Private`r2_", ",", 
                    "MaXrd`Private`r3_"}], "}"}], "\[RuleDelayed]", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`r1", ",", "MaXrd`Private`r2", ",", 
                    "MaXrd`Private`r3"}], "}"}], " ", "\[Degree]"}], 
                    "]"}]}]}], "}"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`p", "=", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", "#1", "]"}], "&"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`P", "[", "MaXrd`Private`x_", "]"}],
                     ":=", 
                    RowBox[{
                    "MaXrd`Private`p", "[", "MaXrd`Private`x", "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`P", "[", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`x_", ",", "MaXrd`Private`y_"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`p", "[", "MaXrd`Private`x", "]"}], 
                    "&&", 
                    RowBox[{
                    "MaXrd`Private`p", "[", "MaXrd`Private`y", "]"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`CheckAndMakeRuleList", "[", 
                    "MaXrd`Private`input_", "]"}], ":=", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`input", "===", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "||", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Integer", ",", "Real", ",", "List"}], "}"}], ",", 
                    RowBox[{"Head", "/@", "MaXrd`Private`input"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", 
                    RowBox[{"MaXrd`Private`CheckAndMakeRuleList", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "MaXrd`Private`input", "]"}], 
                    ",", "\<\"Numeric\"\>"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AllTrue", "[", 
                    RowBox[{"Input", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "===", "Rule"}], 
                    "&"}]}], "]"}], "&&", 
                    RowBox[{"AllTrue", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`input", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", "#1", "]"}], "===", "Condition"}], 
                    "&"}]}], "]"}]}], ")"}], "||", 
                    RowBox[{
                    RowBox[{"Head", "/@", "MaXrd`Private`input"}], "===", 
                    RowBox[{"{", 
                    RowBox[{"Condition", ",", "List"}], "}"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", 
                    RowBox[{"MaXrd`Private`CheckAndMakeRuleList", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "MaXrd`Private`input", "]"}], 
                    ",", "\<\"Conditions\"\>"}], "]"}]}], "}"}], ",", "True", 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidAlteration"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ",", 
                    RowBox[{"Abort", "[", "]"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`CheckAndMakeRuleList", "[", 
                    RowBox[{
                    "MaXrd`Private`input_", ",", "\<\"Conditions\"\>"}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`P", "/@", "#1"}], "=!=", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"MaXrd`Private`input", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "EmbedStructure", "::", "InvalidAlterationValues"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`input", "/.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_Condition", "\[Rule]", 
                    "MaXrd`Private`y_"}], "}"}], "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`x", "\[Rule]", 
                    RowBox[{"N", "[", "MaXrd`Private`y", "]"}]}], "}"}]}]}]}],
                     ")"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`CheckAndMakeRuleList", "[", 
                    RowBox[{"MaXrd`Private`input_", ",", "\<\"Numeric\"\>"}], 
                    "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`P", "/@", "MaXrd`Private`input"}], 
                    "=!=", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                    
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "EmbedStructure", "::", "InvalidAlterationValues"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    "MaXrd`Private`input"}], ")"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`conditionedDistortionsQ", ",", 
                    "MaXrd`Private`distortions"}], "}"}], "=", 
                    RowBox[{
                    "MaXrd`Private`CheckAndMakeRuleList", "[", 
                    "MaXrd`Private`distortions", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`distortions", "=", 
                    RowBox[{"MaXrd`Private`PrepareAlterationList", "[", 
                    RowBox[{
                    "MaXrd`Private`conditionedDistortionsQ", ",", 
                    "MaXrd`Private`distortions"}], "]"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "OptionValue", "[", "\<\"DistortionType\"\>", "]"}], 
                    "===", "\<\"Crystallographic\"\>"}], ",", "Null", ",", 
                    RowBox[{
                    RowBox[{
                    "OptionValue", "[", "\<\"DistortionType\"\>", "]"}], 
                    "===", "\<\"Cartesian\"\>"}], ",", 
                    RowBox[{"MaXrd`Private`distortions", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`hostMinverse", ".", "#1"}], "&"}], 
                    ")"}], "/@", "MaXrd`Private`distortions"}]}], ",", "True",
                     ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidDistortionType"}],
                     "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`conditionedRotationsQ", ",", 
                    "MaXrd`Private`rotations"}], "}"}], "=", 
                    RowBox[{
                    "MaXrd`Private`CheckAndMakeRuleList", "[", 
                    "MaXrd`Private`rotations", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`rotations", "=", 
                    RowBox[{"MaXrd`Private`PrepareAlterationList", "[", 
                    RowBox[{
                    "MaXrd`Private`conditionedRotationsQ", ",", 
                    "MaXrd`Private`rotations"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`completed", "=", "0"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"OptionValue", "[", "\<\"ShowProgress\"\>", "]"}],
                     "]"}], ",", 
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{"ProgressIndicator", "[", 
                    RowBox[{"Dynamic", "[", 
                    FractionBox["MaXrd`Private`completed", 
                    RowBox[{"Length", "[", "MaXrd`Private`targetPositions", 
                    "]"}]], "]"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`M", "=", 
                    RowBox[{"GetCrystalMetric", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`guestUnits", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"\<\"ToCartesian\"\>", "\[Rule]", "True"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`T", "=", 
                    RowBox[{"TranslationTransform", "[", 
                    RowBox[{
                    "MaXrd`Private`targetPositions", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`coordinatesCrystal", "=", 
                    RowBox[{
                    "MaXrd`Private`guestCopies", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "\<\"AtomData\"\>", ",", "All", 
                    ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinatesCartesian", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`M", ".", "#1"}], "&"}], ")"}], "/@",
                     "MaXrd`Private`coordinatesCrystal"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinatesCrystalEmbedded", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`hostMinverse", ".", "#1"}], "&"}], 
                    ")"}], "/@", "MaXrd`Private`coordinatesCartesian"}]}], 
                    ";", 
                    RowBox[{
                    "MaXrd`Private`coordinatesCrystalEmbeddedTranslated", "=", 
                    RowBox[{
                    "MaXrd`Private`T", "/@", 
                    "MaXrd`Private`coordinatesCrystalEmbedded"}]}], ";", 
                    RowBox[{
                    "MaXrd`Private`newCoordinates", "=", 
                    "MaXrd`Private`coordinatesCrystalEmbeddedTranslated"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`performShift", "||", 
                    "MaXrd`Private`performTwist"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`performTwist", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`twist", "=", 
                    RowBox[{
                    "MaXrd`Private`rotations", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinatesCartesian", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`hostM", ".", "#1"}], "&"}], ")"}], 
                    "/@", "MaXrd`Private`newCoordinates"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinatesCartesian", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "-", 
                    RowBox[{
                    "MaXrd`Private`targetPositionsCartesian", 
                    "\[LeftDoubleBracket]", "MaXrd`Private`i", 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`newCoordinatesCartesian"}]}], ";", 
                    RowBox[{"MaXrd`Private`twist", "=", 
                    RowBox[{"AffineTransform", "[", 
                    RowBox[{"RollPitchYawMatrix", "[", 
                    RowBox[{
                    "MaXrd`Private`twist", ",", 
                    "MaXrd`Private`rotationOrder"}], "]"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinatesCartesian", "=", 
                    RowBox[{
                    "MaXrd`Private`twist", "[", 
                    "MaXrd`Private`newCoordinatesCartesian", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinatesCartesian", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "+", 
                    RowBox[{
                    "MaXrd`Private`targetPositionsCartesian", 
                    "\[LeftDoubleBracket]", "MaXrd`Private`i", 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", 
                    "MaXrd`Private`newCoordinatesCartesian"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinates", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`hostMinverse", ".", "#1"}], "&"}], 
                    ")"}], "/@", 
                    "MaXrd`Private`newCoordinatesCartesian"}]}]}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`performShift", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`shift", "=", 
                    RowBox[{
                    "MaXrd`Private`distortions", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinates", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "+", "MaXrd`Private`shift"}], "&"}], ")"}], 
                    "/@", "MaXrd`Private`newCoordinates"}]}]}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`guestCopies", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "\<\"AtomData\"\>", ",", "All", 
                    ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    "MaXrd`Private`newCoordinates"}], ";", 
                    RowBox[{"MaXrd`Private`completed", "++"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "MaXrd`Private`nonVoidRange"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`atomDataHost", "=", 
                    RowBox[{"$CrystalData", "[", 
                    RowBox[{
                    "MaXrd`Private`hostCrystal", ",", "\<\"AtomData\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomDataGuest", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "MaXrd`Private`guestCopies", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "MaXrd`Private`nonVoidRange", ",", "\<\"AtomData\"\>"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`joinedAtomData", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\<\"Host\"\>", ",", "\<\"Guest\"\>"}], "}"}], 
                    ",", "MaXrd`Private`overlapPrecedence"}], "]"}]}], ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    "MaXrd`Private`atomDataHost", ",", 
                    "MaXrd`Private`atomDataGuest"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`findOverlap", "[", 
                    RowBox[{
                    "MaXrd`Private`point_", ",", 
                    "MaXrd`Private`region_List"}], "]"}], ":=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`region", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"Return", "[", "Nothing", "]"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`intervals", "=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#1", "-", "#2"}], ",", 
                    RowBox[{"#1", "+", "#2"}]}], "}"}], "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`point", ",", 
                    "MaXrd`Private`overlapRadius"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`checks", "=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntervalMemberQ", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`intervals", ",", 
                    RowBox[{"Transpose", "[", "MaXrd`Private`region", "]"}]}],
                     "}"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`checks", "=", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Apply", "[", 
                    RowBox[{"And", ",", 
                    RowBox[{"Transpose", "[", "MaXrd`Private`checks", "]"}], 
                    ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", "True"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`checks", "=!=", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"MaXrd`Private`region", "\[LeftDoubleBracket]", 
                    RowBox[{"Flatten", "[", "MaXrd`Private`checks", "]"}], 
                    "\[RightDoubleBracket]"}], ",", "Nothing"}], "]"}]}], 
                    ")"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`atomData1", ",", 
                    "MaXrd`Private`atomData2"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`overlapPrecedence", 
                    "===", "\<\"Host\"\>"}], ",", "#1", ",", 
                    RowBox[{"Reverse", "[", "#1", "]"}]}], "]"}], "&"}], 
                    ")"}], "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`atomDataHost", ",", 
                    "MaXrd`Private`atomDataGuest"}], "}"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`xyz1", ",", "MaXrd`Private`xyz2"}],
                     "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`atomData1", ",", 
                    "MaXrd`Private`atomData2"}], "}"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`nearestList", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Nearest", "[", 
                    RowBox[{"MaXrd`Private`xyz2", ",", "#1", ",", "5"}], 
                    "]"}], "&"}], ")"}], "/@", "MaXrd`Private`xyz1"}]}], ";", 
                    
                    RowBox[{"MaXrd`Private`overlappingCoordinates", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{"MaXrd`Private`findOverlap", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`xyz1", ",", "MaXrd`Private`nearestList"}], 
                    "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`atomData2", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"MaXrd`Private`atomData2", ",", 
                    RowBox[{"MaXrd`Private`x_", "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"MaXrd`Private`overlappingCoordinates", ",", 
                    RowBox[{
                    "MaXrd`Private`x", "[", "\<\"FractionalCoordinates\"\>", 
                    "]"}]}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    "MaXrd`Private`atomData1", ",", 
                    "MaXrd`Private`atomData2"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`boundary", "=!=", "\<\"None\"\>"}],
                     ",", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`boundary", "===", "\<\"Box\"\>"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`joinedAtomData", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"MaXrd`Private`joinedAtomData", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", 
                    RowBox[{"Nand", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", "#1", "<", "#2"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`y", ",", 
                    "MaXrd`Private`z"}], "}"}], ",", 
                    "MaXrd`Private`hostStructureSize"}], "}"}]}], "]"}]}]}], 
                    ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    "MaXrd`Private`boundary", "===", "\<\"OuterEdges\"\>"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`joinedAtomData", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"MaXrd`Private`joinedAtomData", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`z_"}], "}"}], "/;", 
                    RowBox[{"Nand", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", "#1", "<", "#2"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`x", ",", "MaXrd`Private`y"}], 
                    "}"}], ",", 
                    RowBox[{
                    "MaXrd`Private`hostStructureSize", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}]}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`joinedAtomData", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"MaXrd`Private`joinedAtomData", ",", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"#1", ",", "\<\"FractionalCoordinates\"\>"}], 
                    "]"}], "&"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`hostCopy", "[", "\<\"AtomData\"\>", "]"}], 
                    "=", "MaXrd`Private`joinedAtomData"}], ";", 
                    RowBox[{"Label", "[", "\<\"End\"\>", "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`newStructureLabel", "===", "\<\"\"\>"}], 
                    ",", 
                    RowBox[{
                    "MaXrd`Private`newStructureLabel", "=", 
                    "MaXrd`Private`hostCrystal"}]}], "]"}], ";", 
                    RowBox[{
                    "$CrystalData", "=", 
                    "MaXrd`Private`crystalDataOriginal"}], ";", 
                    RowBox[{"MaXrd`Private`newSize", "=", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    "MaXrd`Private`targetPositions", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"AnyTrue", "[", 
                    RowBox[{"MaXrd`Private`newSize", ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Equal]", "0"}], "&"}]}], "]"}], ",", 
                    RowBox[{"MaXrd`Private`newSize", "+=", "1"}]}], "]"}], 
                    ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`hostCopy", "[", "\<\"Notes\"\>", "]"}], 
                    ",", 
                    
                    RowBox[{"\<\"StructureSize\"\>", "\[Rule]", 
                    "MaXrd`Private`newSize"}]}], "]"}], ";", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"$CrystalData", ",", 
                    RowBox[{
                    "MaXrd`Private`newStructureLabel", "\[Rule]", 
                    "MaXrd`Private`hostCopy"}]}], "]"}], ";", 
                    RowBox[{
                    "InputCheck", 
                    "[", "\<\"Update$CrystalDataAutoCompletion\"\>", "]"}], 
                    ";", "MaXrd`Private`newStructureLabel"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "EmbedStructure", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`EmbedStructure] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Blank[], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    
                    RowBox[{"\<\"DistortionType\"\>", 
                    "\[Rule]", "\<\"Cartesian\"\>"}]},
                    {
                    RowBox[{"\<\"Distortions\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]},
                    {
                    RowBox[{"\<\"MatchHostSize\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"NewLabel\"\>", "\[Rule]", "\<\"\"\>"}]},
                    {
                    
                    RowBox[{"\<\"OverlapPrecedence\"\>", 
                    "\[Rule]", "\<\"\"\>"}]},
                    {
                    RowBox[{"\<\"OverlapRadius\"\>", "\[Rule]", "1.`"}]},
                    {
                    RowBox[{"\<\"RotationOrder\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]},
                    {
                    RowBox[{"\<\"Rotations\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]},
                    {
                    RowBox[{"\<\"ShowProgress\"\>", "\[Rule]", "False"}]},
                    {
                    
                    RowBox[{"\<\"TrimBoundary\"\>", 
                    "\[Rule]", "\<\"None\"\>"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","10","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    
                    RowBox[{"\<\"DistortionType\"\>", 
                    "\[Rule]", "\<\"Cartesian\"\>"}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","10","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`EmbedStructure\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/EmbedStructure",
              ButtonNote->"paclet:MaXrd/ref/EmbedStructure"],
             "\"paclet:MaXrd/ref/EmbedStructure\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EmbedStructure\\\", \\\"[\\\", \
StyleBox[\\\"guestUnits\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"targetPositions\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"hostCrystal\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" embeds \\\", \
Cell[BoxData[StyleBox[\\\"guestUnits\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" at \\\", \
Cell[BoxData[StyleBox[\\\"targetPositions\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" into \\\", Cell[BoxData[StyleBox[\\\"hostCrystal\
\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"EmbedStructure\", \"[\", StyleBox[\"guestUnits\", \
\"TI\"], \",\", StyleBox[\"targetPositions\", \"TI\"], \",\", \
StyleBox[\"hostCrystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" embeds \", \
Cell[BoxData[StyleBox[\"guestUnits\", \"TI\"]], \"InlineFormula\"], \" at \", \
Cell[BoxData[StyleBox[\"targetPositions\", \"TI\"]], \"InlineFormula\"], \" \
into \", Cell[BoxData[StyleBox[\"hostCrystal\", \"TI\"]], \"InlineFormula\"], \
\".\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/EmbedStructure"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`EmbedStructure, {MaXrd`EmbedStructure[
         Pattern[MaXrd`Private`guestUnitsInput, 
          Blank[]], 
         Pattern[MaXrd`Private`targetPositionsInput, 
          Blank[List]], 
         Pattern[MaXrd`Private`hostCrystal, 
          Blank[String]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`newStructureLabel = OptionValue["NewLabel"], 
          MaXrd`Private`invAbort, MaXrd`Private`conditionFilterQ = False, 
          MaXrd`Private`crystalDataOriginal = MaXrd`$CrystalData, 
          MaXrd`Private`hostStructureSize, MaXrd`Private`newSize, 
          MaXrd`Private`guestUnits, MaXrd`Private`guestCopies, 
          MaXrd`Private`crystalLabels, MaXrd`Private`nonVoidRange, 
          MaXrd`Private`makeElementCrystal, MaXrd`Private`matchHostSizeQ = 
          TrueQ[
            OptionValue["MatchHostSize"]], MaXrd`Private`rotationOrder = 
          OptionValue["RotationOrder"], MaXrd`Private`targetPositions = 
          MaXrd`Private`targetPositionsInput, MaXrd`Private`numberOfHosts, 
          MaXrd`Private`copyTranslations, MaXrd`Private`hostCoordinates, 
          MaXrd`Private`mid, MaXrd`Private`latticeParameters, 
          MaXrd`Private`latticeParametersABC, MaXrd`Private`hostM, 
          MaXrd`Private`hostMinverse, MaXrd`Private`targetPositionsCartesian, 
          MaXrd`Private`completed, MaXrd`Private`M, MaXrd`Private`T, 
          MaXrd`Private`p, MaXrd`Private`P, 
          MaXrd`Private`CheckAndMakeRuleList, MaXrd`Private`distortions, 
          MaXrd`Private`rotations, MaXrd`Private`performShift, 
          MaXrd`Private`performTwist, MaXrd`Private`conditions, 
          MaXrd`Private`list, MaXrd`Private`shift, MaXrd`Private`twist, 
          MaXrd`Private`MakeAlteration, MaXrd`Private`PrepareAlterationList, 
          MaXrd`Private`conditionedDistortionsQ = False, 
          MaXrd`Private`conditionedRotationsQ = False, 
          MaXrd`Private`coordinatesCrystal, 
          MaXrd`Private`coordinatesCartesian, 
          MaXrd`Private`coordinatesCrystalEmbedded, 
          MaXrd`Private`coordinatesCrystalEmbeddedTranslated, 
          MaXrd`Private`newCoordinates, MaXrd`Private`newCoordinatesCartesian,
           MaXrd`Private`atomDataHost, MaXrd`Private`atomDataGuest, 
          MaXrd`Private`joinedAtomData, MaXrd`Private`boundary, 
          MaXrd`Private`hostCopy, MaXrd`Private`findOverlap, 
          MaXrd`Private`intervals, MaXrd`Private`checks, 
          MaXrd`Private`atomData1, MaXrd`Private`atomData2, 
          MaXrd`Private`xyz1, MaXrd`Private`xyz2, MaXrd`Private`nearestList, 
          MaXrd`Private`overlappingCoordinates, 
          MaXrd`Private`overlapPrecedence = OptionValue["OverlapPrecedence"], 
          MaXrd`Private`overlapRadius = OptionValue["OverlapRadius"]}, 
         If[MaXrd`Private`hostCrystal === "Void", Message[
             MessageName[MaXrd`EmbedStructure, "VoidHost"]]; Abort[]]; 
         MaXrd`Private`boundary = OptionValue["TrimBoundary"]; If[
           Not[
            MemberQ[{"Box", "None", "OuterEdges"}, MaXrd`Private`boundary]], 
           Message[
             MessageName[MaXrd`EmbedStructure, "InvalidTrimming"]]; Abort[]]; 
         If[Sort[MaXrd`Private`rotationOrder] =!= {1, 2, 3}, Message[
             MessageName[MaXrd`EmbedStructure, "InvalidRotationOrder"]]; 
           Abort[]]; If[
           Not[
            NumericQ[MaXrd`Private`overlapRadius]], Message[
             MessageName[MaXrd`EmbedStructure, "InvalidOverlapRadius"]]; 
           Abort[]]; MaXrd`Private`invAbort[] := (Message[
             MessageName[MaXrd`EmbedStructure, "InvalidGuestInput"]]; 
           Abort[]); Which[
           ListQ[MaXrd`Private`guestUnitsInput], 
           If[MaXrd`Private`guestUnitsInput === {}, 
             MaXrd`Private`invAbort[]]; Which[
             And[
              AllTrue[MaXrd`Private`guestUnitsInput, StringQ], 
              Depth[MaXrd`Private`guestUnitsInput] === 2], Null, 
             And[
              AllTrue[MaXrd`Private`guestUnitsInput, Head[#] === Rule& ], 
              AllTrue[
               Part[MaXrd`Private`guestUnitsInput, All, 1], Head[#] === 
               Condition& ]], MaXrd`Private`conditionFilterQ = True, True, 
             MaXrd`Private`invAbort[]], Head[MaXrd`Private`guestUnitsInput] === 
           Rule, If[
             Not[
              MatchQ[
               Map[Length, MaXrd`Private`guestUnitsInput], 
               Pattern[MaXrd`Private`x, 
                 Blank[]] -> Condition[
                 Pattern[MaXrd`Private`x, 
                  Blank[]], MaXrd`Private`x == MaXrd`Private`x]]], 
             MaXrd`Private`invAbort[]]; If[
             Not[
              AllTrue[
               Part[MaXrd`Private`guestUnitsInput, 1], 0. <= # <= 1.& ]], 
             Message[
               MessageName[MaXrd`EmbedStructure, "InvalidProbabilities"]]; 
             Abort[]], True, 
           MaXrd`Private`invAbort[]]; If[
           Not[
            MatchQ[
             Dimensions[MaXrd`Private`targetPositionsInput], {
              Blank[], 3}]], Message[
             MessageName[MaXrd`EmbedStructure, "InvalidTargetPositions"]]; 
           Abort[]]; 
         MaXrd`Private`crystalLabels = Flatten[{MaXrd`Private`hostCrystal, 
             (If[MaXrd`Private`conditionFilterQ, 
              Part[#, All, 2], #]& )[MaXrd`Private`guestUnitsInput]}]; 
         MaXrd`Private`crystalLabels = 
          DeleteCases[MaXrd`Private`crystalLabels, "Void"]; 
         MaXrd`Private`makeElementCrystal[
            Pattern[MaXrd`Private`x, 
             Blank[]]] := 
          MaXrd`ImportCrystalData[{MaXrd`Private`x, MaXrd`Private`x, "P1"}, {
            1., 1., 1., 90., 90., 90.}, {
             Association[
             "Element" -> MaXrd`Private`x, 
              "FractionalCoordinates" -> {0., 0., 0.}, 
              "DisplacementParameters" -> 0, "Type" -> "Uiso"]}, 
            "OverwriteWarning" -> False]; 
         Map[MaXrd`Private`makeElementCrystal, 
           Intersection[MaXrd`Private`crystalLabels, 
            Keys[MaXrd`$PeriodicTable]]]; 
         Scan[MaXrd`InputCheck[#, "CrystalQ"]& , MaXrd`Private`crystalLabels]; 
         MaXrd`Private`overlapRadius = MaXrd`Private`overlapRadius/Part[
            MaXrd`GetLatticeParameters[
            MaXrd`Private`hostCrystal, "Units" -> False], {1, 2, 3}]; 
         MaXrd`Private`hostCopy = 
          MaXrd`$CrystalData[MaXrd`Private`hostCrystal]; 
         MaXrd`Private`hostCoordinates = 
          Part[MaXrd`Private`hostCopy, "AtomData", All, 
            "FractionalCoordinates"]; 
         MaXrd`Private`hostStructureSize = 
          MaXrd`Private`hostCopy["Notes"]["StructureSize"]; If[
           Not[
            ListQ[MaXrd`Private`hostStructureSize]], 
           MaXrd`Private`hostStructureSize = {0, 0, 0}]; If[
           And[
           MaXrd`Private`matchHostSizeQ, 
            MaXrd`Private`hostStructureSize =!= {0, 0, 0}], 
           MaXrd`Private`copyTranslations = Flatten[
              Apply[
              Table[{MaXrd`Private`i, MaXrd`Private`j, MaXrd`Private`k}, {
                MaXrd`Private`i, 0, #}, {MaXrd`Private`j, 0, #2}, {
                MaXrd`Private`k, 0, #3}]& , MaXrd`Private`hostStructureSize], 
              2]; MaXrd`Private`targetPositions = Flatten[
              Outer[
              Plus, MaXrd`Private`copyTranslations, 
               MaXrd`Private`targetPositions, 1], 1]; 
           MaXrd`Private`targetPositions = 
            DeleteCases[MaXrd`Private`targetPositions, 
              Condition[{
                Pattern[MaXrd`Private`x, 
                 Blank[]], 
                Pattern[MaXrd`Private`y, 
                 Blank[]], 
                Pattern[MaXrd`Private`z, 
                 Blank[]]}, 
               Apply[Or, 
                MapThread[
                Greater, {{MaXrd`Private`x, MaXrd`Private`y, MaXrd`Private`z},
                   MaXrd`Private`hostStructureSize}]]]]; If[
             AnyTrue[
              Flatten[MaXrd`Private`hostCoordinates], # < -1.& ], 
             MaXrd`Private`mid = Floor[MaXrd`Private`hostStructureSize/2.]; 
             MaXrd`Private`targetPositions = 
              Map[# - MaXrd`Private`mid& , MaXrd`Private`targetPositions]]]; 
         MaXrd`Private`numberOfHosts = Length[MaXrd`Private`targetPositions]; 
         MaXrd`Private`guestUnits = Which[MaXrd`Private`conditionFilterQ, 
            ReplaceAll[MaXrd`Private`targetPositions, 
             Append[MaXrd`Private`guestUnitsInput, Condition[{
                 Pattern[MaXrd`Private`x, 
                  Blank[]], 
                 Pattern[MaXrd`Private`y, 
                  Blank[]], 
                 Pattern[MaXrd`Private`z, 
                  Blank[]]}, True] -> "Void"]], 
            Head[MaXrd`Private`guestUnitsInput] === Rule, 
            RandomChoice[MaXrd`Private`guestUnitsInput, 
             Length[MaXrd`Private`targetPositions]], True, 
            (PadRight[#, 
             Length[MaXrd`Private`targetPositions], #]& )[
            MaXrd`Private`guestUnitsInput]]; 
         MaXrd`Private`guestCopies = 
          Map[MaXrd`$CrystalData, MaXrd`Private`guestUnits]; 
         MaXrd`Private`nonVoidRange = Complement[
            Range[MaXrd`Private`numberOfHosts], 
            Flatten[
             Position[MaXrd`Private`guestCopies, 
              Blank[Missing]]]]; If[MaXrd`Private`nonVoidRange === {}, 
           Goto["End"]]; 
         MaXrd`Private`latticeParameters = 
          MaXrd`GetLatticeParameters[
           MaXrd`Private`hostCrystal, "Units" -> False]; 
         MaXrd`Private`latticeParametersABC = 
          Part[MaXrd`Private`latticeParameters, 
            Span[1, 3]]; 
         MaXrd`Private`hostM = 
          MaXrd`GetCrystalMetric[
           MaXrd`Private`hostCrystal, "ToCartesian" -> True]; 
         MaXrd`Private`hostMinverse = Inverse[MaXrd`Private`hostM]; 
         MaXrd`Private`targetPositionsCartesian = 
          Map[Dot[MaXrd`Private`hostM, #]& , MaXrd`Private`targetPositions]; 
         MaXrd`Private`MakeAlteration[
            Pattern[MaXrd`Private`c, 
             Blank[]]] := MaXrd`Private`c; MaXrd`Private`MakeAlteration[{
             Pattern[MaXrd`Private`min, 
              Blank[]], 
             Pattern[MaXrd`Private`max, 
              Blank[]]}] := Hold[
            RandomReal[{MaXrd`Private`min, MaXrd`Private`max}]]; 
         MaXrd`Private`MakeAlteration[{
             Pattern[MaXrd`Private`x, 
              Blank[]], 
             Pattern[MaXrd`Private`y, 
              Blank[]], 
             Pattern[MaXrd`Private`z, 
              Blank[]]}] := 
          Map[MaXrd`Private`MakeAlteration, {
            MaXrd`Private`x, MaXrd`Private`y, MaXrd`Private`z}]; 
         MaXrd`Private`PrepareAlterationList[
            Pattern[MaXrd`Private`conditionsQ, 
             Blank[]], 
            Pattern[MaXrd`Private`ruleList, 
             Blank[List]]] := 
          If[MaXrd`Private`conditionsQ, 
            MaXrd`Private`conditions = 
             Append[MaXrd`Private`ruleList, Condition[{
                  Pattern[MaXrd`Private`x, 
                   Blank[]], 
                  Pattern[MaXrd`Private`y, 
                   Blank[]], 
                  Pattern[MaXrd`Private`z, 
                   Blank[]]}, True] -> {0., 0., 0.}]; 
            MaXrd`Private`list = 
             Map[MaXrd`Private`MakeAlteration, MaXrd`Private`conditions, {2}]; 
            Map[ReplaceAll[#, 
               ReleaseHold[MaXrd`Private`list]]& , 
              MaXrd`Private`targetPositions], 
            ReleaseHold[
             ConstantArray[
              Map[MaXrd`Private`MakeAlteration, MaXrd`Private`ruleList], 
              MaXrd`Private`numberOfHosts]]]; 
         MaXrd`Private`distortions = OptionValue["Distortions"]; 
         MaXrd`Private`performShift = MaXrd`Private`distortions =!= {0, 0, 0}; 
         MaXrd`Private`rotations = OptionValue["Rotations"]; 
         MaXrd`Private`performTwist = MaXrd`Private`rotations =!= {0, 0, 0}; 
         MaXrd`Private`rotations = 
          ReplaceAll[MaXrd`Private`rotations, {(Pattern[MaXrd`Private`c, 
                Blank[Condition]] -> Pattern[MaXrd`Private`r, 
                Blank[List]]) :> (N[MaXrd`Private`c] -> 
              N[MaXrd`Private`r Degree]), {
               Pattern[MaXrd`Private`r1, 
                Blank[]], 
               Pattern[MaXrd`Private`r2, 
                Blank[]], 
               Pattern[MaXrd`Private`r3, 
                Blank[]]} :> 
             N[{MaXrd`Private`r1, MaXrd`Private`r2, MaXrd`Private`r3} 
               Degree]}]; MaXrd`Private`p = NumericQ[#]& ; MaXrd`Private`P[
            Pattern[MaXrd`Private`x, 
             Blank[]]] := MaXrd`Private`p[MaXrd`Private`x]; MaXrd`Private`P[{
             Pattern[MaXrd`Private`x, 
              Blank[]], 
             Pattern[MaXrd`Private`y, 
              Blank[]]}] := And[
            MaXrd`Private`p[MaXrd`Private`x], 
            MaXrd`Private`p[MaXrd`Private`y]]; 
         MaXrd`Private`CheckAndMakeRuleList[
            Pattern[MaXrd`Private`input, 
             Blank[]]] := Check[
            Which[
             Or[MaXrd`Private`input === {0, 0, 0}, 
              SubsetQ[{Integer, Real, List}, 
               Map[Head, MaXrd`Private`input]]], {False, 
              MaXrd`Private`CheckAndMakeRuleList[
               N[MaXrd`Private`input], "Numeric"]}, 
             Or[
              And[
               AllTrue[Input, Head[#] === Rule& ], 
               AllTrue[
                Part[MaXrd`Private`input, All, 1], Head[#] === Condition& ]], 
              Map[Head, MaXrd`Private`input] === {Condition, List}], {True, 
              MaXrd`Private`CheckAndMakeRuleList[
               N[MaXrd`Private`input], "Conditions"]}, True, Message[
               MessageName[MaXrd`EmbedStructure, "InvalidAlteration"]]; 
             Abort[]], 
            Abort[]]; MaXrd`Private`CheckAndMakeRuleList[
            Pattern[MaXrd`Private`input, 
             Blank[]], "Conditions"] := (If[
             Map[Map[MaXrd`Private`P, #] =!= {True, True, True}& , 
              Part[MaXrd`Private`input, All, 2]], Message[
               MessageName[MaXrd`EmbedStructure, "InvalidAlterationValues"]]; 
             Abort[]]; 
           ReplaceAll[MaXrd`Private`input, {Pattern[MaXrd`Private`x, 
                 Blank[Condition]] -> Pattern[MaXrd`Private`y, 
                 Blank[]]} :> {MaXrd`Private`x -> N[MaXrd`Private`y]}]); 
         MaXrd`Private`CheckAndMakeRuleList[
            Pattern[MaXrd`Private`input, 
             Blank[]], "Numeric"] := (
           If[Map[MaXrd`Private`P, MaXrd`Private`input] =!= {
              True, True, True}, Message[
               MessageName[MaXrd`EmbedStructure, "InvalidAlterationValues"]]; 
             Abort[]]; MaXrd`Private`input); {
           MaXrd`Private`conditionedDistortionsQ, MaXrd`Private`distortions} = 
          MaXrd`Private`CheckAndMakeRuleList[MaXrd`Private`distortions]; 
         MaXrd`Private`distortions = 
          MaXrd`Private`PrepareAlterationList[
           MaXrd`Private`conditionedDistortionsQ, MaXrd`Private`distortions]; 
         Which[OptionValue["DistortionType"] === "Crystallographic", Null, 
           OptionValue["DistortionType"] === "Cartesian", 
           MaXrd`Private`distortions = 
           Map[Dot[MaXrd`Private`hostMinverse, #]& , 
             MaXrd`Private`distortions], True, Message[
             MessageName[MaXrd`EmbedStructure, "InvalidDistortionType"]]; 
           Abort[]]; {
           MaXrd`Private`conditionedRotationsQ, MaXrd`Private`rotations} = 
          MaXrd`Private`CheckAndMakeRuleList[MaXrd`Private`rotations]; 
         MaXrd`Private`rotations = 
          MaXrd`Private`PrepareAlterationList[
           MaXrd`Private`conditionedRotationsQ, MaXrd`Private`rotations]; 
         MaXrd`Private`completed = 0; If[
           TrueQ[
            OptionValue["ShowProgress"]], 
           PrintTemporary[
            ProgressIndicator[
             Dynamic[
             MaXrd`Private`completed/Length[
              MaXrd`Private`targetPositions]]]]]; 
         Do[MaXrd`Private`M = MaXrd`GetCrystalMetric[
              Part[MaXrd`Private`guestUnits, MaXrd`Private`i], "ToCartesian" -> 
              True]; MaXrd`Private`T = TranslationTransform[
              Part[MaXrd`Private`targetPositions, MaXrd`Private`i]]; 
           MaXrd`Private`coordinatesCrystal = 
            Part[MaXrd`Private`guestCopies, MaXrd`Private`i, "AtomData", All, 
              "FractionalCoordinates"]; 
           MaXrd`Private`coordinatesCartesian = 
            Map[Dot[MaXrd`Private`M, #]& , MaXrd`Private`coordinatesCrystal]; 
           MaXrd`Private`coordinatesCrystalEmbedded = 
            Map[
             Dot[MaXrd`Private`hostMinverse, #]& , 
              MaXrd`Private`coordinatesCartesian]; 
           MaXrd`Private`coordinatesCrystalEmbeddedTranslated = 
            Map[MaXrd`Private`T, MaXrd`Private`coordinatesCrystalEmbedded]; 
           MaXrd`Private`newCoordinates = 
            MaXrd`Private`coordinatesCrystalEmbeddedTranslated; If[
             Or[MaXrd`Private`performShift, MaXrd`Private`performTwist], 
             If[MaXrd`Private`performTwist, 
               MaXrd`Private`twist = 
                Part[MaXrd`Private`rotations, MaXrd`Private`i]; 
               MaXrd`Private`newCoordinatesCartesian = 
                Map[Dot[MaXrd`Private`hostM, #]& , 
                  MaXrd`Private`newCoordinates]; 
               MaXrd`Private`newCoordinatesCartesian = 
                Map[# - Part[
                  MaXrd`Private`targetPositionsCartesian, MaXrd`Private`i]& , 
                  MaXrd`Private`newCoordinatesCartesian]; 
               MaXrd`Private`twist = AffineTransform[
                  RollPitchYawMatrix[
                  MaXrd`Private`twist, MaXrd`Private`rotationOrder]]; 
               MaXrd`Private`newCoordinatesCartesian = 
                MaXrd`Private`twist[MaXrd`Private`newCoordinatesCartesian]; 
               MaXrd`Private`newCoordinatesCartesian = 
                Map[# + Part[
                   MaXrd`Private`targetPositionsCartesian, MaXrd`Private`i]& ,
                   MaXrd`Private`newCoordinatesCartesian]; 
               MaXrd`Private`newCoordinates = 
                Map[Dot[MaXrd`Private`hostMinverse, #]& , 
                  MaXrd`Private`newCoordinatesCartesian]]; 
             If[MaXrd`Private`performShift, 
               MaXrd`Private`shift = 
                Part[MaXrd`Private`distortions, MaXrd`Private`i]; 
               MaXrd`Private`newCoordinates = 
                Map[# + MaXrd`Private`shift& , 
                  MaXrd`Private`newCoordinates]]]; 
           Part[MaXrd`Private`guestCopies, MaXrd`Private`i, "AtomData", All, 
              "FractionalCoordinates"] = MaXrd`Private`newCoordinates; 
           Increment[MaXrd`Private`completed], {
           MaXrd`Private`i, MaXrd`Private`nonVoidRange}]; 
         MaXrd`Private`atomDataHost = 
          MaXrd`$CrystalData[MaXrd`Private`hostCrystal, "AtomData"]; 
         MaXrd`Private`atomDataGuest = Flatten[
            Part[
            MaXrd`Private`guestCopies, MaXrd`Private`nonVoidRange, 
             "AtomData"]]; MaXrd`Private`joinedAtomData = If[
            Not[
             MemberQ[{"Host", "Guest"}, MaXrd`Private`overlapPrecedence]], 
            Join[MaXrd`Private`atomDataHost, MaXrd`Private`atomDataGuest], 
            MaXrd`Private`findOverlap[
               Pattern[MaXrd`Private`point, 
                Blank[]], 
               Pattern[MaXrd`Private`region, 
                Blank[List]]] := (If[MaXrd`Private`region === {}, 
                Return[Nothing]]; 
              MaXrd`Private`intervals = 
               MapThread[
                Interval[{# - #2, # + #2}]& , {
                 MaXrd`Private`point, MaXrd`Private`overlapRadius}]; 
              MaXrd`Private`checks = 
               MapThread[IntervalMemberQ[#, #2]& , {MaXrd`Private`intervals, 
                  Transpose[MaXrd`Private`region]}]; 
              MaXrd`Private`checks = Position[
                 Apply[And, 
                  Transpose[MaXrd`Private`checks], {1}], True]; 
              If[MaXrd`Private`checks =!= {}, 
                Part[MaXrd`Private`region, 
                 Flatten[MaXrd`Private`checks]], Nothing]); {
              MaXrd`Private`atomData1, MaXrd`Private`atomData2} = (If[
              MaXrd`Private`overlapPrecedence === "Host", #, 
               Reverse[#]]& )[{
               MaXrd`Private`atomDataHost, MaXrd`Private`atomDataGuest}]; {
              MaXrd`Private`xyz1, MaXrd`Private`xyz2} = 
             Map[Part[#, All, "FractionalCoordinates"]& , {
               MaXrd`Private`atomData1, MaXrd`Private`atomData2}]; 
            MaXrd`Private`nearestList = 
             Map[Nearest[MaXrd`Private`xyz2, #, 5]& , MaXrd`Private`xyz1]; 
            MaXrd`Private`overlappingCoordinates = Flatten[
               MapThread[
               MaXrd`Private`findOverlap, {
                MaXrd`Private`xyz1, MaXrd`Private`nearestList}], 1]; 
            MaXrd`Private`atomData2 = DeleteCases[MaXrd`Private`atomData2, 
               Condition[
                Pattern[MaXrd`Private`x, 
                 Blank[]], 
                MemberQ[MaXrd`Private`overlappingCoordinates, 
                 MaXrd`Private`x["FractionalCoordinates"]]]]; 
            Join[MaXrd`Private`atomData1, MaXrd`Private`atomData2]]; 
         If[
          MaXrd`Private`boundary =!= "None", 
           Which[MaXrd`Private`boundary === "Box", 
             MaXrd`Private`joinedAtomData = 
             DeleteCases[MaXrd`Private`joinedAtomData, 
               Condition[{
                 Pattern[MaXrd`Private`x, 
                  Blank[]], 
                 Pattern[MaXrd`Private`y, 
                  Blank[]], 
                 Pattern[MaXrd`Private`z, 
                  Blank[]]}, 
                Apply[Nand, 
                 MapThread[
                 Inequality[
                  0, LessEqual, #, Less, #2]& , {{
                   MaXrd`Private`x, MaXrd`Private`y, MaXrd`Private`z}, 
                   MaXrd`Private`hostStructureSize}]]], {2}], 
             MaXrd`Private`boundary === "OuterEdges", 
             MaXrd`Private`joinedAtomData = 
             DeleteCases[MaXrd`Private`joinedAtomData, 
               Condition[{
                 Pattern[MaXrd`Private`x, 
                  Blank[]], 
                 Pattern[MaXrd`Private`y, 
                  Blank[]], 
                 Pattern[MaXrd`Private`z, 
                  Blank[]]}, 
                Apply[Nand, 
                 MapThread[
                 Inequality[
                  0, LessEqual, #, Less, #2]& , {{
                   MaXrd`Private`x, MaXrd`Private`y}, 
                   Part[MaXrd`Private`hostStructureSize, {1, 2}]}]]], {2}]]; 
           MaXrd`Private`joinedAtomData = 
            Select[MaXrd`Private`joinedAtomData, 
              KeyExistsQ[#, "FractionalCoordinates"]& ]]; 
         MaXrd`Private`hostCopy["AtomData"] = MaXrd`Private`joinedAtomData; 
         Label["End"]; 
         If[MaXrd`Private`newStructureLabel === "", 
           MaXrd`Private`newStructureLabel = MaXrd`Private`hostCrystal]; 
         MaXrd`$CrystalData = MaXrd`Private`crystalDataOriginal; 
         MaXrd`Private`newSize = Ceiling[
            Part[MaXrd`Private`targetPositions, -1]]; If[
           AnyTrue[MaXrd`Private`newSize, # == 0& ], 
           AddTo[MaXrd`Private`newSize, 1]]; AppendTo[
           MaXrd`Private`hostCopy["Notes"], "StructureSize" -> 
           MaXrd`Private`newSize]; 
         AssociateTo[
          MaXrd`$CrystalData, MaXrd`Private`newStructureLabel -> 
           MaXrd`Private`hostCopy]; 
         MaXrd`InputCheck["Update$CrystalDataAutoCompletion"]; 
         MaXrd`Private`newStructureLabel]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`EmbedStructure, {
      SyntaxInformation[MaXrd`EmbedStructure] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Blank[], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "DistortionType" -> "Cartesian", "Distortions" -> {0, 0, 0}, 
      "MatchHostSize" -> True, "NewLabel" -> "", "OverlapPrecedence" -> "", 
      "OverlapRadius" -> 1., "RotationOrder" -> {1, 2, 3}, 
      "Rotations" -> {0, 0, 0}, "ShowProgress" -> False, "TrimBoundary" -> 
      "None"}, "Attributes" -> {}, "FullName" -> "MaXrd`EmbedStructure"], 
   False]]], "Output",
 CellChangeTimes->{3.7806796270404043`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"37adc125-bb84-442c-859d-a72333d8b37b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"embeddedStructure", "=", 
  RowBox[{"EmbedStructure", "[", 
   RowBox[{
    RowBox[{"{", "\"\<FerroceneMolecule\>\"", "}"}], ",", "targetPositions", 
    ",", "\"\<ThioureaHost_4x3x1\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<NewLabel\>\"", "\[Rule]", "\"\<EmbeddedDemoStructure\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.780645405984021*^9, 3.780645446970194*^9}, {
  3.780646929085503*^9, 3.7806469517809362`*^9}, {3.780647002860362*^9, 
  3.7806470140415907`*^9}, {3.780655580098062*^9, 3.780655596735362*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"a507ec8f-79c5-4f08-b858-7746e7b41269"],

Cell[BoxData["\<\"EmbeddedDemoStructure\"\>"], "Output",
 CellChangeTimes->{3.780679629389209*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"88281f45-05f0-4a10-a13e-4b0c1cb9380c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "@", "embeddedStructure"}]], "Input",
 CellChangeTimes->{{3.780645441071989*^9, 3.78064545049894*^9}, {
  3.780655588881844*^9, 3.7806555992150373`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"fd42a311-1d1f-4d51-a941-dd5012780efb"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxl1n1MllUYBnBE/wCZpIJmhSx14JvoVBBoKHnkM0hRwZozNHQCzvyoNLEX
piYzkak5rfwAFdkSlRViiFiobyk5ZCusJMCGpuCAuYWpy1Cp5+25r7N1HTf/
uXb2cO77nPd3n1FLVqdmenp4eNyx/ve3/h988cyA2od+yue295ZTLaPVTc81
QSWV/ir9fp7j/MP+rg192YMSNoTo/MasezfPWrlz8e64qOX+Ou9KyluQVz5c
Zc33r1k5ZLQq37Fos//OnulfezWVDUwZpybNLDtxsmWozsflVEc4rfWH51Ue
2u/VMh35upLc7VGLvfX6M0mlWSceBajY0/snFs8J0uuRtzdUjyyycvxd5G32
PhX2ufeX86eXXAxWUq8L9SKXehXqRf7mf7mf8pB/Z59sfXD98GjJ+7uKln5Y
Ny5piEKOuq41Fec8PDKGcxfymUcHJgRd85I8WH8fuXxf4fvI19r9cT1b/VVF
4K5I3X/pj6vx4q01y25N1fltuz+unvS0vp+jw3R+U86xruflpCchkfpciuU+
HNrbvLeyJVTnuA/1fmllP/pO0Pkh6SfWo//oJ9Yj/03OBX8Xead9f/Q+0X+5
P7pe5Ogn6kXe2/tHXITVnzHbFrYWJozX/Ud/akZ+HLjr/VCdz5e6Hk986lAP
InXuUXXN1XUsROfo/yP7+wrfRx4i+8H3kW/L2P9qbnmwa170u76nWmJ0/5uH
Fy5vvxrqmnypoKfJM17nY0v3/X7byl2Dvz29/aTSeYecY3lr2PWSshjd//Vy
H0Z8mb85d4PSOepdl9KsvjgxTeffSD+xHv1HP7Ee+V05F/xd5G8drPmp2+oP
9on+71HHjhbNCdf1Iu8n/US9/z/HYDmvabr/6E/Qvba65TOVzmOkroTeYQ3f
+cTqPGK4I8ynL1zn6L99D/3095F7yn7wfeQNOSNWpW0Mc7UGfz+mc0q8/v7z
f9ac9bH6hhzrP7HrNfyU7yv2M8Pum2I/7xQ+V2vt3/CzPi/z78nOaMNPqdfw
03nX+y9r/4afg9ISzzkfRxl+Lmp7fYo7Zz8d9j00/Cy077NiP+W8DD/texhu
+Cn3QbGfqIv9hP/sp/07nWr4if2wn7Uyj9jP8eI2+9ktc439lPuv2E+5/4af
4oliPwukn+znr7J/9hPnwn6KD4r9FB8U+xkn/WQ/5Z4r9hNzjf1EXexnhvjP
fl6xf1+Gnzhf9rNE5hH7CbfZz2aZa+xnu5wj+4n3CfvpkHrZz3ekn+ynuKTY
z1tyLuxnp8xB9lPmr+En+sl+im+K/ZT1hp+oi/2U3PDTIe8T9lP6r9hPmY+G
nz0yN9nPTelDgtuvxhh+rkzt2HJk7CuGnwGXm3xLrZz9PN7vyqRiR6zhZ1Hv
6tkVdxIMP+cmzr1bZK1nP9eExqSorhmGn+c6MirTyuINPzNDOle4c/Yzece2
2ILdMww/Kx2Xk7otr9jP0kTPAvd69tN2LMbwE/1hP1EX++kr/rOftrfxhp/Y
D/vZIPOI/YwUt9lPzDX2E+fIfuI+sJ9vS73sZ4X0k/3E/tlPnAv7iTnIfubK
PGU/n5F+sp/Oe29sDrX6w35irrGfK6Qu9hPzi/18YX29t/t+sp84X/bzU5lH
7CfeJ+znEplrxvtTzpH9xPuE/QyXetnPD6Sf7CfeJ+znQjkX9vMlmYPsJ94n
7GeL9JP9jJP3CfuJucZ+4hzZT8xT9hPvE/YT58t+Bsj8ZT8xN9nP6n0/rHc+
Tjb8XNFRMSw7OtHw89JhxwJ3zn7eiN6aH5r6muFnY8SE0vjBsw0/t+b7Tnev
Zz+Pr/qnpGlosuHn/VGBA7obZxl+Hsj+/EKXlbOfm+oTPgusTTL83NlYkuP2
ynh/5l9oda9nP+3fRbLhJ/rDfqIu9hP+s5/27zfFfH/KftjPYplH7GequM1+
Yq6xnzhH9rNK7gP7iXrZT/ST/cT+2c+Nci7sJ+Yg+7lW5in7eV76yX7er+rc
4+4P+4m5ZvgpdbGf8J/9nFv1Ubr7frKfOF/2E/OI/cT8ZT9HylxjP4/JObKf
B+Q+sJ9zpF728z3pJ/tZK/tnP5fKubCfmIPsJ94n7Cf6yX7ifcJ+Yq6xnzhH
9hPzi/3E+4T9xH7YT8xf9hNzk/0sHbVy2dOs2YYD8Ip/7/CB7yF+L3zfcD+5
D7hvXO+/YK/YpQ==
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxl2H1UFmUaBvAXK4v0KCgpiOJHpoCKIRAh6ju9oBKQkLiJayuFGobfZWX4
WSpqpEfEBLdURF2x2DS2xARltPVbSLMQE01ljSRJQ0wRg5057309nXPNX5xz
nTn3zDzvcw+/5+6ZPHP05FY2m223i832kPH36vMHXcPf7Ka9P7Ile1fUk1qb
a6ujngrw0lxCfz69oL+7Nix82/e1V+7ZkZ/N916yc6efduWXPpvfSX9UXX/q
FUdxY0EHrbY8q/7GpD5aXfqxyO35vlph6EbX+pzrpdqSkqV7mtxVvuvNbg17
brfTi12OL3rB30/lXzqvt+P6VSnpEU/N99Q+dV6v4XrkZc776rgvco8ek7uX
1rdRz5m7q/0Wm7bH/kuMx5HiGz3V+yIf+8N7yV3cfNX7Is/tunzAUGN97ncb
tz+y9KS9vO6JdJ9LvbXYBac3T7vuq7X8/XRSvw5eGvJVQY/91GSsQ64+OO3G
Jz4q/1DyPyfETTs77oH9uyLPg51D3DTU31vzRfZ/UntpyGOk/qG0B7VTHa4q
HxFy91yJ8fy4vv2uzCU+y3pr/l47w4uN9cH1yE/vfGbRxbi+6r6c4znjQnoe
6Vzjpo2U+nhf5P2kPt4XeX7Zyb4PbbheWuEYu+zzoo7a7apqV2/NRXNM6vHv
ecb+eTN100837zyl8szDt177pr6NHrHx7LT4Yl+Vr5V8+4uLB/vd8tK2tbmf
vOHVHqr+Z72nHF11rp/KUX9kUe2Y2rTuKte3zPj1srF/cP3tb7a3hOxtseuu
BQ2L+rvruB55Ttr5c/uMfYL7co7nnBi9cPKGfX/Vx/uqXOrjfZHvlv2fMCUg
bOPRUNUvu2X/Z7jVBx9LHqjycumjz7d0fNXDI1Dlsp/11gVzfy7+W5jqF9nP
evK1f7QLyhuk8kTnftZnDe84YNrewSqXflfXo18edva7uh75d85+V/dFLs+p
4znRL7r0L94XeYH0L95XXe9cz9KP60bXLf+qv+oXWU/txQu9hp9OCVb5Oufv
on89Z3/G4hMhKl8veau3akYePjNQ9QvqT9/7aNjmxFCVH5D6tQmra9fGBKo8
17nf7Lge/RLh3G86rke+zrlvNdyXczwn+mW31Mf7Ipf9rON9qR/1kR8tbRfo
HqT6pb+zH/WTjX++PNQnTOVnnH2tB2flbK1bPFjl0u96U2V5cdzmYNUv8j3R
ayquxrdtP0TlqD/xjddb2Vo9o/JNzu+Vuh79It9DdT3yDOd3T90X+WrJ8Zzo
F/keqvdFjvp4X+TY/2+sD0iYfceh+kW+53rFqR3Ld34/1NJH2muO8nGhdpW/
oSdMrzLWJ3bv2Z2LSyJUv/glHw1p6B6o3x9zZGhJsvZXH/VpXrI1MFh3eaRn
WeX0SJW/3G28/4m2A9X16JffsupWTTWeH9cj3+wW4zG1OVjdF7n8n1XPiX5B
/+J9kdukf/G+yFcmB365z1ifpPDKia4Lh6h+ebo8s6DQ+H1//9b3/AfDn1O5
27lZ4y8Y67C969sPrv7xV95B8g6Lern7th2m+mWF1F88zDuhfr9D5c9K/fme
+8dWzrCrvPc7TdeeNZ4f16NfVn/6+PxUY31wPXK31fOz7xr7BPdF3lZyPCf6
BfXxvshXSX28L/LzFXsPmL/vjYLzQ8P/qal+2XNg0hxvY/8EJHWafDA3QuU+
mYkdlp0J0qs/m7jCa3SkyrtLfqR84broV59T/YL6JWWP/eTrNVzlRVI/zftU
UV4Hh8qLWw8bctLYP7ge/VKVtj0vdlOwuh558NrmdZ8a+wT3RT5Icjwn+qVE
6uN9kV+Q+nhf5P87UZvStCvU4sMBrb/0Mq63+LAi9rEUF9+hFh/KPrf4cIKz
XzT24Q1nv2jsQ39nP2rswyvOfrT4UPpaYx/O7JqycumZIIsPX9m0dMUHz4dZ
fNh5YnFF2PghFh+us1fdMteHfehelHzn6tEhFh/GLRuy0VwH9iFy9iHqsw87
Sn32oVvHt90zjOdnH679+Gbbbcb6sA/HlD0x2bsp3OLDBMnZh6jPPsyU+uzD
B0FzPY8bvy/7cH7moTUxxv5hH84pfXZ2vnG+YB8iZx/+KfXZh6jPPkyr+6Hg
trF/2If3ft0U72X4n31YuuMtm7lP2IfI2Yeozz68K/XZh+Nl/7MP62T/sw9z
pY/YhziXsQ9xvmMfyv8LjX1YI+cj9uFLcj5iH3aVcxb7EH3HPkT/sg8vS/+y
D+V7qLEP5Xtl8WGQ87unsQ+Rsw/le6ixD+V7a/Hhj87vucY+lO+5xj6U/xcW
HyJnH6I++1D+H2nswx7O/3ca+1D+32nsw3bO/5sa+1D+z2rsQ/l/qrEPP5T6
7EPxgMY+FG9o7ENxhcY+dJecfYj67MP+Up99WCX7n30o5x2Nffi99BH7EPMN
9mGunO/YhzjfsQ9xPmIf5sv5iH0o97X40FP6jn2I+Qb7EP3LPvxE5g/sw2iZ
P7AP18gcg32I+Qb7EPMN9iHmJ+zDKJk/sA99Zf7APsQcg32InH2I+Qn7EPXZ
h7rMH9iHkTJ/YB+ukTkG+zBHcvahnDdL2Yea1GcfYv7APsT8gX24RuYY7EPM
N9iHqM8+RH32Yf6WwtbrXCItPoy1ZyeVzHVYfLgl+bnW2ftHWHyY/t+rVSfz
HRYfdnk0f1/mebvFh8mO2dNM/7APY+pyp6/5WrP4cEdciccUh8Piw22Jvau6
GM5hH04/MSs70VhH9uFrGS3rx5dHWnx4qK7LsKCxIyw+dHm5X4y5PuzDA9kz
ypavGmHx4aWF43ueMtaBfYicfWiT+uzDUqnPPjwwfO4F8/nZhy2uIePM9WEf
Xu4V9UjvviMsPkTOPkR99iHqsw+nrt0TaP6+7MOGpT7e5v5hH/at7HTJZpwv
2IfI2YepUp99iPrsw/pBvn7m/mEfvv7b8RdM/7MPn3C7N9rcJ+zDTpKzDxuk
PvtwitRnH2L/sw+x/9mH6CP2Ic5l7EOc79iH/eV8xz7E+Yh96CnnI/bhDDln
sQ/Rd+xD9C/7EP3LPjw1b0PEWmN92IfbGttvM39f9mH6wcab5jqwD5GzD49L
ffYh6rMP83Z4FZrPzz48dq4gabCxPuzDw0uvXzD3CfsQOftwq9RnHx6X+uzD
kJcaL903fl/2YWHZouorxv5hH976eFxGqnG+YB/+Ljn7EPXZh19IffbhLr+s
lpXG/mEfBhW2bcoz/M8+vFM9KMHcJ+zDBsnZh19IffbhIKnPPsT+Zx9i/7MP
0UfsQ5zL2IcyD9TYh5hvsA9xPmIfyrzR4sNZcs5iH6Lv2IfoX/Yh+pd9+JHM
H9iHmG+wD+NljsE+xHyDfZgl9dmHqM8+bC/zB/Yh5g/sQ8wx2IeYe7APUZ99
mCX12YfNMn9gHy6Q+QP78G2ZY7APMd9gH6I++3Ce1GcfvivzB/bhfZk/sA8P
yByDfYj5BvtwntRnH6I++/DSxZnj/PvFWnz4/rwxhaPzoi0+PLepOXFAzSiL
D0tsuQOTv4u2+PAbu/vTSZ2iLD5MuXhnhekf9uF7fhP0PtVRFh9ezHg3pXlq
tMWHK6Z8qz9pOId9uLV1QO1v4dEWH35ytOT673djLT6851e55vjiURYfhub8
stFcH/bhnbP9evgUjbL40KPYc465DuxD5OzDZ6Q++xD12YcN74UE1N+Ntfgw
ZET9Z+b6sA87JT2SuC9+lMWHnSVnH6I++xD12YfTluX8OsH4fdmH/gcvTDf3
D/swOv/YwfXG+YJ9+Lzk7MOpUp99iPrsQ9+Z1+aZ+4d9mBqU1zjI8D/7MCb2
q+3mPmEfxkrOPvSX+uxD1GcfYv+zD7H/2YfoI/YhzmXsQ5zv2Ic437EPcT5i
H+J8xD7EOYt9iL5jH6J/2YfoX/Zh1/sr55jrwz78MaTsD/P3ZR82dt0Xba4D
+xA5+7CL1Gcfoj77sLK64uG+1VEWH3bJz3rfXB/2YZP+r4Cbxj5hHz6QnH14
XuqzD1GffRhfE3Yoy/h92Yftn1wQae4f9mHA46k55vmCfYicfYj67MN2Up99
2O5M+mhz/7AP4z+KOJ1i+J99+PTnL8039wn7EDn7EPXZh3FSn32I/c8+xP5n
H6KP2Ic4l7EPcb5jH+J8xz7E+Yh9iPMR+xDnLPYh+o59iP5lH6J/2YeYP7AP
dZk/sA8xx2AfImcfoj77EPMT9iHmD+zDZpk/sA8xx2AfXpGcfYj67EPb4876
7EPMN9iHmD+wDzHHYB/2kZx9iPrsQ9RnH2K+wT7EfIN9iPkG+xDzDfYh5hvs
Q9RnH/4fXinnrg==
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJx1nHdQVdf79RE7GsReUFSwF5SmgsjdNBsWrLEk9hZ7jRpsUUyMWJAgir1G
7N3YOXbzVYkae+/GFnvs8Xfve5+1nVl73r8y88yZ59x1zrPX/ux1MKW7DGje
3dXFxeVkNheXzPb/rmo3fPbcoaXU+HqfZ62v76Ny3Z1Wv6xvUTXNdeEPn2+5
K7dXiSk/D3DV9X8bx46sdLyCGp7v78F3f86k6/lXr17x4bmHmhi/dPSMO+XV
k5+ORi1Pq6BUyUFjRv6+waYm7I7f9iGvricOWD71YmBeq1SjHa/SVn25vpTz
+nRcP7XnT5FlRxVR053XK1yPutzXwn1Rn5SQVHdXrzz6dy5an2exi9pm800Z
vWmP3xe9qAdWb9w39UkFrRf1nFHtVs2zP5/3JdruiUo/Zst4UvAnr2tl1ADv
rClPclVQgYefDhuat7hC/a/Rg459sj+HPq08uy2d76nrp6X+YGKPW3GVs6jT
vxfZVzjIQ6H/9vsbZ23u7a3r/aV/62V79l6MzKzrU8Z2OrjX78v1edbPmOA1
sYxqGtFn42X788H1qK/N4vrLN1Ur6Puivk7q+J1Ng0ofLnzfQ02V/tCLehPp
D72ojxvwccqzbRts5yK+nrju9/zq5ZXbOT1VJpXv2/wBH+zz81Wpdb2Th5XX
9Sx+XtPSe+Wx0u4fuLm6tlm/tHth7OCnxdWyXO+7pHYupfuvLtPryNTzlXXd
Q/rnbXQsbHHcl+td/rw7wHX7hnRc//LA8s9B2z/bcqdV2p/5truF63X9XrbP
2+xzgvtyHb+za8Mx3VN3llI3Mpz9oRf1XNIfelF3kflv0cs3eP6Rmnq9JMn8
57/t0qnGoOq6XkDW0Y3DCZ4RLb/Upzjn2Trzk0uVaQVD9HqReba63P3WPWCJ
v67LPFtLeifcT30brOurnetdX4/1kuhc7/p61GW96/uiLr/Twu/EehG96dCL
+jRZv9CL+jjn87TNfdL8yc9bq+j1Iu9LeW1bNXlJ+SBdz+F8L9bj1KC669y+
1N2l3nRm3IMtadX1ekH/ftuzBy9sU1PXc0j/EiOzLbcSvlzvMvD/zVs6rsd6
kXm2cD3qLs65Vbgv6jmkjt9J6yUdelEvIP2hl9ajVW9mvLtf3gC9XmKd69Ga
fWbikjzXgnVd1rvVY7tHB899X+qy3q2jm1tn8u4YpNeL+Il1/9yt2Nx5QnUd
/VNm3dxdNeLL9eJX+nqsF/FDfT3qZ5y+p++Luvih/p1YL27SH3pRR3/oRb2a
zP/gFN8Wg15H6PUSIPO/dEW1E3HJYboeL+toUMLOST8P/1Jv4llyeHv789m0
fNbx74pH6fXSKPvHysMiqlvvWx6us7uL0vXYM7dzdF0UaKUW/nbV06++XJ/w
4K3Xna5frsd68Qj2jn9s//24HvXqXbtPXz09UN8X9dey7vA7sV6wfqEX9Smy
fqEX9ZNr5izabX8+HWtf6JpzTKheLyfnXf/uvP39ttnz+MOQ5eG6/o9faPd2
9udgq7bp4rsUs36j7arW74+F6fXyp/QfF+bZ4sWeCF0/I/3X1gnKl239l+sb
DUr+ac7QL9djvWxoahv8yP58cD3qrS/cnfDO4TNyX9RbSh2/E+sF/aEXdfSH
XtQ/xT3Z4ni/j9dcrFN7jtLrJalo9TFz7POT3OjSz6tconR9SljYrCgVaMXt
Xdi9+otIXZ8q9aq7I34P2Beu18tH6b/7RI7rFYpG6/pM6V/AN8fMHZu+XB/S
4eEKx/zgeqyX/ifSS0ytFqivR711zYCEyvY5wX1Rbyl1/E6sl9rSH3pR7yf9
oRf1/WW3Dfphai2DD/e2yUieUi3Q4MMeC71vhe8INfjQzznnBh9Oca4XxXwo
60UxHzZ2rkfFfCjr0eDDWOe6VsyHV/9o5G5/XwYfjo/cMSZX31oGH/7ksbj9
uz9CDT4cPGfFe8fzYT5cknP0QJ+2oQYf3jzfusga+3NgPkSd+XCQ9Gc+XCr9
mQ/9t6/KnrtvLYMPXRqcneF4PsyHB3748ODSd6EGH+6XOvNhgPRnPkR/5sMr
Q7On3La/X+ZD9ztXcjnmh/lwVrd+PSvazxfMh6gzH6I/8yH6Mx/OS3JbOjTi
y/VYL2fr9m43287/zIe+rdpPjLTPCfMh6syH86U/8+E56c98iPlnPsT8Mx/K
fmHwoewXivlQ9gvFfCi8p5gPq8r5iPkQ5yPmQ+FSxXzYVNYd86Hsp4r5EOuX
+TDU6VeK+bCv068MPhQ/VMyHraTOfCh+qJgPxQ8NPhQ/V8yHyU4/V8yHsl8Y
fIg68yH6Mx/KfqGYD2W/U8yHst8p5kPZTxXzoeynivkQ/ZkP10t/5sMMJw8o
5sPTTh5QzIfCFYr58KnUmQ/Rn/lQeEMxHyLfYD6cLfPPfIh8g/kQ5zLmQ5dS
zvMd8yHyDeZDnI+YD+V6xXzoIecs5sNEWXfMh1Vk/TIf1pD1y3wovK2YD5E/
MB8KzyvmQ9SZD9Gf+RD9mQ+RbzAfynlEMR8ix2A+XCN15kP0Zz5sKf2ZD+U8
aGM+LCL5A/OhnAcNPpTzoMGH6M98mEP6Mx8i32A+9JD8gflQzsuK+dBD6syH
6M986CL9mQ8LNZ2d0GJglMGHM3uVmf9NeITBhw8SMiJr/lTX4MM/nwwo1ndQ
hMGHHzYEd5nUXhl8+DI54b63nX+YD6/Ydv19sqEy+LBDuWrnj4yMMPgwXza3
zg7OYT4ss/h22+0NIgw+fHO1aL55HaMMPhx5cKrLr9PqGnw4IGfek47nw3yY
fd8Htwqt6xp8WD7t7w6O58B8WE7qzIf9pT/zIfozHzaZndTa8fuZD7fdWOF5
1P58mA9T3u08MqFDXYMPZ0md+TBW+jMfoj/z4bJ/rRKO98t8WGfd6jaO+WE+
3F7Jr63jfMF8iDrz4VLpz3yI/syH8RMjljnmh/nwwtz1p9/a+Z/58Pi93gUd
c8J8eELqzIcTpb/Bh9Kf+RDzz3yI+Wc+zJB1xHzYS85lzIeWnO+YD/fI+Y75
EOcj5sOf5XzEfHhFzlnMh1h3zIdYv8yHWL/Mhy37bPrN8XyYDx97z7/peL/M
h0UKFOgTYX8OzIeFpM582Fz6Mx+iP/Nh4PuAqqcaKoMPa0xMuuN4PsyHce2/
WeCYE+bDUVJnPgyS/syH6M98mHfjwb9H2t8v82FUqTkdHPPDfDj+nyHZHOcL
5kPUmQ/Rn/kQ/ZkP/8o48tqtby2DD5d0fDG2i53/mQ+7zChy4aJ9TpgPu0md
+RD9mQ8XSX/mQ8w/8yHyDebDnrKOmA/95VzGfDhZznfMh+5yvmM+xPmI+bCZ
nI+YDxvJOYv5EPkG8yHWL/Mh8g3mQ+QPzIfIH5gPb0mOwXyIfIP5cID0Zz5E
fsJ86Cf5A/Mh8gfmw32SYzAfIt9gPkS+wXyYSfozH16W/IH5MI/kD8yHsyXH
YD5EnfkQ/ZkPv5L+zIfIH5gPkT8wH1aRHIP5EPkG8yH6Mx+iP/Nho4RW1x6k
NjL48Niym09f9G5o8GHJowkpJ9Y3Mfgwa6Wq/VznNjT40O/Jv1u8JtY3+HB9
tgmHy9v5h/kw36gRtXsOrW/wYXKXxxU7LG1o8KHNFjHBwTnMh+2uLlrTZEhD
gw+rFjvfzf+XRgYfrneJaVFxexODD5dHZ3g/tD8f5sOwT9u/3Tu2icGH395Z
vtHxHJgPv5E68+Ey6c98WEf6Mx/Gn2m60vH7mQ8fF+/e3/F8mA+PB40oVmxS
E4MPM6TOfPiT9Gc+RH/mw0v+YwY63i/z4ZCHvVY75of5MOlUq8817OcL5kPU
mQ8vSn/mQ/RnPty57/O/PYbWN/jQ263g7iQ7/zMfuvpU6OWYE+bDzFJnPtwl
/ZkPS0t/5kPMP/PhBpl/5sMsso6YDx/KuYz5EOc75sNkOd8xH+J8xHz4g5yP
mA9xzmI+xLpjPsT6ZT7E+mU+nLxiwDvH82E+9OnYLvCl/f0yH0bUrTfJ8RyY
D8Olznw4SfozH3pLf+bD3jWej3X8fubDU2OyRTueD/PhxllFnzvmhPlws9SZ
D/tIf+ZD9Gc+3Jtcsp7j/TIftmnkNt4xP8yHwwPenO1jP18wH6LOfIj+zIfo
z3y4yGfxibkdoww+zN53W5KD/5kP78f/EeaYE+bDv6XOfIj+zIfZpD/zIeaf
+RD5BvMh1hHzIfIN5kOc75gPcb5jPsT5iPkQ5yPmQ5yzmA+x7pgPsX6ZD5Fv
MB8if2A+zCH5A/Mh8g3mQ+QbzIfoz3yIfIP5EPkG8yHyB+ZD5BvMh7OlznyI
fIP5EP2ZD5FvMB+GSf7AfIgcg/kQdeZD9Gc+DJX+zIfIN5gPz0v+wHyIfIP5
EPkG8yH6Mx+iP/Ph9uMPNs22PJWLe5nIfDN81NBi7s8aFC+uqiwv8aT/pLzK
vWc9tf/acxvqzTf0KeXaqpJyDd4f+uO9nPr6YwNuvV6VuYC6/b5KwsPjZVXN
xzmeJ/mVV+MTq3RynfUyPfrfwb7Pe+fV9a9nrdt1pra7FT6vZdImt0q6Ps55
vQ3X+/hnn+cyraBq7bxe4XrUjzvva+G+qBdxLbvqm+ic+nfWXewZWzb4oW2U
27jnuQ97a72oR3j1OFP6VnmtF/VhC9efm2N/Pts6RB948+icbfyksxertyqn
Ogc+rtq9cEX1quyOkM7NCivUJ0ekFV1rfw4be+Vo8Px4SaO+a28RPyv1je1k
loCAe1Pd1PfSP6T01Mex3t4K9S7S/8KdSkEuB3Pr+pWXXTK7238/rm9X4HS1
3O4+6q/QkMwX7c8H16PebMm9m/HLyun7ch2/c2fvRf1Cz+ZXl6U/9KKO/tCL
etzlyKdu9vd76s9Fl4fUL6CO1LvVplvx7Krf6a//6Gufn8d/5jsxuWBZXU9Z
seF5p+icVsygkDPNW1TU9WSpJ6/c1KeMVURduznUy/1sCTVK+lftEFm88vTK
ut5f+lf816XOpfmldH1SdMFT71Je2nB9g3/SOi/9/NL2aPhtj0GT8lq4HvW5
36R2aWOfE9wX9dlSx+8scrfOjtV+3ro/9KKO/tCLusxzetIxa1rGo5p6vcg8
W1m+7+Hddbyvrv9P1tGmXEeSC3by03WZZ8s14tCmnTmD9XqRebZ8xh/bnmmM
v66HO+fZ2piv7bYFFWrruqx3fT3Wi6x3fT3qst71fVE/IesOvxPrBesXelFv
I+sXelGf4nye6UW3DJ/98FMVvV4eOp+nyuN+ddf8NwG6Ps/5Xqy91wam/1io
hlH/sGjcjf3B1fR6kfeV7ttq2O1+gTV1/bH0r1L6zJBDu/x0fZxz3my4HutF
5s3C9ajL3Crcl+v4nVgvI6Q/9KI+QPpDL+qy3q2f3hbq1iUoQK+XC871aE2q
sv0vt3W1dL25c11bNT/FnP/neIiuy3q33vT3nNSkRaBeL5ekf9qQ2A+XHtbW
9TPS/zfb+gT/wTV0fajTr/T1WC/ih/p61BOcvqfvi/oUqeN3Yr0Ml/7Qi7r4
odaL+miZ/3xH33z6JXukXi/i59bMz53/+75bHV0vLuso6uTrTO0n2HT9xfbM
JyfYn0/DzO/zjEuJ1OtlaPjoY/Om+FntfD4lLY1VX/avmGehK4oFWosfHcj7
YnmUrh/p8PS/EQG++nqsF9eYnMW72X8/rke9Y4GXXQq3DNL35XWH34n1slPW
L/Si7ivrF3pRL156/vVc9uczf0HvHSFLQvV6ufDce+hJ+/uNfTAxedBX4bqe
9GepvePtz2HFqaYpt4tH6PqvUs9TcMDVclYdvV5KSP8buZunXVwdoevov/eu
60236zZdf/vOZ3qK/ffjeqyXpZ3LuXW1Px9cj7r7/OKn0+xzgvuinlvq+J1Y
L+gPvagvkf7Qi3qZbf1bzre/3ynXlvzdYo3S62VJ9gb3vO3zM3XEkFJpvSJ1
vePUDQcuxAVYdzrV8S42IkrXO0j9YNHl7xvUDtfrBf1LzLMFemSP1vVF0t/T
dcDHXQ0jdL1C/dMeP9jnB9djvfRovflB/a2B+nrUN6Q28c9snxPcF/VNUsfv
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
G8yHyDeYD5FvMB+6yfplPkS+wXyIfIP5EPkD8yFyDObDvVJnPkS+wXyI/syH
yDeYD0Mkf2A+RL7BfIg68yHyDeZD5BvMh8gfmA+RbzAfIsdgPkSd+bCk9Gc+
RH/mQ+QPzIfIH5gPkWMwH6LOfIj+zIfoz3zocf5dlxNxLlZ0/asZe1+cSe/o
dXP363avbUvGxbbZ8cvz9M3fX554L+STrf+Ws5WTV72xPeta7JuRxU6nD7Ld
+DFTFher9Mb0yQ+WvbZl/jq5xti8r20Xay9d29D7o+1dma8+N+zxzlY8U+TN
zI8/2xJChuTJef1+esFtnUZ9t/atTe6r5L62LR1On+s5Jr+S+9rkvul+wQVr
j3uYT8l9bXJflWVnu9sP++RXct90uW+6+7f1fkqKy6fkvulyX9uRES/u/W9l
PkPvnScRW29V9lKst2d+l2b/S/dSrDc5aWdaxzAvxXp/eXoi63bfkor1nvrL
e/lYl5KK9Y4b33/a4YrlDL17n063Tl8va+itsGFTgUmlyhl612aqeK99WllD
7+TpYwqNSC+rYrOOSB3cq4j61e/Du4mT86rvtyXXP3fHfj49eePVw8ji6uDt
jpP6VCim3l1udmfPiEJqdsOArRvjS6o9x5/HdFmfVZVrnzu0xZuCqlHmxlO+
ee2t3M82S4q6VVQV314ydfX9QirxwpLSa2PLqIQ6r39ZvCuP6jpvaK0hOwqp
av/U+q/k4DJq7qVzf12tUED90aNwG5XNW42bFH+ya7y3Oht7Z/KzgvZz2pla
kxvtLq2mxLQf6HKnlDpZ9uKKTZeLqUHJ7a9l+lRaFb7cdPS7zp4qvL/L8LAl
2dXru6fWn40vraZVX9a8zeoiqle/8zl+PVtQnR5S/sbzuaUNvb+PWf9o+Pj7
6aw3tfnhr2rfvpXOegPbvmia+M+9dNab4/a6jDnnr6Wz3pimG/omXr2RznoT
mtQ/s61/NkNvfOaMeffrZjX0Vsra9snuBtkMvWEx/gG5v8ti6N0wftKrUYey
KHeZ5zOeg595+nurlUlvE4cH+6hlMs9Phi773f3HcqpP2fMd+kzw0fP8/eOb
ubtuLKEydd/iti3CR+WQeU7qNz/0w7fl1Oj8YcG3dvroee5/+nmrfe1Lq0UT
/85xeKkP7qvaPet4td6PPqrmgkMHGzWuhPvaxvu2r7Kqm5caluv+v20yV9Lz
/LJg53qbLpVT14/ljHGPqqSyyTzXqvOd96lVXqpbiXHFbx2rqOfZCr4xfMnX
ZZRafbbRf7cqGnq/+u/477/WzmXoLdSg3tMuXXMbegfU271gaqdcht52mW63
CQv/ytD74I8ps07cyW3o9UkZFzn0kKehd+HAAyum+Hkaegc/zxH7ZpOnoXd0
8usXC/YXM/QGbVjU4vyzYqq6c66sGwvu3X61oLKCP//onCvr/Zsiq+8/qabg
zwnOubLqjrw7cnJ0BQV/LuKcK2vBs7zVz/yvmoI/z3DOlfVDqx4N5hytpODP
zZzryOox5MzJUv9UUfDnDc51ZDUutiSn78IKCv48x7mOrHHHe88/5FNd+3Nj
5zqy0kqvjA/fX0HBn6c715F1bHfLPnEHqyr4M+uFP7Ne+DPrhT+zXvgz64U/
s174M+uFP7Ne+DPrhT+zXvhzbpnnfxPXPro30V/7c5rM84Q9dZt2Whuo/fmG
zHPF/9Zs87tYXfuzi8zz2eADM87NDdT+XErmObJvvwU7ivlrf5b7qlpxZW6N
qhqg/Vnua1vTJGFM5mx+2p/lvras7mUL+18K1P4s901vd9o9dGphP+3Pct/0
Rwu7VVs1O0D7M+uFP7Ne+DPrhT+zXvgz64U/s174M+uFP7Ne+DPrhT+zXviz
7AtW3Ome3VuE1tT+LPuCleOzyx/HuwZrf54s87zO1rP6gulB2p8LyTy3ixud
K7J5sPZnzPPRteWLlDtVQ/uz7IPW3t3X2j+4XVP781qZZ7/E6LcDdgdpf8Y8
JzS9nrggMVj7s+yD1vX8f2x9dyJI+/M0medBN71WFmpaS/sz64U/s174M+uF
P7Ne+DPrhT+zXvgz64U/s174M+uFP7Ne+HOTzReb/dbF33It4H09/UVt7c/f
j/sccrSPnzVd7YoILham/fnDzYeTU+ZWt4J+LL3KrW6I9uc33b27Vczia93Y
XXPi+hxh2p+3Jh7PuJBWxWr69OaMpJ9ra3/OF1fjRfefq1iR/80+22pOqPbn
AzcelvQe5mv9furzoCuDQ7Q/X3F3s/a7Vbc8ZqS65aoXpv35yp7bs6OW+Vk9
Wk2o1iM+RPvzmLRptx8387feeF/0npC1jvZn1gt/Zr3wZ9YLf2a98GfWC39m
vfBn1gt/Zr3wZ9YLf2a98Gd/medDlfpXSWmptD+Pl3l22xdyrXmvcO3P02Se
d++/7DP8Y5j2Z+xHAZ9HfJ7aMfwLP8s89ymSMfGzl9L+jHm+u3Bl+c5pSvsz
9qOw/Dsf1a9o0/4sHGvFPKi4f9eYcO3PTWSeH6fUWXk6xKb9OUnm2bapQcab
q0r7M+uFP7Ne+DPrhT+zXs3PpBf+zHrhz6wX/sx64c+sF/7MeuHPmOefY2K+
O74+Qvsz5vnEzcKevxyI1P78Uea5lOuxjEEXw7U//yvz/G/J1qEHd0Zqf94i
81w1ePX+oB8itD9jnldYP3WblTlS+/N+mefOlXZuuvQ0XPsz5tndLfvn5xcj
tT9jnms9jpux8G249mfMc6a/yuXyDY7U/sx64c+sF/7MeuHPrBf+zHrhz6wX
/sx64c+sF/7MeuHPrBf+PPFpyrLQKSFWw74VfnPNFa39ec3u3VM7zAy2El1f
f53uVVf7s79X2tUqh2pZd7zTcqUFRml/9huQkWV15ZrWDhUw8n3ButqfE+N9
drqOqWE9azvpc5+zUdqf00deiGnQr4bV+2bXxSc6RGt/nr1mU5fy3WpaZWJm
PfWIidL+nC/mSL62gbWsU5Xu1K4QVFf7c/73ix5dOhFsfczdNuNsiyjtz1vu
xNSYEBdiHXyZuX635Gjtz6wX/sx64c+sF/7MeuHPrBf+zHrhz6wX/sx64c+s
F/7MeuHPBZ1zpTi/OuicK8X5lcyV4vzqqnOuFOdXMleK86vGznVk5FeyjhTn
V7KOFOdXb53rSHF+JetIcX7FevF+WS/eL+vF+2W9eL+sF++X9eL9sl68X9aL
98t69fslvXi/lnOujPxK5srIr/I658rIr/I558rIrzY758rIryY415GRX612
riMjv5J1ZORXso6M/ErWkZFfsV7sv6wX+y/rxf7LerH/sl7sv6wX+y/rxf7L
erH/sl7sv6wX+28BmWfOrzDPnF9dlnnm/Er2BcX5FeaZ8yvZB438CvPM+RXm
mfMr2QcV51eYZ86vWC/2X9aL/Zf1Yv9lvdh/WS/2X9aL/Zf1Yv9lvdh/WS/2
X9aL/be55LGcXwnXKc6vUiWP5fxKchXF+RXyWM6vfCWP5fwKeSznV8hjOb9C
Hsv5VZLksZxfsV74M+uFP7Ne+DPr1fsv6YU/s174M+uFP7Ne+DPrhT+zXt5/
Ob+Sc5ni/Ar7EedXmGfOr0bLPHN+1UjmmfMrzDPnV5hnzq8wz5xfYZ45v2K9
8GfWC39mvfBn1gt/Zr3wZ9YLf2a98GfWC39mvfBn1gt/xvcUzq8wz5xf4XsK
51eYZ86vJBdVnF9JDqw4v8I8c36Feeb8SnIkxfkV5pnzK9YLf2a98GfWC39m
vfBn1gt/Zr3wZ9YLf2a98GfWC39mvfBn5LGcXy2SPJbzK+SxnF95SB7L+VUR
yWM5v8L3UM6v5L42zq9UN2cey/kV8ljOr5DHcn7FeuHPrBf+zHrhz6wX/sx6
+fsv51esF/7MeuHPrBf+zHrhz41knjm/WiPzzPlVoswz51f4Hsr5leSiivMr
7EecX42Reeb8CvPM+ZWHzDPnV1Nknjm/Yr3wZ9YLf2a9/P2X8yvWC39mvfBn
1svffzm/Yr3wZ9YLfy4i88z5FeaZ8yuZq3TOrzDPnF/hewrnV3JfxfkV5pnz
K8wz51ce+B5K+RXmmfMr1gt/Zr3wZ9YLf2a98GfWC39mvfBn1gt/Zr3wZ9YL
f2a98Gc/yWM5v8L3FM6vpkoey/lVAcljjfxK8ljOr5DHcn6FPJbzq2TJYzm/
wvdQzq+EY438ivXCn1kv/Jn1wp9Zr+Zn0gt/Zr38/ZfzK9bL3385v2K98Oc3
W2cuuJ4SZuRXGX8P2Lpnqs3Ir5ZF7t/0xlcZ+VUZz2oLt39QRn41NDH+4JTm
4UZ+dbXgqrgH7cKN/GrQx9CBP1xXRn4VuNZ/dufhysiveq5O+Dq8lc3Irw5b
N3Knrggz8ivWi/fLevF+WS/eL+vF+2W9eL+sF++X9eL9sl68X9aL98t68X4L
jVz5NqRTpJFfjU8qlGXV5Ugjv0q/WerK/sgoI78K2zH16ASPaCO/mu57+8nX
PaON/OrN5hzLtwyINvKrKXPmpka/ijLyqyYxM/ZVmRJl5Fd/Dilztk96pJFf
jfkvY/2sXpFGfsV69fcj0ov9l/Vi/2W92H9ZL/Zf1ov9l/Vi/2W92H9ZL/Zf
1ov9963MM+dXf8o8c361XOaZ8yvMM+dXw2SeOb/CPHN+hXnm/ArzzPlVb5ln
zq+OyjxzfsV6sf+yXuy/rBf7L+vF/st6sf+yXuy/rBf7L+vF/st6sf+yXuy/
+ySP5fwKeSznV/Jdw8ivkMdyfoU8lvMr5LGcX8l3HCO/8pM8lvMr5LGcXyGP
5fyK9cKfWS/8mfXCn1kv/Jn1wp9ZL/yZ9cKfWS/8mfXq/Zf0wp//lXnm/Ar7
EedX2I84v/KReeb8CvsR51dXZJ45v8I8c34VIPPM+dV3Ms+cXx2Reeb8ivXC
n1kv/Jn1wp9ZL/yZ9cKfWS/8mfXCn1kv/Jn1wp9ZL/x5v8wz51epMs+cXxWQ
eeb8CvPM+ZV8lzTyq3iZZ+Pvr2SeOb/C9xTOrwJlno38SuaZ8yvWC39mvfBn
1gt/Zr36+z7phT+zXv33V6QX/sx64c+sV+dXpBf+XEjyWM6v8D2F8yvksZxf
4Xso51ejJI/l/ArfUzi/Qh7L+RXyWM6v5O+gFOdXyGM5v2K9/P2X8yvWy99/
Ob9ivfBn1svffzm/Yr3wZ9bL3385v5K/KzDyq1kyz5xf4Xso51ceMs+cX22S
eeb8CvsR51f4Hsr5FfYjzq/8ZZ45v8J+xPkV64U/s17+/sv5FeuFP7Ne/v7L
+RXrhT+zXvgz6+Xvv5xfYZ45vzos88z51VWZZ86v8D2F8yt8D+X8qqnMM+dX
w2WeOb/6JPPM+dVHfA+l/Gq7zDPnV6wX/sx64c+sl7//cn7FeuHPrBf+zHrh
z6wX/sx64c+sF/6M7ymcX+F7CudXkqsozq/k7/oU51fIYzm/wvcUzq/wPYXz
K+SxnF9JjqSM/EryWM6vWC9//+X8ivXCn1kv/Jn1wp9ZL3//5fyK9cKfWa/m
Z9ILf/YrnMM727B6Rn41v/qwqsOe1TPyq0tjx2ad1qa+kV+1+/rx8yZlGxj5
1arj4YV9RjUw8qv8zXtmjI1vYORXK2q93++Rs4GRX/V+8PThm0X1jfzqYd4J
/9U4U8/Ir+bMq3qxy+h6Rn7FevF+WS/eL+vF+2W9eL+sF++X9eL9sl68X9aL
98t68X5Zr/5+tLVHzKlfYoz8anvGX61V1kZGfvW6xDXftv0aGfnV0NcNPYuF
NDbyq0O9F6l/Ehsb+VXVZ4feNExtbORX+8+1eXy5RGMjv4r/uUmBA1sbGflV
1g03y7s+iDHyqy0hU1x9k2KM/Ir1Yv9lvdh/WS/2X9aL/Zf1Yv9lvdh/WS/2
X9aL/Zf16u/7pBf7r7/MM+dXC2Sejb+/knnm/ArzzPnVaplnzq8wz5xfYZ45
v8I8c371SOaZ8yvMM+dXrBf7L+vVf39FerH/sl7sv6wX+y/rxf7LerH/sl7s
v6wX+y/r1ecjyWM5v0Iey/kV8ljOr2ySx3J+hTyW86u3ksdyfoU8lvMr5LGc
XyGP5fxqrOSxnF+xXvgz64U/s174M+uFP7Ne+DPrhT+zXvgz64U/s174M+vl
/ZfzK+xHnF9hP+L8qq3MM+dX2I84v8on88z5FeaZ86vvZJ45v8J+xPkV5pnz
K9YLf2a98GfWC39mvfBn1gt/Zr3wZ9YLf2a98GfWC39mvfDnwjLPnF9hnjm/
smSeOb/CPHN+lSjzzPkV5pnzK8wz51dNZZ45vzop88z5FeaZ8yvWC39mvfBn
1gt/Zr3wZ9YLf2a98GfWC39mvfBn1gt/Zr3wZ3wP5fwKeSznV8hjOb/C9xTO
r5DHcn6F7ymcXyGP5fwK31M4v+oleSznV8hjOb9ivfz9l/Mr1svffzm/Yr38
/ZfzK9bL3385v2K98GfWy99/jX8/KPPM+dVemWfOr/A9lPMr7EecX2GeOb/C
PHN+hf2I8yvsR5xf4Xso51esl7//cn7Fevn7L+dXrBf+zHr5+y/nV6yXv/9y
fsV64c+YZ86v8D2U8yvMM+dXmGfOr/A9lPOrazLPnF8Nlnnm/ArzzPmV/h5K
+RW+h3J+xXr5+y/nV6yXv/9yfsV64c+sF/7Mevn7L+dXrJe//3J+hX+Pw/kV
vodyfoXvoZxfyb9rM/IrfA/l/ArfUzi/wvdQzq/wPYXzK3wP5fxqhuSxnF+x
Xv7+y/kV64U/s17+/sv5Fevl77+cX7Fe/v7L+RXrhT/3bHFo6LwFTY38qneN
olbWr2KN/CpHB68q+cJjjfzqjz9aLhm8ItbIrwbGf95y5XSskV+VrZfkket8
rJFf9d95eXKL1FgjvzqZdM6rXvdYI78q1UQ1O/GpqZFfnbzwsPK735oa+RXr
xftlvXi/rBfvl/Xi/bJevF/Wi/fLevF+WS/eL+vF+2W9nF/x+XeH5Dl8/kWe
w+ff7yXP4fMv8hzj3x9JnsPn332S5/D5F3kOn3+R5/D5d6vkOXz+Zb14v6wX
75f14v2yXrxf1qv//RHpxftlvXi/rBfvl/Xi/bJe/f9nkPMg8zPyHOZnnAeZ
n7+R8yDzM86DzM8F5DzI/PybnAeZn5HnMD/jPMj8jPMg8zPrxftlvZw/Mz+z
Xs6fmZ9ZL94v6+X8mfmZ9XL+/P/jZ95/JwhP8v6LPIf3XyU8afz9s/Ak77/v
hCd5/00QnuT9F+dB3n8zhCd5/wVP8v7LevF+WS/nV7z/sl7998+kF++X9eL9
sl68X9aL98t69f9fhfTi/f4fhhskLA==
     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxlnHd4zeffx2M3iRklNkmECEIEWeLcmYIgtVolaqu9d4xSVbVij1qV1KYq
CWqdr6J2jVYIfipG7b33k/R83vd1Pe/7+ee5ru91fjnn9b0/53V/z+tu69Fl
QMvuuZ2cnNrmdXLKk/3/u343N/PdqTLK9Zrz5K2ZnupK7iHeK3/9VMVExR7P
DCuuKhzvZgWPe2zD9fuTvllW5kk19VmdcsOinhXUr8/vXvjRxezXz0osuWeU
s7faMKPjxE9nPrKdXDf54KA2L+2149as35Lppq9Xatfu/YdTLtbyh/Gr9pf0
1ddPOV5vw+u3N17VY/2rcqqK4/UKr8f1fI73tfC+uP5z6on0N9mvx+dc+Pfe
9C77q6iUmtUvXwjz0ry4nvbnqW59C1TVvLju9d/7llFO8n+/vZvy7OIKT7nu
Yj3YOPlkRLC7wvVGct82bl0y+Pa6SnzdwvW41S4x3mc/kete+u/juvx9hb+P
63J/7O7bUn+pkBSo739l+TxrPXu7tRzup6/nlnW51OTM2xP7/PX1FMf9sTJz
72yae22Qvv+rHffHWr7w/MJfM+vo63J/rM4NPm+4xi9UX+/umB/9etx/mR/9
elx/4Jgf/b64LvNj4XPi/h+WeQAvrsv8KPDi+t8d+9fvlX1/vKYmXPghpoa+
/+ny+U/UKuqx4HGAvo45vFk+sUrIyPr6+qwly6eVzv6cuI77f97x9234+/9/
HYvrv4/ruJ+twwYV3poZoe8/Ps/1s12H9+8Ypq9vlHXpXyRXr+I3bPp6mxv3
W/bJfn1616GXkrtH6vvv/NeZfZMO+1ulNk+aOGac0tdnJXtPjtsUYI1y2t/m
xdoofX15aJTbhl019etx/2cIL16P6zU/jP0p2bOefl9cfyjriM+J+99D5gG8
uB4r9we8uO6YEy/LcT8b6Ps/Wz5/rdEVD/VzCdfXU+W+NRh09oi9WYS+Pnbq
9FI5nxPXcf89Hd9f/fdxPUl48fdxvV3HrKCc+3mhyh9et+pG67//vnLVyhuz
7xuu4/X5vvznYp8CgYY/xzk+j+HPriGhz4Ljwgx/yn02/Cnrpdif8vkV+1Pm
QbE/kxz30/BnW8dcKfZnll/dd02zX8/+tBVJ+rTMk2DDn3/8c/Xc1YxQw5+O
OQ80/CnfL8X+lHU0/Ak/sz8dfyfY8KfMj+FP3E/2J+4n+xPrwv4Ujyn2ZzfZ
T9mfMv+K/Sl+UOxP8LI/18q+xv7EOrI/MQ/sT8wD+/ODY84V+xPPA+xPrCP7
U/Yjxf6U75dif4oPFfsT95P9ifvJ/sS6sD/zyj7I/sR+yv4sJfsC+xPPJ+xP
H+Flf8r7Gv7EOrI/MQ/sT8wD+7OyPJ+wP+XzGP7EfWN/Romf2Z/iZ8X+xP7L
/jwl+y/7U67b2J9BtzequE2Rhj+fT8jzz82dEYY/e2ZeiEs9GWP4My400etW
9uvZn6ELlvrl9rcZ/kw72LhPjofZn7t+Xh1wvlC44c8PheLnN3CKMPzp3udx
8xzvsT/XtDoXn/N69uffkfkSkj2jDX+W3rh5b4ESMYY/HR6LNPyJz8/+fCb3
jf0JP7M/Hb6NNvz5UXjZn7if7E98HvYn1oX9iX2Q/Yn9lP2J/ZT9if2I/Qle
9if2NfYn1pH9uVPmgf2JeWB/3nOZuT3n/rA/8fnZn1vlvrE/4Wf2Z5e7NR+e
y/487M/Dwsv+xP1kf+LzsD87y7qwP7EPsj+xn7I/58i+wP7EfsT+xH7N/sS+
xv7EOrI/w2Qe2J+YB/bnNnk+YX/OlM/P/sTzCftzm/iZ/TlTnk/Yn+Blfzp5
O/Zf9ucXsm+yP/t79557NaOp4c/qeyz/cdebGP5cXmLRisavmxv+nDgieHjO
69mfrae49nb/vZHhz6IVu3yS42H25+Osrt/1D2xs+LNuk0K3zlRrYvjz98f1
Rud4j/35v1nzknNez/50nfD7L8FxzQx/trjVp9jyhs0Nfx76b92bGv7E52d/
+sp9Y3/Cz+zP1P++v80Mf9YTXvYn7if7E5+H/Yl1YX9+Lfsg+xP7KfsT+yn7
M0P2I/YneNmfq2VfY39iHdmfj2Qe2J+YB/bnxvBvN+fcH/YnPj/7s4jcN/Yn
/Mz+XFT1bnjO52F/lhFe9ifuJ/sTn4f9iXVhf2IfZH9iP2V/psu+wP7EfsT+
BC/7E/sa+xPryP7EPLA/MQ/sTzyfsD9T5fOzP/F8wv48JH5mf+L5hP0JXvYn
9l/2J/ZN9mdM+4rtc3zIHoBP+PsOr/IcYp553vC95vuAeWPeTTMzUpcEPrF7
tpizeXHifvvPGYlVTge9sK3pN9N9d8Vr9sL+HZ+u//ORrXCff6OWTH5pW3ps
t9et6/vt3+0/Y83q/djes1f7ZwcmvrDNzbu40WdDbtoODm66wWNQ9vNu30Hz
B3z/yrbj3J6Qsbmf2OKmvak84vx5++yk5CvflH5lk/e1yfvakgf2efcopriS
97XJ+9qnup5O2/vUTcn72uR9bU+OPf1kaN3iSt7XLu9rr9h0cyfnVDcl72uX
97X5/J514sCfbgbv84vrZrXrWkExb5HwqHPTtlVQzLt6gsekjGEVFPOOytWz
evjLCop5B/4QsHfyxQqKeUe6hnq4Fq5i8N453+/9oOveBm/F4PFrjuetYvCm
j+zQyv2At8EbUveF8/PT3qpGs4/LBpcqp5YPGVr6RJibmpLy1rNZuZLKyyvP
4c4RFdSXc6zkDoXc1U/OC3qPH1BShU2+m3dxnkqqz/qv75f9UFAFNR5S8qhf
SZX+ybPfOh/1UEeu7vrszfOSyvXojr11t5RUXQPOxCXOzZ73hMVDfeOKqdyt
Jn82al5JFdHk+duKS7KfKxclpC0YVlxZD6/d+faOh4r56mkPn8keau1Tz9aF
4wqpgD0lD921PNSSPs4x1qpK6vW28ufa1HVXX5f3GRSTlf36U7k8H24vr461
rPHqzOhC6kOHfOVnr/RQt0dHv/vNu5w6vjmoXXDPT9WkUiv+6r/Zw+CtXnhk
qX1/3LAzb/sbKRf9al6zM+/aWzsTM+vcsDNvoaszQ76tmmVn3jZLfFO+ynfV
zrw9B4+ueORjPpN3bXRSt3b5DN4C1aYFnbyQz+DtVNXp1utzeQ3ewSV6/j6w
SD61Ueb5wm6/CfZp2c/3zjU+1GnjpdbKPAcfbx095WllZWvw2uP4OC+1UuZ5
zaY/H3y1sZJyuXRzxKCOXmqRzPOAoS3LZdysrIYudTleZYWXSpN53u2/r+YD
N0/18MrAEo1ne+F9ba1bJDdLqeql/KrO+Xy2vy/e1/bcNvb7S/ZKatWzAwGv
CvjifW1TOub5J08Bb5XROuN/LX188b52+8Lxv844Vkn1m5c6ddnNanhf++AL
RVcOW+mlHrdopsY8r2bw+l9Y0veb9a4Gb/eUk29vxBc0eGd7/dBqzElXgzfI
u0RK/JmCBm+VwM1HMpcUNHjd1pbu9X5GWYP3VcR4j2MhZQ3eTnlWDZswpqzB
O2NihxMl3pQxeBe8nhVyukRZfI+sf23JQxa9qq7g50aOubKiWxwJ6tTJT8HP
MlfW1tqRV4NK+yr4WebKSnz5R5FfWvsp+PmOY66sw2n1PA6Nr67g55qO75HV
6Yx7+Nh5NRT8LN8jK9f+x2PSa/gq+Lmh43tkzcsacebSED8FP29zfI+sY2We
pfQI8lXws3yPrHEJk+c2L1RTwc/MCz8zL/zMvPAz88LPzAs/My/8zLzwM/PC
z8wLPzMv/LxF5nlU1rTUHVvraD9vkXn2uV1hwdJ/A7SfJ8g8X868eOeT/f7a
z0kyz1F7luU6cCVA+xn70Z2ybVzih9fRfpb3taX7xpTZ4BSg/Szva8vvlRp4
6Li/9rO8ry2+zourXz4K0H6W97XfaV73+Ioz/trP2I+iHiXuLx4WoP3MvPAz
88LPzAs/My/8zLzwM/PCzwav+Jl54WfmhZ+ZF34Ol3n+4BlT07tXoPaz7AvW
Zt/MIs7LgrSfF8s8dyu7oNuwUfW1n6Nlno98+HxM7YVB2s+Y5wEJRb7dXSNQ
+1n2QSu0r9M89+2B2s8eMs/Tu/X7NWBSfe1nzPPZIVs6HFodpP2cJvM8MOlB
dMGp9bWfu8g8H/UPDJvwNFD7mXnhZ+aFn5kXfmZe+Jl54WfmhZ+ZF35mXviZ
eeFn5oWfP8/aHr96uL81uZvTmtkVG2g/Z96t/53vvdpW3b5zpw5rFab9nOfJ
vmEvRte27nSIv5xVK1T7eVanMfUr16pltVBuz5c2C9N+vlJvWbJzDz/rxfIj
732uhWo/5644+ln3r/ysfZt2Fvq2XwPt5/fOiVMThtay3FZXrb4yOFT7+eyH
Ome7VK9tdUjvnRGQEKb9nKS21zpU2N96cXqtfaQtVPv5Vpsqo1oP8bfihzze
dm9dA+1n5oWfmRd+Zl74mXnhZ+aFn5kXfmZe+Jl54WfmhZ+ZF36OlHnO1yqh
6MfeSvs5Vub5fxmrcz3OG679/KPM86DlLl80/9em/Rwr83xX9dieN3e49jPm
ueGjfbuOxintZz+Z55QROyNfzVbaz5VlnhfdzEop+Mim/WyTeR40xs3nlHO4
9jP2o3HFuwbfeG7Tfu4u89znQptFNbYo7WfmhZ+ZF35mXviZeeFn5oWfmRd+
NnjFz8wLPzMv/My88HNbmefDQ0Ka1fsjQvsZ87zy5aSGVTtFaj/nlnl+O+Dq
1wnNI7SfZ8o8b+oc+SwkIVL7GfPsVGzFK6e1EdrPmOceixZO8Lsfof38TuZ5
1qfNZzVoFaH9jHkOWPqwW/7ukdrPmOdv1s/M9Gkbof2MefZ7m/2/c43UfmZe
+Jl54WfmhZ+ZF35mXviZeeFn5oWfmRd+Zl74mXnh5xnlhyU3WBlsTZvn/kMf
j2jt5yI+z85bJYKtrqU6j0nYFa39HOw3/vD0lCBrb5L957nrorSfx917089n
X6A1cGIl/0E7orWfq5ybVvnHDoHWAf/EeoF5orWftzd9E9e4XaBV7behe7rF
Rms/1wsf437wWqDVsl7144M3R2k/u4Y+qvq6dZD1cvfxnxpY0drPfyQOnZgQ
FGxFHetT8qtfo7SfK8y5duzO0mDrcdmibot7RGs/My/8zLzwM/PCz8wLPzMv
/My88DPzws/MCz8zL/zMvPCzzJXifiX7guJ+JXOluF/NdsyV4n4lc6W4X8k+
qLhfyfdIcb+SfVBxv5LvkeJ+leX4HinuV8yL9WVerC/zYn2ZF+vLvFhf5sX6
Mi/Wl3mxvsyL9WVerO82x1wZ/aquY66MfuXimCujX8lcGf2qvGOujH413fE9
MvqVfI+MfiXfI6NfJTq+R0a/ku+R0a+YF/sv82L/ZV7sv8yL/Zd5sf8yL/Zf
g1f2X+bF/su82H+ZF/sv5pn71QeZZ+5Xf8s8c7/CPHO/uinzzP0K88z96rzM
M/crzDP3qxkyz9yvZB9U3K+YF/sv82L/ZV7sv8yL/Zd5sf8yL/Zf5sX+y7zY
f5kX+y/zYv9Fj+V+VUl6LPcr+V2muF/Jc53ifoUey/0KPZb7FXos9yv0WO5X
keix1K/kOVZxv2Je+Jl54WfmhZ+ZF35mXviZeeFn5oWfmRd+Zl74mXnh51wy
z9yv3so8c7/CPBv9SuaZ+xXmmfuVPMcq7lcXZJ65X8lzrOJ+hXnmfoV55n7F
vPAz88LPzKv7FfHCz8wLPzMv/Gzwip+ZF35mXviZeeFnzDP3K/ldprhfYZ65
X2GeuV9hnrlfYZ65X2GeuV9hnrlfRck8c7/CPHO/Yl74mXnhZ+aFn5kXfmZe
+Jl54WfmhZ+ZF35mXviZeeFn9FjuV5b0WO5X6LHcr1ZKj+V+ZUmP5X6FHsv9
aqX0WO5X6LHcr+R97dyv5H3t3K+YF35mXviZeeFn5oWfmRd+Zl74mXnhZ+aF
n5kXfmZe+NlH5pn7VTmZZ+5XDWSeuV9JF1Xcr6SLKu5XSuaZ+xXmmfvVIpln
7ldK5pn71XWZZ+5XzAs/My/8zLzwM/PCz8wLPzMvn/9yv2Je+Jl54WfmhZ8x
z9yvZK7s3K8wz9yvMM/crzDP3K8wz9yvMM/crzDP3K8wz9yvMM/cr5gXfmZe
+Jl54WfmhZ+ZF35mXviZeeFn5oWfmRd+Zl4+/+V+hR7L/QrnodyvZF8w+tUt
6bHcr3Cewv0KPZb7Fc5TuF+hx3K/6iY9lvsV88LPzMvnv9yvmFf3DeKFn5kX
fmZePv/lfsW88DPzws/3p2xf8c9Em9Gv0huWS9+UXxn9auWutnsa2ZTRr8Zd
WnTndbYXuF/59oyfpa4po19l1Sg95vZ1ZfQrr63n529YoYx+FVRv+YxiPZXR
r1J9dlh779iMftWheOMR/t/ZjH7FvFhf5sX6Mq/uk8SL9WVerC/z6vN94sX6
Mi/Wl3mxvsyL9XXrEvI6JCPS6FcnL42+PLJslNGvdrVL/9etdZTRrxaPfln8
4MEoo19F5ftlh+urKKNfvTs6IiXtdZTRr8LiA+3D06KMftXyr3fbLo2JMvrV
sK07p/q6RBn96kjVPDeunYs0+hXzYv9lXuy/zIv9l3mx/zIv9l/mxf5r8Mr+
y7zYf5kX+y/zYv99KPPM/WqbzDP3q59knrlfYZ65X2GeuV9hnrlfVZZ55n6F
eeZ+lSbzzP0qQeaZ+xXzYv9lXuy/zIv9l3mx/zIv9l/mxf7LvNh/mVef7xMv
9l/mxf4r5xpGvwqQHsv9Ss41jH6FHsv9Ss41jH6FHsv9qpj0WO5X6LHcr8ai
x1K/Qo/lfsW88DPzws/MCz8zL/zMvPAz88LPzAs/My/8zLzwM/PCzw9knrlf
pck8c7/CfsT9CvPM/QrzzP0K88z9ylPmmftVoMwz9yvMM/cr7Efcr5gXfmZe
+Jl54WfmhZ+ZF35mXvjZ4BU/My/8zLzwM/PCz7/JPHO/qi/zzP2qoMwz96tD
OE+hfoV55n4l57BGv3KTeeZ+FSLzzP1qvMwz9ysfmWfuV8wLPzMv/My88DPz
ws/MCz8zL/zMvPAz88LPzAs/My/8jPMU7ldvpMdyv8J5KPcr9FjuVzgP5X6F
Hsv96qL0WO5XOE/hfoXzUO5X6LHcr5gXfmZePv/lfsW8fP7L/Yp54Wfm5fNf
7lfMCz8zL/yM/Yj7VR2ZZ+5XOA/lfnVQ5pn7Fc5DuV9Nk3nmflVY5pn7VZDM
M/cr7Efcr7xlnrlfMS/8zLx8/sv9inn5/Jf7FfPCzwav+Jl54WfmhZ+ZF37O
L/PM/crJxTHP3K8yZJ65X+E8lPvVbZln7lc4D+V+dUnmmftVXpln7ldzZJ65
X12VeeZ+xbzwM/PCz8zL57/cr5iXz3+5XzEv/My88DPzws/My+e/3K/QY7lf
4TyF+xV6LPcr6SqK+xV6LPerJtJjuV/hPIX7Fc5TuF9JR1Lcr5gXfmZePv/l
fsW88DPzws/MCz8zL5//cr9iXv3PxxIv/FzTabFn/ruNjH51d3RmgajasUa/
ynhZvOjlr2ONfpVWqm1Y0oVYo191Si50NaNgY6NfuffKODG+cGOjX7V7MP9W
+JFYo1/1H9T+ypqkWKNfJcWXTn1eIdboV9cPdi78y71GRr9iXqwv82J9mVev
L/FifZkX68u8WF/mxfoyr/7nn4kX68u8WN/Y5S+bnv7Y1OhX+UoH+ReJjjP6
1eP5g4PXjY0z+tXJbWk92j+MM/rV6PC+rqs8mhn9qk6Bei+beDUz+tWQ6c+K
FbocZ/Sr74vsdB7yc5zRrzY8GHHJCogz+tXHrlbg6FxxRr9iXuy/zIv9l3mx
/zIv9l/mxf7LvNh/DV7Zf5kX+y/zYv9lXuy/mGfuV/dknrlfnZN55n6FeeZ+
hXnmfoV55n71pcwz9yvMM/crzDP3qxsyz9yvmBf7L/Ni/2Ve7L/Mi/2XebH/
Mi/2X+bF/su8+p9/Jl7sv8yL/Rc9lvvVKemx3K/QY7lfocdyv4qWHsv9Cj2W
+1VD6bHcr9BjuV/pHkv9Cj2W+xXzws/MCz8zL/zMvPAz88LPzAs/My/8zLzw
M/PCz8zL+y/3qzsyz9yvsB9xv8I8c7/CPHO/wjxzv/pC5pn7VT+ZZ+PfH5R5
5n6F/Yj7FfPCz8wLPzOvPt8nXviZeeFn5oWfDV7xM/Pqf3+QePX5PvHCz5hn
7lenZZ65X+2WeeZ+tQTnKdSvMM/crzDP3K9sMs/cr1rJPHO/Gi7zzP3qqMwz
9yvmhZ+ZF35mXviZeeFn5oWfmRd+Zl74mXnhZ+aFn5kXfkaP5X6FHsv9Cj2W
+xV6LPcr9FjuV+ix3K9wnsL9Cucp3K/QY7lfocdyv2Je+Jl5+fyX+xXz8vkv
9yvm1ef7xMvnv9yvmJfPf7lfYZ65X+E8lPsV9iPuV4tknrlf4TyU+xXmmfsV
zkO5X2E/4n41VOaZ+9VhmWfuV8zL57/cr5gXfmZePv/lfsW8fP7L/Yp54Wfm
hZ+Zl89/uV/hPJT7Fc5DuV9hnrlfYZ65X12VeeZ+hXnmfoV55n6VLvPM/Qrn
odyvmJfPf7lfMS+f/3K/Yl74mXn5/Jf7FfPCz8zL57/cr3ZIj+V+hfNQ7lc4
D+V+hfNQ7lc4T+F+hfNQ7lc4D+V+hfNQ7lfy7/EZ/QrnodyvmJfPf7lfMS+f
/3K/Yl4+/+V+xbx8/sv9inn5/Jf7lX+FDSHNXeKNfjW7fdOa92vEG/0q/5Kv
/UMaxxv9ath659jiE+ONfnVsQPcl9X+MN/rVmjONi7oujTf6VaP568r3HRVv
9KszbaeXrpgQb/SrrjF3c8dUjjf6VaFvZm3xdI03+hXzYn2ZF+vLvFhf5sX6
Mi/Wl3mxvsyL9WVerC/zYn2ZF+vbSHoO//7NLz2Hf/+i5/DvX/Qc/v2bKD2H
f/8GSM/h37/oOfz7Fz2Hf//qnkO/fz9Iz+Hfv8yL9WVerC/zYn2ZF+vLvFhf
5sX6Mi/Wl3mxvsyL9WVe/d83k9+D/PyMnsPPz/g9yM/P+D3Iz8+d5fcgPz+X
kt+D/PyM34P8/IyeY/z3N+T3ID8/X5Pfg/z8zLxYX+bl/szPz8yL9WVerC/z
Yn2Zl/uz8d/fIF6sL/NifYvJ8yTvv+g5vP/i9yDvv+g5vP/GyPMk77/v5XmS
91/0HN5/8TzJ+y96Du+/eJ7k/Zd5uV/x/su83K94/2VerC/zcr/i/Zd5uV/x
/su8WN//Az+1ZFc=
     "], 0.67]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[CompressedData["
1:eJx1lDFIQlEUhh8VETUEEeUQkUoO4SAS2BB0kLIGBzGChoISIoisxihpzHKQ
GmoLKamhJqmlIRCDxrYGjWgqamsIcmgoePe8x/2PV3D5uP7+73znPm9qPbnU
ZFnW7P+32ZKf+EV7bPCpjZDf/ma/nws+Wt3cOg9OD1Bv6+d7qdpFLZXFzFW9
T/CXtbmqJ/81xr+3uY82PK9DqfsAIT/KXXcWSt2cU/bvz9dysSBxH+TcR88J
O32Qcx/OOZksLvQfRJw+yPU+IfW/o9DH5dwnrXJm3jout3fI6YNc7xMq2z2j
0Mfl3OfsJlKvZEbKtcCD/2N4wumDXPcVcuYB/R3O50/tHOEXOfQn9Isc/JLB
L6FfPScM++Zy8EsGv4R++fnRL3Lus6Jy0C/yxvsfNex/VOw/+kWuz4cMfl3O
57M91cef5XHhF7k+TzL4JeFX7aHwixz7N/ZLwm9R5aBf5HB/yXB/Cf3ynqNf
5Nwnre2h6xc57r/BL6Ffe25Twi9yPn+XPPbmD+PCL3LuzznoFzn35z1Bv8ix
P/pFzn32VA76Ra7Pkwx+SfjdVTnoF3nj/cf3Mwm/vOeG97Pwa+ckDPc3YfSL
80eO88f5IMf3A/ZHzuf/AIkVb1Y=
     "], 1.56]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679633361051*^9},
 CellLabel->"Out[74]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvYdXVefTBspNkRgL1tgVexcVEaTIEQSkgwhIP4h0kK4goht7770da+w1
1lh2LLEnRo2xJe7YY6KmaMqvJHPnmb0P6vfdf+Cu9bmWqMjZ5y1Tnpl5Zk5w
cnFGam5ycWZKsr1fYXJ+RmZKkb1vXiF/693/x8bm/8nAb3ub9/jvZGPzv75k
2tj839//7+//9/f/+/v/X/9eJF/ftbd545ej8T1bW9v/9b03fy7j/+N7zfQ/
suRrTftWrVpZ/ENC1NTcXHtnZ2d8097B2dncpXt3vMzUqm1bGp6drU2YNcsU
nZTURV5WzdS1a1c1LCrKMlJR5CX8GHN3B4d35L/fUxydnSm7qEibNHcunqK/
6n2ll5OTGpWQoKRkZ+MVJjdPT5t39TWqriYT5Y0aZZkwe7ZNV/0xFhd3d214
To45IDTU5Onnp//oe1gfefn5acUVFUpZZaX+9PdM/Kaqh5eXyq8weXp7v2d8
u6uDAwWEhWllEyaY8srL396/ZaC/P63YvJlOfPWVuuXAAXxT5Z+muStWaMs2
bNDihw+nHZ9+Sl99/71l9/Hj+nvV1IbExtL63bvp9LVr5olz5lBwRATNW7lS
W7xunVwgr4E+OXGCrt6/b56zcmVneVkte1s7O0rOyKBthw7R2W++Ib+gIFq4
Zo1l8dq1+AFzm/btcQh06MwZ+ubhQ/v0vDwb/bXVLP3696f80lLafewYHTh9
mpasW6csWb/eOHLLAF9fGj1hAh29eFH78u5d48i1AT4+VD5pkryCn2oeM2WK
ceTvadjnlPnzsXfLuW++eetkalnMvM6jFy7g/TSfQYOoP7//iJEjybJ1Kw3k
N/P186O127fTwz/+UEdPnKiwdBhrrakWlJXhaGivqpKziwtFREXR/lOnaMma
NdS7d28aFBBAB3lFj//4wxSXkmK8zOTg6EgTZ8+mS3fu0CT+02vgQJo0a5Z2
84cflBYtWpCTkxMlJCdjWdrDly87yctq2zdi4eOLV3wCA2n+qlV07eFDKuej
CAwOVnMKCiCNapdu3WQluYWF9PXDh5Y7P/3UQV5eB2KPl9v7+fnJ9bOE0tqd
O3EslF1QoLm6uloGDBxocnZz0zp06EBu7u5UxBvkR5iv3Lv31rHVtnf29MS1
ED+VEvhJubm5lDNiBDl260yRkZGUw5JRzMcYZzbT8o8/xl6UWcuW6XupaXbg
LY4cO5bc+U2SkpJoBL80PyeTevXqRdHR0fLvEpaQ6YsWKSu2bDFeBtmncP7v
ojFjKKeoiAYMGEDJfFJ5eXk0yKU39enTh2JZZvFvfrkhj+TLJ8aSTov4XsrG
j6eQwYPJhyUmJSWFCvmk+nbvTC58avHx8ZSfn68VFhfbdJTX2pGJf44vS9u8
b5/CumXvFxqqVk6fTp07dyZ/1qrU1FQayfLq0Kmd7AaHUVBQYDGnpNg0188s
Wz8zE9sCCgkJoeLiYpo4cSKN56XgJdnZ2VRZWUlTpkyhlKR4uZEHv/+uTlu4
ELLS0Xi5N0ticnq6HO9IPtpJLO+jR48mb29vOf4JLAuTJ0+mL7791nLq2jW8
FNek378drJBI3YXbtylh2DA5p1JeOF4ydOhQGsTCj3PDyqZNmyaKyrbOvmPH
jjbtdRmS8y/ha8MKL9y4Qf7BwSIBiYmJshTsAMsJ5u/zIeBZKu/W3NvJCQay
nfEYKEAWnzv0H/ZhTGUlfkTt1LolsRjKlZaXl9PUqVOpb9++NJjvq4ivm3ds
yR0x4q1jtbNv1KiRFh4eTmUsrLxwmlaURaV+veVMcEaLFy+mVYMdKTE8gGL5
yRW8yG3795vYAtm8X2VrbZTIuBqWESPrmCLibFsYj7azs9MmTZogZzWGZW46
X/zMpCBKC/KS/WG/i8rztR0T8lVXNhwVkydrq7ZuNUVER9tU0y2+EhxRXUnJ
rGHOKqxlCEQdnKll6rx5NHvpUvJ06CznN27cOJoxYwbNDGdBDPUXKeEDUPPN
Mao7ew1etrZ661Zst5qxanZkSlxyDSW3pJZ9q442TY2n809YKmfNojXbtokt
CXd3JC/n3jScjTzkbNb4sTR/UGeKYGs+ipUM7xoVGmhdva3xdL9QGyUiprol
s6C2KSm9RhP5dl14Y0slv2Ipa3/37t0pjJ1ObLA/DWrXgNi2UFZWloji/PJC
KvXpSTExMSIbcyaMpVGKovGqrN5Z9/114X3harSJM2Zovp1bUM5ANpBDfenE
0G50K6UXHYrpRVn+brKZmABvygkbSMmsd4fPnqXbP/2kLmK/8p5hmHjVNDSp
Fs1d3pAOn2lO575uZZ6/sh7+E8ZVc3R01Ez8y66Zm72+ChtcRz19KebuvXtr
LCR8pCWqu30DCu3WkopCPKlysCedj+tBp2K6064kDwo39RPJhwmIYO2BKPNS
zFsPHzaEqjY72OpUWlmPth5oQqeutLDsPtYY/2Fq1qyZyuZDc3NzU7o7OJka
tQ2VZbC0YUl19aXAnmsJw4crQBj9OrSkiE4NKdCpK5VHeNHWCAf6KsmBvhjm
RPtSBtDAPt2pX79+FMSKt+mTT+jOs2fiA42lMLSwpcTU2jRvRUNeanPt2MVm
9knptiIqbfn0+WQVT09Pe7tGnrycQFlOq44djaVY+vbrp8FRwnBCQcPa16OI
rk0pwq2nXNTxqK70TXIvupLiRKvjBxDjJrFs0XwyvBT7OUuWGEupaQqMsKWw
qJrsxflkDjbRPvuymXnl1oZVF8QypbETNnXs6mmq38pPd/zv2nd0cLCx/qol
X+sBIQE88c5SKZAxBu+Awnq1o9jODSm8Wwsq8etDU2J86Uxsd7ozvDdtiXGh
KZEDCO6NvSYtWrHCftyUKU3flMZ6WhwbxxWbNskmfBkBxLBqrAx1oGY1qzFi
Vcjc7SNq0KAB8blRly5dxBO0bteOerLzadq8OXVjJMZ3965FbIjWuOk75OL+
AYVF16Qkc20ym+0oJr6W+s4771B9fkxLe3vqzm6veetu1KR9EDVu2lQe1cfF
xeZ9eUY1tXp1G2rT/n3q3K2a1oSf16zle1qTZu9Uk/+uS215PwBG/BKqV68e
NedVtGzZkvo0qQ2MTSv92tK2qF4iIfC2MF0J/CdLF81asgQw0tCfOmZPH1vG
ZnXp0OfN6NnfbYmoI/3zT0dT+QQ72a0/YxpAh9zSsdQ/dpvmEbtDXPKc5cuV
UZWV+mPeZ8djoySk1DDnjapljoz/0OTm/a5hEeuZ2nbsSGns4AHxpjEwc+ne
iVgtKZDddNbgQXQ50YGeZjnRP0X9aOTA7uTh4SEuAS4gLTOThmVlaWyBdIGq
Q0lptRkPfURX77Wi/1B7+oc6KreetrC04zthRadwFtqhwBhlleQRt1fr45VG
qTk52oxFi+xDo6MNZK4EhldXktlO5xTXsvlAvlff7KQDfNrDAG/6ggXk7diN
erdrJYYInnxCmBvdGNaLfs7tS1TiSgnu3eUtrasFAMxkMLB0zRrrAVvCo2pQ
4ei6dOBUM3r67zY4YO2/1N4M5Af4M2TIEAplyJoODDNhiTZg2DmC/WfMozL2
fucN62xdcmTsh/qKG1jcGREBlu5jVD6NVww4G9qhoQgrIE5MiD/ND+tDd1Md
6fc8F6KRbiLAXl5eAofY62jevr4a3w/gTmNdNfQIqwEwpBbJIMmPb4rtvrhY
YIhOnTpRTOcGZAmYRO+994BxWbIAK7jfXN7H+l27BHcgIPj0/Hm6/vixac6K
Fe8YR5JfWoeOnGtOfAx8HF35d3e+xa5myFsQv82yjRvpzPXrtP/cTUqaQ1Q6
abFAkBv8GL5B/TGtFMZXqqt7B4pPYYFY+RG7h+a0+2hTmjKvAW0/3JRObG+s
sj5Y+LeZf5v4N+ytxkEhgCb58W3BJwIFAUwEuDmRZ/PaRGUedCHbTVANvDIQ
Uxa/5mM2tABbO44csbGGYdFxtuzVG9LdX1vzNjq9w1+62TQwL9zaSK5iMGsK
bAt2M3/bLYoZe404mMLhaNfu3YM9Vtq3b29hQVAG+NWnlCw7Wrz2IzpyvjlH
Gc20+asaMOxuqIt+fQVAajLjCADSQvaxCDoAn6Hg8LnHzP3ob9YiKu9PY0Od
BUiVlJToO2AN3HLwIH2laSZekhEuNRUHCq+FC/n36wuxELVTIZ/AiqEMQRmL
0Plbt2jcym8oumAHbdq3jzhO0IrKyxXWDzxMDQr/kIFeHVq5qREdu9Bc23u8
CcNYW5y6/nYfSTjrGxSkItRkW4QIVFCuLztWGAXAB2xnfPEI+hFGocSNqMKT
0nz7UhTHW0DCgGGIePgiCKc4asoU/fGN1KyC2rSAjcO3P8t94Do03pECmQdS
TWTDEMUSvWbHDrrI8VjugqeUWTJZwrhbT55gpeKxQobU5LCwDoeFjenE5RbK
lv2NbHS5a4KfgStS+nFMFJ2QgEtU+7FbWrB6NSJjKmHkGDDIh/zc+wqcRZgB
6zC7IJV+HeFM/5S60/1CN/k/bBeYDNA3l2WNQ0vti+++s3lbEbVAxruQIzYI
NIz9FcAjFBHWfnZAd+rZM5Tq1v2Kqld/yg77sDyusjiH5eg83X/5Ui5vyrx5
Gl8glq7vpLl5eE4tDmhbiNGHEhL14HvvZHJ0rE/RsSES63//22+0Qf2J0peT
Vjl3A8JMuv7okcU/0kztnfPJ0ZRE0bzDuOQutGxDI7r1oz19frad2DbsfPU6
Jyi6djOo+rtE4nH5qyBzXMKEmTMlplIUReB27dq1qW/7luIEEO4BYuKAgPQL
+U/1yy8RX5vX7dpl6KB9dLQtWbY1pufivrpCB3vYNOQIvIY6kEPtHCPyuP/q
Fc3d9ZiGlh2ljXv30t2ff6ZF6w+To2ciDeFrSGbvOCyzNq3a3IiD4NZskTrQ
tm3tsRGNzaXCqzHUvr4gkHIOnGC08awMNg8ZDJgQ4mEXp4b1o3jXrjTYy5Um
x5hEiWBiZvJui1hRkUV48scf9ktYEfVn9lIrp9Xl6KjlG5fhYCJqZXZgfIEo
M48VGff56I8/qGzdL5ResYWOXbxIj3//nWI57E7NyNCGxrqyA6pDa3c0pm9f
6HuAw8kqaMky0lNjFZB9QG4GsvljJM3ifZmQCYmPi6FCjsK2Hz5M8fw8hKkA
9rM4tDiZ4ChoIMLbjSJ9PSguLk4itgl8BmNZ1s7dvKk9/P13Q8sdYVTUxNRa
tHlfEwNVdDWEqzPQtzhTPB/vp37xBW6UCta+ooppa0QtP79yxRQaGqoFR3zI
DrkOfby3CX33HCrdQWOfjzex2DOQgpDhjhPZlSE68AcqdGLBCxooCQOTkSda
tWWLBLzIMyDg3VKeTnMDewjmw34AXhGUjR07VhvLksihOLEaqo9evXpbFT8k
xEJnOIiFXhTylfBLqHXr1uTVrrGYfKhnRMSCdyDkNrZUo8aPlGuaTeNYMsby
StayzLM3UPhP4+abKZZtDel3aodTYmPVhc1odYHLcGrrdvqq63ZONLvGnrZ3
CN2EuJmKKyrEH05ZvIlM0SskQXbw889pylwTjJXcOkI1a2YFxufKFUfLbyeb
2Bg6SOeqVxdXgqTUBTbrCBahgwAG0EH8ia3AFhcMi6EjeT50uGQoFfOWZ3EY
y85QPXD6tO6ZmgH3add/gPB2pufPO9E+9sMcjlmUafXNXj4+wBbKpv37Laah
qyQgh2WZvnQDDTAfAb4ToTvEWxgzqR4fT0tDcLsShB9mH9tgD4ecimGH6wOd
0HhWKLiRhRYLvBEdPHlSFBGCu7gsl2L7dRUBAdbBVj7OHkTH8v0oZ0QObWV0
cvjzz9+IVt5HAEwbdjcRYEnUW7v5nb3xfl3Mbdq0UaJjYizIiBRPtNDy7edo
6pL1FJ59gGCgLRx/n7p6lQpHptC4qfX5WHEe2Ec3evCgGxRQ0B6jKI3Xgodq
HHdKOhICivTjIMYcyNJ98/gxLVw4T/YN770vY5CgLphDXBWu9FCuNy2aPkH7
/Pp1AFuOqrbCN+nLtRU3NiSuphzpxj1N6NFL6E8Xla/IuiUcoSWIdTGHXQ/A
WnLRKnIZspUGDU6mmXysbG2VaXPmUEa+HU2c3YDhTyvjarrBRin169eXbQFo
IAU4ml3ft8+fix6GDnAVqOnNx5+UlibHzSEzjWB7jKuYrYym5bGeooMIq9P4
Z8YXZ9OJyalmDjqxQHM8x8Mrtmxp8qYK1sB31aNsCc8zqsLKAYA716tOmyN0
YYG/wKHZ22ss79DD9xlbXKVhqZPoM7Z2bKm0b/gC3oUnYpXew7sAKBwzuZwi
GIP4+Lrzc+vR5+waf2O95AiDfvm21Tvy43W1Bx9+KA6VN6Nt2H+GQkdcopWb
N8vmth+aTRduthTsgcgAhwKnAId84oSn9tegD+QpuhrWpY2MrI/w/cOwx7EB
GjHQUZx6iZ8OhawZu+1jU4kmeVNJSryGPCtiqe9//dXChtcwIx+ofTlSR5o9
nbeC0G/t9pb05M82YjT/oLa6ba6LhLAg7JtPn2obD5yj4PxvaSqHZUBiT//8
kybN7ElXvm8lW4DYIspGkgepJPbC7G6jDTtf1+LNNhWeHNgEdrySLVxYPwf6
OKgDXUroQcMG9BEQAN8H1HZ4TJw2MzVSfp7f33Lzhx+sy5f6hzfLAbaQmh1D
ZUo3UcO/qYNpjsVOf8v2CF4lsQsNWbrtFPmkXxE3AoPILtVSUJLGMOkjuvmT
vVgjdjs0f0EXuQ1YBus22LJAa9QKvhkEtEs3bKB0vq05bNwY5ZOXiyPN9G5P
+yM605n4nhJNwUXA7WErH48y02VNUx/+9pthPappg4JbUigL4KQ5pbRyfV96
8XM7k/ZnM32H7ZGOFwSHTP7SbScpMP8hZZdOpr2ffUb3Xr407TpyRM1kALt8
YyPSRFtl+dq9+73UHqxl2EI6Y2XYaUYS6kj+E7lujsVpLAsJvHJOfr4Ix96j
Rym7rz2tCOxM5+J60OGYXlW5VqQ2+Qi0Lxlo6qlPI89f3RLJMofl9HVzo4Ee
/Wh2mDOlDx0s0d0ovsSxiSNs3hOVepfer/ZI8/C6pmw7fNi4xA+RwKI9x4+L
MFXyKYn7KA6hn/8BCOhiAJuu+mXa2Selp5vZdMNsmZ0jdynZ5csU9mRKcLg3
P7YR/cn3H584sCq3O2HKAsv6rf0QyvEy8LUObWA8gdDsxg8/aIsYgn/00Ues
xR1oVWAnwU2FbCrL+NIulg6m2aV5NL4o24T3Y9ehcATxnmEukaXI5x0CRlxj
FJ/LlresfBjUwEYP6+rbqz/b2bzxC4Us85J162T5TpHblYjMTZbPvvhCqZgw
Aek29fhXTSG+dOCQI8XzwRvb0ErLp1rzA1LeQUgI73WATz7X0N6iUBMdi+oq
qWwzwzE43jHsefhE1fz8fPOoceOUPaqqi94HHD360QRGarBvp69cIaUyzRrK
mb/+tul7hvJbV2zXyNnsGn1Q8U9VLVsPHFD4rvADprxRNbQvblsjgm4oMVIC
v7uxcgv7VcN51FE8WBPxludv3qQD7HdhwGF6sfrhcdG0M74vXYjvQVkB7nrZ
hO3WmIoKraCoSNl17JieHqpGkfHB4r5RGVjGePTatb7Ky3+11TfWDmUQMwu4
vV0rPwZBh3nFRyxrtm0TqdPvwFbbsKcxXf8B+t4J7k3tz4qGop63j7915UpF
RYXJjVcM8IQgAsAH54pQamRGsqzaHBNFS6Nc6WhkVzqT0JPi/L3EZrAV1sbz
nY6bM+ctffkQ5SHNzPuuUaOGpMlGsLAN572OYtXcvH8/rWU/0b//sfd1ldH4
q71RCDeO8UMtZ+RY2fsTtr1l46aKcZkwJZGDJqufdeBNda9hmEn+osLpOXiN
oZDssxQ3jSg85wjN4He+3qjRO6IVdnAyyuW6ddVVW7dq1x8/tgRxCN+oSRPK
4x+rLCuh2PAgRgaTaMuBAzSXTR7SNig5zF6+3EjcVTe36OhB5VPmimheffir
aOAcRgMGmkdgbVNbv0UUsylvzCxyDZlFgwuuUOJMsnfwW2JVdDbu6sI1a7Rr
Dx6Yjly8qA3q24Ni+PSRV8FyphRl00B2JpCn7Z9+KuH9mMmTtfmrVhnL+UBr
282nys9CUxASPnnSEwdkb3PWWIktX3IrDWkxOAWngdlkilxIEcVX1KGTyCq6
9p5+fur0RYsQamuxQ4fQ6AGdKNLTSeKobKO2NmXMKCpIGELwcVMXLOBYZh+Q
hjp/9WpdNm3NDVv50OD4HCml3+d4YMmKFXT2rC8LYiMb3VI0VX0C+mhZhYVI
lqpD2X/klk2mLu6F5Je4iWLHPzX55RFgmIrKMFBxaX4WzfDuQBtDu1Kcid0n
g/AsIxSbUlGmKoMHUKK/iQYxbJu9bBlMn2XuihWGXOpFsg8FQ4Qw1gSoQ0AF
bdh68CCcLt199ozS0idTrdovdLmsDblUDLlU2nd1oIjYWBHhtPm/UGrpPikZ
beI498vb/Y0oheO4UTY1DZlkP6p5x68nPmJKnPGIcsdZ4JTUnbNmwVQbpQBq
1rIlKRwdY0EzCtNodPIQ2sl+Chd6cPdmubHjjCIYFZiKysvfN3xSa8dMGhCS
KTSBtImfSIC9etMMaDvCJdM1Pm1DDFHEUMPic8l7+EVKmk18wl+aeXW2xgrg
nnAM7Pkk3kcMmsaSj4P/jnHrYrY/iKlv//ijPeMQKzSxtetIPXxmUnDGAUK5
gBdHCxeX4xgQotsZNtiDpQ7RJhJBYcMXU0jJr5SyiLSwjKWQOP1ptSSrhtwi
kghYzKfnzkleCpm6TF5QJvtMJCyQoIBkfffTT1aEYWndK4P6DdlEaZOvUmRm
GaVkZlqmzU3VV/Ch2dnDQxLY+0+d0r66d08ATkHFdOobvpGiKomSZj5SghPG
6WpgZwH0RmE8P3wgTQ1wINR8sKIjvKIcVoOKsWNhbxQ8tmD0aIlUWM4RcbwN
HGqgMsESZGNBQPP5119LlgL4ZBnDqpPsjybPnSteOjnzvE01kboPFcMaIjtP
7BCQRaCsud9SYMo2Glr5mA6ev42qVh1d2+wbdUyy9I9cJSuBMvLjtNXbtoHA
Y3jTWmbIfYtWrSTh+ogN6jjWmlL26lvZFiNzBSLFNA57gU/u/PTTG6+1NSEx
EcSBDGJK4HHk1BMmP6Wv7j6yqWeYud6uXlQ2fTP5DikW0Lzr6FGUIw0JV7v1
6CGMA9hzxtJqYapZFBXfO8aHB2CJk+C3V79/8cK4VRXFnJTcURQSkyHQnA/Q
svPIEb0c9wG/qY/A01s//qhtO35bcxk0miKT8vGjGuuPbmNrS2ogjNFnJgs0
1OzcjRsaEisgEiDUx5mNYP98gRfH/0csIOr3z58b2zc79O5NAYNjKKl4M4Xk
7CMzI00WBo0XYxizZkqL9v0kdY6Xnrn9K75p6shC1M87mryHLqAcvv2Ne/cq
HM4KeQBgPY1vt4gdFrt+fVl8y1/z8Y9kx8umHiYeR6/i/xBDsIuw3H/xwipg
epmulsnG6jf1Aq55+sKFsKuSfoMZh9Jt2LMHxoNOXv5Z1TEqvtZQXr/UxtKy
kzeZcyvpy7t3RUIis1aTeS5R9hpS5qxab7iIGsi1W4LCw+Hh5T1b6XQcZHvl
OSZfXy2zsNAcGRtr1U4FWYB1u3ah3kGPfvlFrxDv22cIJ9ag9OJTmcEnCMVm
iUByRPIpEMgHv/2m+rO0zGMhvfX0qbLl4EGrcGqBETE0KCKD5q/RHeCJmy+1
1KVkWr9rlxGNVQOEtfAS4IuF7ebq6Ylau1FStfRxcdGSMzIU0K/eM1bcrGsM
mSImilwghcQ2R7v07bf6hmpIVIxEP4eo5qThw1GVFb+A/CXyymDZsL1UP963
zzgEWxSPhbAzd/XHFJ1SIqbswatXZlYnm6pyobOzMsDHR4mIiUHRzezl52el
zOHgUXRCSd64jA+UVr1SaWDyQYoZsVxIaog5IS/QswcvX+ovraXB4yEyZ3mA
IUJGxBTIwATVx4O8jO/5TmDD7j5/jnsFtjTetjqWYQKaA+KFG9j92ecUljyR
ErPGIkGm/fDHH9aqj2T/2dgrHDeaPb289G+3gAZpAwMCwOBT2/TJooHmA5Qx
67HmmzBDGxIXpwHwwBLAkSHhA0m/yr8RwxnSr3LwhYeBiqPAFMBJAEjizjnc
NG1jmYA4InwFs7Hlm1ryroqXWkXdODxzJEe3RuJYYdFS2F5p3zx8aDp49ixr
FemZyhpqh85krUdpvXq7UG/PdArIe0RRo+7QFpYBXpk2ZsEZe4fQG8ajawqP
Mo93Az3mqBPflPIK705buWWLAv2HdLNX1z778ktDRLD4quLP9iPHKat8pdbD
Z7rS2iHSeHRtq0OxR/phzfbt9N2LFxY+MHt8v3LGDI1faz566ZIZtQc8/vtf
f0V0Y2zauhPq5+5FfQLnUUTJXZq6UlWLZ55HKPGeIeC4kjU7dmj7Tp7UHPv2
hU3naGIP/IIYROgFnCmMoKGKjAYYICXkSL0VvvvMtZsMMudojkGLrCREWAut
AuQstkwPX716x1A3Dtq0k1evQrNp95EjpL14YVIvXzaeLOSG+JQUCmew7tA3
hLzMRyh69AOJdQwbQ6B2Qu2gVgBMa3fsME+ZP984Nql8wwxevH3bVK4Hdew4
o1WUlVHKRf4Z+YJJcxfRvlPntKKp+5VefhOMMrM6nBUeEfDj33+3X2Kx6N9+
X2E7oB0+cwa/cWnKjadPrSG/2o/BAYIqSCkIogCl/Qf4UB+PWPJJvaAVzbpi
P2XOHEP1NaTkEXggy8BOTUUiXD+1epL9RILk5FdfWaYtXa/5Zl2lgOErCSoP
vd5/+rS4n0lzF9L4uWsQ7CrtO3c2B/N5ITK48+yZiZXEuARwNzUU9m4+eQJi
ZRtdLQz6MNREtarKe4b6NHzW2Oy10u+N79WEIyEDqahgkgQFBUk6eVj6SIou
v0zDFpBQHtl0Wi7cvm3YIpM3KzW+jTzVxJkzNVT7hrFL/UrTaDxHLq5ubsIH
g8VlKVLyyspsrIgXEA6gKbNsKXlEr6fIuDg4BdCCTTaGMzOsulajZk0kRPXT
1b9nb/PGLyMdLBxPpFmR1E/JKKUoRaPp2/9tOfPNN9atSkYdhggFgb3Hj5OJ
4+jRlZVYo8rRmYZ6M9w566HGZtfIPagArMg7XLitURdPhTyHzIYkaDOXLjVF
x8VZKT1wSawAb63UTvembxy4rTooJFJy3SjYYLXDM0tp+CKOkqJ/NiSlNujP
Wn82LjlGUQx4JoClZ/KcObgEtXvPntQT1XE+OcDRp3/9ZZ+Ul6e/vCZl5OdL
EuDine81+54p1C9qJ5mCc1FU11h+RWvY15mHZWUhR6XHOdVV//CoKmOcxppi
zcgjqZaaXWZJnG0NMZtbWeEW08CBYvgRaKM6kDFihDY8M5N49RovQ4WRwjmv
27kTLhXRMXjoFM2xIseMdPzSJdpz4qJqzy6wvUsBeSXsEPIPB+vKtEWLQDRG
BUNnRtukG+fKnoGDOhuLW/8PrMJtYrlRrUDIAKwQaoshUFJyRXqxgpUZ0eaw
8ado8rrvKG/SQe3Qua9McUlJhnBDwJRJc+ZQaERElVCBDhzq3V+ylGajfogU
IG9aQ5ra+pZ2dnaWSHM+9fCdRUHDVoviHv/itDZh5rA33Rf+hBPQ8x5CXSM3
1hlkkqwrzJrxpbZ481fWR5udXF0FViKWRi0O6T/kb1LDfIVcgIIYUtnlY8cq
KzZt0l/2IVizanDMCHLwm0vOEVto6PAiuear9+9bSisjWQpqgRFpJBjU9j0G
kINnnqRTUYtBOhXM18Sp96xxiCbF1TVrBLbPXLxY3h21H5xvXPAgKYzAkGA3
hcXFYMcYso07sVEL+ZlpxdPIMWgFuQxeS+7RmwSMIVC9weFxelEom7caWJou
nF3Ubn0GUR+/cTRy5nGVQ3wz6MdYIu7GSFqbOrqVy9nCtQHfY5dQH9SBYbc9
OYIN4KXDvmUOT6aendrLfSLxzctUElJSRDfYgWtAMnjtwMFF1DtwGZkSDlOv
gMUUkLxWMCLo7NcfPRLmUmhkdSyV41Fbndttk2ZcmV+wLfV1/UAoc2C8TJpr
j04FzX1QstrJo0J9/7sGaieli4VVyd7G1tZ6ZYbMqihT5rMyI2mGJAW8yqEL
t4k1UfHLfaqnjmqJKcFVWQUHzAIrIRpZrXHlpfTtixfqp+fPK26MmjmmqUrQ
Anv2CZxPLgOi2AmtYcWsxQ6pJnV1qKbtPtqE99aa0NLh6hOvdnAvU9o6FyhO
/fohlQ7woqceqmmoQoJphGrOXA4BL926Zc/W0GBsmvwMd4HKu5UUgko1RBY3
gk2ikDR3/nxgfqBkPrtgfZH1LO1cimhQzrfUtbsTxQ4rkIvJL+PIvrQuLVvf
iI6cba6s2tQQVGzNhyGq68Charu++UpHj3GKQ69elrDISCQLrKUk+HTAFwRV
fkbdHAtfuny5+fytW/qP2amo3ILfhYw/yoBYKH4UNZbh8UOlrA4JR42cj9nE
YgOoDwk37KQ9+MW8kgLyy75NnR08yN07hsbwxs+yRd9+aBXFmmsxKmtAOw43
BZ8IL5JdMA7S/Aeb1da90rALAGYLh9rA5CIZwFLAR0s3H6L0WffYe2hAZWKu
jO1oy5cvN5YhbPtJfC0IC8exMIVwKNePtQdG0arkuBPhJBv3g4R4YEiINPzg
IewKQAVX27sUkl/WDXLsH0dOLiYKjpuod3A8eKBuP7yGQiJqUkFZXdCkhCKV
N6pGx7e0gnKK60gK7+yNlvQ3tafpcz35KSOpf8JRCi/7gwYl7xB9ZXSjMjCy
Wg4HnTSrsFIpKdm1LEGRdWhofG/KzQum4tGR/ONH6fJ331HWsp9Nbkk/6dpR
2wINR5ocNwyGSqVvD7HgRp2JVpt9KT7ED7wt7EPjaM9UxaSsAzhN/olLhCE4
PKMP27uG1LTZe3RIbUb//NOBlJkelDVyEvUJWU3BRc8oKPsSlbKE7Dp6VNtx
5IiRB0e/i2H6heloycgHmu1GWbz4cRMTqXLVYQT9uj7VNo9mZYgbEvbWQqeH
u0gBGGqNAteMESkiB4CnDIrN05cYCekW5o4OnuQTM1usG1xCzoghQvjac7wp
3XvVBqeu/U5tNcTjKSNGU+f+Y1nB7tKQsX/TMHbf/Djtk5MnkXDU7z4UHQXV
KT2vF02cncEhyziKTfWglDSTpayiAkGX4absUEFV0Q0DSDiwTw9xDKiQwoBN
jPKmIX5eVRo3uXyk0O/YmWgbP/nEcBKtLP19Iymq6FxVOwYyLOP4UEGGxAWg
CP0Steu/O5hUrZGGMpMyYy61ccygAclnKGLMvygodhRKTwh+LAN8m3NU3ZWm
zAtlVHSZJn38Baw2Q9HaZr+ARhZ2pUpBQQEa1ow11DHDSQWznsAIm+NiaECb
BqJeMHMwyPPykiney0U8EK4ILQGjJ0zQNu7da0rJzn7HMM6efhEUM/IiuZlC
RYZQaxw7bpyZX6aBPZs3qg7tPNKUtF9b41rUF9TGaNexSZWvzdDPIYTpvLI6
VtofnTrjRcmFyyls1O+C0RNH75GgSfvlF439nmXEyJGWj9r6a108RpMT34R/
SGO2efWFa4ROgkmzGwiP6tjF5vTp2T6WT88dYFEPNfxCXRgc4EitYupU1dS6
ASV5OdH4GH9aEtxDuPqXU/rSnMQACvHoS2EmV8oM9ZHyEHInd3/5hZFFpfGs
piqofykokY3pSgl8gyCO6+XSbrRqXTjlVixjA3kTbo0SJl6jjXqiS7v//Dm1
dcqmngOKQJXR2OCyxNalsvE65+P4hebssxqT+kVz7cCpproA1pXmwcFDh2qj
J06UdE1ox49osFNnGp0QTpYoF/oiwYEuJvehg2k+YgCD3J2EcA+4cOvHH4V1
oAvBB0hsCycqmy8d1d6ikQEc2zek28/tXzNi62lZI+No9srN5B57kGImE6Uu
JQFGHCDTo1evyN0rWNq5vLxdadS4xkLAHKXUY1jcmPadaMbYoKmycU8jgwQO
7K/ll5VpgSwvrl3aCRs5zLEjlQwNopkJ/lJ3PJ/kSPtSvCTD7efcS6jsBzgc
fGRNGLWQqhUi4pkcVMLKMzbQckcMo1J+58NnmtEfwsqSe1Ce/9paTeA7mrpo
FeOcJRRR8TcNX0yUP36tRD/Ih/kM8qCYuH4iMzsO95FdlFTUpTXbGmv7TjQx
J6V/aJUfFez9ZLYkY1jLocVenVtKJ0Nw56ZUEOlPs5KCpJPh84RetDvZk8xh
/sKVCeCLmD5/PpJbhhOtpaL7El2J67ZtE+/EeE8DyQHBSW5JHekDuSEFUinr
CgfoLRVqaoK7adDwXXrxTxVdjx4+7M7xdrjmMf6EljCLLP2jVoBGShdv3hR6
kClwOPX0LqeBQUNZbP1FfU5fbUE//91WaEK//ae9kGgMGqJy6lYz/QLrSfi0
/+RJGsYrhx0M9fWmMn8nupLUk37KdqK/i1wp2bOnFEoAmmFTQjjaAPkK7BE+
cdiQdw0DwFKIYE1Ly20sjlPT2lhJlOrt7zpb4lJzOZLeosVNJ3Vg/HLxCBc5
yh0UkUU9fGaQu28iaikUm+glyqNeak7P/9tWqve//bet8Lj+/qeDaf3B+tYL
lLQd0ngXb98mD7d+wlWDrJUFOIsGPcl0ov8W6j0NyGLBU2EbyWlpqMdZ8ktL
rRRABJkcJbpQQnInSslqSut3Nf6fNwEwqWSXlFnCsz+hyIpHFFWwReqle0+e
ofi8JeTik0lxHImC6R3HBqikop60dTz5Vxusnf78u532n/+0MzS3vjRJI4aW
4sTFizSHAcWAnp0lqsV6o4P8hDryIL0P/bvARVpKULuCh0Vwl5GdjYyrhn3o
z3RRY5M9eA2teY/ttKKy3hb/sOo0Y1FDPqP/RWyV4hSuMzpjLoWPfExZ8+9R
7qhyjnHOU27pBApi15LLFmX3Xh8aO6G+dFF88lkzuv97G0iU+uu/JaMDF4zM
vBQisH9YKZSsAdVCu7ekru1aC3snMsCH9kb2IC3Nkf7Md6GHOS5vtXWOGTtW
7c/RemZBgT3yf37BLSgjr79WUtFOzcxvaeaAwcjjqcUVdaTN6zWtxQHc1rdV
SqLZ7g7va988bmlwebrR05/b0RfftqSca3WEwQrNRxQtVUnGnoPTGSSZ5wiZ
cMHqPLHiz+VdOhtsgK707GU7KwPP8pIMpkQ9jS26BNPYK2QNHMHy3Ax6xJjs
n2JXojH9KSvAVfYK1gNcNCw3MuJwSo/+/BPtUYZPYvBYnXr00pu3/mvQMf/1
Tzft8yvN5WgZ7Gu9+wWrJt8QSc6h4SO5eAX5xi2m8SyWSI1OWxAlFPof/vP2
Dl78LH83X9KaWiMYAK0FFotUqbp16yZtr9IWXFJChxOcRZOo3IPGhTpLUAQ2
CQBSDksIiikX79zhqLhIF8TGZp8AW748O9r0SRMBEBNm1af7r4QBSX/9pwu/
3FNjl6Y06RhprtfCQ5MU28qVQu0tmbSWvBJ3V/W0n+dQJCOvrfCy7v3e5rVb
G4wrsPfbZMWtNpKZQXV4ybp14hRg5hzZrcEQw4xh1duSTPQXyx+N9qCFkU5i
MwC/Ed6BhmFUAJGhwDPRQcFyXUv6GsCNXWT5iOKH1aYJM+vThRsthZ6IPofR
la7mFg7DhGuB/AOSsbjfz778kmau2EVew85JMXLhmjWSiTp0JJvGT2/A0PIj
uvPizX6JLpKBQjWFA0AN5VnwB/AatMb7ckDo3K2DJBckMcB4bV16KL3KcyYq
c6dzGS7CprFSzcB9BEn88Nmz2oGThxh51KTK6fXFNt1+Zm85c7u5kWcGlV/b
c6wJPROTC65qFxsjYaBnOBsr77//PtWsWRM9g6qTSxtauNG6+g7CCPiLXypd
6uzOUYxHmu/B779TdP4eGl4yX27lxFefCqj4+zXFxrBMXfTugXdNT6hZ1a3q
q6tndjbSSygPmVNSRMEgglCk9eEOlNTfgSIGulHYgH6Uyc4EmYVZs2dbyaJ0
58kTkGAMEUWGUEO23y+wP33wwQcUZ+7MStOcPjvbXO7iH/4dOsRJCiyVs5dR
gHml5H8ANHLGf0Lhecek+nnn2TNavmG6hC56B4/s6F19J/YOT2z+505kFgTy
P7AyQ1nysVqIHyg16F0o9XHQdxHoKqxC5E0QnaDxCMSpH9hUOHt6Gt5Xyymp
TXHDelB+aSLFJA6m0HAPOsg7efhMV/vMEmeBObnKx1pgwQ8S0GDl3714QbmV
uyis+IFORv/2W6GgLlnZXxC/Dr90D8j3o0Ln9C0MkVKklfeJ+hBqB0hXIHhH
3g8pL2znaG4gzQ3qwRi2D+WEeAhVGV1d1oYSVDsevHpl+uTUKTzYEpdck8az
Zl2601LkIyahuxxVanYEHTzcgW7fb0NH1H40dvoCiiy8QKaIGdLcPo6fhwQO
GDZTlx0l34wrksfA8x+y/D37OZyWrG4inWkv/7HuS9yGYq3QA0nks6aF+XlT
cIAfgccmz2WLgJYJaBoE7uNRKTQnoDv59+sl1wQLgitEwgjsYJzH7R9/ZOex
iK1RXTrImvaL7kS0/6K/x9lZc/XwQCecxeTtbT9ljl2XN7WsGdna2kozLCxw
ZlaCBESvtaWHrB4kb5SaUMXbefgwpS34WULMZdtOyPyHg2fPKkvW1qcXYvz1
1oZvH+og9P79TtqK1W1MLEQGBqqn+DMYh7nlCIPWs2DC8gvTNjdSGp5xc8jm
jhmRSguG9qXTo4JpBq8NrEi0EkE3bj99qgulrZi/nUeOUC/QIhhKAHod/wLL
7yyEzu6MQgvGmKX165snT2jk0rs0rOIArWZId/r6HTWzbJG0LRw5f94UERGh
rNrSkF78t2orYnAeP+murFjlYMRVig8jCRTvcSJgj1jvZPHoERTj0qVqCAVY
4UcKfOlkSRAVp5nFQBy/dMmydP16KyJUw6NailztPn6cvmCVQ5JizZrQqhvY
9kmKyD7vGNURqYvh35du3BB2p1PkQXATFD4VpagiUOXwQzt5oSU9/48VVXan
s086Ss7IQIT8cxWiQ/ASVXMfGCWjiRg5vHkTKijfs4vYV6RPsY/FWWG0Iz+M
drIP5rhQmbNihYnNiqGn/YXQvG6H3p21ek1fIesjSws6jKKkyTpufTdUdH/t
0ceUWLZH8olsG5QZS5aY+Dfa1M3OkYdNoem7LBs/+US9dDOHbUEnZZWlGW3a
05Ze/K3DME0TMYZtUJEeg+fDMBpwtlzd3SVxg2ejRSGT144kHvZUPLCnNMyE
sgTCS5ekJdLuiTnqwpUrpQw0cc4cUIWV5PQa0u1580d7w1vCJnUnFzc3Oa99
HNDsOXbMFBgYaOhTiiHbwAZo0YblgVuAsS0oa0dvd951ENIMngI24aK9P2kp
C0mq3dfu3zefuHxZP9TqIBebZmyqIiNjxIBsAPQl3jjIMNaiKmJAFcUlGBfE
iGjOrRjUi3aFd5Xsl3UcCZZ1deRA+q40EGqvFhYXawhv2JAolzVNf+u65qZt
nKXyrbBdcucooZJ3Apt09LS71VbDbauoE4Keceu337XEaT+YQ3NOqHtPnNBe
s9lswd01zdhmh05eCQK9dRKz9nrAQ12LGy8R9W7o1GSGlQhvp5jaSGgcG+At
soneV+mSGRmJJiULpukcOH1aYxkyTZgxw3iWnaV1t0BJm+JZT/74Q++s2B5v
kFm70Xx+H9Rrt5/7TU2eT5ZFBmP11OXLNkYeX+3ZqyUFDelN/QcMwJ1jnJKp
WatWRk5MSMBgPCCrAAS8neGsT4/2NM2vqwRTo3x7i5jBlKMSsUNJ15aXpEH8
1Xu//mqsFIUSOnCiOf3BniIgIkTvLX3wgC7xicJzAbGo5+fT/V9/1crWPLdE
Za/VeMco/BgrtZX5M6j6otgRHGairNIojeGHDEIxblPGL4HjAGuFqnQm49DP
Ll1Cbpay3LvQ3EAHOh/fg6b7O1S1HyB2WDxlHN358UcTo25D0GpwzGSrLd/Y
kO791roqKCop7UkDgpIIs4OuP3pEx86dMw8fPtyYnWUzTL6inCP1HE3CZzYQ
oHjOZSHbfWyneuBZE+0W2Sv/ISuTCdCjCtJ8qN+LBZFcCB+s9fBv//CDyebd
GkbBGO+gwcWiQffLO3c0V8eeNDXWl7JC9NEuQDjL5kykoyNj5YAnpUdbJkWa
jIq88KS8k/ZTg4YNyT9Xpey88TRn7lzaf2axyphLIWpvrcgjF/E/V6ehOhLJ
cTMQi1D0r14FX8+gR6OSQ9vYhWq//KLuPX4cfZo0NDSQ1sW60/JwR8lN4VwU
1tMlIzOhdOYuDg728nB9iWo7pxEUkq3SlI0a5cy/D7ym7TuaCIDB1spODs0g
7JpQTIURR5iIIg7swq2nT81LNmyAQzDIJBqy9KeuXEH1nOIDvWlkUpTUVQui
g2hfnJOkOq395+NZmNnXWcIjI20NK8WwQkkv6kzdvadS4ujzNG3z91Q8Yb/2
8ceZpj+pGRIAxoqaWCCoSDogOI1hlQaEYdVTjl28KCYdsz/A6kanAOh1u7du
oPzYcFo4IpGSBvShiNBgmpwQLKNJzif1luKqca9aRmam7N64TPu8UbbmfSca
Kc//1RpUbUvLnsnkFLyY0iZep1nbH2gcpBnD2gwB/cBamNY6uxZQ8PC9FFlw
lIqX/E6Pf/mFWHR1pmY1M2xwHAYm8LuDRrp60ybFO92ol9UC58y8bvt2FRyY
zPx8Gs2aBI+ASAsl2BWMHxExIUPEEaT2uklU2qO0/j6B1MUplNo5myll0d8U
N+okla3+l+XLu3f1FdhiyIxAhfj00cK3BVNu2bp15sLRo63kCfOo8eOV9Xv2
SBoY1JrxjOzL2ISOG1lYRcLfwwYgnT0DqoAMyl7zsW0xRI8tYBwNKbosCdDY
yh+pbNkj89kqomgTSy+OeYEfUbb0Cc8UNsu1R7+Th/9woBptxuLFEF45keUs
dFOWLKF+jr0E8QIhlCuKYL+xxfkUOziYcg1UW8rfZ5RkWfbxx1UWuZdTPwqJ
L6cY5Tno1pRaedW07cgRfWpMU9klgBlKCwi/3f0SZcDHl/d/U0KzVXG5CNvL
J07U+M7UMhZ6VydHGh/qKj0BCNGK+XRgIcaWjaTZowu1EO/+wqZCiX/lpk2g
jOkTOd4XbO3uHUThDMriZ5CatpxsuunClKwbShMECZtv1KqV5ho4Umjz/GNa
2crfNfubbcwsUDJI0LlqkGA1XL/JoJ4icFTYYuBnjCYak52dHUdeiTR94UJJ
YVx/+FD1T16t/3dNKmVwAnonNAcpCQwGwzAHUMxT+ZbBSQYrX/v5Z/AuDQgt
0/cgxjDPY2Zuoki2c2nLSM2a/9dbC3N2c7MaPH3hbm5Vc3w6dkRvkrljly5W
go8g87DIYTQwrERGDCIKRbf1pdcsEYs/3xbCKdQH9h07RrlJscLaOcThFMJG
yCUAPwe/aCaycvPQRIguC7BwgV5jSq9S6hKyjFj80trjC0QnBX7+hZWKETUs
nj7XwcMDjDJ8Q0tkTQyNMrMQjCK30DnkGbNZugST2A+ideHaw4coShp5eFEN
aBAaydDWyU4IiQrpNQAIxbJAQ0cdipVWu8fu+g0FB6lUKnVIt+Dxu09ch0hb
Cpb9YR0ChtV7cszGB4t+JiNc0ACTkK9y84pi81FCDr6zyTfzBoUX7hNzApsK
iMqr0sBr6enoKDVuREWgGgEhImk6goMu9BBC4rF51MQhUGgaYWkBKbCq9GOl
wUbExMhhIekE28G7syzaeLL7m1LfACYUki9NBsCga3afJKeAKYpTWT/QkkRP
wXadv2oVenPwIkuffv1QKsYASjCbJW0P2v+qrVurGTeON4Yq6jSiy6TM204B
iYvVMZMnGzdeCyO1hCEGbjiwgfDy+BqAA79g4AUm/3VGV2CKsRqIY7KmelGi
6dG7t8xbAddh3d7Tau/gtVZ2IEw5APr8lSt1exoXB7hqYRiCH5DGcBBut7IN
raqZf6BEJiRTn+BVNMScRyBSISLaefys5h42QensOcmgp2qouCMzzDDPsnjN
GgtAJ+AaUnH3WHcz2MMhwfXd8+dVLSKQBCS+AL7RhbFm9ynFP+9X/b/by5Gm
5+WBdi9jRTCjjY/XWshWXTw8hL6zZf9+xHK80gTyj53EqOcuDZ34goKiUuT8
QGLHeSlzNmhdB0y2b+UszD5pHQJaBc5mQUObgxTRkXUU3ioImawWKzZv1lgV
QH+1GgZw5YQbitrSfGOaymdXH1m6DVxsY7V0OGSsGzEIckpzV65EfKZfVzOZ
NAl5xrg6y65PpetlSMUtzSftEiHBgBwvwm1wYA+dPU/ZoxeSd9QUYbkfZgCd
MWIEcLt2jwMwSCO+/9XduyJ1aGDD3y/duqUgjLGyZfrzsnFk7FUUlmw1ljUd
dD8OM82M6w09MMvXRvgDuiDEZqwGWsfIn0ZPnChTFdbu3CndnHB3HHfRcdbY
QGNAFOwGeiSi+VJQ5kCwwivRRiqKUlBFIK2mFjOIQBiJAS0ekcsoNrUY5VL9
DGuYoS9GJhH8TxVqhfQ9x0Qoa6sTWYkNjqfVzpsbMmR8r1oNydshBYg+INYl
K90V7bM4A6N/S0PXHLwK71/orWiuQWIcInP3l1/MDAKs56c4+C+h9NIleipv
1wG2XXNoQNRcSsgcpXCwYsQXwjZCazMLtcmya5dUnqUt5ulTFS+FVKI6/bqp
3BbcFM1jUKxcN9wMQjLeFQjJxs+0k6VDZIyJRiI6uJgbT56YWRJV9NUgu2jk
psAvxQvtWznkqb5Z31FIxhppujrMz9772WnyDCkklyHbyCtivJaQmiojZ4Gk
oZDX7t0DQsDrFZhk3MLDV6/k2WxezXzhBqtWlu7uEyP3jHo/HgFdZ6OFuTH6
6tvI2EAGeVowY0hYEiAtiMmsJUs0zPJlH65h1DFG5uJCpGWChTtyzGOKHzFN
4D+athACnPnmljYkZTy17p1GnnF7yStyIlyZahgz8OuFu4+lwCk8YLF99OoV
cjTV3li1h2+sWPjb+ihZFNMsyzZuVFjVe7ylC2T4BDkOdJ9eYRSweMNW8X3s
2S0Xb9+WawZeQ9ZdhhGyLkTwZseVjxTSGRKjyYzR8DMw7p9fvy4Nam80G1jS
iiaQe8xuSeTiqHnxChswm9d0QhtcNXrPZaOgKo+fPt0+nUNl0VVGMIVjxlgd
HyaPwdb1GFBOyaV7Ec2Jqr7VgyBzkcW1AHnF8WWjCJTAgjZ+ZB55sPYjoEa0
MJNN2a0ffkCKyVjRBxZofNmkOdR94HQyJZ+mFAxJ0VNswOJVkTC74LW7diHL
Z2MtoiTl5ZkX6hObZS4I2OFv4COtR19/cg2eSIOLrtGk+cvg8VQ2aVZvKT3f
yDojc43QACw+DFydOGm8pVvblsJlxaHn5udrJ7/6ClU3KxFBRr0C/GCpI8qn
UTcO/Xr6zSWv2HUC3/hitdPXrqHejSYI05L166vWjUtgIwg2M5iRb8xl0YdD
dOntR6Yh03jdV2nfqfO049AhjfVeuX7v3ntW68+OOoXxLKwvsBZMAgqKEFpw
QDEbMDEyrCotwrehLVy1yqxeuiRFCZiIY/x3NOSPmjiPOnmUk2eiKsxgn+jJ
MptiN8fnpznUsbZ6oFTM3h/UdmzLGKdKnXr5kkfYeKzWwg6nty7lSfjyjsxx
FCwPWjNGAarN25uoT4iFhld8qn164ZppyoIFVsmritQRKoLa5unsKOVRBFco
cwxj6cfQMWQP9nz2GS6hqiWttWM2OQUtoNyyqWLiH//5p6WkvFzvZ7QlxGkM
zcmy5zNKnk8UkHmOlEUnzKer+l1qmT3ZcoRhSiG7T2R8sQQUhazUSPwby/ji
zh3TJ6oqGWXDtMtrM0sXUv/E49TTLU4sFJogn/z5J+5Yb+2spmHuB0z02r0n
KWnSDcqZcln99qlB322iIg8Ot4c6CEyA9TBKRmRTjx46gQ5AlmNnhVeGQwVO
kAPEDEMkftifUfaYNdIZ7GhKZac/izgKhTnVfnj1yohcq2HWumAQTCTKWfBI
m73ha9ORs2f1pTQTnii6wVGrn8pRFNo4YIVglXA4yNIMcHGSNAlS/aNGjVI5
6kSgoYA9hLTk97/9Bgsujc04GI8hc6mHSyyFmmdbEYGFfaQx9/R9aQvCEUCi
Ry2/a/JOJxtDnhJfGzAxpsbofBnWBXODbGlQ2gH0Qiv+uUZtpLb8F7IjSIAi
2zWof7+qCVDIvU3IHkYJgd40mA+W0T0OyqJMm2Z0DbLnSyd332EUFR1NUzk+
nDFvnlpSUqIfYXUO6m2VmOQaDJ0/ktARBW02jZQ64zYF53+hxU6lKi4kf1HB
JkCxGCUGvHuxeWjV8EUkAWbOnGkJG9hfRi7nl5airwQGoarvsVErNxqYsFY0
OoPh+kKWpMnTphlt2WZejgUjtfLLBrKCr2S7dpCy53+P0ZImt7gbhpAJHQXp
hb69HGQ0qfV8MPEAeQDr+cyYMcMSwrcNe8HWXamcNUsXNE9PNGOYuzsHUGDO
ReFIQE3yGRosX7vWnJ6VZW1T5+i9Olt0BwbJaRLNTtr4hTq4YLueQ6iDZA0F
81tgQ4MHeUvfA0iU1gOK8dbdIArQOKB03nRmYSGGN8AEGS0/FheTPyv0aern
kyw3jmJ9RWWlumbLFqtsmZyd61NIRHcWeX/aeWSReuzqQ+NDF2wS5GtL4R80
/Ohdqdtv2N1YHVHSVK4HtUHofcGoSZS5isyROeclTTfQ3x9Rk2rq3b2K8T61
MIN2DO5K05OC9YkbHOAmO7WlFaE9RYoQvaFXjn0R+DemwIgIozFTxXiNN0i+
Cj/SUGwbc2Q0ujes0yVlhrIlJDLSZFe/o9Ksc7SlQ98MjWMmhU2SbAPs2Iop
9alt+/epl5Mtrd3ek2YuTZSkm3n0DkvcNHrzWTKPme9UNbVrQolDI+UCpo0t
oy1hXWnGYDfJ4mMrqYPcKdvHiVIY6uEzCa4/fiz8PCtggAUHBQLHhrImyMlj
xpSYQ3n9odG2VmXgGExhi4nsg9muqavaunem5ugxVPMNDFTdPdrTsEw7Wmj5
iOOohgxlanPgWZ+Wr+9IZUun27zB7VT5BizsBqUBckDH5hTh2lOXlYoyWh/r
RoeG9qTSzBS5mczYIZTk6y51y7M3bmhf379vLNtWjB2I68P4CmQ81/jxNHv2
bPlMAd3Q2Ol90nzkDs6BSqO2gWqHvmlaYESs5jGgKw2JaS6kGcwWnTq/h6xZ
mVZfW7quobl4jJ11zRYXNzdhQqBGh7AooP1HFNCroxhQvOeiwhTaHdGNiqMD
5bhhZAMHuAsXETEkmDKG0AulE1HBMkbx8Auo8bHOmNmYGGuuYc3yKMERERh/
rbbsnqj1882isChXCgprSYVl9nT8UnP2253+hzKQb+CHGMvMN2wvLJXHf7Wh
vMKgqnHuk2atpYvf3sN8SkmfofDBoTSF9Xci/54daK5XayldaamO9EuuM83y
7yZkGRS3M2MG67PwJ0yQdAWCFY701f0nTxqEVQGiXl5e6rDhsZSe1V9Lzqil
DcuqRWkjZHCstnFPY8XHvxEaUNR+/X1kSCUSCKEJ5dQ/4bhw+9ClAYZEXHwY
LVnXiIbESms6XbnfSrb05K92NH1WLoOnPRak3630F8xVwOQZgHOM7TR1bEH+
vTtRmau9TCq6OawXPcvuS3cz+sr7yDBtY7Am3BrCQI5KdCfSHLiJ7W0aJSZ7
UdEoLxrLellUXlebtqC+ssBS34zMIW/D3Kh9qLlpx0jJLiGBgLi2o1spDUg6
Km8D+p58CkNxmAxZTs6oLYNIMauOt6M9eNUaXsZaDgUCxqNQSEA4BQfu0b4Z
+fLlhPXuQPsGdxb6NtibYAnG9O0kjDog4GS2wRzAqownjF2wdWBQxO+clNKb
Ro/zpsmz21lSMmua0/NqKc5ubUGv4B0EYxdiHJF+QSYQSHPqojXUO3AJmeL3
VjU8YlralDkD6PCxZqIuUPfzN1vST/9uqz3+vbV+Fw66pfD2Fv5mNt8JGHC4
kwG9ulJk50YU0N2ewvp0psUD28gc+3tpjvRyhDOdSXIUziPuJpWDoS179+qf
EqJPOTD3dn6f39aVpi1Io9TsDnwxAUpmZqbiHyqjp5WEFCdzozYBpmZd4yRI
ctIH9akeejVUhvx5BheQW8w+8h52RN4LrgfbOq46Y/K1VaPi5et7po5d36W6
9d5hdNMY5XBQM7rYNNFWb+itpUxN0ebOnWvZe/y4curaNfy8gswrUqsoteBO
UP9NHTqYvh3em/4Aq67UnYLdneQdASDgoZARRk4KaW8Epkbew0CpjUzegUhK
28n4ZbB/1+9uTAdPN6OTX7Wg+ISO0uDg5RNMnv5JggtB5soet5V8U0/L/4Hn
AReCEsHcFU3Ivu37ws77hzrY6Pt5V/14z2DlPEdZ+GVolIB7cB6BTfGpAij7
ATJkxEfThpDO9AJzxke60YLBjnJjeB/UuhPZHSLFt3XfPvR+62a0MUXG1xJ6
Agh9cBWYH7rnWFNavaW5QAg8oqNzKvWL3CEFFeRqNMZlrtF7yCd5p46fQLDh
rUyakk/qyRYw10Le/Zs66DtpZLr48nXPLu4eKVBkEBAvgpuG+BCdwrgdOO5V
0a6iTaB0g/OI/wd7BB4JJ4YSFd+OyjDR0NJgNSTyQyqrrEe7efng/AJ7lE+s
RxtYSNbtbEFxif3JJzgdjYdaD5dASX0jawgWyZLNx8g38xvyCCmTLcFzQQpm
zymmpSv1Jo/Pv25B/xKuHOrUXa2T3WQoLqMoyW7CI165f5+9QRkFe/WXoBE3
hLXnpyRU8Yghcb59ewi7B/VxeCd8NBAKSiu3bIHxkUG2w7PtaMXHjUSdtV/a
aLHmmpSeZyfTCsHdK630JMfghdS7f4JkZZFTwuQKlPGQuc4et41CR74i0+DR
kjpAqRTSsGpVhtCZ3tKr6mZsx31AdekCeoNEpx290Ey1uWqDdmDrKFWhToO5
AKyFyilgG7AOJAHj+R/kuND5TFfKC/OUKAfMBQBR1L9w5CC9IU8/ad48w6k3
siSk6B/6gOHin33ZQohH4BF/o7Wjgb5uElfkl4+noKR5NHvNcWHZZpZMpKGl
10R0rFOf8Xku0xY04DC1Gv2o80JtrCzNsxdfi6KB2yTziIRmfwYS8KYIT4Ed
d6d40b0MJ9oR70TzInoLjd36GTL5LL779cQ0huoZhqGJdKdC7M5901JmQ6OX
Bn0Uf/0jcykpr6SfzDYdOX4GmZI+o8Ep0/T80rVr2sCYeRRRel7CZoAWvM+6
zYl041Yb8U+P/tXmjb00kqFhb6oV7gJ5DIjBCDZkmCWPtAtgN+5m1bhCoRGf
Hd6XdiQ5i6hbP4wFs3bg4ACnbz99atxzMxn2jpbQHZ82pR/4/ZVJDWR/6Fdh
DyN7On6hq4ygis9bRcEjvpb5Z3Dfl+7cMU9fvkv1ybhFASnzJAABlgW9d8+e
ZPr8XBsGXo3oe31ypbGvXvZJP0u/sNBYEcQvZplJAcmK14j6xvDsbH34HpsK
3BUAH5DRfZa5rbG9Kd3/raY+KuCz/OSzz5CKReKRUtlww+pdZfiC9R851pIy
8uqw1WtMXzNKwwzJx095T0UVFDViJ3lGTJOJU8g3rtu5U/3u2TNLH/9SGjrx
PxSRu1D2ZXwYD+3ePcyCKXdvqdYHQEuW/LI69OO/X3do3L/fhb7+vo26+tZH
Bp1OWLaI2ZG0RncXtAkYcU5lOUU7darKZiIqmJYdK6Hc4pFptGnPHqFvYogV
0qxXv//e0KomSnZRLenvW7O9saENr1n1UbH+tJpxBSh729TvpOsNUoAa6rc/
/aR17TWAcUqusL2i4uK0j5q8Q0tWNjKGxHYxqFudjfeqJ/NKQSBHYhvkIEge
WGJotZzm30No+nDuwC1FUT5yQ5C+7Px8SUNjIsbkuXON5Jx8VgIEBDgTNhjz
ka1znrGFj3d4yScUXL57l0Yu1Sh+1G45OhiXkVPWa/2DMmkIe8nU9GQW8DRa
uQ0M7k508Yo9PXy9BYVBhHVQu0ymQ7YakOvjvXsly239dCdcxa78KIp17izu
ERA8NtDw5iycMxculNfgE9HAbXinCoPbCEP4y+9aCX9v2ryGiIulz8Z6Hbe/
85DcPkdTlDD1CZVOXqwX7X75RUvJysIsBWmwiEvqRuPGx9DmvaHCzn3wsL22
/VBjevCqaj/m19yiHvI5RejXSODICNQNEE1Q8z968SKl8rphuHFFK2dNoaGM
XJEdg9uHUR+XHCb+YtmqVRaQHIBkkWaCo8C8avhaYww5rVzTVDj65260rGr+
AE/x5Fef0O6zDyl2tEqW7dvBSZPPw7CRwT+1aDTQ086mtHStM81fkEDHj+dC
gfro+hOnuybrbB8xc6UT6/CNt6SVa+2pL+Ns5DFGjh1r5aRaYIpQ3QGHegF7
5PFIWRVm0oaw7lUDbSUXyKbo8khvovEDaGn6EHFTM8ZwtMLm+Nvnz9XvfvzR
EOxm8okBM5e0Fm/839eMef7dU1ux2lvqJ3i/ebufaqnLSJL4d1ghUS9OG72B
AhJmSGCHzim0yFy+24ruP2lDk2a2oeFZ3VBN0orHjBFUbcQdEktDOcFuPseK
Ddrl3EmVtDq2P5UMfJ1AhBJZimKIJnjR3FyzJYXdAIKFhy9fvh4VVM3e1tZG
Xb31I/rmUQeOOVrTd/KBF511o9uAsUuq/iEDf/5JKTO+ocJJ64V3du72Awrk
1aMSBPi3eN14dq6vmwNPn25PoZGtaM7inhSf7KNxvGdmxG2QMSXnhaIrLBMe
bUbWLiOJVmZG0KqQHnIhAOSSbCjNI5rkpU0vzKDTX3+NVP0bqeHmyoRZdavm
TK/7uDX7xPZvXca1G4Mly3rrx79o9Pb/0sR5y6VIj5z+wc8/186x+Gbm16al
663TkjsJN/vYsXbUrXs7Ss/txSrcXSupiFcKysutI6uRTEUJHTgeMAF/IgWH
j1coToqieaUjpPcVLgvuFi4Vd3JjRiRd++K8ev/XX61xg1JQZkefnm1uHdWq
XbnWlmYtaU4HPu9C1tnTL3/vLxZs7emXNCRnk1iFb548Qee7jGgHP//jT5pI
IsGwHuZff21j46TrR6x8Fc5Q1Qw7/qUFHP2Qbv1kL54zx0AvbPelbmANL5w9
PfExnSg/SHETYcv6DWto5+CukgSw9q/Aq/44xpuOlsaL/d6f3l/bOdwX4Ykp
PS9P15rm5notPNXOfWOocMwExusz6ebDjlYyvIn0dhnk9DF2ChMz5d+YqAYQ
w3bPklmxjaKKPpOPyMR2JszqTA/Ybm/f3kHS5eySZPb9uRs3LEfOnDHmb8h0
IVTQgGXK2WwNcetJn0Z2IbOX01tJ0c3lw2jnmHQNiR4bo1jJYbKxepCmKGBw
OHmHRpA5M4+WbZlliIxYWJnvxzprcvYMlBnjGEgJ2kVa+VYKzf1UOh0wq2nb
obXSnfmLYSnLyrpIVICZXchHYRbZxVu3rMMRIEYwEwiOGOFqaSxOMMYZA/tI
qmFXVK//lW1eP64AjG5T1QTSVlX0R0wSyil0oQ07ulF351CKGlZCa7bOxkrg
unHewnbBh7yy1dMC0vbQkFHXpB8NtWuGFZai8jpi69/oFeLYpYu48cERETJn
Rj4c9u5dmXZoDM2VzBoAP6JVNEko+Rm0ZsVicunTm0pCPWlveGdSh/YQXwqr
jNiOL0bNyMw0lU+YoJ9IE6nRBYWHa0AgsYndLbcft1T+9Z+2Mkaim1MgDU4s
5i3N0XC46rl5GtsazRSzniJKrsgBX9Y0VEfwCYjSaH78UnOi141cgqPfVp63
puJB8mo+e4dSLtSTi5jIYAZVfzZnmv/wPdaP0FM4vracZL+DLlRzbLTAU+R/
0JGazUCoIj9bUAJSvtOUMhAokRc1Cpbmhq28qOeg+eSb9Q1FjbopzLuS8kIq
KExT+XCMKRb2b6zKvqPzFLVO3bqW5i1bgjqrff2wJV242EVwCTqVYK8f/fGH
Vjz7i6pPP/TzQ5ugcuLyZeGeoSUnPz2FZmbESE4MzqOYjVdx5nAqYdzMomHh
jVm5U+ihChuaRO36jiAMiBs6WqPNh06Zx88cZvBt6ry9Qs858AZgbOLfyrwV
9SWMwFWlZzjKx9zExCcJmezOs2faztMPDUK7KSIuzsI2yrRLVS0uPbpS4EAT
/2g8jSkcQdPToqk0LpTiExMpr7BQRp0nDR+ulYwdi/lhhrmtLvlUdKAh/bOL
gWLL7nHkHrOfBo95QrtO3sAMnao0n/H5gVi+vYOfBdN8JSNvI8wbG3XvZ00k
isPSP9nfi9w9PPSkaGKaSBmi2uuPf7eqMZKRE+bMAYVB8hcjAlwprl8X+Qyx
dJaAyeWjaGNakMwfiGFclsrfQ+GHgx4M/TOcD6Gqj9oyu2ZtjKJYP+paa9pp
sIxHGZT9LVn23wQd1nrw/DOt7Fs5j5KyPkcT1nI5Mox05qoVQncXmNhXf02M
8SM2b4y4Ex1AyA++sk016jK9Cw0YFEkp5Qcobd5LBAt4S0P8hYqF8XSwWxMY
KKPyjaYApEyjeYP4xCRcM4a/r9+1Cx8DBuNj1H0tbXsNlYEVDDWkrvzF3UdU
xALIQZWFvalOi69psvkfXu2992wU2+rVOZJJoLCoLBqaVklZ069ZF2els6KQ
Ch4SooMiFpahoQFyrEDBFezAwCAGhuOQFWlmoxZu7tLbgwaFJ5B77AGO9ghP
1fafe2wtW6KppnyFnWQLBw+JoZCoPApLX09FkzZQ9NgvoZ9v8hFkai/ojnBO
i1au1GLZf0GE80tL30Hnmc27sqjPr1+38GKsJXHq0W+IcFnA71q6cSf18l9I
g8v/g2PSNp/4Qy/MfWi/xKIXR8E8ik9JE4saPCSL3CMtVDSfo4ppj81eoeOt
wRVocaD44HMuMQMSkBHHA4SWxbAyB/MTQDNnA46RckJ20jRwVPAAS+O2gfT/
cvUlcFWV29t+t3uzzLLUMkdwREQcQ1RQDiAis8g8H+ZRERUBQdkIzorzPJxS
cx4yNVOz7ZB6NYfU1JzammNWZqbVvXVb33rW3vuI//qlAYdz3v2+613js54V
mz5aag6IF4vLyiD0opW7eFVS0Mi7YB9RRy0jo6nhJTR8WCJG66rM/QXJA7zZ
Uudgbc8l7xXyyhgk3MnTlmygkIKPKKe4WitWFCDPgI0yUerwNZHr1x4/FicN
ewns7F12zGXv1q4VlYjmXmB/WBJtbLaMsqHMyguNTqakMdspfQFRMpv70Quv
UPa4TzVwUUVERBgP0rCufVDq6bRzcJ60ogmzaGBAqhjw2e9vJevwckDtDKCM
qE+MSYeuuMfe8NTaWg3oapApAD+IQgkyJ1j17SdPABQ2gTgySx7G3DI4iGLy
V2B5Wta8Hy0cFhjdBK8g2JPeCf/8G+Q1tEyyMqu3bMESIBomnzjkEOBAw5O1
Yag7vgeaWdh9jBu5+eOPel/Zr79a2f+yFyYbNfOinj4jBeSOoVfAkEdnTqaE
6p+0jEWk4zNeBYU6ZYyeSW6hK2ho6Q/km3mcAtJWyhPMW7kSAMx6dmyBzhIl
YA3UPJHBeMC7A0OKbATwbFiakIn/+ivCEu3Bs2cG77La7r0C8s88SHGFy4XN
evayZbb5q1ahRkgx1lyKLftG44tr8UiheoP0MxtqyCOg570NKLrJXOrm4aGw
7cF+2V5r2FBt0LChSbSn1SP93/rHX6Hq2lrBJl6+f1+ASoY/LUCotR99BF/M
xIg3atQIs81t4BQHaGXnwYPa6atXpYMDESJHjujZAyBT0iAYV7dpxw6jqKoB
IAvNiXQAjqd21VYtdfJ5y2tNzEbMBnUh6iKULC04A/y/uILvtmypvdqggUGd
BRXqaLxULmyegUYEPHT5hg14EPRDmjSJoEsFleqJK1dsfNclNEVZBFCY248f
q2Yyn0/Nwh6DwdyqhrN1R60JIq2yl7ty8zZDI/9LIEfG4hR3Dw/4ivXqtgDw
R8hrTPF38Z5CkRP+poScYklywqdko6g87/xrKGQ7UFMHTp2yHfzqK3xTRa0A
qg146cNsi9kKgJTWMt9mM+lDUYoCnBNxIhCpuLyg/fno4L/tLQDuetOCLNeD
o6RAe6D+EpaJoSyCMLGzCTvFaJbUYxSt3KHkwumSelmsz/G0cVxiSgYrU+nw
goPCakp8SFb91kp2WhBzQvFCfQEFd+TMGUxEg1NiHKPSm2O5obGplFq6g6Ly
5ws8CWzpeBJkSVHI3XHo3+YQc2Ek9/ICYuA5d99LUjP1DwmRrwx/IExfnxgJ
AAn5BG18NYUBpmuPHjKRDacAXDC/EJhqG8sLauS2rot66oqbxYxvTKyawmb2
DOVVrCLPiAW0bs8xud3ScvfDD6AqNs3tuJoatG+BHg+bjVqylaMoQyysGQUF
8HPq3Nb66rsdAiilYLzcDSRgoCMuP3igPB9Y+oatd9++KDdpc5cvR8O1BPQg
reUHAJ2MlKPeatwYDaqgOjeTTQZYSCmurBT8sjJnA/nELqKpy/ZpfF4mIW0z
BweF/T/l0LlzZgsALrPtzLVrIIWG5AhIkb0xIxVja9LGk7r7lNOQuImSmAbB
GMuzORMAqKWxlZXanGXLVLRbAgKHjioD4Sc5cFYj2rqdO7FNxruCvJ3M6XDj
Z70Pen2bb6xRd35JAj14/s8L9P/C92ABUSqVxqqZy5aZDovkcvv6RFE3SzEN
r9okFhQ8SqzvbHxuJrErarrAOxsNUTSTXUAg7T85fNgCzCZH0cJ7hOINK3NQ
uZm2RBngFw5WMXlbMNdiMPmmfUekp8HVf66pDoAG3vTJJ2INDQylRAcfff45
GM+t82w2fdEt5FOQvBhbPY9cPEdQTvlauvb99/TJoUM0hT0IPkeN75OpeTD+
QmQWHNnoEUCWa8bChRyzfypNU/w9mWcPzjPwg/BK1R2fffbCLWkkrUcGh5D2
EZtweGBmdze6IYGXRD4Z6RQYNOhDxMvdzvXCxAG+Kq9S2/B0Gpx7kaIqiZKq
v9cusGpd+/FuyitfSe7DVig9g5bXM/1OYFthNFGdThu7jkbN16ho0mZ6f8cX
GgLd51C312UqOxgBoC/RLQjaGqwLHe1A7YNUDO+FjBavSQthL8cAQqvOfa00
MOkARVT8RZkz/gS0WHMLWeqInxrtg9L9AYxH+bQlFDHuHmVXbAdPluS/DX8D
QipFKXjYIE7A9DQjO6LMX7lSde3WTd4DWVu0DNnsQ07rQxeIOksvmikBT2jx
Yy1ivDj3xowN3TXCIB6cehSHdjGFO7T9x44JONscpeDDJgvuUBl7+3ACD3NY
MpGVACCwPoBR8PmEsbuL7jUkK9n9Mpn+xbMDRhlA3wsc+YclTyQXy0TpcImp
/tvSO2x9Pd3xaaHCFcB6IfMjxk2l5KpvafGOR+h7RgsDioVmvy8hPwODA+ce
WhZ5eSgyuBKoO8DH4vfCVG8NRgq+AwzIpQcPXpRAwQXAACPYRWYM5VD0Nuek
JgqiokGDBlQ6fjy4BoS1DF4G5pHG37QaXvZrwvbcbfBcNlmEDjgqXqSJcmvt
kkQD49ajYq5NmjMH8bwBS9SHiMF1Q+Z4/5nrmPnLUoy+H+LfNYK71xUgrPGR
GBaHQjQSFKkpSeTaqb1kgLEZmEeHGhZqQAfPnLFPh+jkUUahY3+R2lTBsl/J
KzhPMJ0cEBibXt+C4eUwl0DSnWOHKmnyVxwhPVUCCu+b/YGSopu1cKEIfyzH
7aDXTWGhSQwapHXt0FbAyQjEZ86fr955/NjoHkIbouYdXkyDss5KRJCzktB4
oIvev6SvBilI9EJOXvcNBRZeNiNiEXuw/yAKRuyBSMmXbQ3KK2kZGZpnN2c7
rjwRLAALF1qPX75shH3smAZRZOZsCsv6gAIjrAK6iJtE2GNH9xjD05Z2SmnV
QA4CsfbuL+8qYSUGL8CbFugKyCRiTugiTD+AhoT1BgwZYChMiyovSCe03MjM
a6tV48gY1QNDznSHuSVugsiXOZ0NNRRk79Aejr5uVIsSI4bK/yOunrN/OXVY
14nq33/FYgTuggVOrfg3Vax7SgfPXYWvY2nCwWRY6hxxWD4/fVT9YOuHBo93
A4t/UH0tOet1beyEN6l6JugpbRLird9/lTJHzKT4URsoezkZ3LQYuioPAWAF
EAGj8rKFKuLdd98VWcMSM7Ky4E6J5wYV7+DkZNgkS7P2HpQ4ahMVL/+VPj72
UAIP6K2Ld+9a0/IS9WD7Vfb/6lNK1hv842Ycmg5iR+0oXb57l7JHzqbEiWes
UROfI5YR+k/gqABzpZEyNQbECXDHrGPLqLuKCgsbG/HH/AIDRcWZY1dat+9N
0XnLaNTiJ/TJqZ80jl3ZTTYsQn3Q31JqdiMqqWxDK9bHCVfFqPHzNfQSm8sA
xwkiNg5OBAsFxA0KyahXANaAi4lLgBQ5b5zGS5Qw4rmr+4qlJe+OR+xOikzR
uxCHZdRS4bxfaMPBJ0ifGzJp8x3yhmDRxk/uxNKv0OJNJywx1WTIJLbbhnZc
+OQ+fA0hg2FBAVJBgeZCVQv4G3yNy2H0DGjW1FRrYFTUCzL5klATADJRApYK
lMTrNaf3nDsQKE7ApYNU/7IkX8oKGEAcw0v/ko2DYnZAxfZHGxPZEX5y4K2B
U79ly3rWmJQG5OPXg2qXVMmM+km1TbXaZU0Bv5WpwiY2FBAJULAu/bAZHfu6
NUuKI9+2zjSSLRpKDYAFTJyxnD45ftvkKIFI4HiFNQ2NGSasZAl7T4P6vicD
lVGVxdqzBrmrci5Y9+bNWHedftOGwocNLh/kpC/c+oayR4TT/FXF7K/gABpr
tUubCpU6+q45RHzFuFZeBroZeMEj5/Vlf/x5X0G+AFdQs+zL51M43pTRMcY/
wuloDvTGqkvT40WwzZIERo2iMmusGITTRn+qDQiASt4QlOzPfnuRN9YZ3NXa
9AVNUN8TBYFmDIR+r+pCJ5gabPCc5e/ItOqv7zjSxh0++Gjr9GVXDIZXczKE
hgp2eHAADeilk1IbVQVKCxkk9Tk7Bp6vIVa4cuNG26rNmw2mHBtsST8PH0rm
a4Bgco6OZKEvzu/XxipvKTMWN7EHqsgfvNbIcMuMm4qraHIqAyXz9T1Hbe2u
QDM7jhZ+3D7AIHDzIvt3k1sH5LIJCfb3dBdJNYDfkpDnVSqL16wx6hS63e8g
w58wzDsyyF9UCkavL0nyo+avvUzZgQNF9lAnXhLWg1aEdZebhOYK9Mlq7PHB
aLBlwEwVyKNjYWWlLWjoqzSi+E2WoXfYSjSnKXOaSvXn0Nm2/P2OFBDkRv4h
4RjHoPUMXCSwd/ZuFXsfwWvWeL46qLRc5JPSs83OUiweOTpC6oWTJpdhqBi6
qOz5dxASoGDE0mHLSoiiSM+e8kiAoK+O7Ue9m71G+SHeoikB014c2p1GJkZI
1giP8x0HUaxQ9LdrJeN8vP3aU1zK63z7mggtMKZ+fnmlDd37vZ1WMFpHDwSF
RVA3v6n8JEuEXy82ORnuiqO0mtRvZu0/YIAaldhUGOVRtf+f1MCcBUdSMX4s
rbTZ1CsPHxoXWwLm0KgorYIDeUBtB3d8l+JD/OWqTK8cJ7DnaUP72QEI2QGe
ZA0YKIeC8OGmvUu4sQp2Y8ChI2JdBIMlB7K7ucBg7j515oNqST179xavqrPH
WK1n0DJ5BFZoeATYETBCmM0dgNdVz2oqaEIdydiZHj3urW3Yts38SMm8gMqf
43rQVFNfNpjoB4hyaU7piXECtZpXXkRbw7vQ3BgvuVswqJberjSe9RU7X5i5
ZNSTFVOh48yqWRXHJnXnQMhRwDAbdjUHXNa663gzYcZ2799fG8R+jKulVOvF
TwLK/oj4eEwSMnsRWdNqSRkNBWIK1mCdFa+z9tdfnYwr2VQmvXFUhy+EMBkJ
RzTpoLnGw6UjDe3YmEJ7O4t7UF06hlalDqHd0d2oODZItLXUzgpyMA/BxmJl
3LdQ+bOXOJHwdxGxert2pDj3zrQpxIkyuzWjKKcm9KywL8X3dRZbCghaVsxQ
qsxPo+GYtXrxLM3kGBR5NkziPqrjk8V+FJa8RbsPt+TvtxUOw4e/t6evbjqw
k+osLNRBoRHU1XM49QlfS77Wj2RkFu4uR0xoOVF7eUbSoKgU2r6/hcDXnsM3
u1JG4dsc6XXC+2u7D7ewlE8xRmM3VtBFh/w+RidEhwWRDx9jmoeLjLCu9mxD
/Vu8Tv8p6kuJ/VzEEOOR0BOUwu4fnEj0at9+/NgggGUt0FCEFEB6EN3++r8O
dONBWz5+o17PXmFAaIykqH3SDlFwVLpkHucuX07OfXOol/8Ucuczi4ztKGS5
T/42ybQFiEpTl3fQdh40Sckl7IZfjc6HQZaB5Nu5NQXx0Y706Eifx7jQ1fSe
9KigD93M6SOuLTx+OKajWKugD6ty2jRD8N+F2GjDotrKlAXAh7Un+kF8/7QT
HTvWSRwmKNJI3gFP/ywORZfT0MRRArdFJthtYBTMIvjULRjOCrAfmHh/0Inm
hD5Q/6xAYRyAWKLqgpAcWWNvFqzQrq1piIsDhbl1oSVDnOh4gqtAhnUY/nt2
aDx6l1esX29jt94+bBAODLQiYGpFo2MpFWjule+IrgC59q9/dbTt29+SZHgQ
CycKr34hKdQ7YAp5BpdIugIheFxSksYnjfcUsEl4TEOZcvDBlncN/KmzYIKJ
pJ9QuHCQPJk8Zw6m2El6QSiu2WLKM73XhYZ1aUG+ru0prX8X+ji8M51J7i4U
w8CiFnu7CCoQLmBOXp7i5e2NAXkINHrXvXqCTRFgHjqjIIcw7SOjAulWdm9K
dnmblAFthDAPbi0akKE9kT1DUI/4qF2HDoRikYK3+6ftzbf+nz5Wo+Itdnma
/oP/eLteMxpb3phatW6NV4o18hwUTs4DxpNzD4tgmZDGyR4+nBw7dqXGLftQ
c3Yyg4e9QxOUJvwO7/B/zWgMvwewvwmZr1Mlf59/piVlNqz3T/notyTX7MWy
2Jo/B88Od8qvSxsa49aCvuXzBj4XTU2AocMxTElNlTQBMnBzV6xAi6xJ+iiM
91CFfz2HptN//3JiQ9+DhqDUXFgoeeccZa/wz+OMZYTsiRNSDe8xMEsmMmRk
xtO+o61egHg8+d1JxnH8jzpZ1u9vYrdLSOsjpgXloCfvMNYKiGR+Shxti+1N
P9dpQkCzgwlxTzGaEDZ/8omlpLLSgEyrmQVvCK7u5nNIljzKggX6rFlfDpfR
zLpm61aKK7tIgZk7BWSKEt7w0ioawhoFEWtyagiL3+sg/qc/7Dqwu3SQ6J/1
tgy1hspAaRAMdnd+/VWug/S9IQxnvZqfHEc3MnvZkfrlQXovBcI22Dog9SdM
naq9v3mzoF10ZdpLHRbbQODrcFHrdAponxxoKwEowAICt2D1M3PZeoocc4GC
YkulzwSJi5yCAiUlJUUNGdZAfHcYyY8+a0HPnnO/Woja48NQgqBStsXImC3h
Z0FOB/kf1Aqw5aHurnaVh2cqSx5Gd/jK/QlO7HEDBOWJK2f2h0Tz8dXU1mos
Ysa108sBTYUTEJlP8KRDecJ7RogwccwI+mW4O22O6Ulbk9woM/p5+20Rvwb9
/ICwYIUY6QsMFwe1/5AkQGtq+Po/aPOnzenPF8CUrvTL7x2oZJwfgYgCpbGD
X98WyrDiKbqeRI4fgLiaBR+SV/RSAeSt3v6BwGkfP+1Af/7dkW7fdqLt253p
8y/aGO/tSits78pwV0wSaNmqleC5h7IwwL+CH4ZHWpIfR1p2H9qa4EbbrH0l
qDTx6piCvt2AFqtnziCTbo4AnDSnMV0Rfk8Twv6OyPHOnT0l0YSsNhxU2767
lDb7obCFoMJ6n2XPM26n7C6KITMWlgm0/uyNNnztnMRh3ri5A61cJSzbdajP
BViVAFpY3vBBRrMUfCzgtHdlD6bbuX1oW1If+ii9vwQSZmcEuhaQ/wJz364v
vjDstrVgDG5NS+PyuxiH0VW9csVZ3Ddgh5EvQll69YF7lFx5hLbu3y85ZHhC
cCE2s1JJSnMV3wzNG3d+1m8z3P8tW5zRnKdflLdhs1ToMlRPkdaE/UCGEJod
WFCsFk9yNbef9JFsT+GodFg/e/8FgrkiY/zs1YcPZWql7v69Jyzu8amvy/yK
q/qhkDlCILu8nobLAfYDMFWh/I1HUtbco9zKLQIGQX2ZzxkTeCS/M3mO7jCf
+dqBHjwR8L51x452mJVmZaVhnwuPSmgqe0W+7IcMYIWCJkFwq4K0z4S3ycSe
irH0jBXLlrjetD31OV82LiFCP/Q4IE9489EjBGS9XriMcPWE9RGqC36YOcZo
5agUSmAfDU8HB3ZsrD/NGZ1Gc6pKaYeSIF7Gd7/8gmGHdPj8efru6VMU9Y1Y
yTZ6/Dv081/mYIJumlLdkWau4PD1bEf69IuNMgV3o/q1NnbdDWR51KP8FtA2
wAt++MkJGlp0VkLlY5dOC9f8PXYU5szpKMktOE05OSH03XemBnMwh3ciLYnS
BKZ6IKGI4AJ78H56gPg6yOLBp8Hf84szaEFNBXwEOnL2rICiv7p1y3bk/HlD
ii0xKQ504ExHw4a40o8/O9GP/23HutiJVq/tJ4J/+8kTbfrmx0rMJJI+urOa
pi3ZuI+C8o7beV4Pn/2UVmxoZh9BEBfXUfo59ScJNbxPay+WVkwthupewCoc
qhSxLULwmcE9ZfKKmI24cDmPmuICDU+IMhQmHHIIYMLLWZ1312Yt6VhH1bvS
TWqr/kWdkHixobMHHFPgRChacInW7f9WAy1x7cYH4rkh/X776VNtdHlPgZr+
+D/zMF15+R3M5av8nwmTt9Niga4MoCSUDWt49zFYAKmnRVOraGaAq3i+SO4g
dTItyVcgjKs3bgSDIWrN6o1Hj4z37G0Lj21KiemdyZrZgS5/b96+nqbZArZV
YSOCSUoCLgeRUdG8qxRbuNE+WfDbn38GyQtNn/e2pB9+sk/McLUh2Gvbtq0+
AyMszIbnMb1QFHhQvInnexHCdwC0rsiHg5MSvCdITG0sz5HmDXhcMH9QbhMz
IiB1CkfoKsZAntM069f379d7wQ42sWEGPAINzEcHWdZU3rJ5o7NodajupZhJ
XajhuxXeRFXeNLcoQ95+T2ksLUnwsX104IACoiFzljDQKrVLZ9L726tEhSM7
k1fYQ3pTNK2jGfdYr/ze2lBw7cHWAIg2vrA69Mq2Vc3dpJ777jtWqK70mO8w
4lx4GrDFrHC0Xbs8tPc/dFYjOZSOSZKmdCgWkNgIWB6Z4ukskhNYlcxlD6rG
Xz9uE8XOYgtQPu0dE0srC6OtiV5uGNauHLc/RwMRJWTS5tvmUVVtNqWnx1JJ
ebD9JqLH5tAh4943kkeYZ7NhGVb3KNU2csJC9eTVq9YVm2ZqaKQ1bwE8eGwL
XA7Wj0pETIx9xmKACS1m/X3u+nXxP6uHZ9COlAFU7NdDgLpomIDOXT02kW5U
hCgurq5oJ8fSzUG0ffr3F38MbPCFo1P5MoWa7ggLWyej29Eckwflp6+8voPV
PWaXLbNoqnro3DmrevYswIDSlPmH4dFs3aY/AVYG1geWL3kfg0hZYm9wJSLz
g8YYFIcXf/ABZUYE0YLMcDqW3FvcNHgh5pMcKQuzbSvLghBh8Ip9xDNIUIGc
QiExNz+ezlxsz8t31n/cAR8LwiHH+s3crf1j9igh6TaMDVdO37gh3mRxZSNh
/K/TTKFlZnWW5SNQRF6XTY28Vvq2WQUAmQLsAiYUgzQfqmlURiIp+am0MncY
7YruLvWlOvl8dcf0sZbt+/e7171ZjYXQqGb2bHDAC/r/8Jkz2qkLX9HwQA8x
+TCNcF5wgX8aN4jeryik8az05meF0rdjg5CDgpdqXCqpuoEK0OwyBTZYyNPH
ZNKB061MjwDgdyNnC17h+sruE821hARPe0MUKCB8/MLEU8S08r3HjpnoW4EO
AMyw6dNPQRkuwK1RQ9ypNtBVzttMjG+ryqHPxyVJYpejdlANmezLCuZ3onKI
wvyZb74Rj2fyjCIyCN5VdHrqJTCdF/n4lZbqxUvtxKWHjjZLG3uOHBHkl8lb
zR4JQhM6fVVKayqIfUJ9B9AOjsyQbYTfgCwBfndaWRFHqArAVgYHuIZmSWAT
0D+8nCMLbIWmOWmYpGEUvxwrZzeyXbrXRgWIPrfATdyOOk2+sk3/MC47wnZE
bte+/16oEgtyMihtYHcaOsSPlkb1E67wLL++L9D5lJSWKmBjMlDn1matnSQC
RB0OPucUjr5On+5rAXBfr0S34ONoTJ8dd6GjJ5OpekUGYXvhOECP4fhnz54t
R2c4bNIYNGb0SCoc2IXW5IcLrXcIr6k6PoA+jexCRxN7/N+8PEBSfXXZHaZv
tgy4hDVIZ80NcDoy9SNTovW+LBaKfF41LnjtokWYH4AdgNozUHvW1992pYzS
NdIqdujrX2n46BrxH7bt3Wubsajasvl4E0fb5UYN64hMVl4hzWN9nT52l+ab
fljwJBJN/Pab1S1qk1nuFvwBXAPUdvEMyUgisFiirRSqJFufG6RNmDYNMHhD
IWrO/XNppm0fnbr5mMbOOiX+2MrVq5UZNm/L/PtNjInGEhViEFtG9ggqr5xJ
KaXH+HJ9Z3XzrzAx19IiDjWNwZWjR7B0FGZJBIkWg1KkqUbp6TOOIHD/TbLo
tx38yCusgg6x7T57+1f2+EbQkuXLLXt+aGaATv5FaflFbDxTRTFVKPO0+OLT
xse+Ljy1GDiEXlo04rMwyUzMSQVpwqWXxf7OWN4INK3goytqakyUn+bYI40S
CtktZN1x9Jt7Gj+9ia3Voq2Z4kLC6gB408NdH69SUTVPicu1GcZNceanRpE/
JzWZioYNEgg1JrRAGqZNGEerxuVTXGiAEMthogSKwhz9WapZPg3FGK6/lXg1
QPTBu0PSAsVbeEjI38DcApICrwkxDNAVsCKgtwMk0ijY2t7zHET+KWsoda4A
BygqfwcljL9I+/iwVm/Z8oZxo6F3PYZOo/BxvwFooQ4ru6r19Y4UKcmr2mSL
Uv60s7v58NPBVxbMBy8HwIs5y5ZJ+LSBY11g0MBAgGWBOH/fiRN2ymIHJyet
t08eBWes5Vj4AcVX/UDWsR/T+VsPcTMNPIfiFxJH/aK2UWw1SfQfaF2F0TOO
bAvtfM8QcABisAwMj0EUBSATzgd+H7oOUepm/Qrqjjp8hraefX3JJ3knBaav
pGRFpfhRn9u2HfjcwBO9TG5+Iyk8dSYNzvmakmbqmI9sE773htWNzwUbg+gb
/DLozdh39KiGjUExblhcnJwXUh/IY4A9mT3+fzzfA1SVBLjxnk8WhYz5iZKm
3afInHmYH2EgqAWW29NvAg2ffoUKai9oo6qWUlffKQBAAfmvxFSbo+PflDIy
eLEBKAZ7IRoSsDJE2BjShyPBviDiAmRz5YYN8rPdR44oB06fflHuRGUjh4vw
DmE+zAHgYRgqg4PFcwGidOvxY3UdRwF4pzusfnbZKSVfUQFtApgOPKS5E7aR
b+IWss4hyv+ArHljJurW5iUU/eqZ/xiGEa0raujYZzRs+BrRYAhOkHoBgjg5
M1PJLy420W1Ck7UV/bq8vKtssbBUBMfwRsCvyUvTdrGXcpl/dvHuXVR07KTi
qJ0CfYhc4LJN+8Duht5dgZia66szYrieXjh/WXELX0+RFXcpJrdG8Fa8Vere
o0dN9CaQvjh1MKMDK422Aqg5GC+Ou0UyDpw4od346SfM5TYAHoIFwzEBr4cb
JRmh9SdeMTeqWbP/s5D6iovvDN7XNRSYtY8CM1aIp8I3QmrnZk8EMkWIpoDW
xlnwqkD1SVksv4BF45YA1oa8Gms3tABa7IXcV8nsWMHf4ERcvvkAmQTWGAiQ
kJJinNuLMzb0/WsuRL1Di+9QaO4KYW0ZHDWOgkfeoogRawGzxrgkvFCcNsCu
cZkf/PYbIhVhBmIRExkQ6uL79yXYBoIPIoj+O7BOvmCSX4dIoQcVX6CRSj12
/jyAd+o6vhff/fKLdc/x4/iZ4HJnLlumLLUjheurOCf0Ylz/8Uc5Q/RjTFl5
wlpYucUkLBUEuJevL6jA4OgIGBNmjv1vG7rlPAYOlAosohx3vuaAipjwGTwm
kMfQTxBPgP12HDpFRZXz8SiGCyucXX6BgepBVuYzFi8G8FXFbtz48UerwQhk
LSgpAXTaztOKbG9SRpacEmg7+aC10dMPOMrZGO9rYO2xdHxDop+C4mIMMZBT
aO/kBAoKG6takz1bmLiR4wOsfMfBL7TcsoUAt5tLDeNonqMO4UCpp4eW6Bek
L776ynbkzBmJmNheAcP7wlIB14RMIoOCTAIbC3QWmFB+aZno3a+fLTw21ubc
tSuER+OdAxzUpJECbh+cJ8+7yF6WEg0aMMDugww0b7ISk1llbgDK2zMQAV6+
jChUVgU5wRgr9pfVYxcvYjaAZf3OnWZwa+3Sy0tEEKoFGh/ZuW2fHRZdCnHE
jSmvrjbFg49bce3ZEyBzIaD3HTIEhTEwNIrmxzR72CD+OVATliB738MrNniT
MB7gNkSFAx8BTDVSP1/dvGl8BFarnvjmG4spyYU657CCuQxshFVWfsrG3bvR
paFs5r0HnLaffklSDUFv7ZpE/cMXUfmc/XTs8g0xEuA84E+xI4eBYoZ3Cd0L
dCoQvCglIQsCAYYLAlcE6qO6tlar43ZIEIKsP6KIO6yLLaEjqH/kavKJma0m
Fkxvoh+XpYmDL3XqN4Z8kzbQ+r2nkM0FWbYhBNK/XKUD9aX/CxRUUKMY88JW
QNjoAf9Av4e9W6W+rUxRJKeI4k5mySqyJO/VBsdNh3ib3pylfXdfcuhuJbeA
GvIYkkG9/KupaPLH2rUffkBriElSjswG9B0SVlCfYIxCK87p69extWp/lFLZ
2MIhxBADMFuYJO95YL5j84loA3t29rsfaWD4NDU0Lg+KQzd8DWQPHLrFk1fM
Sm33sfMaPAjblh1SnfMYxkc09zP1zpMnRseIYBrgusIBQQEZWGPsD5+Ito/3
Bv4mVgkqevTebOYQ9fBXXxkKXWrPk3mxgEDvPHyMvIKyJEC5fP++xhdGeoaM
YUQGU6x9VBjKfP5BMRQ5gShh6t+UXjSZRimz6dOvHln4ChoWRy3icB16DSBq
zJEYycZs7eaN0hOKaQTIZUL3weIgB8hi52jnbBfJAUmPbUh4qtC6+0cXg5kc
yXrwUpuIX4D+4PUgGh4UNUPvzpz+VMF4KdMSA9KNWhGMCoIVUMHMXbQA6S5t
WHS01H8kC/nsmY0PyqT/hgoLjs2hfqEzhQERO8oqTuMrZQCOXxHX3A/lVb5y
KOF6eg0h/4SFvC9k9ckwx/cIQgEVKhjzr+/elb3IANB79iwlPT1VJn94cfAM
LMWNn3+uowFlI1RLcA71CZ5NPpE15JOwVpij+LVg/Nc99wZiflBMxsfkT/pC
jZtMNhdeEVJHA7yDKTDFpvH3jHBcgjJwmsOvw6fiWqGuhuk9CFOwwrETxktQ
i1ZlDKSE/4p5ESYcHsGCZ0AW9QxcRL2Dl5Nn5DKKSB4hfE18Sazsg9QbrMuQ
nuPBhKt6lrAYo4ddfxsNx4f0PiJ0EAXFluynnOVEe0+coUUfX9FyV5GxGW+A
3VWDQ4s6KnJCyBbE+XmKCCAvD8zqWA6HgLmctXCh+t2jR/DdzMai1q6J1Ddi
LWWXLRLJP3n1gq1USTXgqnKCQqfJoSFWklR9DsSuRkQpz4v9QpEUeUXUqBLD
Aqivc3tJ/eLrghEjNDbHSG+JU2vE00rbnrnknXqU+viXikoH0ubMjQvWqHhX
kAiaOHokAxHqCXaRtRqyyQguYytPWNxjjpihlz+mz7P6wY0FfQQSHMiQWuOi
yeLsKPhmJOzyhw+3zV++XBpBjBlWaoc+ReSff4Vc+ydTWNYaUe1gRmAVDYi1
JYKPR080NECTGI1lLQpf6Itv7qkBubteGHc4fHSVOvxDU6iEth5oMZQkgC+H
iANzhfqPnFZCLPVq10rwvHgLPi115oIF4hoZZlbt0JeXl3eZenqlUb+weRST
PUkchEv37oEFEaS9WKLRwBmsn5zU3EEXN2/lO5gkZ/HybYLchDG1TDMTQKiT
Canwkn108voTunT3rlIy+4SByVQgRVinWdtGigylG6TZkPvB99KjwgDIELZv
DryRN1FZ84OcwujGQ2usNsAvkoJYRqpn5cs06Slzm7IhfFupnPYWBNJSz5zw
9gpwX7bQqFcFf2AuEtVzXiQ6V4zLIr0N0HLIAQNuh7wfNhYij9ToxIkT1aio
KGFzSExPl4SOvdja0NLMwZ2Gps2UT0F2asdnGykm+XVhrVyy5h1loU2MMc4C
mk+PLV4F9keNTmpIhSUtaMIUD4FvQSiNMeAc1F83XMQ3RBfjCqHKZNY5kXKD
NCLhg1IEf63FcYQOusQps2cro01+nTcUd68Qiij4WO42OuIXr1xJRy+cpDhr
O/Y53gTyUlux4R1HJ8nBy/R2rNQYTSJ4W7xswpQO7I5U2PafeSTpKRNBgxVP
nTq1zthSaZO3gT8V8pGWlCCYIQgArhyOASsH0gp7jqQk0nvp+fkah0JmL7A6
ODSO4ku+tBNXjmCDvHLdOpWNrUA4gAEur2nMbtHb1pLKRj664AbJn81tUQmv
sZl+W8Zz3/6tHbt4ThSVlEb9h+RrLt6TlLau4UKLzW4jJEBaNsHO07i1l+LQ
M1vt4+mjhUdHw0ooXl7d7RWumkk44q3qxweWGTvUGJIBzI4abJCfGpzkNNYa
Q0nhQVLmQdp10bRqWhvmIrNv4YXAsQOonPWa9snRo/qDt1AApoqMGgLYNnsX
LYQJ6uF/22sbdneQjqWA6JFa5wHjFSePckyLVOOsVmlnaOTgLxTb3TwSMJ4G
XYOyUWANGz66q535e+GiKQAVmvTUbGrRoGVLzspS3F2d61I006yCFLL6D5CL
il9dsGABVft3E0uPgvSp69fROVjPJEMGSg5hpsmwmJLRWnDaQFDdftYOjIY2
a44z0Hmam3ei1smjTHH2qhZy5GEcibj0tECjaz5DgmUbohIaCtPkZydbCaNg
VFwXMSC8Fm3u/PmW/V9+abJMImuESUvYDqVfdxfq38OFhvhYzNcLtRdovUzm
8lr20kaF+wrMEx3v57791oQaSbsXeAIxfBOpZiTpM3M9BKkH4OQlPhI8y5nv
WklzXDRQfUHJWnu3ERgWBWytCpTy0OhovuXhFBbZVLhfAdzgvVCTM1/nEOot
io4bIOvjG68uWLQIHy4tIRzEKN179lRZAsVLQKJ8aI/25N2npySbUcsAL9EY
3+6CP4GEQeJG5mUK2+X5W7ccK80RTA0xdVjAGKglQffiyvGvKyHhrSk54w25
KGDW5SPS7v3R9sWrpA4vfoMO8U91chZnmrfInyJSK9nsHqPwcf+hgJSVkvxC
sAaWVhi+3DEKuXhXk8t7Q2nAwPf44Dppo8rfFG6tqPimNGmWE6mnWtHpGw7a
vn+3MK+SzAMGOXft1IkCNx2bMJRmWYPpaLyrFOzWZgZK9dTfvQeVBLpTRWKY
zKBF/gkD0a799JPt4t27BvRNSUh/jV3LZvTtExP61oUqa0IpLKmU+kZukr63
oMydUtdGQ+Au/q+Pb7rM/ejSzRP7rgUFe1NCWlO0etDw4jdp5sLWtP5jV5AN
2j7+vLlJma6Hc7wNiF9D3brQMOd3aWRMMNWmhtLh2K50OKEH7Uj3oQlJYeTf
pwdF+npSYU6GZJYf/P678qE9Jm4p42z8At+izJx+NLbyLVJPt5bBs3ptrQsV
KwGUXzpZHPjAwrsUNuauJLUQqKzd+Rn1CVsh/NXSCxjpx8fTivKK3qRR495i
N+htWr2lE23f39Vq2/S22R8gLFABxphpoA9BPBHa+V2KcGlBeeH+NMMaSuuC
OgnT17aUgVSeEEJD+vYUy5VfVIQ4A1OJ9UfooQaENqaUzKZUOqEfLVoxhN/2
LSGGu/ZTW6ME10UDvyLAjlkjx0mYOijrK4qo+JOiU0cIyHXzgVPyGKh/paQG
SP20oqqJoPdgXwEe2vppFyUgRLjOVCDrER6h4x8gUCTgAB2BCRnWqQlFubai
7MH9aFpyMK0Y2p3OW3vQuti+NC8thEIHugvlkDJ1qnbvmUEz9LoaEtmAtdW7
NG7iO6RMdqMFywY7so63RSe9JnTIB1gzPf2feTIujio1qudd9/60sIFW7+oP
z6FSh454UyQ734CLggclU9kr8T5yqsjDFY6bKGPC+gaMpbCYdI5/X6fapW/T
p0db0rHLrQVJdv6W2SkBBJiTpXpGI7PFAE4g8vYgygTKB+cTNsiLjsR1pZsG
QfLmqB7iTaCWChseyb4ucLxgtU1KS0MmyKA3tSamNajDTaaj3g9/4U1FVSsp
uOgBWecSpUy6aA6IksyhY8906u03joIikiklLU54KKcteFsQ+McvtaHPv2xl
tK101v77VwfzCkl6EHXv20+fSuSBJYb6etHWYV2FTRxAbSr2sIPFgeeA04Sc
TmlVlaBFzcFDPv71BfW/7uPmAtR+EazWjWYt8aOKaYtEiyVOJ0qfUwc5yJ/f
J3QRDeJoPI3j/OEjEigyvqHIG3Yfz/DVFQesX3323w72ae3Il6DvTkZtPXxI
geyounVykDp/sM8AWhriKpz8INOl4v7k01NnqoPTkJWdrQ309RUuUlCm6Lrb
It0LcHTf3/yuoCD3HmjFV/1NAdH/UedMPto9kAZHltDMpWvIPWIDRU/Uu4zH
z1guQRFwNX28oimRzR8qgxs3ucozgRUd5wtC5Ss32ylXfmotdwk2A9KItBxS
qshP2jigDfIeQD5OesZiyMD+VBHoRl/zPfqpoA/9PaY/xffrIp4mHFMOZWwD
LRZpM4lLldyYgP6mzWsqPKYgwmY5sFzQmllTshvUOScT19L9BVvUAoOCtRPX
7CAD+s/fLnTqrjNVrvqMJm64rb1nyRNbhNwkJHHGsq1kiVkmue+Zi8qk1wrd
E3oPh5PAY2//0NYOCiPq6rj+ciOTrJYFSpKMYWxj4dNA2GCvF8R709PCvkRl
nrQoWg+ZDS+cwCeI3DbswKLVq5HWwDBYk8FaAUsY4Nh120j+5MtwXnMm//h5
lDn3MY2sWi2Zg69v3qSK6YvJK+WQdDQA1TmpNpsPrSmd4A18+rc+sP6//PuP
ftY37W9ytY8e8WCBQlM+hkUBfo3oAW6gkh6jC2GJJx3PdhchhC8OXx4IQOiP
vcePq8/HHbe0xKTUpznL3qGbbEvRLXXlhQsFAoYBNK5mEo2cvJviJxNF5S6V
DMjXt29T5PDtNDgsRRJngJUXlvrJdIkj51rTY+MZ/hSF0A2wIPNCSUK9sKRE
m7V0Kb9+CvXz8BAAFlDF8EmrRg+XARd/j/UgmuBlR7gibgNYAtlvtmXaQTsn
h0WmzoBcFxz6UEJFJY05mmzCz9vKjpb+4Uc3qtlWSxMWHqGhw/dTYuFSiin7
hqo/uKpPSt1xlKwF5VIhhs1dx+c9sri1wNPRk/iT4APxTE5Wonb4YJmuwU6Y
qkybJvIEWBRwRYH+fnKZgP9D7F8+PJse5LnR36wgaPxANkx9JHkiI71ZvlJ1
+lmUfTFxR8LzXYdaGkTBguOz3vnFwdHfv55t6YdN6cajtsY59QBO0LhQAfKn
tPHZOnTooLKJtPXs6axW1b7FqqC18HabNNB//+1s8Q0KkkIeaglQ8ys/PkHB
Bcfk6T8/tZN3GY1R9hXI71655WjHnp840UVha2RcLAEPIN+UzM6sOcEesfmH
2aE0NxiIlT5UFdFfkHbwVgHCreAD/fLqVXti89aTJ2A3NanUwSSgOLRtq/Xr
78KerhOt2Mjexo/sqP9qUlG6aKlFUXrK8vx50ROooR/9+hr5Z5+UNiM0oq77
uEqa535+DoyUx/n1v/j/7urWXe3sFgvZCmhHMH2gQA5HHMHGqqJkASulefei
LP8+EuwC6o6gahQHRoBW8/ptz9GKLS3+QQ6UO7IDDWEnKyikBztobejHn9vT
vb/19S/akCSJX/Tmp02/TCXTNgox3FfaPWFPyCieK6hh+BEzF8fQB1vfpQf/
bV/nknY1EcJmq4lwsCLPCkEG5gAktAh1cXkWTVHoSFJvSh7QjXIC+lHMEIso
CSRIFEmib0HN0PbNw4f/MKTJwameWru0KV1/3JZu3+5MIcM6UWSMK02c2oW0
7zvwfXCmf59NF2DkpmM/a8k1Z8TIGBQXoI6R+WvRIzeL83bp3j0MQtSqpjem
lRua0Xe/tavzON31p2gjtV34fQjAUQVFBBIFv5Kvitkhfj3Ljcb6sWT5u9uB
j0j3IAzECcJGPvz9d7F9NbMayzwKAyrGfqqr0rZtW9WtTx+F1Y+lvLqR9Yuz
LQbVvUqtVXOSD5QseyZKWERHlqc2dVGaUG6OCPLm22zA4ck837CS30GIqUyZ
P1/9/OQBbfeRFoZ3pCMFWfaU4xdbateut6clS1zESS9RFNtYRalXB0ApfAGw
0pBtnBOC1tkTx1NOv46SrDERsLVpAXRsHMdVKYNphDWW9q+er2LE87FLl6ws
PyarutRewBqE90VnIX63eNzAF1CMrFQkkf7RgQPatxwAeKeolsopU4BhsY6p
sVkTC+epJy5dUmybFxsISPtz0bc3nWn37m4019YDZJZa1YwZZv++vRCIZxnD
gQ30w+zq8TQ73F3YPhH0Cpo3IYIOjQ2mVcOjrRwoo20EUFep+pktXMjew/4D
LoGzKRoTR8+7Hrvbkuena2euXVOu3L2rBBT+LNVhjI4Mi4lxdPLiZ4lfhiQH
Sh9iBAFCrdvG9eUpVxo/PU5T7O2Ob0kLFzovUb/jeFTaW5BUQZB+PN/PPiYJ
yQgYs89HB9iioqLUJWvXgltPeT6DuRV8HnXlRmfyAQMUnymqNaWlSXT2bC/R
R/sOl2nf8Norl9+AbFkreP+jEhMtoytl/jOm4loHRM1TQM9lVLeVuJS36qhs
vY/r36eGgb5WP/42UoLBMew5dkzUA2JbdB0CqG3mg3aMSSBL986Sn0AsUZpr
pUlxXurkmTMt1bwMFNH3HD9umWHMzgQOdKfaXP2DOgA/qwaHdBYyJ2TuWb0r
vAV+dS/Vqxp6O+B14apWVVVpmXl56sSZnbX/yKVysz1HmTYEbFK986gtC2Vn
INkd60vxuR5aY6RXz0TsnLl+3bFRM3cD3AMyMVCLaKjq7z9xQgO+5YNQFxo5
qKfYH3MExrrSFHo0fjDNKxtB1ekRNHtsgZXvlJFgFz5WtB6jDlUNSgr+lZop
Y9V7v7U1lIiLo43q69npBo5TFjdSb/zoiMViPoKKykSwwWsF1NdXN29a+Fab
SdxcFqCvWNk/ePbMtvvwYRUu9ifoIvbvbp8PI1mtyhK6OT4MShrzrA3Mj7Wj
a3+pYKEJAfJYiQ4zXiAicJMt3Ejq8/1tpH7LdvPevS60ffsgKWchusOKWEeZ
yJcoY6w4ukVQi0RHToRPf9o5zJm2RLhKj2imMWMD5mRn4TDgywxwja2P5yCp
vaNcdOX+fUlg79/vY73P1knHwdZXu3TtSjnDnenYud70/cPudObrXHgAVnaj
7PhX3iNtHrur6CxZvXUr2TZsoAuXzrHGiqb4wQPpwzAX+iKhh91tLNbhyuqo
xGFGpeBf2sBBgSKCiMJPX7tmKysrq/eCHL6sQIGifAFTgkv84Y4dtg+2bTMQ
bUjYyAVYuGYTGixo/9mf1YARtwymIrmWyK+EBgVQatRQezcO3JqZeTrHew6r
bAC/SyoqtOHFxdb4lBQDt2BhYaXI9Ml0hgXg/L3faHhRhfzqpp07MW1Kr7m/
DGSMnt2cOV9YMy/cfab4Zl4w8aIuvFNIqmYkxdH0zGgpZAFIjcdZNq1adGz2
8OEa6xiU5Mxqf6vOwVRZu1Y2WL38m+CuV7z/vmA7DHococYbyj4qYqPSifpc
24sP/uBPv2KWGB31/ayngvIAfi/aPMsKOVxLC6GkkMHi38IFhIuUkZMjXNPZ
hYV6meZl6tAriaYs+EAYNA+wlzNv3jzs+uvGFgFIAFCTOaXUOyRdhP3cvd+U
mNEnzEUAE+jJdi2GJSHeuw/7WkGUyV7C9Pxk2pnhQ7kBHnI4SLDigDh4Usqq
qgxommBnu3rmSn0Q0IuV6z6ysFp/UVb4VV40JHE5pZftofiq72nPiauWzXv2
6KCMf6koSgcOi6ek4TMRoauho66a4FrKABh+715JRuJ1mDsKQBtwzln8MzTd
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\
\>"],ExpressionUUID->"304ef587-40cc-4249-ac56-9bcf71b60475"]
}, Open  ]],

Cell[TextData[{
 "Above we have chosen to simply embed the same ",
 StyleBox["FerroceneMolecule",
  FontSlant->"Italic"],
 " everywhere. Use multiple crystal labels in the ",
 StyleBox["guestUnits",
  FontSlant->"Italic"],
 " list (first parameter) to distribute different guests onto the host \
\[Dash]\[NonBreakingSpace]either sequentially or randomly. Another thing we \
can do is to perform ",
 StyleBox["shifts/distortions",
  FontSlant->"Italic"],
 " and/or ",
 StyleBox["rotations",
  FontSlant->"Italic"],
 " of the guest units that are to be embedded. Lastly, we can control the \
placement further by the use of positional conditions. \
Here\[CloseCurlyQuote]s an example:"
}], "Text",
 CellChangeTimes->{{3.780645484433353*^9, 3.780645489225143*^9}, {
  3.780645668885957*^9, 3.7806456907646847`*^9}, {3.780645823042397*^9, 
  3.780645837551589*^9}, {3.78064602119853*^9, 3.780646096436117*^9}, {
  3.78064635494289*^9, 3.780646355526613*^9}, {3.780647612214366*^9, 
  3.780647646396285*^9}, {3.780647975245863*^9, 3.78064797680513*^9}, {
  3.78064809647517*^9, 3.780648103722417*^9}, {3.7806481400663843`*^9, 
  3.78064816913723*^9}, {3.7806488649065723`*^9, 3.780648905799931*^9}, {
  3.780653927597207*^9, 3.780653984755163*^9}, {3.780654025131192*^9, 
  3.7806541315362253`*^9}, {3.780654423866808*^9, 3.7806545549663143`*^9}, {
  3.780654614782406*^9, 
  3.7806546159502068`*^9}},ExpressionUUID->"dce74319-55a6-4346-8edc-\
7da49b0f1b0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newStructure", "=", 
   RowBox[{"EmbedStructure", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "/;", 
        RowBox[{"EvenQ", "@", 
         RowBox[{"IntegerPart", "[", "y", "]"}]}]}], "->", 
       "\"\<FerroceneMolecule\>\""}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "targetPositions", ",", "\[IndentingNewLine]", 
     "\"\<ThioureaHost_4x3x1\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<NewLabel\>\"", "\[Rule]", "\"\<CustomDemoStructure\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Rotations\>\"", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "/;", 
         RowBox[{"x", ">", "1"}]}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"45", ",", "0", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "360"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CrystalPlot", "[", 
  RowBox[{"\"\<CustomDemoStructure\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780654573551919*^9, 3.780654845561369*^9}, {
  3.780655605903905*^9, 3.780655606519292*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"ef48f8e3-2641-48e2-9352-05a903788633"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxl1n1MllUYBnBE/wCZpIJmhSx14JvoVBBoKHnkM0hRwZozNHQCzvyoNLEX
piYzkak5rfwAFdkSlRViiFiobyk5ZCusJMCGpuCAuYWpy1Cp5+25r7N1HTf/
uXb2cO77nPd3n1FLVqdmenp4eNyx/ve3/h988cyA2od+yue295ZTLaPVTc81
QSWV/ir9fp7j/MP+rg192YMSNoTo/MasezfPWrlz8e64qOX+Ou9KyluQVz5c
Zc33r1k5ZLQq37Fos//OnulfezWVDUwZpybNLDtxsmWozsflVEc4rfWH51Ue
2u/VMh35upLc7VGLvfX6M0mlWSceBajY0/snFs8J0uuRtzdUjyyycvxd5G32
PhX2ufeX86eXXAxWUq8L9SKXehXqRf7mf7mf8pB/Z59sfXD98GjJ+7uKln5Y
Ny5piEKOuq41Fec8PDKGcxfymUcHJgRd85I8WH8fuXxf4fvI19r9cT1b/VVF
4K5I3X/pj6vx4q01y25N1fltuz+unvS0vp+jw3R+U86xruflpCchkfpciuU+
HNrbvLeyJVTnuA/1fmllP/pO0Pkh6SfWo//oJ9Yj/03OBX8Xead9f/Q+0X+5
P7pe5Ogn6kXe2/tHXITVnzHbFrYWJozX/Ud/akZ+HLjr/VCdz5e6Hk986lAP
InXuUXXN1XUsROfo/yP7+wrfRx4i+8H3kW/L2P9qbnmwa170u76nWmJ0/5uH
Fy5vvxrqmnypoKfJM17nY0v3/X7byl2Dvz29/aTSeYecY3lr2PWSshjd//Vy
H0Z8mb85d4PSOepdl9KsvjgxTeffSD+xHv1HP7Ee+V05F/xd5G8drPmp2+oP
9on+71HHjhbNCdf1Iu8n/US9/z/HYDmvabr/6E/Qvba65TOVzmOkroTeYQ3f
+cTqPGK4I8ynL1zn6L99D/3095F7yn7wfeQNOSNWpW0Mc7UGfz+mc0q8/v7z
f9ac9bH6hhzrP7HrNfyU7yv2M8Pum2I/7xQ+V2vt3/CzPi/z78nOaMNPqdfw
03nX+y9r/4afg9ISzzkfRxl+Lmp7fYo7Zz8d9j00/Cy077NiP+W8DD/texhu
+Cn3QbGfqIv9hP/sp/07nWr4if2wn7Uyj9jP8eI2+9ktc439lPuv2E+5/4af
4oliPwukn+znr7J/9hPnwn6KD4r9FB8U+xkn/WQ/5Z4r9hNzjf1EXexnhvjP
fl6xf1+Gnzhf9rNE5hH7CbfZz2aZa+xnu5wj+4n3CfvpkHrZz3ekn+ynuKTY
z1tyLuxnp8xB9lPmr+En+sl+im+K/ZT1hp+oi/2U3PDTIe8T9lP6r9hPmY+G
nz0yN9nPTelDgtuvxhh+rkzt2HJk7CuGnwGXm3xLrZz9PN7vyqRiR6zhZ1Hv
6tkVdxIMP+cmzr1bZK1nP9eExqSorhmGn+c6MirTyuINPzNDOle4c/Yzece2
2ILdMww/Kx2Xk7otr9jP0kTPAvd69tN2LMbwE/1hP1EX++kr/rOftrfxhp/Y
D/vZIPOI/YwUt9lPzDX2E+fIfuI+sJ9vS73sZ4X0k/3E/tlPnAv7iTnIfubK
PGU/n5F+sp/Oe29sDrX6w35irrGfK6Qu9hPzi/18YX29t/t+sp84X/bzU5lH
7CfeJ+znEplrxvtTzpH9xPuE/QyXetnPD6Sf7CfeJ+znQjkX9vMlmYPsJ94n
7GeL9JP9jJP3CfuJucZ+4hzZT8xT9hPvE/YT58t+Bsj8ZT8xN9nP6n0/rHc+
Tjb8XNFRMSw7OtHw89JhxwJ3zn7eiN6aH5r6muFnY8SE0vjBsw0/t+b7Tnev
Zz+Pr/qnpGlosuHn/VGBA7obZxl+Hsj+/EKXlbOfm+oTPgusTTL83NlYkuP2
ynh/5l9oda9nP+3fRbLhJ/rDfqIu9hP+s5/27zfFfH/KftjPYplH7GequM1+
Yq6xnzhH9rNK7gP7iXrZT/ST/cT+2c+Nci7sJ+Yg+7lW5in7eV76yX7er+rc
4+4P+4m5ZvgpdbGf8J/9nFv1Ubr7frKfOF/2E/OI/cT8ZT9HylxjP4/JObKf
B+Q+sJ9zpF728z3pJ/tZK/tnP5fKubCfmIPsJ94n7Cf6yX7ifcJ+Yq6xnzhH
9hPzi/3E+4T9xH7YT8xf9hNzk/0sHbVy2dOs2YYD8Ip/7/CB7yF+L3zfcD+5
D7hvXO+/YK/YpQ==
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxl2H1UFmUaBvAXK4v0KCgpiOJHpoCKIRAh6ju9oBKQkLiJayuFGobfZWX4
WSpqpEfEBLdURF2x2DS2xARltPVbSLMQE01ljSRJQ0wRg5057309nXPNX5xz
nTn3zDzvcw+/5+6ZPHP05FY2m223i832kPH36vMHXcPf7Ka9P7Ile1fUk1qb
a6ujngrw0lxCfz69oL+7Nix82/e1V+7ZkZ/N916yc6efduWXPpvfSX9UXX/q
FUdxY0EHrbY8q/7GpD5aXfqxyO35vlph6EbX+pzrpdqSkqV7mtxVvuvNbg17
brfTi12OL3rB30/lXzqvt+P6VSnpEU/N99Q+dV6v4XrkZc776rgvco8ek7uX
1rdRz5m7q/0Wm7bH/kuMx5HiGz3V+yIf+8N7yV3cfNX7Is/tunzAUGN97ncb
tz+y9KS9vO6JdJ9LvbXYBac3T7vuq7X8/XRSvw5eGvJVQY/91GSsQ64+OO3G
Jz4q/1DyPyfETTs77oH9uyLPg51D3DTU31vzRfZ/UntpyGOk/qG0B7VTHa4q
HxFy91yJ8fy4vv2uzCU+y3pr/l47w4uN9cH1yE/vfGbRxbi+6r6c4znjQnoe
6Vzjpo2U+nhf5P2kPt4XeX7Zyb4PbbheWuEYu+zzoo7a7apqV2/NRXNM6vHv
ecb+eTN100837zyl8szDt177pr6NHrHx7LT4Yl+Vr5V8+4uLB/vd8tK2tbmf
vOHVHqr+Z72nHF11rp/KUX9kUe2Y2rTuKte3zPj1srF/cP3tb7a3hOxtseuu
BQ2L+rvruB55Ttr5c/uMfYL7co7nnBi9cPKGfX/Vx/uqXOrjfZHvlv2fMCUg
bOPRUNUvu2X/Z7jVBx9LHqjycumjz7d0fNXDI1Dlsp/11gVzfy7+W5jqF9nP
evK1f7QLyhuk8kTnftZnDe84YNrewSqXflfXo18edva7uh75d85+V/dFLs+p
4znRL7r0L94XeYH0L95XXe9cz9KP60bXLf+qv+oXWU/txQu9hp9OCVb5Oufv
on89Z3/G4hMhKl8veau3akYePjNQ9QvqT9/7aNjmxFCVH5D6tQmra9fGBKo8
17nf7Lge/RLh3G86rke+zrlvNdyXczwn+mW31Mf7Ipf9rON9qR/1kR8tbRfo
HqT6pb+zH/WTjX++PNQnTOVnnH2tB2flbK1bPFjl0u96U2V5cdzmYNUv8j3R
ayquxrdtP0TlqD/xjddb2Vo9o/JNzu+Vuh79It9DdT3yDOd3T90X+WrJ8Zzo
F/keqvdFjvp4X+TY/2+sD0iYfceh+kW+53rFqR3Ld34/1NJH2muO8nGhdpW/
oSdMrzLWJ3bv2Z2LSyJUv/glHw1p6B6o3x9zZGhJsvZXH/VpXrI1MFh3eaRn
WeX0SJW/3G28/4m2A9X16JffsupWTTWeH9cj3+wW4zG1OVjdF7n8n1XPiX5B
/+J9kdukf/G+yFcmB365z1ifpPDKia4Lh6h+ebo8s6DQ+H1//9b3/AfDn1O5
27lZ4y8Y67C969sPrv7xV95B8g6Lern7th2m+mWF1F88zDuhfr9D5c9K/fme
+8dWzrCrvPc7TdeeNZ4f16NfVn/6+PxUY31wPXK31fOz7xr7BPdF3lZyPCf6
BfXxvshXSX28L/LzFXsPmL/vjYLzQ8P/qal+2XNg0hxvY/8EJHWafDA3QuU+
mYkdlp0J0qs/m7jCa3SkyrtLfqR84broV59T/YL6JWWP/eTrNVzlRVI/zftU
UV4Hh8qLWw8bctLYP7ge/VKVtj0vdlOwuh558NrmdZ8a+wT3RT5Icjwn+qVE
6uN9kV+Q+nhf5P87UZvStCvU4sMBrb/0Mq63+LAi9rEUF9+hFh/KPrf4cIKz
XzT24Q1nv2jsQ39nP2rswyvOfrT4UPpaYx/O7JqycumZIIsPX9m0dMUHz4dZ
fNh5YnFF2PghFh+us1fdMteHfehelHzn6tEhFh/GLRuy0VwH9iFy9iHqsw87
Sn32oVvHt90zjOdnH679+Gbbbcb6sA/HlD0x2bsp3OLDBMnZh6jPPsyU+uzD
B0FzPY8bvy/7cH7moTUxxv5hH84pfXZ2vnG+YB8iZx/+KfXZh6jPPkyr+6Hg
trF/2If3ft0U72X4n31YuuMtm7lP2IfI2Yeozz68K/XZh+Nl/7MP62T/sw9z
pY/YhziXsQ9xvmMfyv8LjX1YI+cj9uFLcj5iH3aVcxb7EH3HPkT/sg8vS/+y
D+V7qLEP5Xtl8WGQ87unsQ+Rsw/le6ixD+V7a/Hhj87vucY+lO+5xj6U/xcW
HyJnH6I++1D+H2nswx7O/3ca+1D+32nsw3bO/5sa+1D+z2rsQ/l/qrEPP5T6
7EPxgMY+FG9o7ENxhcY+dJecfYj67MP+Up99WCX7n30o5x2Nffi99BH7EPMN
9mGunO/YhzjfsQ9xPmIf5sv5iH0o97X40FP6jn2I+Qb7EP3LPvxE5g/sw2iZ
P7AP18gcg32I+Qb7EPMN9iHmJ+zDKJk/sA99Zf7APsQcg32InH2I+Qn7EPXZ
h7rMH9iHkTJ/YB+ukTkG+zBHcvahnDdL2Yea1GcfYv7APsT8gX24RuYY7EPM
N9iHqM8+RH32Yf6WwtbrXCItPoy1ZyeVzHVYfLgl+bnW2ftHWHyY/t+rVSfz
HRYfdnk0f1/mebvFh8mO2dNM/7APY+pyp6/5WrP4cEdciccUh8Piw22Jvau6
GM5hH04/MSs70VhH9uFrGS3rx5dHWnx4qK7LsKCxIyw+dHm5X4y5PuzDA9kz
ypavGmHx4aWF43ueMtaBfYicfWiT+uzDUqnPPjwwfO4F8/nZhy2uIePM9WEf
Xu4V9UjvviMsPkTOPkR99iHqsw+nrt0TaP6+7MOGpT7e5v5hH/at7HTJZpwv
2IfI2YepUp99iPrsw/pBvn7m/mEfvv7b8RdM/7MPn3C7N9rcJ+zDTpKzDxuk
PvtwitRnH2L/sw+x/9mH6CP2Ic5l7EOc79iH/eV8xz7E+Yh96CnnI/bhDDln
sQ/Rd+xD9C/7EP3LPjw1b0PEWmN92IfbGttvM39f9mH6wcab5jqwD5GzD49L
ffYh6rMP83Z4FZrPzz48dq4gabCxPuzDw0uvXzD3CfsQOftwq9RnHx6X+uzD
kJcaL903fl/2YWHZouorxv5hH976eFxGqnG+YB/+Ljn7EPXZh19IffbhLr+s
lpXG/mEfBhW2bcoz/M8+vFM9KMHcJ+zDBsnZh19IffbhIKnPPsT+Zx9i/7MP
0UfsQ5zL2IcyD9TYh5hvsA9xPmIfyrzR4sNZcs5iH6Lv2IfoX/Yh+pd9+JHM
H9iHmG+wD+NljsE+xHyDfZgl9dmHqM8+bC/zB/Yh5g/sQ8wx2IeYe7APUZ99
mCX12YfNMn9gHy6Q+QP78G2ZY7APMd9gH6I++3Ce1GcfvivzB/bhfZk/sA8P
yByDfYj5BvtwntRnH6I++/DSxZnj/PvFWnz4/rwxhaPzoi0+PLepOXFAzSiL
D0tsuQOTv4u2+PAbu/vTSZ2iLD5MuXhnhekf9uF7fhP0PtVRFh9ezHg3pXlq
tMWHK6Z8qz9pOId9uLV1QO1v4dEWH35ytOT673djLT6851e55vjiURYfhub8
stFcH/bhnbP9evgUjbL40KPYc465DuxD5OzDZ6Q++xD12YcN74UE1N+Ntfgw
ZET9Z+b6sA87JT2SuC9+lMWHnSVnH6I++xD12YfTluX8OsH4fdmH/gcvTDf3
D/swOv/YwfXG+YJ9+Lzk7MOpUp99iPrsQ9+Z1+aZ+4d9mBqU1zjI8D/7MCb2
q+3mPmEfxkrOPvSX+uxD1GcfYv+zD7H/2YfoI/YhzmXsQ5zv2Ic437EPcT5i
H+J8xD7EOYt9iL5jH6J/2YfoX/Zh1/sr55jrwz78MaTsD/P3ZR82dt0Xba4D
+xA5+7CL1Gcfoj77sLK64uG+1VEWH3bJz3rfXB/2YZP+r4Cbxj5hHz6QnH14
XuqzD1GffRhfE3Yoy/h92Yftn1wQae4f9mHA46k55vmCfYicfYj67MN2Up99
2O5M+mhz/7AP4z+KOJ1i+J99+PTnL8039wn7EDn7EPXZh3FSn32I/c8+xP5n
H6KP2Ic4l7EPcb5jH+J8xz7E+Yh9iPMR+xDnLPYh+o59iP5lH6J/2YeYP7AP
dZk/sA8xx2AfImcfoj77EPMT9iHmD+zDZpk/sA8xx2AfXpGcfYj67EPb4876
7EPMN9iHmD+wDzHHYB/2kZx9iPrsQ9RnH2K+wT7EfIN9iPkG+xDzDfYh5hvs
Q9RnH/4fXinnrg==
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxl2Xk41N/3AHBbkSQJyZYthITsy8yZQdbQQjuSpI0WrUoSpaRFIqWS9lQk
SVIz7Z82lbRJJbTv2le/md/ce+f7nPmr5znP+zl37ts95/26J5PYpKETFeTk
5BI6yckpiv49MHrepi3JxpDu31FQFmAGXZ+tCehr1xvWKGxf2NGiDqpf1uWv
SFJg8W+DwxdYX7OCeZovZz1bIc/iPUtL9/7+pAGZGTsXr2+zhHfL//Pdvc8K
oM/M1AXHy7mwrDaj6ncPFl+XtDvngVMPoXHIiS/7DkifN5Y8L6DP50xa7tN3
kS6slTwP9HkaJ+sK6bo0npWdO+hkQnf2O4vLuu+QgyquXf7iilMO0v3SuJP9
4GmF76zYfmm8i+/oA0Wi9/PLcNQpX8FVbt077eVGj80hybRT/ruuVuB08cOc
5B4GQOO3F8+8+lf0HqZG6Mft3KrP4vUk/iozviXFRgnqj+ue6eWsATR/9Ysj
BUenmLJ4IskfuevU6Qc+iiy+eknM+dMO0ue7l61fZpRpDmH8qUceit4PfZ7G
DykprBzb34qtS+OHSZz+zjBnk4u9XmhADslP90vjoSQ/3S+NpyX9Wf2xqpx7
lz8i8/DxnvC5qbWLPsiD5rieA3+Lzk8348NT8uZYsriSg9EaQUJ34b4X556W
esrGG2u3h8/6YAC7uv6KLRxvzPKXmidcyrlnw+IaJH+PkKucHSnS5+VuPEtS
qC4X0Oc/n9vd4VzdwVXbZ31WsVVdSJ9n8eedO6pE54Sui+P0d04ISp1YWGMM
zXWS/HS/NN6V5Kf7pXE5cv6HJdi5b73kyuoll5z/nq1yMS4z7Vlci9RR88Vs
ff5waXy15DwLG5bL2a7R9mD1Qs6zMPbZOPWBJY4sTs6zsGRK9ovCH+4sXiqp
d/Y8rZd1knpnz9M4qXe2Lo2T3ymkv5PWC9mvgO6XxteQ+qX7pfE0yfvkbnk3
9N2KY7asXsjfC4yqDqwqsXRmcRXJ30X4ttB50GFVaVydxMM2pryq3GfP6oXm
n16t7L59pCuLq5D8hgs67xZmS5+Xm/H/501An6f1Qs6zkD5P43KScwt0XRpX
IXH6O1G9COh+aVyL5Kf7RfUo9N+Yoe7QYyCrl3BJPQo3NWSWdH/szuKk3oXx
1RpR+mekcVLvwv+ORsqbRjuzeiH9RPjibku4WncvFqf58wue1vbnS58n/Yo9
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
TvPT/dJ4ykOfD6qiv++tG8UPZwdowSX/lpFxBsowvX7E5Wmi8/P2hub1Vdp9
WTx/b/mnGL8uwuCZHg1Dh/Vj8TwSz9tfMdVcqAuPnyYbqd8xhEUkf/8oHwOb
tTYsnkjy9/sm59241ZjFs/y0b/3M/8ylzwe+3zd+Z8dn7pt5rRozs3oI6fM0
vmVsYexI0Tmh69L4JhKnv1P3mfeJUgdTlp/ul8ZpfrpfGifnWZB7Vbim7o0r
qxdynoVKc+NNJ6TbsfgVUkcVXS/lacc4sDg5z0IF/oWKmi7urF7IeRaapV+t
lk91ZHGe5DwLj2iOqtpm5cnipN7Z87ReSL2z52mc1Dtbl8avk7qjv5PWC61f
ul8aH0nql+6XxldL3qegd+W8Ta//2rJ6eS15n9Bd/dHJrd8HsniR5O8iPP14
hmCpjotM/HdxWvNZ9wGsXsjfS2AXMad1upMri78l+W1NGmZfOOnA4mmS88al
z9N6IedNSJ+ncXJuga6L4/R30nqZT/LT/dJ4EslP90vjpN6Fy3/oxMU6D2T1
cl9Sj8Is2+rbqofdWHyopK6Frn+D772/5sHipN6F3xP1s0KHObF6aST5980O
/9342pPFG0j+PdyybMdZLiyeLOlX7HlaL6QfsudpPFvS99i6NL6axOnvpPUy
j+Sn+6Vx0g/Zfml8MTn/mv99/7tS2YfVC+nnwo0d4//NjfNmcQNSR743v8qP
WcZl8fZqxZvLRO8nSPFX97R8H1YvybzFV4tWOwhHm/3N3RkO0u9X8EevvXpO
wh1vzvVo3+3L4peiPvybP9COPU/rRSG4i0Gc6PfT52k8WutzbK/hzmxdXHf0
d9J6qSH1S/dL43akful+adzAZOuTrqL3s3XblBMeJV6sXu5/Mk2+Kfr7hr/K
zJvZjcfiuTeMT6eL3sPeW2H5rQZ8Ft9A4t21kx5ZCL1ZvRiS/M1qQ/c9KOWz
OM1/+pnCU9UnXBb/8dNsbb7o99Pnab3sHG+hOkH0fujzNK6+1aB+n+ic0HVp
XI3E6e+k9ULz0/3SeAnJT/dL4+ZVicO3iv6+qx+XvBx2EFi9lCgHPjcVnZ+c
+bON9yX4sHh0Tvm5+ykDhW0x3qZ6831ZPIrEz/fe/SvQk8fqheY3LOI6aSj7
sXgxya+vkPTnZBCfxa0C6jUWis4PfZ7WS3zk0VcBx5zY8zReXhjqqCg6J3Rd
Gq8gcfo7ab3Q/HS/ND6J5Kf7pfHNb5zqh/q4yvjw+NMzMaLnZXyYF15+7NBi
bxkfknMu40NSL4B9qCSpF8A+nCOpR8A+JPUo40NS14B9WKYr8BD9vWR8eGCx
h9HAKncZH65ecWitt6+XjA+DYizGDBO9H+zDotwZXk8ee8n4UH1l2xvxe8A+
7E7i2Ic0P/bhVpIf+3B0u81e8e/HPlQWPr0gfj/YhxsvT9dJ2u0p48M8Esc+
pPmxD2l+7MOEOWrv5on+vtiHytNv3vMXnR/sw/aLWeryovsF9uFnEsc+nEzy
Yx+qkPzYh+evZfPF5wf7sNVp2Vljkf+xD+V2XT9yT3ROsA87dkri2Ic0P/Zh
C8mPfUjPP/ahIjn/2IdRpI6wD9m9DPmwitzvsA/tyf0O+5B8TwH7kN6PsA/Z
PQv5kNYd9iH5ngL2YSSpX+xDS0m/AuxD0g9lfHhE0vcA+5D0Q8A+JP0QsA9J
P5TxIenngH1IvheAfUi+FzI+JN8LGR/S/NiHO0h+7EPyvQPsQ/K9A+xD8t0E
7EPynQXswz8kP/Yh+V4D9qGRxAOAfdgk8QBgHxJXAPYhcQhgHxLPAPYh8QZg
H1aS8499SOcb2IfhpI6wD8mcAbAP6f0O+zCc3O+wD9eR+xH2Ib0fYR/S+Qb2
Ia077MOFpH6xD4HUL/bhfDJ/wD6MIfMH7EPidsA+pHHsQ5of+5DON7AP6XwD
+5DcdwD7kNx3APswnMSxD2l+7EOaH/uQ3AcF2IfTyPwB+3ATmWNgH64jcexD
mh/7cAbJj32YRuYP2IcvyfwB+7CYzDGwD+l8A/uQ5sc+JPdlGR8qVtw7yb3q
I+PDHv2Nlnlk8GV8mBa3sf/0l4NkfBh/0UWp5DZfxoe3LNvNX03jyvjwveGS
o49F/sE+/NiUUt32AWR82DLe+dMrF76MD58PX5STKHIO9mHOfwYz0l/wZHzY
NaXxaZmSn4wP/3Rs0DsWPEjGh6OnhcuB6P1gH2Zmfv3YqXCQjA9PpZUFiN8D
9iGNYx+OIfmxDzNIfuzDCc7DLMpFvx/70N3gsPNr0fvBPpQz+fJo8B8/GR/K
kzj2YSzJj31I82MfGh+VK3op+vtiH9bM2s0Rnx/sw2cPT9uK7xfYhzSOfUjz
Yx+eIPmxDzeZKiaLzw/2YZNmbWex/7EPndV32YjPCfahC4ljH9L82IePSH7s
w5vk/GMfviXnH/twIqkj7MN8ei9DPqT3O+zDanK/wz6k9yPswzXkfoR9WE7v
WciHbaTusA9p/WIfPiX1i32YWtR6SPx+sA+nvMi/JP77Yh/6XtjBOSx6D9iH
fiSOfZhG8mMf0vzYhwEFX/6Ifz/2ofefbboc0fvBPnyevrFSfE6wD2kc+9Cf
5Mc+9CL5sQ9fz/UJFP99sQ+99+dYi88P9mHZdvlGHdH9AvvwMIljH9L82Ide
JD/24S+VwI2OovODfbjn7r+je0T+xz50al6lJD4n2IfOJI59SPNjH+4l+bEP
C8n5xz6sIucf+5DON7APY8i9DPvwCrnfYR/S+Qb2IZ1vyPiQ3I+wD7+Qexb2
4WFSd9iH+0n9Yh/S+Qb2YSCZP2AfbiPzB+xDOt/APqTzDexDOt/APqTzDexD
On/APqTzB+xDOt/APswncezDUSQ/9mFnkh/7kM43sA/pfAP7kM43sA9pHPsw
nuTHPqT5sQ/PkfkD9iGdP2Af0jkG9iGNYx/S+Qb2Ic2Pfej+Pk/97pdgGR/6
T3545+ahIBkfVhUPTVPUDJPxYZHCl0i3v0EyPjQKd3mm2uwv48P+VxcdFPsH
+9Cit3vXlN6BMj7U3dbukxYTJOPD/fEphWLnYB+eU2o8q9sjSMaHvOMFToPs
Bsv40NFryPTgOaEyPly3r9sw8fvBPqw5U+FTdDZUxoefa6dtEb8H7EMaxz5c
T/JjH9L82IeFMzUWiH8/9mHSyKlZ4veDfegy7oh9W99QGR/SOPbhJpIf+5Dm
xz68uPFUsfjvi3348XDsevH5wT60OmDwaprofoF9SOPYhzQ/9uEHkh/7sC5K
eHGh6PxgH+7y079bKfI/9uHUoPGp4nOCfTiNxLEPaX7sw90kP/YhPf/Yh7bk
/GMfbiF1hH24lN7LkA/p/Q77UJPc77AP6f0I+/AvuR9hH66h9yzkw32k7rAP
af1iH/Yi9Yt9OEe1rF9X0fvBPtxuNlzvlujvi31430h9lvg9YB/SOPbhXJIf
+7CY5Mc+TL19JEz8+7EPh9eoRYvfD/ahgWCocm/ROcE+1Cdx7MPFJD/2Ic2P
fVj6PWqe+O+LfdigoZQgPj/Yh+pqpwU7RPcL7MNuJI59SPPL/P8yyY99eFQ4
fqv4/GAfrtxbe1Dsf+zD8IMKEeJzgn1I49iHND/24SqSH/tQgZx/7EM638A+
pPMN7EM638A+pPMN7EM638A+pPcj7EM638A+pPMN7EM638A+VCX1i31I5xvY
h3S+gX1I5w/Yh3SOgX14msSxD+l8A/uQ5sc+pPMN7EMPMn/APqTzDexDGsc+
pPMN7EM638A+pPMH7EM638A+pHMM7EMaxz7sQ/JjH9L82Id0/oB9SOcP2Id0
joF9SOPYhzQ/9iHNj32oce9n7PUUOaFfwKO60+0Ngmijp7VfR3/l7kgLH3li
5SfB0bkPM597/OUmVt6xyTvwnftxgt7YBXr1gpnc5qXySnJCkyOCVa92feUq
jMhzWdLjK/e+585DQaZ/uD/Nu3UExf/k6sv7PFV828HN9pjdvcuTFwLtqphF
kw/94JJ1gazLrYyqvzsptSeQdblkXYGDu7Zn2mtNIOtyybqgVDO69fXUnkDW
FZB1Berj/JfnpmgCWVdA1uVemt/+/Mp+TZn9tr3jH2uxMQK830k95YZcERgB
3m9ebs2+aI4R4P2u/HC9U7VdH8D7vXXbdPcSuT6A95uWnrjmYj8Lmf2e/rBW
WP+kr8x+rcortLKMLWT2e0i+3/Mx+/rK7HfV2lSd+YK+EN5pfuGsBF3Y4PD7
Z+aqHjC3Ki/gbps2HLzZ/OW1jwGca43OmmqlBz8fDmk7NV8HNgUNPHYkow+c
uvYpOLasE1iMUfMa9l0bghUHrx771RTU7wzJ9W3pDQbVfQpLX+jAuvslJofC
zSHb++vKHSe7w4SiZLfZJ3TA7r3bvz6zzGFL493bj6y04HJ8r5HQ2RTSsjJu
TsgwhTvhbas+aovuaQ1uq0JqTWB18JgZcm3GcLPvg70VD/VgZt6Yx/J/TUD3
Ydjin+P1gZcoN49Togxfn90qu5NhAjn2u4aOLNWFSdPvqWy4ow31sy2bP20x
kdnvsdSyN/PSXwjwfjcPvdjNs7VFgPfrNKo9bN375wK8X5XWw3Wb7z0W4P0G
hZVPW/eoWYD3mx0a0FCV2FlmvxmKdUUvBnWS2a91p1HvagM7y+yXE+w4UG2y
ksx+y9Ozviy6oATdyHlu0J/1Ud/RFPbn/lg3z90MdpHz/C5513H1pRYwte+9
qKnLzNh5nvv2qdqEI4YgP7FStYpvBmrkPOdO3+r1e5wFLO7JcW+pMQNdcp4T
6z9FnBljAsWZL1Uu7hQ9T87z6I/Rj/yXmoHrtgvnQwZb03W56XZjbA/EGcGc
ri++jVS0Zuf5s/Z4/4pGC3hytUuwuq81dCbn2c17sumtA0YQZ5hm0HK1H11X
IHRvnlcywhyg9E7Iv5Z+Mvvt9u/a8Q2eXWX2qxPo/yF2gprMfpP8a7flxHSV
2e9o+daRHF43mf2+ury64Hqbmsx+zfLTfJIv6Mvsd/uMc3tXO+jL7HfWJ5Xw
7xX6MvtdnPe1fdtZPZn9OpcXD7v3UQ9Cjz4YsifWUaigZfpE0O4JtD/PSevw
+G+qg3AtnOS763GA9udfT1+vyt9iL3ReanJAdZAH0P78baJpXD8lO2FzrWtm
mQoHaH+uXHet7v4+W2HYh6frc1d4AuvPKS7tE1fYCn3+bboTsdkLaH8+2/y6
j+kcO+HxWx0zm2Z5AO3PD9VVhWdV7YUa6wtVu/pzWH9+eKp1k+8uB2F8xLIB
8RkeQPtz6r41rW+HOAq/mz4wXdbJG2h/xvul/Rnvl/ZnvF/an/F+aX/G+2X9
Ge2X9me8X9qf8X5pf8b7pf0Z75f2Z0dJ3xBesE60zR8OrD+nS/qGUPWMx+Oh
CTzWn9dI+oaw9uxDs3l/OKw/60j6hnBgx/yOnGge68+rJX1DOFW3LrPDCFh/
Jn1S+Gz7fsvx+4D158OSPink9Kx5E9CPy/pzvqRPCoNf9Tt7MpXH+nOopE8K
3+Z776/34LL+vEHSJ4XcisC674+A9We8X9qf8X5pf8b7pf0Z75f2Z7xf2p/x
fml/xvul/Rnvl/ZnvF/an/F+aX+m53lFcPDka2V81p/nkvN8/Wkv/ZXnfFh/
/kPOcx+Fq3UzH/BYf/5CzvO3PpFe52t8WH+uIOe5v3vpWeeFfNaf6XneK1we
V6Dow/rzGXKex1vXVDR+4LH+3ETOs7qqcsenBz6sPzeR8+z6NmX99h881p/p
eZa/bdHVzt2H9We8X9qf8X5pf8b7pf0Z75f2Z7xf2p/xfml/xvul/Rnvl/Zn
vF/an/F+aX/WlqwL2M/nJesC9jNZF7CfH0nWBexnsi5gP4dI3rOMn0mfBOzn
35L3DNjPPyTvGbCfyXsG7Ge8X9qf8X5pf8b7pf0Z75f2Z7xf2p/xfml/xvul
/Rnvl/ZnvF/an/F+aX/uc8p9vlykC3iX3ItJ7aUD18yybdNVe8Egh7FWeZau
MPKRrcocEwMwiTp0+tkqkafUxlo4ubvBKJte2rEqmrDy4iNvxTGaoLYl+kvC
enc4/e3agK4FBlDfGtvt5F5D0OuxYezoKR7Qsl2rustHbSjr2nGncqYOmB10
np+50wOab395cMW1OxjZG8RPmW0Cf1x7/vfpljuUjwvKfmSmCC/66njMjDcA
3rieV4YI3aChuaZavrQnCB/PetTvqhm41HX/Y5DgCq3Wql5H3BTAqTjmzZZA
A7Aa2bTBZq0LFN5faFO5vDvYesX2uCUwgaW7Ri7a/NsdTN4ktJfe6Q09rX4U
OBxoEsD+U6mz+3jCmdbHvLgKLQh9sqpF/l47d0rVIG5RrGi/dZuf6/fRgu5L
jhpnvfwpmDg5QC02wQP6FxhVeL/vDDrfYgxHBH3mLji8YYnNGjcoyDzkG67b
CV43jE1bpt8qOH1eJ/nNXxfQ5NdXJZ1UhubZY9SizZRAXnhkpmajMyRYfc7u
kOsBTX/GFEevesu9X2F15FW+G9z0dn3hn9cD4uyqXo1N7waNHRZtZutdYIPw
7BdfLz0IvFFmfWznG+6lmoczRk91g6jAlFJPS33Q3TX7xM/hncB93tnCLdcH
wPpi25UlUZYw7PLn9MHXzGBztT7n01YHCFw3oPvglZaQ+lwpZImaJYhIZx2n
aA9/r/18+UpH1H/1tnZdk2wCCl0bexV8dwTHYSlvpq4wgxH7oz+/0rOEqFNr
P1v+cQDjSaEFgtHGMOjUoXvPl5iB57GeqdkCe3C9F7Qyfb8BrJl0pX5uTT9Y
OKOi900NO7jy3Xdx/+EGEBt0oovfQgs4bXTM+GuJPThw77ctKDKF/jomQS6a
trD/qnN8xjgb+Fcd2fLdxhRWroiKbZxqAR/jrxyOHd4fuu1e5rJrZF8onK2R
+qizNRgbHp28fZMtKF9e3N29U184dv/EkjfLu4HOAYHx2K12sMH23fzD1yzh
iEXHkAc+2sBxmCY/qos9eCf12Ve8zBScjaJL3lkqQZDOx1eqxx1ge47ROueJ
lhB7sLL4cIw2WN9O94+NdISoMzMUvJrNIG3fjvrwCDUIiNXP7zLaESx8hp+2
PmwMN6xWRf+3XQ+u6W/0KB3hAC6Cy/unXNeHBe8nXY8TnaNCQVag3FZ7+FRU
0ffcADNQX+4a6h/WB/SOdTlb9Lg/GP6NTxlbZAD/JVSkrlXQgtGebZ3fb7eF
m0Hjr1reNoHXoFO10U0fVMh9Afu5mNwXsJ+F5L6A/WxM7gvYz/S+IONncl/A
ft5E7gvYz2lxkvsC9vOPSMl9AfvZitwXsJ/xfml/xvul/Rnvl/ZnvF/an/F+
8XwD+xnvl/ZnvF/Wn9F+aX/G+6X9eca1LldUC3rBRVX5gm4hAHWkP6v8GPEo
dWQvMFQr+XfKUuRh0p9zU52823oaw5my7zpXI4H155e53jcUEvvAnmnfL7vf
4sF10p8T3kY36jwyBZt11+e0hPOgnPTnzaofn91uNIc2gc6pV+UAhqQ/3/wS
0NT7lzn0XvzmwKwDXGgj/Zk/S9htTq4xvNAz9rbdA1BL+nOsZWTriA/GoFwL
WikjOKw/31exfpqRqw9/kvNq+43ksv5cKQiuUD9qADt0Zje6ZPHgpaWkPztd
rGsu3m4CLvbZZSeu8IBL+vMf73jb9KF9ICbN0L/HMgA10p/j3l3es4DfF7KM
mitUOgAUSH821rx4cJytOczRiClO1gNoIf35l8aNT7dCTKFHQuDntFccaCT9
2S0ipGFGNyN46dQ7MCWOA/+R/txw64yT7l9jCAr6pfZ8AcBI0p+bOkcGCC7p
iAJJ/Ee/ucAj/Tnu1Div7591wbnm+NH0FgAd0p+Fh/ZavUn/y61p6Pd35Eof
iCD9GVRbG3/EdAJlzyHhgv/4sIT0Z7mmvIHPtbYJVozTXMJT8mH9uTlLuX9J
0nfu4XcOOU9reTCS9Gdhn21xQ/s8ELzP/nZjTwOP9WeyriDZdd9NVWs+rCL9
mawrtLyVtnjXaz6MJ/2ZrMvde1gQaipyL+3PZF1BmlExpH/zYf2ZrMvlpj38
W/vYh/VnuaWW+S/HKQgjw5U7fr/kwynSn9Pu7h13Mq9DcKr+ieCV0AcqSX9O
M/xpfZb7nyAtNVM/o4rP+jMsX+B4Y3s9194itnqnrS/Ekf4M0wc1Gu75yT1u
fvNkZboPLCP9mawL909eqZt0hQ9XSH8m63Jnurd3W9jOg7mkP5N1uYdzQiqe
/OGz/kzWFfx7lqQtXM6Di6Q/k3UF817Ia5bZ8+El6c9G75S/fj0KkLi4886w
KHlh5e2akN2ffnJdFK+2PqvmQpFBUlhrTyVhxuMdVwp/doF/H202v1gEMKOs
oKhhZIWgfKF2wJ66Jm7fJ++7p+lwoPh68Y5uUS8EL1+pJfgOVIX2bWYtCfUc
eG9r13B59Qeu3+xV7UlrvnNnKTeWXmzjwmzJuhD96WH7yZGaou9c91HPLwNs
lawLWomzz5SXK8ODjv/KZ4r+/PMl63J3hK586qHSC/yW/uX33sKDVZJ1uUdi
Vcw7z1OGGJPWB+beor7T///XFaR0SQhc+UkTdH5NOHJKVP/24wcaTS+RB/cx
7oVrhvSB4On++9WSeKBlZ3zxW/t37qUrh7R/vjQFjTXF+3a6ADwyaptteP0G
99vf7APdS/QguHDiZaU8HjS7JL8yePRWsD1H5dSE76bg9LdscNYlgMpFcv5Z
zX8FBj6H+GeqjSDjnclA1w4uuEnWFd4Jnl30Mb8v6CuP8SlM5EBPybqCUrvY
26cjTeFS7PCSY0lsXcHcX5d7lr+3BN0yI8X95hyQd/3/dbn1U5VthweYgv+L
lb92nOJCg2RdbtuIE/4jWvsCVzEj3DrDD56NexrB99Jmfj5lV/7yxHY/GHcu
eGine2rMz9dOer2ySPaFX13zv4WbaLH+vDknvmDEIV/gf7bpXXtHjvn53M/8
cB3R/e3IV0WzEtHfifr5Rj+7wReCfSDs8Md5JvM0mJ+H/JM/5mzvA6nWB82f
+vdifubPnFP53xhfcJfzuqeZ24P5OXl7cOdNpr6wXtPrTGaAIevPIQP1Bz/4
5guje4TXaj7szfrza5XAlARRn9q/9dG/C490mZ/Xr/kwdIWdL0xsvbK+Jt6Q
+dnu7ddID64vhJhdVjs8S5P5+f6m90cWRfiBfEt0wLtUPebnb/Jtukdn+oGw
4OrAz1o9mZ9NzSebrhjkB2qPXm71LO3C/Lxo29mghB2+kDtEff7QQjnm5ydQ
O+jYOl9oe6ly5hj0ZH52zjv3ZtZCH4ga3qb6LqEz87OOTV2GV5QPzEjuvHnG
Nk3m500+NpNalnPh6+W3u681WTA/qx1TcdFbB/D3TNO8c4ZWzM8jage8TLES
nasGDzjVbMr686J8kx9XMnlQ/WtfY6JdX+Znn6udItaE8cDqcOHEY9kmrD+r
hUX3ein6TiRlXAmzO2TI/HzN860WV/R5icl7XQo2+szP6U4XYh8tBgh1LcjZ
Uy/18/HKPbsNeByY3aPf5y8Zxqw/9wt+/GbjIQ4oRrklHLY0Z/25zXRg9f6D
HEh/7pn7eKDUzwm9NDZ8Ps2F+jKl/T1bpX5e6ev+dUh/ANfLOquTVkn9HJK/
3ayfJg9U/pac3uoj9fPWjhThkhE8SN2z9JDmEamf46MfJiqJ/HGwb75n5hKp
n82fTVv65CLAserNgcXFUj+HHTwZoSz67n7nn+R9sZL6ufexA6ExVlwIMooy
Wv1E6ucFLZ+0jm7lQPnEcOMhCqbMz/Wv7c0+ezmA3MGJHonWHnCM9Ocd85Ov
PbEeAOvUjxfFVrpDFunPyw7l+J7Zaw9+Hd5mYz28oJr0Z739GyNzd9tAFxd3
i25jPaGV9GcP+4gbHQ9t4frDdK9ffbwhkPRnFbWssGv1djAoPmLh3lgOjCX9
eUVlTdwrDQc4rqike/Q+BzRIfz64vE7N/u8AUOi5eP2JoV6wjfTnAIMDfdbd
dgRO09I1Kg7eUEn6c+3IoAmj3BxhrovbfP3pnrCQ9Of8oXOj93FsYaFN21aX
D17gQfozBATu7lnaH1ZteXM+YonIOaQ/qyyr2D2lpz3ImcgN3d3NC2h//jCg
2fqOpwN0brgYVXiJA9tIfx7ZL6rPPQdH+HBRftiX/t5gRPrz6kvu+p1WOMLV
53d1nmz1hAbSn6tCwuffuOkAtXNvfBB084ADpD/fmM7f/T7XHnw+1cTOWOIF
c0h/rl/aD1Tu2AFwvkQsuuAOt0l//r2m/wilV7YQGXxivEm06P2T/mzb+OK7
1zIP2GHM80p5zmV+VnLyN45Jc4cJQ+pWGCzjMD8/Wn30+e6LbqAh2H+3fYPU
z1N2jb6jresKoouud+VxDvOzXtnvc1ELXMC2aNlVJ29gftZeu+JHwFwXGO3x
/diJLjzmZ29nq5t9F7jCzx32GpNP8pifJzad7NLs6AZbuiYuVpos9fO981r6
M566wyqPOGfDHTzWny1rZttapnlAql1e1lkBsP6cM2fyhsqXbrCx9YrK2e1S
Py++cHdP60rRfYwTMjRmtNTPs13cTaZ7u8G5BJON1lukfh7r1/zvsaYn+Aer
xl+xlfo50pizdetGdzAfvff7Cncu83PF507jbmm4gVVdYf6UGqmfz+/cFFiS
5ALtugWKdn5c5udrji43dGvd4Pn4b6evjZf6+bnZ2k97njvDhCXd3tveBObn
twEOw15OcIUCQ9+RA2N4zM/bkiubcjId4Me99KWfGqR+7lX1YDS/0RHu/3I8
Jxfkw/ysOi4pfYStPdz7KR9+poPP+vPgLSt+9MpwhOsW3VqEvfjMzw+z+9rE
nbAHVcuFwlv/4+fkH2lN+Tw7cHEKC5n1mMf8nDHHpbn/JhuI7LFddcJkqZ+v
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
oc370u3t1VI/K5S7t1if8oFtN7pq+5ZK58+mIaHcDWt9Qc215UNyotTPzUND
lJW1fSDUT7vQcZTUzz8mzY2bnO8DW/SOvVEzlfp52ti2EJf/AIL0f7pXXuUx
P++ZusHm10su/G1sC1m3jsf8bLAurn6eqI6aeWPWFt+W+vnago8OvSw4cHf5
2nS/OKmfna8k7up2hgOKz6O1/Qf5sP58x8rkj18tF9o+3t9Q9sKH+VnJ08a5
6QiAg8O7tNumvszPtTHr5j8V9Y3QK3M5555I/dx+9M+RwRt4MCqTH2wUJvVz
bfap+fV+PLCxmFVtMJ3P+vPehMm7YwHgRP3QBWM7pH52SDxyboc+D1wONmSP
/yD185WxC1ZM7w9wbsDMW1XvpH5ecVVP3XIfD4LMuQNbHkr9bJpWlX5RkwdR
u9+unWoi9bNDVvbubxMBZrsvGa78P34O7bRCPUmbC9+j//IUzkv9rJaXcu7N
fICpTTF/Dl6Q+rkkqHJB3B9Rf3yRu3npPT7z87Sni9b1teTCjfhn3j/WS/38
8pjdodYB4VBQ8HXwk0bp/HmgbXnCyg1hYLa9+Ijl6p8C6udxR11yLGPDYfkF
f3703Do2f/YOnfVsTUwYjDpe+v55v1fMzzUOH0rze4bDMJ3sRmu7v2z+/NHj
4tY5c8Nhj2RdNn8WNBbl5zWF03W51M8p3qdPOfiyddn8+cRlz/s9voXDo6r/
X5f52VDQafvZXLYumz/HF/svqCgJh+tOv4r2t/8TUD9nLMyM+MsJh8hRdi0p
vE5C6uei9qjirIRwkFvp5LO6eCGbP//KUFw1cnEYeHX6Oij64xc2f+6jO+zO
uN1hcLD2mKW8wlPm5xnhh27tURT9Tsm6XOrniLlJX8dMCofhknWB+tnz38YD
N73Zumz+PMruc6dDL8JhtGRdNn++FBccc+C26H1K1mV+fvzmd6nCN3+Y1MTp
P8JTOr9yfs8pN+L7w9lXKsO7uHmy7+/mFYZTm3ID4Mn31fyEv57s+9t04tmA
3iP8wX3wwUjzHdLvb6LRzHY11wBwKZyms8Wfw76/ExfP9l2mGAgtzotWnB4i
nV9ppNjDpOOBkGFVEaMW4c2+v/ueDsncHx8AE/XsZh1aK/3+JpStFE4rCQSN
C+pRn95Iv793g/79nX82ADQWhG5b6OfBvr9aL+prK9sDwHFpX9Xa8Rz2/dXf
f3Go++FAOH9L+VDgIm/2/XXxz1OfGBcAR+XPVNeuln5/n3h8e3flYCAsihmy
61wPT/b9vdRdcHW1yJn6jpuKhoR5sO+vY3rRwFudA0B9/cYDo0TfWfr9tRTu
2xoS7A/pcFT5moYn+/6qmT58arwxAHI1fv0eKSf9/sbZLVA4GeIPF45M1hia
4s2+vymjys1/ipxp02yqe96bw76//wdrh1fq
     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1: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
eXqIIeFnQ+3f/wcGqFze
     "], 0.67]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAwAWJmBkzgs4zLTfUqhwO6+M4/7V9uz1dyyKmoWqoTrOAg
zvby2cabQg4shxJrVv+QwRC/mxdzU6Lvgz1MP0RcyaFA4r5W0mE1B3TxqV2b
+edvFIGaY3BAuTP2VpebjQPMPejiMPfkQuw9EPqUe1V1nQPcPejiMPfAzIHY
6wR3D7o4mnvg7kVzjwN6+CzcYv7jUI0FRvigi6O5xwE9fNDFYe6B2YcePuji
MPdkQeMFPXzQxbHHlxOO+EIPHwcc4YMQh7mnXezmue/pLhjhgy6OGj4OOMLH
ASN8YOGGI/04oIcPLF7QwwddHOaeXJR4QYQPujjMPYvA5nhghA+6OMw9e4Om
KfZN9MEIH3RxmHtg5qCHD7o4enxhDx8HjPBpg8YLevigi2OPL/T85YARPhDx
ABzpJwAjfGD+Qnc/ujhMPQDD6/Ii
     "], 1.56]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.7806796523301163`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"654e2411-63f9-41e7-b66d-4406484e907e"]
}, Open  ]],

Cell[TextData[{
 "Explanation: The entity ",
 StyleBox["FerroceneMolecule",
  FontSlant->"Italic"],
 " is inserted wherever the ",
 StyleBox["y",
  FontSlant->"Italic"],
 "-coordinate is rounded down to an even integer; that\[CloseCurlyQuote]s why \
we see an \[OpenCurlyDoubleQuote]empty band\[CloseCurlyDoubleQuote] where ",
 StyleBox["y",
  FontSlant->"Italic"],
 " is between 1 and 2 In the ",
 StyleBox["\[OpenCurlyDoubleQuote]Rotations\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " option we specify that those embeddings that have an ",
 StyleBox["x",
  FontSlant->"Italic"],
 " coordinate larger than one should be rotated first by 45\[Degree] about \
the ",
 StyleBox["x",
  FontSlant->"Italic"],
 "-axis, then by a random amount (between 0\[Degree] and 360\[Degree]) about \
the ",
 StyleBox["z",
  FontSlant->"Italic"],
 "-axis."
}], "Text",
 CellChangeTimes->{{3.780654852048583*^9, 3.7806551131398163`*^9}, {
  3.780679677025622*^9, 
  3.780679701088972*^9}},ExpressionUUID->"4552ca0a-76f8-4add-8029-\
6e45a8789107"],

Cell[TextData[{
 "Learn more on the documentation page of ",
 ButtonBox["EmbedStructure",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/EmbedStructure"],
 "."
}], "Text",
 CellChangeTimes->{{3.780655195529965*^9, 
  3.78065522095105*^9}},ExpressionUUID->"a52cf3ea-ad47-493c-8d1e-\
606a20f9c417"]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 3: Perform any global distortions", "Subsection",
 CellChangeTimes->{{3.780655134699115*^9, 
  3.780655157050364*^9}},ExpressionUUID->"df100a3d-0df9-4f65-8770-\
8585821b2a60"],

Cell["\<\
With this function, the user specifies a displacement field that shifts every \
atom relative to their present location. It is not necessarily something you\
\[CloseCurlyQuote]d want to do to your structure, but in this example, we\
\[CloseCurlyQuote]ll use it to model a substitutional or interstitial point \
defect.\
\>", "Text",
 CellChangeTimes->{{3.78065523198347*^9, 3.7806552375510187`*^9}, {
  3.780655278414792*^9, 3.780655288173682*^9}, {3.780655619767084*^9, 
  3.7806557743875303`*^9}, {3.780660791869439*^9, 3.780660815340007*^9}, {
  3.780660848276381*^9, 3.7806608576109333`*^9}, {3.780661357385428*^9, 
  3.780661407512087*^9}, {3.780661592172834*^9, 3.780661625092278*^9}, {
  3.7806617112027903`*^9, 
  3.780661715233491*^9}},ExpressionUUID->"aa1590f3-4eae-4fc6-8293-\
64ebe64780e5"],

Cell["Consider a small slab of iron atoms:", "Text",
 CellChangeTimes->{{3.780661865870487*^9, 
  3.7806618835177298`*^9}},ExpressionUUID->"f7c06836-1112-497c-80d6-\
efe8060c6f2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CrystalPlot", "[", 
  RowBox[{"ExpandCrystal", "[", 
   RowBox[{"\"\<Austenite\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "5", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7806618859266*^9, 3.780661892477751*^9}, {
  3.7806623987905703`*^9, 3.780662399452087*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"2dbe24f5-70ac-40a6-9b5f-147ff05423a3"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {3.581, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 3.581, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 3.581}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.581, 0.}, {3.581, 3.581, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.581, 0., 0.}, {3.581, 3.581, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.581, 0., 0.}, {3.581, 0., 3.581}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.581, 0.}, {0., 3.581, 3.581}}]}, 
   {GrayLevel[0], Line3DBox[{{3.581, 3.581, 0.}, {3.581, 3.581, 3.581}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.581}, {3.581, 0., 3.581}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.581}, {0., 3.581, 3.581}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.581, 3.581}, {3.581, 3.581, 3.581}}]}, 
   {GrayLevel[0], Line3DBox[{{3.581, 0., 3.581}, {3.581, 3.581, 3.581}}]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[CompressedData["
1:eJyFl7FqVFEQhpfYbhPIdmOxyA0IU3jqFG5pJ2hnKUljYysivo2tZR4jVZqQ
QsRC8gRBEFEIw2G+f8Z7YVn23Llzv/Of+c+c3b99/+riaLPZXP77PNr0183V
/esfX34/j++1+4z7/3PbQ/389sA45nty++vzu0+7A/PGeJe35ovxeT/n4ftN
eF58/3jy9edeeGK85rGGx4Qn55k8D5yL8Py5/nB3evxUeGKcPJGHPHl88uQ8
1MeF58352beXj58JT4zX+nijjwtPzjN5HnQbzXoNyZ/Ht5Iv67JbqSfqO+t1
rd7rOmadsg52h/o9mo/1vfYe5q/jTHjoi4inL3Jea3hMeOiLfH8RHvoi4umL
PN9FeOgL5q/1ceGhLyKevsj6eKOPCw99kfUfwkNfML5b7+yfua55XlxX3Te5
P67VTVcf5Kl9YeKLup64X1PHfeMLE50ivp63yfzyb+pnMm/mJw99EXG1L0x8
kedLX5j4gvlrfVx4al+Y+CLPk74wjE+e2hcmvsh60hcmvqC+cVHH7DvqqP2b
fZq+qPu67lPkoS8inr6o14/nhukL5q95THjoi4inLzKPNTwmPPRFnu8iPFyH
iKPeeb6L8FAn5q/1ceGhLyKevsh5vdHHhYe+yPoP4aEvGN/1v7jIneuaftZz
ZL7Pc6f20a5fkqfuFy6+qPcRnl+nL5i/5jHhqfuFiy8yD/uFY3zy1P3CxRcR
X+9PLr7I8+U+5+IL5q/1ceGp68Jl/fNv1pdLXTA/eeiLrCf7hYsv+Hxc9fPz
fwvrnHmZpz7n6P+cPM5zy2jOJ0PqKr+X543RnCtGc34Ysu4xXp8Hhqxj5md/
H6LfX6gI2mc=
     "], 1.56]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679746102623*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"013d2fe7-7520-423f-b8fb-4a50f4daa543"]
}, Open  ]],

Cell["\<\
Now imagine the introduction of an impurity somewhere in the slab, and the \
strain it will cause on its neighbours. Below we define some auxiliary \
functions to model the displacement field, and visualise it in a vector plot.\
\
\>", "Text",
 CellChangeTimes->{{3.7806619650922737`*^9, 3.780662000419333*^9}, {
  3.780662096810176*^9, 
  3.780662180375966*^9}},ExpressionUUID->"1bea8b21-1b27-4d1a-a374-\
c441d2209ad8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x0", ",", "y0"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "x0"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "y0"}], ")"}], "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"r", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "]"}], 
    RowBox[{"1", "+", 
     RowBox[{"r", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"VectorPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "x0"}], ")"}], "*", 
      RowBox[{"d", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", "y0"}], ")"}], "*", 
      RowBox[{"d", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780140980934146*^9, 3.780141047075219*^9}, {
  3.7801546545481167`*^9, 3.7801548105652246`*^9}, {3.7801548741888323`*^9, 
  3.780154959639956*^9}, {3.780154994857585*^9, 3.780155040406662*^9}, {
  3.780155261956183*^9, 3.780155502094448*^9}, {3.780155653276413*^9, 
  3.780155702417573*^9}, {3.780155732515864*^9, 3.780156422267949*^9}, {
  3.780156465397053*^9, 3.7801564711793118`*^9}, {3.780163554653915*^9, 
  3.780163560128552*^9}, {3.7803775443299417`*^9, 3.7803775845370293`*^9}, {
  3.7803779444359903`*^9, 3.780377960475931*^9}, {3.7803796324012613`*^9, 
  3.78037967724746*^9}, {3.7803797201420193`*^9, 3.780379721795642*^9}, {
  3.7803797642648582`*^9, 3.780379775034525*^9}, {3.7803798213773317`*^9, 
  3.780379823331521*^9}, {3.780655448573277*^9, 3.780655449467038*^9}, {
  3.780661919007218*^9, 3.780661922719389*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"51a79649-c0ad-4890-a4fd-d4511431ab7c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
    {Arrowheads[{{0.00032178608230350175`, 1.}}], 
     ArrowBox[{{-1.9980634143544223`, -1.9984507314835378`}, \
{-2.001936585645578, -2.001549268516462}}]}, 
    {Arrowheads[{{0.0004314359731575902, 1.}}], 
     ArrowBox[{{-1.997275953005052, -1.4980931671035362`}, \
{-2.002724046994948, -1.5019068328964638`}}]}, 
    {Arrowheads[{{0.0005627815979905918, 1.}}], 
     ArrowBox[{{-1.9962806948604441`, -0.9977684169162665}, \
{-2.003719305139556, -1.0022315830837334`}}]}, 
    {Arrowheads[{{0.000711508882452465, 1.}}], 
     ArrowBox[{{-1.9950952520334777`, -0.49754762601673885`}, \
{-2.0049047479665223`, -0.5024523739832611}}]}, 
    {Arrowheads[{{0.0008683832075919985, 1.}}], 
     ArrowBox[{{-1.9937859635242416`, 
      0.00248561459030338}, {-2.0062140364757584`, -0.00248561459030338}}]}, 
    {Arrowheads[{{0.0010191316846954838`, 1.}}], 
     ArrowBox[{{-1.9924766991167022`, 
      0.5022569902649894}, {-2.007523300883298, 0.4977430097350107}}]}, 
    {Arrowheads[{{0.0011459944177323958`, 1.}}], 
     ArrowBox[{{-1.9913392159761671`, 
      1.0017321568047666`}, {-2.008660784023833, 0.9982678431952334}}]}, 
    {Arrowheads[{{0.0012311394521690674`, 1.}}], 
     ArrowBox[{{-1.9905585665155325`, 
      1.5009441433484467`}, {-2.0094414334844677`, 1.4990558566515533`}}]}, 
    {Arrowheads[{{0.0012611833637147392`, 1.}}], 
     ArrowBox[{{-1.9902799251451946`, 2.}, {-2.0097200748548056`, 2.}}]}, 
    {Arrowheads[{{0.0012311394521690674`, 1.}}], 
     ArrowBox[{{-1.9905585665155325`, 
      2.499055856651553}, {-2.0094414334844677`, 2.5009441433484465`}}]}, 
    {Arrowheads[{{0.0011459944177323958`, 1.}}], 
     ArrowBox[{{-1.9913392159761671`, 
      2.9982678431952334`}, {-2.008660784023833, 3.0017321568047666`}}]}, 
    {Arrowheads[{{0.0010191316846954847`, 1.}}], 
     ArrowBox[{{-1.9924766991167022`, 3.497743009735011}, {-2.007523300883298,
       3.5022569902649896`}}]}, 
    {Arrowheads[{{0.0008683832075919881, 1.}}], 
     ArrowBox[{{-1.9937859635242416`, 
      3.997514385409697}, {-2.0062140364757584`, 4.002485614590303}}]}, 
    {Arrowheads[{{0.000711508882452465, 1.}}], 
     ArrowBox[{{-1.9950952520334777`, 
      4.497547626016739}, {-2.0049047479665223`, 4.502452373983261}}]}, 
    {Arrowheads[{{0.0005627815979905881, 1.}}], 
     ArrowBox[{{-1.9962806948604441`, 4.997768416916267}, {-2.003719305139556,
       5.002231583083733}}]}, 
    {Arrowheads[{{0.00046762790702260576`, 1.}}], 
     ArrowBox[{{-1.4973062933063117`, -1.9976055940500548`}, \
{-1.5026937066936885`, -2.002394405949945}}]}, 
    {Arrowheads[{{0.0006388257852284401, 1.}}], 
     ArrowBox[{{-1.4961136255091514`, -1.4969772642848955`}, \
{-1.5038863744908488`, -1.5030227357151045`}}]}, 
    {Arrowheads[{{0.0008490702627428244, 1.}}], 
     ArrowBox[{{-1.4945551667306296`, -0.9963701111537531}, \
{-1.5054448332693704`, -1.003629888846247}}]}, 
    {Arrowheads[{{0.0010931162530299495`, 1.}}], 
     ArrowBox[{{-1.4926354315239707`, -0.49590857306887254`}, \
{-1.5073645684760295`, -0.5040914269311275}}]}, 
    {Arrowheads[{{0.0013567160735991352`, 1.}}], 
     ArrowBox[{{-1.4904448614496533`, 
      0.004246728244598577}, {-1.509555138550347, -0.004246728244598577}}]}, 
    {Arrowheads[{{0.0016155233150653718`, 1.}}], 
     ArrowBox[{{-1.4881879341081874`, 
      0.5039373552972709}, {-1.5118120658918126`, 0.49606264470272915`}}]}, 
    {Arrowheads[{{0.0018372467433178951`, 1.}}], 
     ArrowBox[{{-1.486177330984457, 
      1.0030717042256763`}, {-1.5138226690155432`, 0.9969282957743238}}]}, 
    {Arrowheads[{{0.001987984709988505, 1.}}], 
     ArrowBox[{{-1.4847721005954264`, 
      1.5016919888227305`}, {-1.5152278994045738`, 1.4983080111772697`}}]}, 
    {Arrowheads[{{0.0020415336591366796`, 1.}}], 
     ArrowBox[{{-1.484265682091647, 2.}, {-1.515734317908353, 2.}}]}, 
    {Arrowheads[{{0.0019879847099885067`, 1.}}], 
     ArrowBox[{{-1.4847721005954264`, 
      2.4983080111772695`}, {-1.5152278994045738`, 2.5016919888227305`}}]}, 
    {Arrowheads[{{0.0018372467433178967`, 1.}}], 
     ArrowBox[{{-1.486177330984457, 
      2.9969282957743237`}, {-1.5138226690155432`, 3.0030717042256763`}}]}, 
    {Arrowheads[{{0.0016155233150653685`, 1.}}], 
     ArrowBox[{{-1.4881879341081874`, 
      3.496062644702729}, {-1.5118120658918126`, 3.503937355297271}}]}, 
    {Arrowheads[{{0.0013567160735991478`, 1.}}], 
     ArrowBox[{{-1.4904448614496533`, 
      3.9957532717554014`}, {-1.509555138550347, 4.004246728244599}}]}, 
    {Arrowheads[{{0.001093116253029958, 1.}}], 
     ArrowBox[{{-1.4926354315239707`, 
      4.495908573068872}, {-1.5073645684760295`, 4.504091426931128}}]}, 
    {Arrowheads[{{0.0008490702627428244, 1.}}], 
     ArrowBox[{{-1.4945551667306296`, 
      4.996370111153753}, {-1.5054448332693704`, 5.0036298888462465`}}]}, 
    {Arrowheads[{{0.0006668025381886486, 1.}}], 
     ArrowBox[{{-0.9963660945556465, -1.9963660945556465`}, \
{-1.0036339054443535`, -2.0036339054443535`}}]}, 
    {Arrowheads[{{0.0009295139501520798, 1.}}], 
     ArrowBox[{{-0.994608643460117, -1.4952825630276023`}, \
{-1.0053913565398829`, -1.5047174369723977`}}]}, 
    {Arrowheads[{{0.0012611833637147076`, 1.}}], 
     ArrowBox[{{-0.9922239401161558, -0.9941679550871168}, \
{-1.007776059883844, -1.0058320449128832`}}]}, 
    {Arrowheads[{{0.0016571676509346274`, 1.}}], 
     ArrowBox[{{-0.9891693927632039, -0.4932308704770024}, \
{-1.010830607236796, -0.5067691295229976}}]}, 
    {Arrowheads[{{0.0020968436091101665`, 1.}}], 
     ArrowBox[{{-0.9855455220847711, 
      0.0072272389576144395`}, {-1.014454477915229, \
-0.0072272389576144395`}}]}, 
    {Arrowheads[{{0.0025396912778868877`, 1.}}], 
     ArrowBox[{{-0.9816725999160293, 
      0.506872775031489}, {-1.0183274000839708`, 0.493127224968511}}]}, 
    {Arrowheads[{{0.0029273929193100305`, 1.}}], 
     ArrowBox[{{-0.9781119070251983, 
      1.0054720232437004`}, {-1.0218880929748018`, 0.9945279767562997}}]}, 
    {Arrowheads[{{0.003195185698076855, 1.}}], 
     ArrowBox[{{-0.9755645248469061, 
      1.5030544343941368`}, {-1.0244354751530937`, 1.4969455656058632`}}]}, 
    {Arrowheads[{{0.0032911217471429323`, 1.}}], 
     ArrowBox[{{-0.9746349732648841, 2.}, {-1.0253650267351158`, 2.}}]}, 
    {Arrowheads[{{0.003195185698076855, 1.}}], 
     ArrowBox[{{-0.9755645248469061, 
      2.4969455656058632`}, {-1.0244354751530937`, 2.5030544343941368`}}]}, 
    {Arrowheads[{{0.0029273929193100326`, 1.}}], 
     ArrowBox[{{-0.9781119070251983, 
      2.9945279767562996`}, {-1.0218880929748018`, 3.0054720232437004`}}]}, 
    {Arrowheads[{{0.0025396912778868877`, 1.}}], 
     ArrowBox[{{-0.9816725999160293, 
      3.493127224968511}, {-1.0183274000839708`, 3.5068727750314888`}}]}, 
    {Arrowheads[{{0.0020968436091101804`, 1.}}], 
     ArrowBox[{{-0.9855455220847711, 
      3.9927727610423855`}, {-1.014454477915229, 4.007227238957615}}]}, 
    {Arrowheads[{{0.00165716765093462, 1.}}], 
     ArrowBox[{{-0.9891693927632039, 4.493230870477002}, {-1.010830607236796, 
      4.506769129522997}}]}, 
    {Arrowheads[{{0.0012611833637146902`, 1.}}], 
     ArrowBox[{{-0.9922239401161558, 4.994167955087117}, {-1.007776059883844, 
      5.005832044912883}}]}, 
    {Arrowheads[{{0.0009295139501520999, 1.}}], 
     ArrowBox[{{-0.4952825630276024, -1.994608643460117}, \
{-0.5047174369723976, -2.0053913565398833`}}]}, 
    {Arrowheads[{{0.0013239402507598224`, 1.}}], 
     ArrowBox[{{-0.49278485997023347`, -1.4927848599702336`}, \
{-0.5072151400297665, -1.5072151400297666`}}]}, 
    {Arrowheads[{{0.0018372467433178856`, 1.}}], 
     ArrowBox[{{-0.4892490352101332, -0.9907848873229713}, \
{-0.5107509647898668, -1.0092151126770286`}}]}, 
    {Arrowheads[{{0.002469877577784973, 1.}}], 
     ArrowBox[{{-0.48451008681226726`, -0.4889357762944766}, \
{-0.5154899131877327, -0.5110642237055234}}]}, 
    {Arrowheads[{{0.0031951856980768608`, 1.}}], 
     ArrowBox[{{-0.47861895924104286`, 
      0.012217737576546947`}, {-0.5213810407589571, \
-0.012217737576546947`}}]}, 
    {Arrowheads[{{0.003948367430977649, 1.}}], 
     ArrowBox[{{-0.4720299669052228, 
      0.5119871570406188}, {-0.5279700330947772, 0.4880128429593812}}]}, 
    {Arrowheads[{{0.004625523891780697, 1.}}], 
     ArrowBox[{{-0.46572224188021893`, 
      1.0097936451770804`}, {-0.5342777581197811, 0.9902063548229196}}]}, 
    {Arrowheads[{{0.005102648017278653, 1.}}], 
     ArrowBox[{{-0.46106859964065183`, 
      1.505561628622764}, {-0.5389314003593482, 1.494438371377236}}]}, 
    {Arrowheads[{{0.005275416250395602, 1.}}], 
     ArrowBox[{{-0.4593418036429943, 2.}, {-0.5406581963570056, 2.}}]}, 
    {Arrowheads[{{0.005102648017278653, 1.}}], 
     ArrowBox[{{-0.46106859964065183`, 
      2.494438371377236}, {-0.5389314003593482, 2.5055616286227638`}}]}, 
    {Arrowheads[{{0.004625523891780697, 1.}}], 
     ArrowBox[{{-0.46572224188021893`, 
      2.9902063548229196`}, {-0.5342777581197811, 3.0097936451770804`}}]}, 
    {Arrowheads[{{0.003948367430977644, 1.}}], 
     ArrowBox[{{-0.4720299669052228, 
      3.4880128429593813`}, {-0.5279700330947772, 3.5119871570406187`}}]}, 
    {Arrowheads[{{0.0031951856980768707`, 1.}}], 
     ArrowBox[{{-0.47861895924104286`, 
      3.987782262423453}, {-0.5213810407589571, 4.012217737576547}}]}, 
    {Arrowheads[{{0.0024698775777849567`, 1.}}], 
     ArrowBox[{{-0.48451008681226726`, 
      4.488935776294476}, {-0.5154899131877327, 4.511064223705523}}]}, 
    {Arrowheads[{{0.0018372467433178995`, 1.}}], 
     ArrowBox[{{-0.4892490352101332, 4.990784887322971}, {-0.5107509647898668,
       5.009215112677029}}]}, 
    {Arrowheads[{{0.0012611833637147212`, 1.}}], 
     ArrowBox[{{
      0.005832044912883205, -1.9922239401161557`}, {-0.005832044912883205, \
-2.0077760598838443`}}]}, 
    {Arrowheads[{{0.001837246743317892, 1.}}], 
     ArrowBox[{{
      0.009215112677028701, -1.489249035210133}, {-0.009215112677028701, \
-1.5107509647898667`}}]}, 
    {Arrowheads[{{0.002611936465582669, 1.}}], 
     ArrowBox[{{
      0.014234394140684833`, -0.9857656058593152}, {-0.014234394140684833`, \
-1.0142343941406848`}}]}, 
    {Arrowheads[{{0.0036011613270015112`, 1.}}], 
     ArrowBox[{{
      0.021321624302817074`, -0.4822319797476524}, {-0.021321624302817074`, \
-0.5177680202523476}}]}, 
    {Arrowheads[{{0.00477805252966004, 1.}}], 
     ArrowBox[{{0.030640219682469657`, 
      0.02042681312164644}, {-0.030640219682469657`, -0.02042681312164644}}]}, 
    {Arrowheads[{{0.00604563020623849, 1.}}], 
     ArrowBox[{{0.041675224570896355`, 
      0.5208376122854482}, {-0.041675224570896355`, 
      0.47916238771455183`}}]}, 
    {Arrowheads[{{0.0072233906514368625`, 1.}}], 
     ArrowBox[{{0.052814568221581405`, 
      1.0176048560738604`}, {-0.052814568221581405`, 0.9823951439261395}}]}, 
    {Arrowheads[{{0.008074540749115573, 1.}}], 
     ArrowBox[{{0.061384623304791136`, 
      1.5102307705507985`}, {-0.061384623304791136`, 
      1.4897692294492013`}}]}, 
    {Arrowheads[{{0.00838705916297348, 1.}}], 
     ArrowBox[{{0.06463996054916568, 2.}, {-0.06463996054916568, 2.}}]}, 
    {Arrowheads[{{0.00807454074911557, 1.}}], 
     ArrowBox[{{0.061384623304791136`, 
      2.4897692294492013`}, {-0.061384623304791136`, 
      2.5102307705507982`}}]}, 
    {Arrowheads[{{0.007223390651436861, 1.}}], 
     ArrowBox[{{0.052814568221581405`, 
      2.9823951439261394`}, {-0.052814568221581405`, 3.01760485607386}}]}, 
    {Arrowheads[{{0.006045630206238484, 1.}}], 
     ArrowBox[{{0.041675224570896355`, 
      3.4791623877145517`}, {-0.041675224570896355`, 3.520837612285448}}]}, 
    {Arrowheads[{{0.004778052529660062, 1.}}], 
     ArrowBox[{{0.030640219682469657`, 
      3.9795731868783535`}, {-0.030640219682469657`, 4.020426813121647}}]}, 
    {Arrowheads[{{0.0036011613270015112`, 1.}}], 
     ArrowBox[{{0.021321624302817074`, 
      4.482231979747652}, {-0.021321624302817074`, 4.517768020252348}}]}, 
    {Arrowheads[{{0.0026119364655826484`, 1.}}], 
     ArrowBox[{{0.014234394140684833`, 
      4.985765605859315}, {-0.014234394140684833`, 5.014234394140685}}]}, 
    {Arrowheads[{{0.0016571676509346152`, 1.}}], 
     ArrowBox[{{0.5067691295229976, -1.989169392763204}, {
      0.4932308704770024, -2.010830607236796}}]}, 
    {Arrowheads[{{0.0024698775777849714`, 1.}}], 
     ArrowBox[{{0.5110642237055234, -1.4845100868122674`}, {
      0.48893577629447665`, -1.5154899131877329`}}]}, 
    {Arrowheads[{{0.003601161327001499, 1.}}], 
     ArrowBox[{{0.5177680202523476, -0.978678375697183}, {
      0.4822319797476525, -1.021321624302817}}]}, 
    {Arrowheads[{{0.005102648017278655, 1.}}], 
     ArrowBox[{{0.5278081431138201, -0.4721918568861799}, {
      0.4721918568861799, -0.5278081431138202}}]}, 
    {Arrowheads[{{0.00696565998057888, 1.}}], 
     ArrowBox[{{0.5419210086210062, 0.033536806896804966`}, {
      0.4580789913789938, -0.033536806896804966`}}]}, 
    {Arrowheads[{{0.009061115685845113, 1.}}], 
     ArrowBox[{{0.5598830065887085, 0.5359298039532251}, {0.4401169934112915, 
      0.4640701960467749}}]}, 
    {Arrowheads[{{0.01108911829594832, 1.}}], 
     ArrowBox[{{0.5793522778568032, 1.0317409111427214`}, {
      0.42064772214319673`, 0.9682590888572786}}]}, 
    {Arrowheads[{{0.012603239057010055`, 1.}}], 
     ArrowBox[{{0.595248222665416, 1.5190496445330832`}, {0.404751777334584, 
      1.4809503554669168`}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{0.6014983598996444, 2.}, {0.3985016401003556, 2.}}]}, 
    {Arrowheads[{{0.012603239057010055`, 1.}}], 
     ArrowBox[{{0.595248222665416, 2.480950355466917}, {0.404751777334584, 
      2.519049644533083}}]}, 
    {Arrowheads[{{0.01108911829594832, 1.}}], 
     ArrowBox[{{0.5793522778568032, 2.9682590888572786`}, {
      0.42064772214319673`, 3.0317409111427214`}}]}, 
    {Arrowheads[{{0.00906111568584512, 1.}}], 
     ArrowBox[{{0.5598830065887085, 3.464070196046775}, {0.4401169934112915, 
      3.535929803953225}}]}, 
    {Arrowheads[{{0.006965659980578896, 1.}}], 
     ArrowBox[{{0.5419210086210062, 3.966463193103195}, {0.4580789913789938, 
      4.033536806896805}}]}, 
    {Arrowheads[{{0.005102648017278657, 1.}}], 
     ArrowBox[{{0.5278081431138201, 4.47219185688618}, {0.4721918568861799, 
      4.527808143113821}}]}, 
    {Arrowheads[{{0.0036011613270014943`, 1.}}], 
     ArrowBox[{{0.5177680202523476, 4.978678375697183}, {0.4822319797476525, 
      5.021321624302817}}]}, 
    {Arrowheads[{{0.0020968436091101674`, 1.}}], 
     ArrowBox[{{1.0072272389576145`, -1.985545522084771}, {
      0.9927727610423855, -2.014454477915229}}]}, 
    {Arrowheads[{{0.0031951856980768655`, 1.}}], 
     ArrowBox[{{1.0122177375765469`, -1.4786189592410428`}, {
      0.9877822624234531, -1.5213810407589572`}}]}, 
    {Arrowheads[{{0.004778052529660052, 1.}}], 
     ArrowBox[{{1.0204268131216465`, -0.9693597803175303}, {
      0.9795731868783535, -1.0306402196824698`}}]}, 
    {Arrowheads[{{0.00696565998057888, 1.}}], 
     ArrowBox[{{1.033536806896805, -0.45807899137899377`}, {
      0.9664631931031951, -0.5419210086210062}}]}, 
    {Arrowheads[{{0.009808129809775823, 1.}}], 
     ArrowBox[{{1.0534518305996408`, 0.053451830599640766`}, {
      0.9465481694003592, -0.053451830599640766`}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{1.0811986879197155`, 0.5608990159397866}, {0.9188013120802845,
       0.43910098406021336`}}]}, 
    {Arrowheads[{{0.016587741980161802`, 1.}}], 
     ArrowBox[{{1.114346701429733, 1.0571733507148666`}, {0.8856532985702669, 
      0.9428266492851335}}]}, 
    {Arrowheads[{{0.01924702398880229, 1.}}], 
     ArrowBox[{{1.1439098413391109`, 1.5359774603347778`}, {
      0.8560901586608891, 1.4640225396652222`}}]}, 
    {Arrowheads[{{0.02026523601504155, 1.}}], 
     ArrowBox[{{1.1561863379138726`, 2.}, {0.8438136620861274, 2.}}]}, 
    {Arrowheads[{{0.01924702398880229, 1.}}], 
     ArrowBox[{{1.1439098413391109`, 2.4640225396652222`}, {
      0.8560901586608891, 2.5359774603347778`}}]}, 
    {Arrowheads[{{0.016587741980161805`, 1.}}], 
     ArrowBox[{{1.114346701429733, 2.9428266492851334`}, {0.8856532985702669, 
      3.0571733507148666`}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{1.0811986879197155`, 3.4391009840602136`}, {
      0.9188013120802845, 3.560899015939787}}]}, 
    {Arrowheads[{{0.009808129809775861, 1.}}], 
     ArrowBox[{{1.0534518305996408`, 3.946548169400359}, {0.9465481694003592, 
      4.053451830599641}}]}, 
    {Arrowheads[{{0.006965659980578858, 1.}}], 
     ArrowBox[{{1.033536806896805, 4.4580789913789935`}, {0.9664631931031951, 
      4.541921008621006}}]}, 
    {Arrowheads[{{0.004778052529660034, 1.}}], 
     ArrowBox[{{1.0204268131216465`, 4.9693597803175305`}, {
      0.9795731868783535, 5.0306402196824695`}}]}, 
    {Arrowheads[{{0.0025396912778868678`, 1.}}], 
     ArrowBox[{{1.506872775031489, -1.9816725999160294`}, {
      1.493127224968511, -2.0183274000839706`}}]}, 
    {Arrowheads[{{0.003948367430977649, 1.}}], 
     ArrowBox[{{1.5119871570406187`, -1.4720299669052228`}, {
      1.488012842959381, -1.5279700330947772`}}]}, 
    {Arrowheads[{{0.006045630206238483, 1.}}], 
     ArrowBox[{{1.5208376122854481`, -0.9583247754291037}, {
      1.4791623877145517`, -1.0416752245708962`}}]}, 
    {Arrowheads[{{0.009061115685845122, 1.}}], 
     ArrowBox[{{1.5359298039532252`, -0.44011699341129146`}, {
      1.464070196046775, -0.5598830065887086}}]}, 
    {Arrowheads[{{0.013169450324395038`, 1.}}], 
     ArrowBox[{{1.5608990159397866`, 0.0811986879197155}, {
      1.4391009840602134`, -0.0811986879197155}}]}, 
    {Arrowheads[{{0.0182987777874243, 1.}}], 
     ArrowBox[{{1.5997237179201067`, 0.5997237179201066}, {
      1.4002762820798935`, 0.4002762820798934}}]}, 
    {Arrowheads[{{0.023814952736436655`, 1.}}], 
     ArrowBox[{{1.652718158505463, 1.1018121056703087`}, {1.347281841494537, 
      0.8981878943296913}}]}, 
    {Arrowheads[{{0.028308096010857122`, 1.}}], 
     ArrowBox[{{1.7069775732939338`, 1.5689925244313112`}, {
      1.2930224267060662`, 1.4310074755686888`}}]}, 
    {Arrowheads[{{0.03007055310638158, 1.}}], 
     ArrowBox[{{1.7317569637602237`, 2.}, {1.2682430362397763`, 2.}}]}, 
    {Arrowheads[{{0.028308096010857122`, 1.}}], 
     ArrowBox[{{1.7069775732939338`, 2.4310074755686886`}, {
      1.2930224267060662`, 2.568992524431311}}]}, 
    {Arrowheads[{{0.023814952736436655`, 1.}}], 
     ArrowBox[{{1.652718158505463, 2.8981878943296913`}, {1.347281841494537, 
      3.1018121056703087`}}]}, 
    {Arrowheads[{{0.018298777787424312`, 1.}}], 
     ArrowBox[{{1.5997237179201067`, 3.4002762820798935`}, {
      1.4002762820798935`, 3.599723717920107}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{1.5608990159397866`, 3.9188013120802845`}, {
      1.4391009840602134`, 4.0811986879197155`}}]}, 
    {Arrowheads[{{0.009061115685845101, 1.}}], 
     ArrowBox[{{1.5359298039532252`, 4.440116993411292}, {1.464070196046775, 
      4.559883006588708}}]}, 
    {Arrowheads[{{0.006045630206238476, 1.}}], 
     ArrowBox[{{1.5208376122854481`, 4.958324775429103}, {1.4791623877145517`,
       5.041675224570896}}]}, 
    {Arrowheads[{{0.0029273929193099975`, 1.}}], 
     ArrowBox[{{2.0054720232437004`, -1.9781119070251985`}, {
      1.9945279767562996`, -2.0218880929748013`}}]}, 
    {Arrowheads[{{0.004625523891780694, 1.}}], 
     ArrowBox[{{2.0097936451770804`, -1.465722241880219}, {
      1.9902063548229199`, -1.534277758119781}}]}, 
    {Arrowheads[{{0.007223390651436854, 1.}}], 
     ArrowBox[{{2.0176048560738606`, -0.9471854317784186}, {
      1.9823951439261396`, -1.0528145682215813`}}]}, 
    {Arrowheads[{{0.011089118295948313`, 1.}}], 
     ArrowBox[{{2.0317409111427214`, -0.42064772214319673`}, {
      1.9682590888572788`, -0.5793522778568032}}]}, 
    {Arrowheads[{{0.016587741980161795`, 1.}}], 
     ArrowBox[{{2.0571733507148666`, 0.11434670142973306`}, {
      1.9428266492851336`, -0.11434670142973306`}}]}, 
    {Arrowheads[{{0.023814952736436648`, 1.}}], 
     ArrowBox[{{2.1018121056703087`, 0.6527181585054631}, {
      1.8981878943296913`, 0.34728184149453695`}}]}, 
    {Arrowheads[{{0.031987923963817805`, 1.}}], 
     ArrowBox[{{2.1743261076381755`, 1.1743261076381757`}, {
      1.8256738923618245`, 0.8256738923618244}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{2.267198704435059, 1.6335993522175296`}, {1.7328012955649408`,
       1.3664006477824704`}}]}, 
    {Arrowheads[{{0.041314967106840926`, 1.}}], 
     ArrowBox[{{2.318418863153633, 2.}, {1.6815811368463671`, 2.}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{2.267198704435059, 2.3664006477824704`}, {1.7328012955649408`,
       2.6335993522175296`}}]}, 
    {Arrowheads[{{0.031987923963817805`, 1.}}], 
     ArrowBox[{{2.1743261076381755`, 2.8256738923618245`}, {
      1.8256738923618245`, 3.174326107638176}}]}, 
    {Arrowheads[{{0.023814952736436655`, 1.}}], 
     ArrowBox[{{2.1018121056703087`, 3.347281841494537}, {1.8981878943296913`,
       3.652718158505463}}]}, 
    {Arrowheads[{{0.016587741980161816`, 1.}}], 
     ArrowBox[{{2.0571733507148666`, 3.8856532985702668`}, {
      1.9428266492851336`, 4.114346701429733}}]}, 
    {Arrowheads[{{0.011089118295948337`, 1.}}], 
     ArrowBox[{{2.0317409111427214`, 4.420647722143197}, {1.9682590888572788`,
       4.579352277856803}}]}, 
    {Arrowheads[{{0.0072233906514368755`, 1.}}], 
     ArrowBox[{{2.0176048560738606`, 4.9471854317784185`}, {
      1.9823951439261396`, 5.0528145682215815`}}]}, 
    {Arrowheads[{{0.0031951856980768907`, 1.}}], 
     ArrowBox[{{2.5030544343941368`, -1.975564524846906}, {
      2.4969455656058632`, -2.024435475153094}}]}, 
    {Arrowheads[{{0.005102648017278653, 1.}}], 
     ArrowBox[{{2.505561628622764, -1.4610685996406518`}, {
      2.4944383713772362`, -1.5389314003593482`}}]}, 
    {Arrowheads[{{0.00807454074911556, 1.}}], 
     ArrowBox[{{2.5102307705507987`, -0.9386153766952089}, {
      2.4897692294492018`, -1.061384623304791}}]}, 
    {Arrowheads[{{0.012603239057010055`, 1.}}], 
     ArrowBox[{{2.519049644533083, -0.404751777334584}, {
      2.480950355466917, -0.595248222665416}}]}, 
    {Arrowheads[{{0.019247023988802292`, 1.}}], 
     ArrowBox[{{2.5359774603347778`, 0.14390984133911092`}, {
      2.4640225396652222`, -0.14390984133911092`}}]}, 
    {Arrowheads[{{0.028308096010857122`, 1.}}], 
     ArrowBox[{{2.5689925244313114`, 0.7069775732939338}, {2.431007475568689, 
      0.29302242670606615`}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{2.6335993522175296`, 1.2671987044350592`}, {
      2.3664006477824704`, 0.7328012955649409}}]}, 
    {Arrowheads[{{0.04587368524026632, 1.}}], 
     ArrowBox[{{2.75, 1.75}, {2.25, 1.25}}]}, 
    {Arrowheads[{{0.04541124337821651, 1.}}], 
     ArrowBox[{{2.849989301782365, 2.}, {2.150010698217635, 2.}}]}, 
    {Arrowheads[{{0.04587368524026632, 1.}}], 
     ArrowBox[{{2.75, 2.25}, {2.25, 2.75}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{2.6335993522175296`, 2.732801295564941}, {2.3664006477824704`,
       3.267198704435059}}]}, 
    {Arrowheads[{{0.028308096010857122`, 1.}}], 
     ArrowBox[{{2.5689925244313114`, 3.293022426706066}, {2.431007475568689, 
      3.706977573293934}}]}, 
    {Arrowheads[{{0.019247023988802316`, 1.}}], 
     ArrowBox[{{2.5359774603347778`, 3.856090158660889}, {2.4640225396652222`,
       4.143909841339111}}]}, 
    {Arrowheads[{{0.012603239057010069`, 1.}}], 
     ArrowBox[{{2.519049644533083, 4.404751777334584}, {2.480950355466917, 
      4.5952482226654165`}}]}, 
    {Arrowheads[{{0.008074540749115582, 1.}}], 
     ArrowBox[{{2.5102307705507987`, 4.938615376695209}, {2.4897692294492018`,
       5.061384623304791}}]}, 
    {Arrowheads[{{0.0032911217471429683`, 1.}}], 
     ArrowBox[{{3., -1.974634973264884}, {3., -2.025365026735116}}]}, 
    {Arrowheads[{{0.005275416250395613, 1.}}], 
     ArrowBox[{{3., -1.4593418036429944`}, {3., -1.5406581963570058`}}]}, 
    {Arrowheads[{{0.008387059162973477, 1.}}], 
     ArrowBox[{{3., -0.9353600394508343}, {3., -1.0646399605491657`}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{3., -0.3985016401003556}, {3., -0.6014983598996444}}]}, 
    {Arrowheads[{{0.020265236015041547`, 1.}}], 
     ArrowBox[{{3., 0.15618633791387257`}, {3., -0.15618633791387257`}}]}, 
    {Arrowheads[{{0.03007055310638158, 1.}}], 
     ArrowBox[{{3., 0.7317569637602237}, {3., 0.2682430362397763}}]}, 
    {Arrowheads[{{0.041314967106840926`, 1.}}], 
     ArrowBox[{{3., 1.3184188631536329`}, {3., 0.6815811368463671}}]}, 
    {Arrowheads[{{0.04541124337821651, 1.}}], 
     ArrowBox[{{3., 1.8499893017823652`}, {3., 1.1500106982176348`}}]}, 
    {Arrowheads[{{0.04541124337821651, 1.}}], 
     ArrowBox[{{3., 2.150010698217635}, {3., 2.849989301782365}}]}, 
    {Arrowheads[{{0.041314967106840926`, 1.}}], 
     ArrowBox[{{3., 2.681581136846367}, {3., 3.318418863153633}}]}, 
    {Arrowheads[{{0.03007055310638158, 1.}}], 
     ArrowBox[{{3., 3.2682430362397765`}, {3., 3.731756963760224}}]}, 
    {Arrowheads[{{0.020265236015041495`, 1.}}], 
     ArrowBox[{{3., 3.8438136620861276`}, {3., 4.156186337913872}}]}, 
    {Arrowheads[{{0.013169450324395012`, 1.}}], 
     ArrowBox[{{3., 4.398501640100355}, {3., 4.601498359899644}}]}, 
    {Arrowheads[{{0.008387059162973477, 1.}}], 
     ArrowBox[{{3., 4.935360039450834}, {3., 5.064639960549165}}]}, 
    {Arrowheads[{{0.0031951856980768907`, 1.}}], 
     ArrowBox[{{3.4969455656058632`, -1.975564524846906}, {
      3.5030544343941368`, -2.024435475153094}}]}, 
    {Arrowheads[{{0.005102648017278653, 1.}}], 
     ArrowBox[{{3.494438371377236, -1.4610685996406518`}, {
      3.5055616286227638`, -1.5389314003593482`}}]}, 
    {Arrowheads[{{0.00807454074911556, 1.}}], 
     ArrowBox[{{3.4897692294492013`, -0.9386153766952089}, {
      3.5102307705507982`, -1.061384623304791}}]}, 
    {Arrowheads[{{0.012603239057010055`, 1.}}], 
     ArrowBox[{{3.480950355466917, -0.404751777334584}, {
      3.519049644533083, -0.595248222665416}}]}, 
    {Arrowheads[{{0.019247023988802292`, 1.}}], 
     ArrowBox[{{3.4640225396652222`, 0.14390984133911092`}, {
      3.5359774603347778`, -0.14390984133911092`}}]}, 
    {Arrowheads[{{0.028308096010857122`, 1.}}], 
     ArrowBox[{{3.4310074755686886`, 0.7069775732939338}, {3.568992524431311, 
      0.29302242670606615`}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{3.3664006477824704`, 1.2671987044350592`}, {
      3.6335993522175296`, 0.7328012955649409}}]}, 
    {Arrowheads[{{0.04587368524026632, 1.}}], 
     ArrowBox[{{3.25, 1.75}, {3.75, 1.25}}]}, 
    {Arrowheads[{{0.04541124337821651, 1.}}], 
     ArrowBox[{{3.150010698217635, 2.}, {3.849989301782365, 2.}}]}, 
    {Arrowheads[{{0.04587368524026632, 1.}}], 
     ArrowBox[{{3.25, 2.25}, {3.75, 2.75}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{3.3664006477824704`, 2.732801295564941}, {3.6335993522175296`,
       3.267198704435059}}]}, 
    {Arrowheads[{{0.028308096010857122`, 1.}}], 
     ArrowBox[{{3.4310074755686886`, 3.293022426706066}, {3.568992524431311, 
      3.706977573293934}}]}, 
    {Arrowheads[{{0.019247023988802316`, 1.}}], 
     ArrowBox[{{3.4640225396652222`, 3.856090158660889}, {3.5359774603347778`,
       4.143909841339111}}]}, 
    {Arrowheads[{{0.012603239057010069`, 1.}}], 
     ArrowBox[{{3.480950355466917, 4.404751777334584}, {3.519049644533083, 
      4.5952482226654165`}}]}, 
    {Arrowheads[{{0.008074540749115582, 1.}}], 
     ArrowBox[{{3.4897692294492013`, 4.938615376695209}, {3.5102307705507982`,
       5.061384623304791}}]}, 
    {Arrowheads[{{0.0029273929193099975`, 1.}}], 
     ArrowBox[{{3.9945279767562996`, -1.9781119070251985`}, {
      4.0054720232437, -2.0218880929748013`}}]}, 
    {Arrowheads[{{0.004625523891780706, 1.}}], 
     ArrowBox[{{3.9902063548229196`, -1.465722241880219}, {
      4.009793645177081, -1.534277758119781}}]}, 
    {Arrowheads[{{0.0072233906514368685`, 1.}}], 
     ArrowBox[{{3.9823951439261394`, -0.9471854317784186}, {
      4.017604856073861, -1.0528145682215813`}}]}, 
    {Arrowheads[{{0.01108911829594832, 1.}}], 
     ArrowBox[{{3.9682590888572786`, -0.42064772214319673`}, {
      4.031740911142721, -0.5793522778568032}}]}, 
    {Arrowheads[{{0.016587741980161802`, 1.}}], 
     ArrowBox[{{3.9428266492851334`, 0.11434670142973306`}, {
      4.057173350714867, -0.11434670142973306`}}]}, 
    {Arrowheads[{{0.023814952736436648`, 1.}}], 
     ArrowBox[{{3.8981878943296913`, 0.6527181585054631}, {4.101812105670309, 
      0.34728184149453695`}}]}, 
    {Arrowheads[{{0.031987923963817805`, 1.}}], 
     ArrowBox[{{3.8256738923618245`, 1.1743261076381757`}, {
      4.1743261076381755`, 0.8256738923618244}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{3.732801295564941, 1.6335993522175296`}, {4.267198704435059, 
      1.3664006477824704`}}]}, 
    {Arrowheads[{{0.041314967106840954`, 1.}}], 
     ArrowBox[{{3.681581136846367, 2.}, {4.318418863153633, 2.}}]}, 
    {Arrowheads[{{0.03876126824109492, 1.}}], 
     ArrowBox[{{3.732801295564941, 2.3664006477824704`}, {4.267198704435059, 
      2.6335993522175296`}}]}, 
    {Arrowheads[{{0.031987923963817805`, 1.}}], 
     ArrowBox[{{3.8256738923618245`, 2.8256738923618245`}, {
      4.1743261076381755`, 3.174326107638176}}]}, 
    {Arrowheads[{{0.023814952736436655`, 1.}}], 
     ArrowBox[{{3.8981878943296913`, 3.347281841494537}, {4.101812105670309, 
      3.652718158505463}}]}, 
    {Arrowheads[{{0.016587741980161823`, 1.}}], 
     ArrowBox[{{3.9428266492851334`, 3.8856532985702668`}, {4.057173350714867,
       4.114346701429733}}]}, 
    {Arrowheads[{{0.011089118295948342`, 1.}}], 
     ArrowBox[{{3.9682590888572786`, 4.420647722143197}, {4.031740911142721, 
      4.579352277856803}}]}, 
    {Arrowheads[{{0.0072233906514368885`, 1.}}], 
     ArrowBox[{{3.9823951439261394`, 4.9471854317784185`}, {4.017604856073861,
       5.0528145682215815`}}]}, 
    {Arrowheads[{{0.002539691277886878, 1.}}], 
     ArrowBox[{{4.493127224968511, -1.9816725999160294`}, {
      4.506872775031489, -2.0183274000839706`}}]}, 
    {Arrowheads[{{0.003948367430977644, 1.}}], 
     ArrowBox[{{4.488012842959381, -1.4720299669052228`}, {
      4.511987157040618, -1.5279700330947772`}}]}, 
    {Arrowheads[{{0.006045630206238489, 1.}}], 
     ArrowBox[{{4.479162387714552, -0.9583247754291037}, {
      4.520837612285448, -1.0416752245708962`}}]}, 
    {Arrowheads[{{0.00906111568584513, 1.}}], 
     ArrowBox[{{4.464070196046775, -0.44011699341129146`}, {
      4.535929803953225, -0.5598830065887086}}]}, 
    {Arrowheads[{{0.013169450324395022`, 1.}}], 
     ArrowBox[{{4.439100984060214, 0.0811986879197155}, {
      4.560899015939786, -0.0811986879197155}}]}, 
    {Arrowheads[{{0.01829877778742429, 1.}}], 
     ArrowBox[{{4.4002762820798935`, 0.5997237179201066}, {
      4.5997237179201065`, 0.4002762820798934}}]}, 
    {Arrowheads[{{0.023814952736436655`, 1.}}], 
     ArrowBox[{{4.347281841494537, 1.1018121056703087`}, {4.652718158505463, 
      0.8981878943296913}}]}, 
    {Arrowheads[{{0.028308096010857063`, 1.}}], 
     ArrowBox[{{4.293022426706067, 1.5689925244313112`}, {4.706977573293933, 
      1.4310074755686888`}}]}, 
    {Arrowheads[{{0.030070553106381553`, 1.}}], 
     ArrowBox[{{4.2682430362397765`, 2.}, {4.7317569637602235`, 2.}}]}, 
    {Arrowheads[{{0.028308096010857063`, 1.}}], 
     ArrowBox[{{4.293022426706067, 2.4310074755686886`}, {4.706977573293933, 
      2.568992524431311}}]}, 
    {Arrowheads[{{0.023814952736436655`, 1.}}], 
     ArrowBox[{{4.347281841494537, 2.8981878943296913`}, {4.652718158505463, 
      3.1018121056703087`}}]}, 
    {Arrowheads[{{0.0182987777874243, 1.}}], 
     ArrowBox[{{4.4002762820798935`, 3.4002762820798935`}, {
      4.5997237179201065`, 3.599723717920107}}]}, 
    {Arrowheads[{{0.013169450324395022`, 1.}}], 
     ArrowBox[{{4.439100984060214, 3.9188013120802845`}, {4.560899015939786, 
      4.0811986879197155`}}]}, 
    {Arrowheads[{{0.009061115685845108, 1.}}], 
     ArrowBox[{{4.464070196046775, 4.440116993411292}, {4.535929803953225, 
      4.559883006588708}}]}, 
    {Arrowheads[{{0.006045630206238483, 1.}}], 
     ArrowBox[{{4.479162387714552, 4.958324775429103}, {4.520837612285448, 
      5.041675224570896}}]}, 
    {Arrowheads[{{0.0020968436091101674`, 1.}}], 
     ArrowBox[{{4.992772761042386, -1.985545522084771}, {
      5.007227238957615, -2.014454477915229}}]}, 
    {Arrowheads[{{0.00319518569807688, 1.}}], 
     ArrowBox[{{4.987782262423453, -1.4786189592410428`}, {
      5.012217737576547, -1.5213810407589572`}}]}, 
    {Arrowheads[{{0.004778052529660052, 1.}}], 
     ArrowBox[{{4.979573186878354, -0.9693597803175303}, {
      5.020426813121647, -1.0306402196824698`}}]}, 
    {Arrowheads[{{0.006965659980578898, 1.}}], 
     ArrowBox[{{4.966463193103195, -0.45807899137899377`}, {
      5.033536806896805, -0.5419210086210062}}]}, 
    {Arrowheads[{{0.009808129809775844, 1.}}], 
     ArrowBox[{{4.9465481694003595`, 0.053451830599640766`}, {
      5.053451830599641, -0.053451830599640766`}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{4.9188013120802845`, 0.5608990159397866}, {
      5.0811986879197155`, 0.43910098406021336`}}]}, 
    {Arrowheads[{{0.01658774198016182, 1.}}], 
     ArrowBox[{{4.885653298570267, 1.0571733507148666`}, {5.114346701429733, 
      0.9428266492851335}}]}, 
    {Arrowheads[{{0.019247023988802316`, 1.}}], 
     ArrowBox[{{4.856090158660889, 1.5359774603347778`}, {5.143909841339111, 
      1.4640225396652222`}}]}, 
    {Arrowheads[{{0.020265236015041523`, 1.}}], 
     ArrowBox[{{4.843813662086127, 2.}, {5.156186337913872, 2.}}]}, 
    {Arrowheads[{{0.019247023988802316`, 1.}}], 
     ArrowBox[{{4.856090158660889, 2.4640225396652222`}, {5.143909841339111, 
      2.5359774603347778`}}]}, 
    {Arrowheads[{{0.016587741980161823`, 1.}}], 
     ArrowBox[{{4.885653298570267, 2.9428266492851334`}, {5.114346701429733, 
      3.0571733507148666`}}]}, 
    {Arrowheads[{{0.01316945032439504, 1.}}], 
     ArrowBox[{{4.9188013120802845`, 3.4391009840602136`}, {
      5.0811986879197155`, 3.560899015939787}}]}, 
    {Arrowheads[{{0.009808129809775884, 1.}}], 
     ArrowBox[{{4.9465481694003595`, 3.946548169400359}, {5.053451830599641, 
      4.053451830599641}}]}, 
    {Arrowheads[{{0.006965659980578876, 1.}}], 
     ArrowBox[{{4.966463193103195, 4.4580789913789935`}, {5.033536806896805, 
      4.541921008621006}}]}, 
    {Arrowheads[{{0.004778052529660034, 1.}}], 
     ArrowBox[{{4.979573186878354, 4.9693597803175305`}, {5.020426813121647, 
      5.0306402196824695`}}]}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
    "TransparentPolygonMesh" -> True},
  PlotRange->{{-2.353553390593274, 5.353553390593274}, {-2.353553390593274, 
   5.353553390593274}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.780679748159729*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"1d9c8520-9efb-4bc7-b5a0-5c07cdff1208"]
}, Open  ]],

Cell[TextData[{
 "Expanding the functions to three dimensions before using it in with ",
 ButtonBox["DistortStructure",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/DistortStructure"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7806623144610863`*^9, 
  3.78066235690685*^9}},ExpressionUUID->"9b7e5fb6-207c-407a-8753-\
9908f1373aec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.5", ",", "2.5", ",", "1.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "x0"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "y0"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"z", "-", "z0"}], ")"}], "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"r", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], 
    RowBox[{"1", "+", 
     RowBox[{"r", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]]}], ";"}]}], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"7e098972-c947-41a2-aaa3-491a99bf7590"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DistortStructure"}]], "Input",
 CellChangeTimes->{{3.780662682093068*^9, 3.78066268345338*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"f16aef35-ced0-4535-82fa-11a13da3c72b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/DistortStructure",
              ButtonNote->"paclet:MaXrd/ref/DistortStructure"],
             "\"paclet:MaXrd/ref/DistortStructure\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DistortStructure\\\", \
\\\"[\\\", StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"F\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"F\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"F\\\", \\\"TI\\\"], StyleBox[\\\"3\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" distorts the atoms in \\\", \
Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\" by an amount given by vector field \\\", \
Cell[BoxData[StyleBox[\\\"F\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
and its variables \\\", Cell[BoxData[StyleBox[\\\"x\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/DistortStructure", 
                    "paclet:MaXrd/ref/DistortStructure", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DistortStructure", "[", 
                    RowBox[{
                    "MaXrd`Private`crystal_", ",", 
                    "MaXrd`Private`vectorField_", ",", 
                    "MaXrd`Private`variables_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`newLabel", "=", 
                    RowBox[{"OptionValue", "[", "\<\"NewLabel\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"MaXrd`Private`distortionType", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"DistortionType\"\>", "]"}]}], 
                    ",", "MaXrd`Private`M", ",", "MaXrd`Private`inverseM", 
                    ",", "MaXrd`Private`f", ",", "MaXrd`Private`distortions", 
                    ",", "MaXrd`Private`coordinates", ",", 
                    "MaXrd`Private`coordinatesCartesian", ",", 
                    "MaXrd`Private`newCoordinates", ",", 
                    "MaXrd`Private`crystalCopy"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"InputCheck", "[", 
                    RowBox[{
                    "MaXrd`Private`crystal", ",", "\<\"CrystalQ\"\>"}], "]"}],
                     ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringQ", "[", "MaXrd`Private`newLabel", "]"}]}],
                     "||", 
                    RowBox[{"MaXrd`Private`newLabel", "===", "\<\"\"\>"}]}], 
                    ",", 
                    RowBox[{
                    "MaXrd`Private`newLabel", "=", 
                    "MaXrd`Private`crystal"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Cartesian\"\>", 
                    ",", "\<\"Crystallographic\"\>"}], "}"}], ",", 
                    "MaXrd`Private`distortionType"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"EmbedStructure", "::", "InvalidDistortionType"}],
                     "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`f", "[", "MaXrd`Private`xyz_", "]"}], ":=", 
                    RowBox[{
                    "MaXrd`Private`vectorField", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    "MaXrd`Private`variables", "\[Rule]", 
                    "MaXrd`Private`xyz"}], "]"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinates", "=", 
                    RowBox[{"$CrystalData", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "MaXrd`Private`crystal", ",", "\<\"AtomData\"\>", ",", 
                    "All", ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`distortions", "=", 
                    RowBox[{
                    "MaXrd`Private`f", "/@", "MaXrd`Private`coordinates"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`distortionType", 
                    "===", "\<\"Cartesian\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`M", "=", 
                    RowBox[{"GetCrystalMetric", "[", 
                    RowBox[{"MaXrd`Private`crystal", ",", 
                    RowBox[{"\<\"ToCartesian\"\>", "\[Rule]", "True"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`inverseM", "=", 
                    RowBox[{"Inverse", "[", "MaXrd`Private`M", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinatesCartesian", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`M", ".", "#1"}], "&"}], ")"}], "/@",
                     "MaXrd`Private`coordinates"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinates", "=", 
                    RowBox[{
                    "MaXrd`Private`coordinatesCartesian", "+", 
                    "MaXrd`Private`distortions"}]}], ";", 
                    RowBox[{"MaXrd`Private`newCoordinates", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`inverseM", ".", "#1"}], "&"}], 
                    ")"}], "/@", "MaXrd`Private`newCoordinates"}]}]}], ",", 
                    RowBox[{"MaXrd`Private`newCoordinates", "=", 
                    RowBox[{
                    "MaXrd`Private`coordinates", "+", 
                    "MaXrd`Private`distortions"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`crystalCopy", "=", 
                    RowBox[{
                    "$CrystalData", "[", "MaXrd`Private`crystal", "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`crystalCopy", "\[LeftDoubleBracket]", 
                    
                    RowBox[{"\<\"AtomData\"\>", ",", "All", 
                    ",", "\<\"FractionalCoordinates\"\>"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    "MaXrd`Private`newCoordinates"}], ";", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"$CrystalData", ",", 
                    RowBox[{
                    "MaXrd`Private`newLabel", "\[Rule]", 
                    "MaXrd`Private`crystalCopy"}]}], "]"}], ";", 
                    RowBox[{
                    "InputCheck", 
                    "[", "\<\"Update$CrystalDataAutoCompletion\"\>", "]"}], 
                    ";", "MaXrd`Private`newLabel"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "DistortStructure", "]"}], "=", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"CrystalPlot", ",", "VectorPlot3D"}], "}"}], 
                    "]"}]}], "}"}]}], ",", 
                    RowBox[{"\<\"LocalVariables\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Solve\"\>", ",", 
                    RowBox[{"{", "3", "}"}]}], "}"}]}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`DistortStructure] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Blank[], 
                    OptionsPattern[{MaXrd`CrystalPlot, VectorPlot3D}]}, 
                    "LocalVariables" -> {"Solve", {3}}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"\<\"DistortionType\"\>", 
                    "\[Rule]", "\<\"Crystallographic\"\>"}], ",", 
                    RowBox[{"\<\"NewLabel\"\>", "\[Rule]", "\<\"\"\>"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`DistortStructure\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/DistortStructure",
              ButtonNote->"paclet:MaXrd/ref/DistortStructure"],
             "\"paclet:MaXrd/ref/DistortStructure\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DistortStructure\\\", \
\\\"[\\\", StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"F\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"F\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"F\\\", \\\"TI\\\"], StyleBox[\\\"3\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" distorts the atoms in \\\", \
Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\" by an amount given by vector field \\\", \
Cell[BoxData[StyleBox[\\\"F\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
and its variables \\\", Cell[BoxData[StyleBox[\\\"x\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DistortStructure\", \"[\", StyleBox[\"crystal\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"F\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"F\", \"TI\"], \
StyleBox[\"3\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"3\", \"TR\"]]}], \"}\"}], \
\"]\"}]\)\!\(\*RowBox[{\" distorts the atoms in \", \
Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" by an \
amount given by vector field \", Cell[BoxData[StyleBox[\"F\", \"TI\"]], \
\"InlineFormula\"], \" and its variables \", Cell[BoxData[StyleBox[\"x\", \
\"TI\"]], \"InlineFormula\"], \".\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/DistortStructure"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`DistortStructure, {MaXrd`DistortStructure[
         Pattern[MaXrd`Private`crystal, 
          Blank[]], 
         Pattern[MaXrd`Private`vectorField, 
          Blank[]], 
         Pattern[MaXrd`Private`variables, 
          Blank[]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`newLabel = OptionValue["NewLabel"], 
          MaXrd`Private`distortionType = OptionValue["DistortionType"], 
          MaXrd`Private`M, MaXrd`Private`inverseM, MaXrd`Private`f, 
          MaXrd`Private`distortions, MaXrd`Private`coordinates, 
          MaXrd`Private`coordinatesCartesian, MaXrd`Private`newCoordinates, 
          MaXrd`Private`crystalCopy}, 
         MaXrd`InputCheck[MaXrd`Private`crystal, "CrystalQ"]; If[
           Or[
            Not[
             StringQ[MaXrd`Private`newLabel]], MaXrd`Private`newLabel === ""],
            MaXrd`Private`newLabel = MaXrd`Private`crystal]; If[
           Not[
            
            MemberQ[{"Cartesian", "Crystallographic"}, 
             MaXrd`Private`distortionType]], Message[
             MessageName[MaXrd`EmbedStructure, "InvalidDistortionType"]]; 
           Abort[]]; MaXrd`Private`f[
            Pattern[MaXrd`Private`xyz, 
             Blank[]]] := ReplaceAll[MaXrd`Private`vectorField, 
            Thread[MaXrd`Private`variables -> MaXrd`Private`xyz]]; 
         MaXrd`Private`coordinates = 
          Part[MaXrd`$CrystalData, MaXrd`Private`crystal, "AtomData", All, 
            "FractionalCoordinates"]; 
         MaXrd`Private`distortions = 
          Map[MaXrd`Private`f, MaXrd`Private`coordinates]; 
         If[MaXrd`Private`distortionType === "Cartesian", 
           MaXrd`Private`M = 
            MaXrd`GetCrystalMetric[
             MaXrd`Private`crystal, "ToCartesian" -> True]; 
           MaXrd`Private`inverseM = Inverse[MaXrd`Private`M]; 
           MaXrd`Private`coordinatesCartesian = 
            Map[Dot[MaXrd`Private`M, #]& , MaXrd`Private`coordinates]; 
           MaXrd`Private`newCoordinates = 
            MaXrd`Private`coordinatesCartesian + MaXrd`Private`distortions; 
           MaXrd`Private`newCoordinates = 
            Map[Dot[MaXrd`Private`inverseM, #]& , 
              MaXrd`Private`newCoordinates], MaXrd`Private`newCoordinates = 
           MaXrd`Private`coordinates + MaXrd`Private`distortions]; 
         MaXrd`Private`crystalCopy = 
          MaXrd`$CrystalData[MaXrd`Private`crystal]; 
         Part[MaXrd`Private`crystalCopy, "AtomData", All, 
            "FractionalCoordinates"] = MaXrd`Private`newCoordinates; 
         AssociateTo[
          MaXrd`$CrystalData, MaXrd`Private`newLabel -> 
           MaXrd`Private`crystalCopy]; 
         MaXrd`InputCheck["Update$CrystalDataAutoCompletion"]; 
         MaXrd`Private`newLabel]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`DistortStructure, {
      SyntaxInformation[MaXrd`DistortStructure] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Blank[], 
           OptionsPattern[{MaXrd`CrystalPlot, VectorPlot3D}]}, 
         "LocalVariables" -> {"Solve", {3}}}}], "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {"DistortionType" -> "Crystallographic", "NewLabel" -> ""}, 
    "Attributes" -> {}, "FullName" -> "MaXrd`DistortStructure"], 
   False]]], "Output",
 CellChangeTimes->{3.780679761006575*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"080ee2be-488b-4d09-ac98-e75b46c5182e"]
}, Open  ]],

Cell[TextData[{
 "We make use of the ",
 ButtonBox["Manipulate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Manipulate"],
 " function to tweak the distortion dynamically:"
}], "Text",
 CellChangeTimes->{{3.780662482432973*^9, 
  3.780662505904187*^9}},ExpressionUUID->"c6cb6858-beea-4994-9920-\
41f4b8682b01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ironSlab", "=", 
     RowBox[{"ExpandCrystal", "[", 
      RowBox[{"\"\<Austenite\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"DistortStructure", "[", 
      RowBox[{"ironSlab", ",", "\[IndentingNewLine]", 
       RowBox[{"a", "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "x0"}], ")"}], "*", 
           RowBox[{"d", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", "y0"}], ")"}], "*", 
           RowBox[{"d", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "z0"}], ")"}], "*", 
           RowBox[{"d", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"CrystalPlot", "@", "tmp"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780662405132502*^9, 3.780662456092531*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"6e96555f-d76a-4fd0-9f30-29a2af05ccfc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 5.96, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 12}}, Typeset`size$$ = {360., {178., 182.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$23230$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$23230$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`ironSlab = 
        MaXrd`ExpandCrystal["Austenite", {5, 5, 2}]; $CellContext`tmp = 
        MaXrd`DistortStructure[$CellContext`ironSlab, $CellContext`a$$ \
{($CellContext`x - $CellContext`x0) $CellContext`d[$CellContext`x, \
$CellContext`y, $CellContext`z], ($CellContext`y - $CellContext`y0) \
$CellContext`d[$CellContext`x, $CellContext`y, $CellContext`z], \
($CellContext`z - $CellContext`z0) $CellContext`d[$CellContext`x, \
$CellContext`y, $CellContext`z]}, {$CellContext`x, $CellContext`y, \
$CellContext`z}]; MaXrd`CrystalPlot[$CellContext`tmp]), 
      "Specifications" :> {{$CellContext`a$$, 0, 12}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {223., 229.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.780679766984942*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"37bc0d94-d0bf-488d-a8da-9854edbc53c8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 4: Synthesise blocks to a larger structure", "Subsection",
 CellChangeTimes->{{3.7806625412477217`*^9, 
  3.780662558006775*^9}},ExpressionUUID->"72f172fc-a3ad-42fa-8863-\
59ca750c0b77"],

Cell[TextData[{
 "If multiple parts or \[OpenCurlyDoubleQuote]blocks\[CloseCurlyDoubleQuote] \
comprise the structure, we can prepare each unit and \
\[OpenCurlyDoubleQuote]glue\[CloseCurlyDoubleQuote] them together using ",
 ButtonBox["SynthesiseStructure",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/SynthesiseStructure"],
 ". On a higher level, the blocks could potentially make up distinct domains, \
in which case the functions ",
 ButtonBox["ConstructDomain",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ConstructDomains"],
 " and ",
 ButtonBox["DomainPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/DomainPlot"],
 " could prove useful."
}], "Text",
 CellChangeTimes->{{3.780673053308669*^9, 3.7806730538363667`*^9}, {
  3.7806739383570833`*^9, 3.780673968908698*^9}, {3.7806740318436337`*^9, 
  3.780674077250341*^9}, {3.780674119698043*^9, 3.780674124800827*^9}, {
  3.7806762461567574`*^9, 
  3.780676343566189*^9}},ExpressionUUID->"8b43d357-6600-44fe-af84-\
e71a3db941c6"],

Cell[CellGroupData[{

Cell["Making structures out of \[OpenCurlyDoubleQuote]blocks\
\[CloseCurlyDoubleQuote]", "Subsubsection",
 CellChangeTimes->{{3.780673062884302*^9, 3.780673075587653*^9}, 
   3.7806736195158033`*^9},ExpressionUUID->"68ebae4d-2a58-4efc-9b56-\
bab2b1609e5b"],

Cell["\<\
Back to our thiourea-ferrocene clathrate, we can imagine the ferrocene \
molecules aligning themselves in a few probable orientations. For simplicity, \
we will just make two kinds of blocks here \[Dash] one where the molecules \
are aligned parallel to the tunnel axis (block A) and one where they are \
perpendicular (block B):\
\>", "Text",
 CellChangeTimes->{{3.780662608029855*^9, 3.7806626248373747`*^9}, {
  3.780672982305325*^9, 3.780673004293357*^9}, {3.780676401701908*^9, 
  3.780676444859784*^9}, {3.780676722358683*^9, 
  3.78067678881269*^9}},ExpressionUUID->"a6d18c4b-b2e1-4c7d-bc38-\
ba2638647bc8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EmbedStructure", "[", 
   RowBox[{
    RowBox[{"{", "\"\<FerroceneMolecule\>\"", "}"}], ",", "targetPositions", 
    ",", "\"\<ThioureaHost_1x1x1\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<NewLabel\>\"", "\[Rule]", "\"\<BlockA\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EmbedStructure", "[", 
   RowBox[{
    RowBox[{"{", "\"\<FerroceneMolecule\>\"", "}"}], ",", "targetPositions", 
    ",", "\"\<ThioureaHost_1x1x1\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Rotations\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"\"\<NewLabel\>\"", "\[Rule]", "\"\<BlockB\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CrystalPlot", "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<BlockA\>\"", ",", "\"\<BlockB\>\""}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.780676624858151*^9, 3.780676714790681*^9}, {
  3.780676802762228*^9, 3.780676807908394*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"19c814d5-a499-4d15-ae28-76e99ac8aae3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{
     {RGBColor[1, 0, 0], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
     {RGBColor[0, 1, 0], 
      Arrow3DBox[
       Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
     {RGBColor[0, 0, 1], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 0.}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
     {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
       12.4163}}]}, 
     {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQA2JmIJ6rsJ1lz1dhB+7HnK2bbio5PGAqVl2wUcQh5nON
xr6vzAfq/qXzutVpw8Xv+358sBMoXpU4ycUqSwQu/tKzJqpmtZhDWoTIjlxB
JYfVvXFNIn0f7HdxXFvO5aflYOCzfNWGm0Jwca3ybWZVQPXzQzbOm8lx0x4m
XraguscqkROufrvnorRVP2QcnLfO1J8ToApXDxN/cnqb7GygOMxemPg9iDsd
YO6cfmXf1qTDag5Q/x6A+RcmDvWvA8y/MPFosLiwAwMU7PzT/uX2fCWoOPOB
2SmNR7U8BR1g4jB/Xb02p/zrQmV08QMwcZ9lXG6qVzmg4mpw82HiUPMdYObD
xH/9eu9ilsh5QLkz9laXmw7c/B8QcQeYOEw945arB16u0HZAdycsPNHdAwDL
tu1e
       "], 0.87]}, 
     {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmIH7keZDTuljWocn9//T1HsoO3E/7PFT1JB0YzZ9d
qNURdLCzXnLl1cMf9jDxyyukm1eu1HR4+EJtfnkbO1z9mQSn3T/XCDm8Ojf5
05sUNYe3bSdclq7QcNhkPpfz04yX+x2a97Rs+y0IF19fLPtl22e+A7sZT9b7
amnCxbdA1NvD1Pemtzmr1kg4rIKod4Cph4mfhdh7AGYvTFxEIVV+/yduuDsX
rOdfyOCwzf6Ft8ix3W8U4f6FiYdfbUySEtCA+xcmvkCmXdcWGD6/ZCP3uuw/
bX/urWib3D0VB5/aC/NzXmo4/I+6EK8tJOkAE+815rj/GxgOCw5YVb2ZIwcX
74GK/43zz7kc+cf+0naJg+KmAg4w83c83zh9c5aSA0zcG2r+oao/r7KdOOHi
bqbfr+8Buh+mnn/9xGa5VhUHLcmV1ruB4QNTDxO/sNKs/q6/OtxedHGYO/1N
FY+JPxdwcIeaD/MvTFwbaj7MvzDxFWdPqzPPfLn/mlN467rtwg6f7zzmlHZg
dHBKUVhbDUw/xVnz7r//qgoXn3j0Q9rhT9wHnOdezgnYrQEXnwQVXxrYYKX5
QdJhCfevpJmJCnDzV6tkHO+9rg0Xh5nvvv1VyKsqebj4gYV5rx8A0w9M/efD
S/+b7vhvf4BzzZd6HcEDMPUw8RlVN6/vAqYTmL3o4jB3JnvVpc7chTAf5l+4
ONR8mH9h4gBhp5ab
       "], 0.56]}, 
     {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1: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
edFfkhf9JXnR3/8Dvq4rLw==
       "], 0.53]}, 
     {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1: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
6C/Ji/6SvOgvyYv+krzo73+RZCZL
       "], 0.67]}, 
     {RGBColor[0.878431, 0.4, 0.2], 
      SphereBox[{{0., 0., 3.104075}, {0., 0., 9.312225}, {8.16245, 
       4.71259270474686, 7.242841666666667}, {8.16245, 4.71259270474686, 
       1.0346916666666666`}, {0., 9.42518540949372, 11.381608333333332`}, {0.,
        9.42518540949372, 5.1734583333333335`}, {-8.16245, 14.13777811424058, 
       3.104075}, {-8.16245, 14.13777811424058, 9.312225}, {16.3249, 0., 
       3.104075}, {16.3249, 0., 9.312225}, {8.16245, 14.13777811424058, 
       3.104075}, {8.16245, 14.13777811424058, 9.312225}}, 1.56]}},
    AlignmentPoint->Center,
    AspectRatio->Automatic,
    Axes->False,
    AxesEdge->Automatic,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    BoxRatios->Automatic,
    BoxStyle->{},
    Boxed->False,
    ClipPlanes->None,
    ClipPlanesStyle->Automatic,
    ColorOutput->Automatic,
    ContentSelectable->Automatic,
    ControllerLinking->Automatic,
    ControllerMethod->Automatic,
    ControllerPath->Automatic,
    CoordinatesToolOptions:>Automatic,
    DisplayFunction->Identity,
    Epilog->{},
    FaceGrids->None,
    FaceGridsStyle->{},
    FormatType->TraditionalForm,
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    ImageSizeRaw->Automatic,
    LabelStyle->{},
    Lighting->"Neutral",
    Method->Automatic,
    PlotLabel->None,
    PlotRange->All,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    PreserveImageOptions->Automatic,
    Prolog->{},
    RotationAction->"Fit",
    SphericalRegion->True,
    Ticks->Automatic,
    TicksStyle->{},
    TouchscreenAutoZoom->False,
    ViewAngle->Automatic,
    ViewCenter->Automatic,
    ViewMatrix->Automatic,
    ViewPoint->Above,
    ViewProjection->Automatic,
    ViewRange->All,
    ViewVector->Automatic,
    ViewVertical->{0, 0, 1}], ",", 
   Graphics3DBox[{
     {RGBColor[1, 0, 0], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
     {RGBColor[0, 1, 0], 
      Arrow3DBox[
       Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
     {RGBColor[0, 0, 1], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 0.}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
     {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
       12.4163}}]}, 
     {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQA2JmIJ6rsJ1lz1dhB+7HnK2bbio5PGAqVl2wUcQh5nON
xr6vzAfq/qXzutVpw8Xv+358sBMoXpU4ycUqSwQu/tKzJqpmtZhDWoTIjlxB
JYfVvXFNIn0f7HdxXFvO5aflYOCzfNWGm0Jwca3ybWZVQPXzQzbOm8lx0x4m
XraguscqkROufrvnorRVP2QcnLfO1J8ToApXDxN/cnqb7GygOMxemPg9iDsd
YO6cfmXf1qTDag5Q/x6A+RcmDvWvA8y/MPFosLiwAwMU7PzT/uX2fCWoOPOB
2SmNR7U8BR1g4jB/Xb02p/zrQmV08QMwcZ9lXG6qVzmg4mpw82HiUPMdYObD
xH/9eu9ilsh5QLkz9laXmw7c/B8QcQeYOEw945arB16u0HZAdycsPNHdAwDL
tu1e
       "], 0.87]}, 
     {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmIH7keZDTuljWocn9//T1HsoO3E/7PFT1JB0YzZ9d
qNURdLCzXnLl1cMf9jDxyyukm1eu1HR4+EJtfnkbO1z9mQSn3T/XCDm8Ojf5
05sUNYe3bSdclq7QcNhkPpfz04yX+x2a97Rs+y0IF19fLPtl22e+A7sZT9b7
amnCxbdA1NvD1Pemtzmr1kg4rIKod4Cph4mfhdh7AGYvTFxEIVV+/yduuDsX
rOdfyOCwzf6Ft8ix3W8U4f6FiYdfbUySEtCA+xcmvkCmXdcWGD6/ZCP3uuw/
bX/urWib3D0VB5/aC/NzXmo4/I+6EK8tJOkAE+815rj/GxgOCw5YVb2ZIwcX
74GK/43zz7kc+cf+0naJg+KmAg4w83c83zh9c5aSA0zcG2r+oao/r7KdOOHi
bqbfr+8Buh+mnn/9xGa5VhUHLcmV1ruB4QNTDxO/sNKs/q6/OtxedHGYO/1N
FY+JPxdwcIeaD/MvTFwbaj7MvzDxFWdPqzPPfLn/mlN467rtwg6f7zzmlHZg
dHBKUVhbDUw/xVnz7r//qgoXn3j0Q9rhT9wHnOdezgnYrQEXnwQVXxrYYKX5
QdJhCfevpJmJCnDzV6tkHO+9rg0Xh5nvvv1VyKsqebj4gYV5rx8A0w9M/efD
S/+b7vhvf4BzzZd6HcEDMPUw8RlVN6/vAqYTmL3o4jB3JnvVpc7chTAf5l+4
ONR8mH9h4gBhp5ab
       "], 0.56]}, 
     {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1: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

       "], 0.53]}, 
     {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1: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
       "], 0.67]}, 
     {RGBColor[0.878431, 0.4, 0.2], 
      SphereBox[{{0., 0., 3.104075}, {0., 0., 9.312225}, {8.16245, 
       4.71259270474686, 7.242841666666667}, {8.16245, 4.71259270474686, 
       1.0346916666666666`}, {0., 9.42518540949372, 11.381608333333332`}, {0.,
        9.42518540949372, 5.1734583333333335`}, {-8.16245, 14.13777811424058, 
       3.104075}, {-8.16245, 14.13777811424058, 9.312225}, {16.3249, 0., 
       3.104075}, {16.3249, 0., 9.312225}, {8.16245, 14.13777811424058, 
       3.104075}, {8.16245, 14.13777811424058, 9.312225}}, 1.56]}},
    AlignmentPoint->Center,
    AspectRatio->Automatic,
    Axes->False,
    AxesEdge->Automatic,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    BoxRatios->Automatic,
    BoxStyle->{},
    Boxed->False,
    ClipPlanes->None,
    ClipPlanesStyle->Automatic,
    ColorOutput->Automatic,
    ContentSelectable->Automatic,
    ControllerLinking->Automatic,
    ControllerMethod->Automatic,
    ControllerPath->Automatic,
    CoordinatesToolOptions:>Automatic,
    DisplayFunction->Identity,
    Epilog->{},
    FaceGrids->None,
    FaceGridsStyle->{},
    FormatType->TraditionalForm,
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    ImageSizeRaw->Automatic,
    LabelStyle->{},
    Lighting->"Neutral",
    Method->Automatic,
    PlotLabel->None,
    PlotRange->All,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    PreserveImageOptions->Automatic,
    Prolog->{},
    RotationAction->"Fit",
    SphericalRegion->True,
    Ticks->Automatic,
    TicksStyle->{},
    TouchscreenAutoZoom->False,
    ViewAngle->Automatic,
    ViewCenter->Automatic,
    ViewMatrix->Automatic,
    ViewPoint->Above,
    ViewProjection->Automatic,
    ViewRange->All,
    ViewVector->Automatic,
    ViewVertical->{0, 0, 1}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679797862597*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"56564cd5-a61c-4109-8a0f-78398c1d2712"]
}, Open  ]],

Cell[TextData[{
 "If we now are to \[OpenCurlyDoubleQuote]glue\[CloseCurlyDoubleQuote] them \
together, the molecules will overlap at the edges. We therefore want to \
\[OpenCurlyDoubleQuote]clear\[CloseCurlyDoubleQuote] the edges, and we can do \
this with the option ",
 StyleBox["\[OpenCurlyDoubleQuote]TrimBoundary\[CloseCurlyDoubleQuote]", 
  "CodeText"],
 " of ",
 ButtonBox["EmbedStructure",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/EmbedStructure"],
 ":"
}], "Text",
 CellChangeTimes->{{3.780676845227769*^9, 3.780676947073325*^9}, {
  3.780677223020195*^9, 
  3.780677226419662*^9}},ExpressionUUID->"c4d305ae-3745-47b2-9094-\
adf5c5b11f74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EmbedStructure", "[", 
   RowBox[{
    RowBox[{"{", "\"\<FerroceneMolecule\>\"", "}"}], ",", "targetPositions", 
    ",", "\"\<ThioureaHost_1x1x1\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<NewLabel\>\"", "\[Rule]", "\"\<BlockA\>\""}], ",", 
    RowBox[{"\"\<TrimBoundary\>\"", "\[Rule]", "\"\<OuterEdges\>\""}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EmbedStructure", "[", 
   RowBox[{
    RowBox[{"{", "\"\<FerroceneMolecule\>\"", "}"}], ",", "targetPositions", 
    ",", "\"\<ThioureaHost_1x1x1\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Rotations\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"\"\<NewLabel\>\"", "\[Rule]", "\"\<BlockB\>\""}], ",", 
    RowBox[{"\"\<TrimBoundary\>\"", "\[Rule]", "\"\<OuterEdges\>\""}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CrystalPlot", "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<BlockA\>\"", ",", "\"\<BlockB\>\""}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.780676962425351*^9, 3.780677001024756*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"52299481-cb68-408b-91a6-be745aefa10b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{
     {RGBColor[1, 0, 0], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
     {RGBColor[0, 1, 0], 
      Arrow3DBox[
       Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
     {RGBColor[0, 0, 1], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 0.}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
     {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
       12.4163}}]}, 
     {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQAmJmIJ6rsJ1lz1dhB+7HnK2bbio5PGAqVl2wUcQh5nON
xr6vzAfq/qXzutVpw8Xv+358sBMoXpU4ycUqSwQu/tKzJqpmtZhDWoTIjlxB
JYfVvXFNIn0f7HdxXFvO5aflYOCzfNWGm0Jwca3ybWZVQPXzQzbOm8lx0x4m
XraguscqkROufrvnorRVP2QcnLfO1J8ToApXDxN/cnqb7GygOMxemPg9iDsd
YO6cfmXf1qTDag5Q/x6A+RcmDvWvA8y/MPFosLiwAwMU7PzT/uX2fCWoOPOB
2SmNR7U8BR1g4jB/Xb02p/zrQmV08QMwcZ9lXG6qVzmg4mpw82HiUPMdYObD
xAG+E8BZ
       "], 0.87]}, 
     {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmIH7keZDTuljWocn9//T1HsoO3E/7PFT1JB0YzZ9d
qNURdLCzXnLl1cMf9jDxyyukm1eu1HR4+EJtfnkbO1z9mQSn3T/XCDm8Ojf5
05sUNYe3bSdclq7QcNhkPpfz04yX+x2a97Rs+y0IF19fLPtl22e+A7sZT9b7
amnCxbdA1NvD1Pemtzmr1kg4rIKod4Cph4mfhdh7AGYvTFxEIVV+/yduuDsX
rOdfyOCwzf6Ft8ix3W8U4f6FiYdfbUySEtCA+xcmvkCmXdcWGD6/ZCP3uuw/
bX/urWib3D0VB5/aC/NzXmo4/I+6EK8tJOkAE+815rj/GxgOCw5YVb2ZIwcX
74GK/43zz7kc+cf+0naJg+KmAg4w83c83zh9c5aSA0zcG2r+oao/r7KdOOHi
bqbfr+8Buh+mnn/9xGa5VhUHLcmV1ruB4QNTDxO/sNKs/q6/OtxedHGYO/1N
FY+JPxdwcIeaD/MvTFwbaj7MvzDxFWdPqzPPfLn/mlN467rtwg6f7zzmlHZg
dHBKUVhbDUw/xVnz7r//qgoXn3j0Q9rhT9wHnOdezgnYrQEXnwQVXxrYYKX5
QdJhCfevpJmJCnDzV6tkHO+9rg0Xh5nvvv1VyKsqebj4gYV5rx8A0w9M/efD
S/+b7vhvf4BzzZd6HcEDMPUw8RlVN6/vAqYTmL3o4jB3JnvVpc7chTAf5l+4
ONR8mH9h4gBhp5ab
       "], 0.56]}, 
     {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1: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

       "], 0.53]}, 
     {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxlk2lQE3cYxrlSDAFsAwS5QjZLAgRk5HAMtHRfEWKtUDmnQ0VUQFCBco9y
KApGVAYQtQgZEQpRDpFRDi0tslGwHoSzLQjYVkBEcZRbAyKWKdl8yO7M/8tv
nnne/e2+fyQkxnefmoqKyncrR33lhJ48P7DUbQy0UaqwboANz9QSOKU39UHg
/o10wFUPmNIwifPRaYzgbzKPFxvPWIOPg2mS+5y2Iv+Zoe7U0Eo+L41xJ5nK
gWs5wRn6uVNYV5XwflzAe3yDZ0X1jQG6grMCAz8ud2tJLk96l7UyeArevZrH
iPztbWXh1TJT4K7mgcgTnLI6V0LMJfiV+o7GxZU88Z4X/2xpDGnlgni9zT+D
rqjCl+ANnd1hUZqWCl+Co//PNQYV+dO0lDU3VMKWcy3J2xphl5uzIRB8q/y7
1dSJ4l9VsZS5hOCeV7UEnL/WyDmq6Ce4vB+IfoJXROcaNpuP4rr2wbPVnVOY
buQLd5HwPXZeo2irT8I4dj9++zUkbgpriIr7KeaUDLue21cv2jSDsXecqy1K
a8XKYyOXpgR6cKm9GX35vBU72doryTs4jc20z65JdNIj9a/d7N6ffYsJyv3J
qhE2m98zQbn/MO1LhKbLJfWbO6dXSDW4YOv1qTh+nSlcTkg06nClQ5b4A9vL
lAEoqv5wrxsTfjgnKQ/SMYSfqQUH02MY4Cp8rVGkzoLI6v1vTJa1gb8tgfHY
jgGNa+aa9j5G4NHIbz6L8wygPf6lxekGA0Idez3TzrMhZFdRIs/zC1DzE/ok
X2CA27fzH8xFbDhbuKuhIEkPJJOjEycmEBDsng23EiJQOcv21/XUAcc7jAev
JQiIIqkCSRkLFm6Z9Qc4GcJ+M6s4wfBKvluVPXnbDNp9bWW9KTqwHEQxyy9F
4FWKx1ITxxSktfxA5wh9yFxX8sePtQjJ10b38Lq7v4/hyr47x8RDdutHcWXf
ype/pg04jOHKvjojuS4nLIdxZd8AEU+8mzKCK/tGxKeYP/pEIftWepwNC6SQ
fDWts/ldgxSS7x5LlZcL/Rok33iDiHuxaylQs7oP+GCz3TE8mw11VNtlhwAU
KuV75Sz198iatQDsqwVEehSF0tU9wSuud77dXcMCrafjh+KCUSiU71tMoq9p
37gFJF7SknJLUGjov+NyRG0Ga7a/u/4tnQ2Tz2INtuWjxFzMf0e5l9gSBTvL
c9/n2/OIudg8duTUU5wFZXNtjjJNHjEXywpW/1ddkwN9/n1/+1rxiLk4fjH9
Zk47C6Iv1J8uHrcm5uLxg5+XJpWiML3DC1LnrUm+9oOiqOPVNJLvPnHXhzFv
bZJvPnrGL7WLRvLlcwzE3r3aJF/uptpHAyJtki+90ujAxxwTkq/MLR1pdzEh
+e5RL0s6lmpC8s3JCOowWDQm+RYs5Ln0GJjAxOp/lzxs2Ig8SLeB/LPlz44b
yTBlHnvGsUU4xIThjcXl1HA78MxetDj05AlmdW+4o62TTuIuTu+o8z0cxX15
gZUnFMps4EpfGreH/w77Wn4v6jZsGeEb8SDiwM65tox3GLHPqq3TqY22PDhN
62lomaXDFmJvjefE4XwemG+v3UOtp5P654eq8gJDmaDcf/UYktmXxATl/okn
0R/jnnNI/Y2Hg/wM2zjwH775Usw=
       "], 0.67]}, 
     {RGBColor[0.878431, 0.4, 0.2], 
      SphereBox[{{0., 0., 3.104075}, {0., 0., 9.312225}, {8.16245, 
       4.71259270474686, 7.242841666666667}, {8.16245, 4.71259270474686, 
       1.0346916666666666`}, {0., 9.42518540949372, 11.381608333333332`}, {0.,
        9.42518540949372, 5.1734583333333335`}}, 1.56]}},
    AlignmentPoint->Center,
    AspectRatio->Automatic,
    Axes->False,
    AxesEdge->Automatic,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    BoxRatios->Automatic,
    BoxStyle->{},
    Boxed->False,
    ClipPlanes->None,
    ClipPlanesStyle->Automatic,
    ColorOutput->Automatic,
    ContentSelectable->Automatic,
    ControllerLinking->Automatic,
    ControllerMethod->Automatic,
    ControllerPath->Automatic,
    CoordinatesToolOptions:>Automatic,
    DisplayFunction->Identity,
    Epilog->{},
    FaceGrids->None,
    FaceGridsStyle->{},
    FormatType->TraditionalForm,
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    ImageSizeRaw->Automatic,
    LabelStyle->{},
    Lighting->"Neutral",
    Method->Automatic,
    PlotLabel->None,
    PlotRange->All,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    PreserveImageOptions->Automatic,
    Prolog->{},
    RotationAction->"Fit",
    SphericalRegion->True,
    Ticks->Automatic,
    TicksStyle->{},
    TouchscreenAutoZoom->False,
    ViewAngle->Automatic,
    ViewCenter->Automatic,
    ViewMatrix->Automatic,
    ViewPoint->Above,
    ViewProjection->Automatic,
    ViewRange->All,
    ViewVector->Automatic,
    ViewVertical->{0, 0, 1}], ",", 
   Graphics3DBox[{
     {RGBColor[1, 0, 0], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
     {RGBColor[0, 1, 0], 
      Arrow3DBox[
       Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
     {RGBColor[0, 0, 1], 
      Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 0.}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
     {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
       14.13777811424058, 12.4163}}]}, 
     {GrayLevel[0], 
      Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
       12.4163}}]}, 
     {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQAmJmIJ6rsJ1lz1dhB+7HnK2bbio5PGAqVl2wUcQh5nON
xr6vzAfq/qXzutVpw8Xv+358sBMoXpU4ycUqSwQu/tKzJqpmtZhDWoTIjlxB
JYfVvXFNIn0f7HdxXFvO5aflYOCzfNWGm0Jwca3ybWZVQPXzQzbOm8lx0x4m
XraguscqkROufrvnorRVP2QcnLfO1J8ToApXDxN/cnqb7GygOMxemPg9iDsd
YO6cfmXf1qTDag5Q/x6A+RcmDvWvA8y/MPFosLiwAwMU7PzT/uX2fCWoOPOB
2SmNR7U8BR1g4jB/Xb02p/zrQmV08QMwcZ9lXG6qVzmg4mpw82HiUPMdYObD
xAG+E8BZ
       "], 0.87]}, 
     {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmIH7keZDTuljWocn9//T1HsoO3E/7PFT1JB0YzZ9d
qNURdLCzXnLl1cMf9jDxyyukm1eu1HR4+EJtfnkbO1z9mQSn3T/XCDm8Ojf5
05sUNYe3bSdclq7QcNhkPpfz04yX+x2a97Rs+y0IF19fLPtl22e+A7sZT9b7
amnCxbdA1NvD1Pemtzmr1kg4rIKod4Cph4mfhdh7AGYvTFxEIVV+/yduuDsX
rOdfyOCwzf6Ft8ix3W8U4f6FiYdfbUySEtCA+xcmvkCmXdcWGD6/ZCP3uuw/
bX/urWib3D0VB5/aC/NzXmo4/I+6EK8tJOkAE+815rj/GxgOCw5YVb2ZIwcX
74GK/43zz7kc+cf+0naJg+KmAg4w83c83zh9c5aSA0zcG2r+oao/r7KdOOHi
bqbfr+8Buh+mnn/9xGa5VhUHLcmV1ruB4QNTDxO/sNKs/q6/OtxedHGYO/1N
FY+JPxdwcIeaD/MvTFwbaj7MvzDxFWdPqzPPfLn/mlN467rtwg6f7zzmlHZg
dHBKUVhbDUw/xVnz7r//qgoXn3j0Q9rhT9wHnOdezgnYrQEXnwQVXxrYYKX5
QdJhCfevpJmJCnDzV6tkHO+9rg0Xh5nvvv1VyKsqebj4gYV5rx8A0w9M/efD
S/+b7vhvf4BzzZd6HcEDMPUw8RlVN6/vAqYTmL3o4jB3JnvVpc7chTAf5l+4
ONR8mH9h4gBhp5ab
       "], 0.56]}, 
     {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxlk2lUk2cahmOC7A2EQAkQQhJICEGoqajFqt+jEXABQUZkKbUGXBiwMizK
WEAYBUExiJZBgjos4pHlyNoii5oUxVrEalHccBhFBI2ApCyCUjM5J9/7eQ75
kT/Xuc/9PNeb5+NExAbuIJNIpAzNj6L5VYUlFZ5OZMNBH/Wp2rWOYPIydy3P
3QZyycU/qPupYDyRV5AVSyb4lF/AfmGXAJIsXsW/zJpHcHp19YUPKnPIzDiX
emLAGUYO31xzvkIA4BB3YP+lOgwOXc5o+kAjeF7seeljD5qC7dsyUVH1Kc/W
5uUoL911WMxLYcBxbR5QHnF8rgLNRTw756R3W5QZsWdJrVkpCZow94LUhiui
T76Ieyz02y0bERC+iButCas6o3mf9/ahV9bIb2G/j1gdZvU5QSx3fsGIiQA8
brzdm0hjAuL3UuNu/aV5h5ggu+3nztoRvBvnrzN39ie76kH3JcYv1ovNAfU3
D9WfaozmEnwP3r+l/MrVx2IKwY+lbbt+VfQpb1Z74hAr0wn8V8fU92reB+UR
v6hHPhLuJiDmIl6Dc7Sn/2LODeshc5Di/cgX8Y14P/JFPD129thYUx32YHVw
Zs0lOow/fWFkB/PA4lv6og+a+/mMXROdv9eZ4HoiVq48ykxRMXTtefXXuvzJ
5eKA+LdMKDd5HyGTsIn+aqeoX6UPXQlujvfTfG+tLE3+lCfdeRlLbq6To/z4
tfPqxc1qzLRC2E55QVWgPMEH9dVNmjtBc+dytGfk+gM7ZK1sePa7th/5Im6C
9yNfxJu7XjcUKuyARHUSW5xwhERb6tg6JhMWnLcf2ZNNA+ouH2jvU2GIB9bF
sMlBQiB7ti//16ARkb8V2z9ZRbGEF+8X5Ci7eLB02FB1UuQMB/MWbCOfGpd7
TcW7q6JpBA8+VdN2/2uqYtWZzScbjIUET9fmMZR3/NLgDCnXCrZo84DyiHdp
5yrQXMQZZF5VuJcRsad3qV0Az1OJpRinq0xvcAlfxFezdt7n9DsTvojvLa59
UKR5n6atXtfevXmAHczuebwwiA8Sj2G3HdYuMMFrWSbZZA2IH11dYXNR8w71
UYbrVF0OOrztKkOkkL3D7uotWjQoNYZ9eP8yjnQ4gMsFxCPw/kcDwsWk66YE
fzoeQaFq9kf5MMvuL0ypjnBv+TLKY837oDzim8oGn2eU84m5cznaszW65Pvl
PXToxfuRL+KoH/kintwrfmus+X//uFPSm7DWEn716Q/ZzjSA77uDf9utuZ/h
Oxa3j1rxCF5woU61zctIsSFu2f3Av7kQPB/n+ZUNMU4KBvQ9T2RRe+whBe93
2ypmuh53JfgevN9lirTiyVk2wbO9rP6YKRjHUH7daIXknHoce5P0wjwum6ZA
ecRPh8siQjR3guYiXohztCfj5YqWahGX6Ee+iKN+5Iv4aKRt+H7bbvm+00Hz
JPNnsabbm7N9ylQYOTh/SRptEit2NpSqxdMYk7tnIy+BDsx54ueUYTV2qOAn
s+ez01jlQzdy5H/JMIb3JOE9LY8dBJdW2AMF7ynHezy2L1/Pc+ITPRl4j/lv
eZFvOBzYNP+fsvgoBpTTmmyzRmwgfSTheFqlHdTcfTahFDOBOzx9oDjUBh75
D+c2OHKhaP2in+szHGBy90pn414b8C2La6uasgRfit+x8EkuqM1cO+uVDDiw
9iW9mMSFvEdlnIsBTtDs+kCoZNhAQ1hCWOesDbiPfvXRId4JLCaX7mzJMYDs
Av+/P/RhQXp2xt3IDC7YQsPZ7EZDCBlQPlFVWkHOhm/+QRpgQ/xKZ7/GOgPo
G6tgbUnlgnWvf+qMxA4k034G208YAXV8+i5jzApyF5YHhlQzYFTxzmvcwwiC
XAL+c2zCQcdX5rl+Q3fZIDbX9+afp2vTBvShEPedwH2N2Dc33x8flc/1De9J
uyYK0dfxDfPO8d70Qzc213dUQZfe7JzEkK817ltl9jHkdOhr+THcNwH3fbYv
d/SzDYbAwH234r7vZdKKSMGQHPkO474c088lZ1NnMdOHMxG3k0mKvpw76Wci
+eDmHuXRZceH8vSAkJYjKjlzZqyhwoYP3llFH65GC4m7OtxCN9gaxod8w12d
knYuGOJ3ZWxy9JGonwfKtB/Tq32ExF0NFf7PcOMMD24MDMnivHhA1c6FYtL8
otxiFjSSt3Cmo53RXMyJ37543yIHKKp0DJvPdERzMf/zKVKTBhb4CoJzIq4L
QU87V+5NzlNGlmnurk7Yw8AcwVY7V547OHDENdEBbHwftAWuEsBcX7OmDm5C
BF3Hd1WUsD6ExNTxbe05fHb5d0aErwnumxPKbBO12un4ih07Rq78TNPxtf2u
dLaT9LmOb3fo/qedHcaE7ybc16/q3N3iRqaOL5b075uMQBMd3yFVqSj9ojW6
Z8U3lCQouSyAYP9Bh9QEE6jV3rOCWRBEzdd3gVc9nvrbYyewufnZwY/KOB9H
Is/C8x12Mp+PY/Zglbzkzx1ZC8DT3ePOZv9ZTPyX++7bS/Th2jOlA3evO7gW
Ytua1DPYvYUpa3xb6ER+KZ5PsqB99JrmEHk3PH88RtzxlQ+f+K5/6vmyta9D
AM/iJyN/3G1JfNdfZFx+ZbzSBRTm8X3qrEnsBH7ngVM7m0f5LjCcOHRkqIuq
01NgSgp6WsLX6UkRXljBW8qCuT2ShWmZXfZO8H+QGmBt
       "], 0.53]}, 
     {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxlk2lQE3cYxhcRCKA1SIAEY47NQUBBCxVHmLhvUyCgKAXRjqUtcjoDdQQp
baVgFYc4oFItNwJqpFIuFQUxDphUoONwCDhWjIhyWaXlEgKiRClTdvdDdmf+
X37zzvPsb/f988MPBkUtQxBk5+IxXjwRiiytvsseLIfM065rUehfliC6UMMA
Hy/fdq3UGjjtkZotR15jBB87fqzYfsoRAl3ZiV66FeS8qd1Hk72L878k2zYe
NhdB5elvUhmZk1hneVpL/O436o3+ZRXXtKtJztu79/2HLgtNycTnyiZbJ5J3
Lc1jxHy9nzK6Yo4N4qV5IOYJbrLUqyF6Cf7bjY66d4vzxHvmPbxTF94khlLn
dc+eSAWkL8Fr73dFfmvmQPoSXPB/rz0g+KPSn9D1nkdxbqEZr0rrlG2xA4LL
8e9Wdb3w0Eg5z5BrCO5/2cJH9BcN5wIyn+B4PhD5BL98INOugTukTh9wkV8T
vsNinj8NlZbQoaitQfBquEm9cUiVl+Ywj6V7XYzq4yKQtbxAHpjwEht6fmn2
Cf8t1rPh8cpeBR1UPY0eKcumMLOG+Mp7Z95ig8GxYba3Tcj8U3h+793poBqV
kJLvW3pAn36IR8lfHfvaEbkihFt4Pg3PD5Xs82Rq+bB+x0LxISYbsgUBQL/J
gowNY1f+/IoNqMD4XpiMA0l3auf6wlkgLCtir8vlgTTt3+UFxjwYPNLjn3WJ
BaiV8ymzEibU0nSqsFY+0D+cLZWgLAgJKJw+nMGDCLcH/slZKLASW6yGpSzY
yVptIYxdA59um5nnFqLg3m2ypuydGaQEP/I7k70WfEKnoyVpfIg551FheZEG
f2zKUCMtTCiINffRKHmQYz9jdJFLg4Qt22+WLf437y4jdKJ+LWxlHw36HjWH
wBeZVhFPmfAqyVuvErHByYX148I/NFDF1Iy7KjgU39d+DLmldBQz9NUFfP13
2BWE4svPaR1/mlmpNvR9MLlLVvwzQvG1yvfkzV4dxgx9795yWVX1fgoz9NWc
jDuqEJ5RG/q6FtjtCNYj4IP7euK+C7Z6usubZMzQ97rVOaV78yxWlfnoRuHm
KfVDRpH1gFwMbp3C5oOJYvgd3yv54P0JOUcMvz7blr65TwIX8L1KkfUXKLeK
AdE0u9JzhZCP75V1aqP32HsR3FP47lN0S6AW36t86Rf6Vksx2HjVx5foRYD3
YjXjsd+Z9HCgOqzgbLCVA9GLte4ybdjsxIWdQQntp8qFRC8WnjW0P3WEAwNx
b9HaSQlkL/Wq3RiO9LEYLjArEmekdUKiV72+eEb5cQAX2kZNh0UZDmDou2Zu
q+y2DYPiq7U92e73gknxrdMe4c7voVN8vfcrkl52MCm+zwciiu2E1hTfVWsl
fcd32JC+bbhv4IfeIF0KnfSNxH0TPV8tyFawSN9NuO+L6v7SPTl0iu92N+NU
MWYLzkv7rIlMqqgOeSwBrG26f3yFBYXPestC7o+hYMRN0kWFusBUYn7U4fh5
7Mtj/MqQYjOS63CefKPj9EggSt7HqaofunVGjtB8OqS98wBC3sdG/2iHwgEJ
0JZ7ZLm30OEzfD/FK9N/CkAdYXQ0Mi67CIERfD+VgRPN8QxHqH9T7vTJpCUl
P8+dnWuq4FHynXYrR507hOCF5zvg+WGZHHX9WR4ln9F9tfp8tAD+Awm/Rsc=

       "], 0.67]}, 
     {RGBColor[0.878431, 0.4, 0.2], 
      SphereBox[{{0., 0., 3.104075}, {0., 0., 9.312225}, {8.16245, 
       4.71259270474686, 7.242841666666667}, {8.16245, 4.71259270474686, 
       1.0346916666666666`}, {0., 9.42518540949372, 11.381608333333332`}, {0.,
        9.42518540949372, 5.1734583333333335`}}, 1.56]}},
    AlignmentPoint->Center,
    AspectRatio->Automatic,
    Axes->False,
    AxesEdge->Automatic,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    BoxRatios->Automatic,
    BoxStyle->{},
    Boxed->False,
    ClipPlanes->None,
    ClipPlanesStyle->Automatic,
    ColorOutput->Automatic,
    ContentSelectable->Automatic,
    ControllerLinking->Automatic,
    ControllerMethod->Automatic,
    ControllerPath->Automatic,
    CoordinatesToolOptions:>Automatic,
    DisplayFunction->Identity,
    Epilog->{},
    FaceGrids->None,
    FaceGridsStyle->{},
    FormatType->TraditionalForm,
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    ImageSizeRaw->Automatic,
    LabelStyle->{},
    Lighting->"Neutral",
    Method->Automatic,
    PlotLabel->None,
    PlotRange->All,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    PreserveImageOptions->Automatic,
    Prolog->{},
    RotationAction->"Fit",
    SphericalRegion->True,
    Ticks->Automatic,
    TicksStyle->{},
    TouchscreenAutoZoom->False,
    ViewAngle->Automatic,
    ViewCenter->Automatic,
    ViewMatrix->Automatic,
    ViewPoint->Above,
    ViewProjection->Automatic,
    ViewRange->All,
    ViewVector->Automatic,
    ViewVertical->{0, 0, 1}]}], "}"}]], "Output",
 CellChangeTimes->{3.780679824167266*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"51ac2076-3444-4f24-8e63-762bb6de4000"]
}, Open  ]],

Cell["\<\
There can be some slight hiccups with the carbon rings, but we will ignore \
that for now. Let us synthesise some demo structures from these two blocks:\
\>", "Text",
 CellChangeTimes->{{3.7806770252156963`*^9, 
  3.7806770578073397`*^9}},ExpressionUUID->"376ff5c1-1f61-4f1c-8b2c-\
3bdbb6f7b609"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SynthesiseStructure"}]], "Input",
 CellChangeTimes->{{3.780662668157996*^9, 3.780662671165779*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"4701021b-1090-4630-bca1-98822fcd195b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SynthesiseStructure",
              ButtonNote->"paclet:MaXrd/ref/SynthesiseStructure"],
             "\"paclet:MaXrd/ref/SynthesiseStructure\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SynthesiseStructure\\\", \\\"[\
\\\", StyleBox[\\\"blocks\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"A\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"B\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"C\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\
\\\", StyleBox[\\\"label\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" assembles \\\", \
Cell[BoxData[StyleBox[\\\"blocks\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\" to a structure called \\\", Cell[BoxData[StyleBox[\\\"label\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" with size \\\", \
Cell[BoxData[RowBox[{StyleBox[\\\"A\\\", \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"B\\\", \\\"TI\\\"], \\\"\[Times]\\\", StyleBox[\\\"C\\\", \\\"TI\
\\\"]}]], \\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/SynthesiseStructure", 
                    "paclet:MaXrd/ref/SynthesiseStructure", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SynthesiseStructure", "[", 
                    RowBox[{
                    "MaXrd`Private`blocks_List", ",", 
                    "MaXrd`Private`outputSize_List", ",", 
                    "MaXrd`Private`outputName_String", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`blockSizes", ",", 
                    RowBox[{"MaXrd`Private`selectionMethod", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"SelectionMethod\"\>", "]"}]}], 
                    ",", "MaXrd`Private`insertionCoordinates", ",", 
                    "MaXrd`Private`b", ",", "MaXrd`Private`numberOfBlocks", 
                    ",", "MaXrd`Private`blocksToUse", ",", 
                    "MaXrd`Private`buildTasks", ",", 
                    "MaXrd`Private`TwoDimensionalQ", ",", 
                    RowBox[{"MaXrd`Private`typeOfRotationPoint", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"RotationPoint\"\>", "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`rotationMap", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"RotationMap\"\>", "]"}]}], ",", 
                    "MaXrd`Private`coordinateDomainMap", ",", 
                    "MaXrd`Private`R", ",", "MaXrd`Private`\[Zeta]"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"InputCheck", "[", 
                    RowBox[{"#1", ",", "\<\"CrystalQ\"\>"}], "]"}], "&"}], 
                    ",", "MaXrd`Private`blocks"}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\<\"Random\"\>", ",", "\<\"Sequential\"\>"}], 
                    "}"}], ",", "MaXrd`Private`selectionMethod"}], "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    "SynthesiseStructure", "::", "InvalidSelectionMethod"}], 
                    "MessageName"], ",", "MaXrd`Private`selectionMethod"}], 
                    "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`TwoDimensionalQ", "=", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`outputSize", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "===", "1"}]}], ";", 
                    RowBox[{"MaXrd`Private`blockSizes", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"$CrystalData", "[", 
                    RowBox[{
                    "#1", ",", "\<\"Notes\"\>", 
                    ",", "\<\"StructureSize\"\>"}], "]"}], "&"}], ")"}], "/@",
                     "MaXrd`Private`blocks"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "@@", "MaXrd`Private`blockSizes"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "SynthesiseStructure", "::", "DifferentBlockSizes"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`blockSizes", "=", 
                    RowBox[{
                    "MaXrd`Private`blockSizes", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "MaXrd`Private`outputSize", "]"}], 
                    "\[NotEqual]", "3"}], "||", 
                    RowBox[{"AnyTrue", "[", 
                    RowBox[{"MaXrd`Private`outputSize", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Positive", "[", "#1", "]"}], "\[Nand]", 
                    RowBox[{"IntegerQ", "[", "#1", "]"}]}], "&"}]}], "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "SynthesiseStructure", "::", "InvalidOutputSize"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Mod", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`outputSize", ",", 
                    "MaXrd`Private`blockSizes"}], "}"}]}], "]"}], "]"}], "=!=",
                     "0"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "SynthesiseStructure", "::", "IncompatibleOutputSize"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`b", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    "OptionValue", "[", "\<\"UsePlacementBuffer\"\>", "]"}], 
                    "]"}], ",", "2", ",", "1"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`insertionCoordinates", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "MaXrd`Private`j", ",", 
                    "MaXrd`Private`k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`b", " ", 
                    RowBox[{
                    "MaXrd`Private`outputSize", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "-", "1"}], ",", 
                    RowBox[{"MaXrd`Private`b", " ", 
                    RowBox[{
                    "MaXrd`Private`blockSizes", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`b", " ", 
                    RowBox[{
                    "MaXrd`Private`outputSize", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "-", "1"}], ",", 
                    RowBox[{"MaXrd`Private`b", " ", 
                    RowBox[{
                    "MaXrd`Private`blockSizes", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`k", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`b", " ", 
                    RowBox[{
                    "MaXrd`Private`outputSize", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "-", "1"}], ",", 
                    RowBox[{"MaXrd`Private`b", " ", 
                    RowBox[{
                    "MaXrd`Private`blockSizes", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ",", "2"}],
                     "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`numberOfBlocks", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"Divide", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`outputSize", ",", 
                    "MaXrd`Private`blockSizes"}], "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`blocksToUse", "=", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"MaXrd`Private`blocks", ",", 
                    RowBox[{"Ceiling", "[", 
                    FractionBox["MaXrd`Private`numberOfBlocks", 
                    RowBox[{"Length", "[", "MaXrd`Private`blocks", "]"}]], 
                    "]"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "MaXrd`Private`numberOfBlocks"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`selectionMethod", 
                    "===", "\<\"Random\"\>"}], ",", 
                    RowBox[{"MaXrd`Private`blocksToUse", "=", 
                    RowBox[{
                    "RandomSample", "[", "MaXrd`Private`blocksToUse", 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`rotationMap", "=!=", 
                    RowBox[{"Association", "[", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`coordinateDomainMap", ",", 
                    "MaXrd`Private`\[Zeta]", ",", "MaXrd`Private`R"}], "}"}], 
                    "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{"\<\"DomainRotation\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    "MaXrd`Private`insertionCoordinates", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
                    "MaXrd`Private`b"], "+", "1"}], ",", 
                    RowBox[{
                    "MaXrd`Private`blocksToUse", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "MaXrd`Private`numberOfBlocks"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    "MaXrd`Private`rotationMap", ",", 
                    "MaXrd`Private`typeOfRotationPoint", ",", "True"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`insertionCoordinates", "=", 
                    RowBox[{
                    "Keys", "[", "MaXrd`Private`coordinateDomainMap", 
                    "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`buildTasks", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`blocksToUse", ",", 
                    "MaXrd`Private`insertionCoordinates"}], "}"}], "]"}]}], 
                    ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"$CrystalData", ",", 
                    RowBox[{"MaXrd`Private`outputName", "\[Rule]", 
                    RowBox[{"$CrystalData", "[", 
                    RowBox[{
                    "MaXrd`Private`buildTasks", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"Scan", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EmbedStructure", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    "MaXrd`Private`outputName", ",", 
                    RowBox[{"\<\"MatchHostSize\"\>", "\[Rule]", "False"}], 
                    ",", 
                    RowBox[{"\<\"ShowProgress\"\>", "\[Rule]", "False"}], ",", 
                    RowBox[{"\<\"OverlapPrecedence\"\>", "\[Rule]", 
                    RowBox[{
                    "OptionValue", "[", "\<\"OverlapPrecedence\"\>", "]"}]}], 
                    ",", 
                    RowBox[{"\<\"OverlapRadius\"\>", "\[Rule]", 
                    RowBox[{
                    "OptionValue", "[", "\<\"OverlapRadius\"\>", "]"}]}], ",", 
                    RowBox[{"\<\"Rotations\"\>", "\[Rule]", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{"MaXrd`Private`rotationMap", ",", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}]}], 
                    "]"}], "&"}], ",", 
                    RowBox[{
                    "MaXrd`Private`buildTasks", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], ";", 
                    RowBox[{
                    RowBox[{"$CrystalData", "[", 
                    RowBox[{
                    "MaXrd`Private`outputName", ",", "\<\"Notes\"\>", 
                    ",", "\<\"StructureSize\"\>"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    "Last", "[", "MaXrd`Private`insertionCoordinates", "]"}], 
                    "+", "MaXrd`Private`blockSizes"}]}], ";", 
                    "MaXrd`Private`outputName"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "SynthesiseStructure", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`SynthesiseStructure] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Blank[], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"RotationMap\"\>", "\[Rule]", 
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]},
                    {
                    
                    RowBox[{"\<\"RotationPoint\"\>", 
                    "\[Rule]", "\<\"Centroid\"\>"}]},
                    {
                    
                    RowBox[{"\<\"SelectionMethod\"\>", 
                    "\[Rule]", "\<\"Sequential\"\>"}]},
                    {
                    
                    RowBox[{"\<\"UsePlacementBuffer\"\>", "\[Rule]", 
                    "False"}]},
                    {
                    
                    RowBox[{"\<\"OverlapPrecedence\"\>", 
                    "\[Rule]", "\<\"\"\>"}]},
                    {
                    RowBox[{"\<\"OverlapRadius\"\>", "\[Rule]", "1.`"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","6","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"RotationMap\"\>", "\[Rule]", 
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","6","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`SynthesiseStructure\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/SynthesiseStructure",
              ButtonNote->"paclet:MaXrd/ref/SynthesiseStructure"],
             "\"paclet:MaXrd/ref/SynthesiseStructure\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SynthesiseStructure\\\", \\\"[\
\\\", StyleBox[\\\"blocks\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"A\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"B\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"C\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\
\\\", StyleBox[\\\"label\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" assembles \\\", \
Cell[BoxData[StyleBox[\\\"blocks\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \
\\\" to a structure called \\\", Cell[BoxData[StyleBox[\\\"label\\\", \
\\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" with size \\\", \
Cell[BoxData[RowBox[{StyleBox[\\\"A\\\", \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"B\\\", \\\"TI\\\"], \\\"\[Times]\\\", StyleBox[\\\"C\\\", \\\"TI\
\\\"]}]], \\\"InlineFormula\\\"], \\\".\\\"}]\\)\"\>", "InformationUsageText",
             
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"SynthesiseStructure\", \"[\", StyleBox[\"blocks\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"A\", \"TI\"], \",\", \
StyleBox[\"B\", \"TI\"], \",\", StyleBox[\"C\", \"TI\"]}], \"}\"}], \",\", \
StyleBox[\"label\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" assembles \", \
Cell[BoxData[StyleBox[\"blocks\", \"TI\"]], \"InlineFormula\"], \" to a \
structure called \", Cell[BoxData[StyleBox[\"label\", \"TI\"]], \
\"InlineFormula\"], \" with size \", Cell[BoxData[RowBox[{StyleBox[\"A\", \
\"TI\"], \"\[Times]\", StyleBox[\"B\", \"TI\"], \"\[Times]\", StyleBox[\"C\", \
\"TI\"]}]], \"InlineFormula\"], \".\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/SynthesiseStructure"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`SynthesiseStructure, {MaXrd`SynthesiseStructure[
         Pattern[MaXrd`Private`blocks, 
          Blank[List]], 
         Pattern[MaXrd`Private`outputSize, 
          Blank[List]], 
         Pattern[MaXrd`Private`outputName, 
          Blank[String]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`blockSizes, MaXrd`Private`selectionMethod = 
          OptionValue["SelectionMethod"], MaXrd`Private`insertionCoordinates, 
          MaXrd`Private`b, MaXrd`Private`numberOfBlocks, 
          MaXrd`Private`blocksToUse, MaXrd`Private`buildTasks, 
          MaXrd`Private`TwoDimensionalQ, MaXrd`Private`typeOfRotationPoint = 
          OptionValue["RotationPoint"], MaXrd`Private`rotationMap = 
          OptionValue["RotationMap"], MaXrd`Private`coordinateDomainMap, 
          MaXrd`Private`R, MaXrd`Private`\[Zeta]}, 
         Scan[MaXrd`InputCheck[#, "CrystalQ"]& , MaXrd`Private`blocks]; If[
           Not[
            MemberQ[{"Random", "Sequential"}, MaXrd`Private`selectionMethod]],
            Message[
             MessageName[MaXrd`SynthesiseStructure, "InvalidSelectionMethod"],
              MaXrd`Private`selectionMethod]; Abort[]]; 
         MaXrd`Private`TwoDimensionalQ = 
          Part[MaXrd`Private`outputSize, 3] === 1; 
         MaXrd`Private`blockSizes = 
          Map[MaXrd`$CrystalData[#, "Notes", "StructureSize"]& , 
            MaXrd`Private`blocks]; If[
           Not[
            Apply[SameQ, MaXrd`Private`blockSizes]], Message[
             MessageName[MaXrd`SynthesiseStructure, "DifferentBlockSizes"]]; 
           Abort[]]; 
         MaXrd`Private`blockSizes = Part[MaXrd`Private`blockSizes, 1]; If[
           Or[Length[MaXrd`Private`outputSize] != 3, 
            AnyTrue[MaXrd`Private`outputSize, Nand[
              Positive[#], 
              IntegerQ[#]]& ]], Message[
             MessageName[MaXrd`SynthesiseStructure, "InvalidOutputSize"]]; 
           Abort[]]; If[Total[
             MapThread[
             Mod, {MaXrd`Private`outputSize, MaXrd`Private`blockSizes}]] =!= 
           0, Message[
             MessageName[
             MaXrd`SynthesiseStructure, "IncompatibleOutputSize"]]; Abort[]]; 
         MaXrd`Private`b = If[
            TrueQ[
             OptionValue["UsePlacementBuffer"]], 2, 1]; 
         MaXrd`Private`insertionCoordinates = Flatten[
            
            Table[{MaXrd`Private`i, MaXrd`Private`j, MaXrd`Private`k}, {
             MaXrd`Private`i, 0, 
              MaXrd`Private`b Part[MaXrd`Private`outputSize, 1] - 1, 
              MaXrd`Private`b Part[MaXrd`Private`blockSizes, 1]}, {
             MaXrd`Private`j, 0, 
              MaXrd`Private`b Part[MaXrd`Private`outputSize, 2] - 1, 
              MaXrd`Private`b Part[MaXrd`Private`blockSizes, 2]}, {
             MaXrd`Private`k, 0, 
              MaXrd`Private`b Part[MaXrd`Private`outputSize, 3] - 1, 
              MaXrd`Private`b Part[MaXrd`Private`blockSizes, 3]}], 2]; 
         MaXrd`Private`numberOfBlocks = Apply[Times, 
            MapThread[
            Divide, {MaXrd`Private`outputSize, MaXrd`Private`blockSizes}]]; 
         MaXrd`Private`blocksToUse = Part[
            Flatten[
             ConstantArray[MaXrd`Private`blocks, 
              Ceiling[
              MaXrd`Private`numberOfBlocks/Length[MaXrd`Private`blocks]]]], 
            Span[1, MaXrd`Private`numberOfBlocks]]; 
         If[MaXrd`Private`selectionMethod === "Random", 
           MaXrd`Private`blocksToUse = 
           RandomSample[MaXrd`Private`blocksToUse]]; 
         If[MaXrd`Private`rotationMap =!= 
           Association[], {
             MaXrd`Private`coordinateDomainMap, MaXrd`Private`\[Zeta], 
              MaXrd`Private`R} = 
            MaXrd`InputCheck[
             "DomainRotation", {
              Part[MaXrd`Private`insertionCoordinates, -1]/MaXrd`Private`b + 
               1, 
               Part[MaXrd`Private`blocksToUse, 
                Span[1, MaXrd`Private`numberOfBlocks]]}, 
              MaXrd`Private`rotationMap, MaXrd`Private`typeOfRotationPoint, 
              True]; MaXrd`Private`insertionCoordinates = 
            Keys[MaXrd`Private`coordinateDomainMap]]; 
         MaXrd`Private`buildTasks = 
          Transpose[{
            MaXrd`Private`blocksToUse, MaXrd`Private`insertionCoordinates}]; 
         AppendTo[
          MaXrd`$CrystalData, MaXrd`Private`outputName -> MaXrd`$CrystalData[
             Part[MaXrd`Private`buildTasks, 1, 1]]]; 
         Scan[MaXrd`EmbedStructure[{
             Part[#, 1]}, {
             Part[#, 2]}, MaXrd`Private`outputName, "MatchHostSize" -> False, 
            "ShowProgress" -> False, "OverlapPrecedence" -> 
            OptionValue["OverlapPrecedence"], "OverlapRadius" -> 
            OptionValue["OverlapRadius"], "Rotations" -> 
            Lookup[MaXrd`Private`rotationMap, 
              Part[#, 1], {0, 0, 0}]]& , 
           Part[MaXrd`Private`buildTasks, 
            Span[2, All]]]; 
         MaXrd`$CrystalData[
           MaXrd`Private`outputName, "Notes", "StructureSize"] = 
          Last[MaXrd`Private`insertionCoordinates] + MaXrd`Private`blockSizes; 
         MaXrd`Private`outputName]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`SynthesiseStructure, {
      SyntaxInformation[MaXrd`SynthesiseStructure] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Blank[], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "RotationMap" -> Association[], "RotationPoint" -> "Centroid", 
      "SelectionMethod" -> "Sequential", "UsePlacementBuffer" -> False, 
      "OverlapPrecedence" -> "", "OverlapRadius" -> 1.}, "Attributes" -> {}, 
    "FullName" -> "MaXrd`SynthesiseStructure"], False]]], "Output",
 CellChangeTimes->{3.780679826661655*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"0ade498c-f427-47e9-9318-828452e92879"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SynthesiseStructure", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<BlockA\>\"", ",", "\"\<BlockB\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", 
    "\"\<TestStructure1\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CrystalPlot", "[", "\"\<TestStructure1\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.780677060312674*^9, 3.780677091054247*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"6c2acc61-29d4-4684-9c09-3b961e6556c3"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxllm1M1WUYxhH6AJIUQWSlrjDwBDYVAhpKPh7eohGpWHOFhiyskWaNEgJG
RXMB03RWI15E4IMYrBALhEJ3yphDPpQVxNFGxIsDxhaULENi/el/X8+H6znb
+XLt2XPu+7rv87ueB7MObM/29PDwaLC+Xtb3xAPnbuuaDVC+Iz6HzrqD1ZBn
bkhda6DK+KvIcWHWy1W88NKypOJwrf/21MxQp6UX7DmeEJsTqPWJlKLnipqD
1N6dgR37/YNV85HdJYEfTG/+yru/cWlamFqf2th0xn2X1sPy2qMLrPMnd7TW
Vnq7N0M/WFd4OHaPjz5/LqVhb9PNFSq+rXJdzdYQfR76aG/7ympLx+9CH7Tr
VKiz4ucLbVkXQ5X060K/0KVfhX6hP/+/HqA85NM5//6NayeDRfdyVb/4bndY
ir+Cjr76+mvyZutXs+6CnnpqaVJIn7foofp+6HK/wv3Q37D9cd3T/kXLqmMx
2n/xx/XDxeHcl4c3an3E9sc1nZG+8FNcpNaHZI7d04+lzIfH6LlUyT7UVgxU
tLojtI596AlIb/ze7xGt14qfOA//d0r9OA/9V5kLfhf6uL0/uk74L/uj+4UO
P9Ev9Pm5PxKiLX9Wl+26Wp60VvsPfzpWHl117M0IrUudrlvr/nWoGzFa9/iy
zzVxOlzr8P+mfb/C/dDXSj24H3pZZuUThc2hrh1xr/uddTu1/wNB5TmjVyJc
G74rne73TNT6moZPfh+xdNed37QdPqO0PiZzbL4aea2u0an9L5J9WP75eyWF
xUrr6Pdg2oD6rGmT1r8WP3Ee/qN+nIc+JXPB70J/4UTHj5OWP6gT/n+oTp+q
3hql+4W+RPxEv9DD7f2XeW3S/v8i/jw0M9idk6q07pS+kubu7v3WN17r0UGO
SN+FKK3Df3tvA/T90FEP7of+kV2/wUNP+7xiHmbaPijm4fXye7usegwe9hRl
/7OhIM7godRv8LBgyufv9LcjDR4uS08+X3Ar1uDh7sFnHl3UmYcOe68MHpbb
+6mYh7KfBg/tvYoyeAh/qoiH6It5CJ4zD+3/3UaDh6ininjYJfnCPJR9VszD
Sckp5qHss2Ieyj4bPBQ+KOZhqfjJPJR9NniIuTAP5f+umIf5ko/MwwTxk3l4
358dnb6WP8xD5BTzEH0xDzOF58zDy3nLX13cT+Yh5ss8rJN8YR6Cw8zDAckp
5uGozJF5iPcG89Ah/TIPXxM/mYfCGcU8HJa5MA/HJdeYhzWSj8xD+Mk8FF4p
5iH8YR6iL+ah6AYPHfLeYB6iHubhOxn+oaNXnAYP928fO1S/5nGDhysu9fs1
WDrz8NMll9fXOOINHlbPHXi65XqSwcNtydumqq3zzMPcCGeamthi8PD8WGZr
emOiwcPs8PF9izrz8MkjZfGlx7cYPGx1XEqZtPjDPGxI9ixdPM88tP/XToOH
8Id5iL6Yh37Cc+ahzc9Eg4f1Ug/zsFfyhXkYIxxmHiKnmIeYI/MQ+8A8fEX6
ZR62iJ/MQ/jJPMRcmIfINeZhoeQj8/AO8ZN5mD/zbEmE5Q/zEDnFPNwnfTEP
kUfMw/vze3wW95N5eLvUwzz8WPKFeYg8ZR5mSU4Z70OZI/MQ7w3mYZT0yzx8
S/xkHuK9wTzcJXNhHj4sucY8xHuDeegWP5mHTnlvMA/hD/MQc2QeIh+Zh3hv
MA+R18zD/wC/G/Yz
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1: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
5zR/QD48RXMM5EOebyAfriV/5EP2Rz78P4bahok=
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxlnHlYj2nUx5OllEm2REkqSUipUNLvbhNCWccyY8k69sg2tiwRiWyRLbtk
iNCE6LHvW2SXVETKvmv0/np/59ze9/v8Ndd1rvs6z/N9ul1zzu/7OadB6Lhu
Q/X19PS2V9DTK6/9b1LfKWvXh1uLuYGla5Lb2wrjZ0vbN3SqI5bqJ/xdmmsi
jD7Gxi0cpy/jnzuHTHO84iCmVH8x4dnCcjJeY8+eXT/emYrI+dtmLs9vJIoX
XPDfkeggRP2wWdP+3a8R89Lnp/6oJuOx43bE3Herplh3OvIxMenXeWvd+Qw+
HzN8gV/DGeZime684PMcp+cq/FyOR0WvaHdsRFX5npuTq27RE6kap7iZKcdd
funluJtz59HxxQ5SL8cr+/dN2qD9Pt/r9Tnun3FZc6241gKrbDsxzqZiXLGx
g3A792ZSeDVLwfFbM8Mu/6f9DqN6WgzZttFCxjMp/jJyWO70JhVE5r/mJ2u7
mwrOn1ZwYM3BkTYyPpby99p+/MR9v/IyvmT2wDMnXH6dr5q8fJ5VpJ0I9h11
4KH2+/B5ju+toL/oj2YO8rkc30dxfs9g9wbnaheYihjKz3o53oXys16OR4wr
WfI2db/mju/vkfv+rSE+PMqrbCHKiep/1nD9ob0/v1nvG7lqUiMZr+BitTRj
RFUlseD00z1t1PEH6QkhE95Yiu3G30PjB1nL/HvsRpyPudtExk0pf7VOl723
TP91Xu/6s3H6afsz+PyH0ztK3dNKNVUSHU+VzzNR+LyMP69Umqq9J/xcjPN7
Du44a2j8UWuRc02Xn/Vy3Jjys16Op115mbJWsRB6JnZ+1ZfbivC6Jm87WFqK
pjvqFY+NqiZMhgeKU9nvNBzvtn+UtX5PR6HvccprzvPK8vzlcbmfksrXFHnf
m0YXXmkoWhUZvlvh0kjMjW06UH/Nh4yAzxOc3o2sJuO/r9l37HYbE8VnQ48V
KUaOMh6hO6/h87YtDDboLa0leunOCz7P8Su65yr8XI6b6zdM+iOgsnzPdlss
Qhp6FGpmGEW8q3LORurluK/VsNsNchtJvRyflJB8Z532+6T2Dzj95dUdzdyo
rPvOPe3FILeiZkNrNxYfGx7xHNS1tuD4Yt/EOnu13+HACMMO767UV8WPnTB3
UeK/aG5UcHV9HmMkJlN+zwYxRSE2NoLjoZT/Xr6ju96ZKjL+6ENoeRPt+/P5
vjUzm1cxsRW3vDzL39d+Hz7P8a5bnz+dv91ePhfj/J5HR24e45VVQzyk/KyX
45yf9XJ8+kO/N0bav+/N65sfTmxfU5wPzO09xNJAjMn8/eJo7f0pul796uJa
DWU8btf+dwMDKitBYZ63u3VvLOOrKL5qd8ooO8VcZD8NtzLJqidmUP5m/f0s
myxrIuNjKX/jz3ptH2y0lvGogFo3v8V90PD5Dq8TB20r/aB5NSXPNCyqmsLn
Ob7+j/jQ3tp7ws/l+FqK83uaP2t7ZI+LjczPejnO+Vkvx8v/vqrl7GqfNPfb
bNvb0aZE883ut9KOw75pTO9+C706XU8EtH987cT725pD/TPvDJ9VQ7wdXPeP
aXUzNWGanDnlKuiJCkf75hWOqqHKs+jN1YppTvUF5omYO3bpucb2qjwO+1Nq
Rlnbi5CKU+MnjDAXK11+fItcXE1MTl3V/k5+LbHvRs7HQj9LcSZvQNQoh7ri
28Ou+cenmom1HV0PH5hfXxy/8i4oNLmisO9Xxav7l1qiU/nOS/74ZCNMsrqu
8M+tIyzT6sfvKTATsfe2NtgbYiei235atOVYVTF4Q3jriUfMRPPXrX/Wn2An
1j+4c+uxQ01xcVjt3qKSjYiImn9j8HwbkRWSv/htLQNhcLv14k7pDcSSoH7j
9fKtxY2G93elPKwrwlb1yy73XwNR+2HwzG+DLITPWL0p3lsNxKdnN5Oz5jcQ
S523d+u9x1yMGHPXcGVWLZE5sVHOu/UNVHr/nZX8asrcggzUG9/t3G9t8nIz
UK9bn/fBsa+fZ6Bew7x919bdzc5AvUHB+0fHPs7JQL3RXdrfTh1bSaV3fvlr
GwraVVTpdazYpzi9QyWVXu+gFq5V/qqg0rt/btTHGWcrCBPdfVBuW0x4a9HC
Ruxe8TV2ioet2B4R0vvIoncZxeHb/zWZYy9GNbzbf9Q8W74nGZOLnlYZfKCe
KDf0kFGqr60wpPu2YsxGrx9/2ouZNbw9co/aCstyfk/LF5Vqxma+63myXwOx
OfKF4blttvxc0fftgMeBc2xFq01nz3Tq7MjP1cx16tc0aYiVmGRc8Ll3eUd5
Pz/UGhSY8sBePLlcOcjE31FU0j03o3Xbv2xuJlmJIfUiLHMvN+bnZigeOVO2
/m4nxJ6sTj9zG6v0/vbzyr8r2xir9Jp1CHwTOriKSu+4wPRNMQONVXr7lsvr
7e3zm0rvy4tL1lzNr6LSaxsX4Rd+1kKlN2H86V1LXCxUeie8Mwz5kmKh0jtz
1af3m07VVel137+5+923dcVy3d9d+bvnsA7rLjiKWqkDZ/y196tmv+4+K53r
bq3slOAgXDxqtYkorK46f/OWzY7ZevUFnj/xZpmS+aShOJNTWN9mkpM4OPlh
5HPP/zRjD2U1WZX0RXMo9sq1e4lNRbTnxKqVnxRozk99//zS7uqq88Nr6HW9
lGEl8PziZbPMpmY0FN3o32POpud5Hzc1EQOsnqZ/6vtJE0//7tpNezZtcYCD
aHAgY/HL7Z80fP8TG+ye73PKQZj8GbhgxfTqqjz5xb6Hc5tYCcyzasXRxAHe
VgLz7C3X+Hm/xIZCz0pX/3cf4eSx8Xwr2S+spPq/Rp7ewJZhzjJek/qInHPR
Fr49fsWX6Op55fYCvaZLa3nKfoHqeSX02Z8mrltbyLirrp5XtoyMLoj/6iHj
e3T9jjzP/UKsrt+R5zlO/Y58LsfpPRV+T+4X9Kh/Yb0cX0r9C+vleISuntSs
L+5WvPBwU9kvUL0qrFKTFm9t5C7jhrq6VCmKd2+3z+hX3JTiwaunvzyU6Cz7
Bc4/Js3AI6F3Kxk3pPz1plXaoUT/n/Pj/7fezuDz3C/U1NXbCp/nuJ6ubhf8
XI4bUpzfE/qFDNbLcXPKz3qhH1ECV883canmKvuFEF0/oqy9Hbm1araHjFO/
owxLM+1vcfJXnPod5cLBXuVsBrjLfoH6KaXgTm5IlapeMt6V8seteZrezPfX
eerX5HnuF6gflOc5flvX98nncpz6Qfme3C8YUX7Wy3HOz3o5HkX1/4rLytJr
r1rJfqE31f8VJg+zGTzXScapnhcpxudX1RroIuNUzyv6vmdTjlb2kP0C1fOK
7dzLaeVmtZBxH109rxyo3id1k0MbGad+R57nfoH6HXme4111/Y58LsevUt/B
78n9AvcvrJfjPah/Yb0cj9XVkxl1Dk1ZW/hfU9kvFOrqSVHV5PGxjV9cZXyD
ri5VTmSPz5hj1lIV/7E5IueUR3PZL3B+p56T8sa4tZLxIsrftMHtiWePuch4
hK7e1vB57heo3lb4PMepbhf8XIzze3K/MJXys16Oj6f8rJfj1O8oC76aDQl1
d5X9wm1dP6IsbJp2y2hfaxnvputrlFb/Bd19fcVTxkMo/nmsRVSX7m6yX6B+
R0mcGPLjQWEbGef8OzXJ0S0mtJTxcF2/Js9zv0D9oDzPcer75HM5vpTi/J7c
L0yh/KyX45yf9XKc6kZlhVfU95bnm4vUqz2iAre+4/9vKmZLf142Cm4uLG3G
dmk4sYaIpXrgg0WPEvthzcXuu830Bz/WV+U5cr++w79t6wlzymNOedyGeHVs
aGevymN6MXbwqwYNRBWqx763f+S6a5ObiCieuGz2bu3/d6keW1da1GnvNDdx
L7hoaYqtjciheuz6gJ+fDda5iU5bw44lfa4pvvaieizqyJN3f7qJWe2f1UjQ
sxHmVI9FBOd/mf2Xm0jpO7HvpZI6ogLVY26nP8Wn13QRUXHBf90NtBKbqR5b
XeVZRKqHi+idX/jg3e5aQqF6bOA/t+70q+Mist8mWvWaaSP0qB7bOM/8dVhP
F2Hy4esN87e1hAPVY8npxVl5HVxEz8Yhm5Z8rK/SG+/RMShz63MN6r3wfn3y
7PxKQm/I/9db2fpCj9sfXmeg3j+yZp926V1Jpbdvu+h2Xf/O1KDe10qNmAuX
PmlY7yrSm1T1Z+/1fV5m5IDenMlLX/8WZKjS+z0+JnGwQ0EG6m1QxWzQxpkl
GmddX6PMWRy3t0ZPD9HMaYTbFQt77muU+j67ztVx9hDtFq77cWKko7xXPbak
jQ8P8RCrDIdfGnTKhusxpfaliX361/QQhbNXRuwJdJT3quLyTWFF9T3EufyC
+LCAhqKrrt5TjlTYX6PxZXdxUL9Xg68jG4lkqmMtuiR8t3nrLtbttu1b0dKW
+1blWXFMyIXr7qKTw+/RoWccuW9VbM9mDs82bik+7XfMMtfYimW6Pk5x/7kr
OESvpajT6c6xbj4OAvVWTT1rMzG0hkqvzwjHA731LFV6j2Yt2Og1oLIwA73R
fSyPuRy1UOn1sz1bfPxwNZXeugO2lFzSM1Ppzewz7dGls0Zc9yrPSW/npG03
Eg5aqvRqpqy+YN7NWKW34N0Wl4i9tUWt6S3fD13YVNG0Gxmzeo6n+D34ef2Z
E43FaV2dryQs6xO+bKeneJHlUWnIuI8aPF/y/GdhWKAt9wXKFjp/1iI+8Ofb
erJuLzTxD590o7nw+89p9NWWleTvD41nDN05Z0Fzcct5hn+nIzVU56dUr/Yz
4GsD1fllo/zOtg60l/+uRzVvf8ltgafImfBp8MrRNeU9310p5mnHU55CMZ2Q
Xbrwk4bv+TFN6MX0VE9RFF6wqOCKiSpPXBW9no8226vyzHDc1bZhKyuBeQY5
z468Us9OuFD9PyHOqXvYJ1/ZL9Dv+cq2Xc2vTl/lLePzqY8Iiz4atXDKr3gX
i/pT+mnrw5Qda678Zekv+4VOBiVNJvk6K997nGubHipkPOR2nuHgzW5KfO0/
k9789ut89MuvVvmDf53nfqGah838Im39xuc57jx46LI9y9zkczn+ifoOfk/u
F7h/Yb0cX0L9C+vl+I1/1m1O136fAW3uDa48y0v2Czc2PPnrrra+7X286MfE
HT4y/trFa2hf7XfQNE+5/y3uV/wNxXP6JPX6ftlb9gvXKX+Et0X398d9Zfw2
5d/b1r16peRf5zuHrVqwLvzXee4XDgRrJrzSfh8+z/Fe957N+1bWZ9FzOd6D
4vye3C90ovysl+Ocn/Vy/L/pxYfK/r5F/9xv22adkP3CijrOs9Zp78+qTg8W
Jun5y/gSb+81/sJNmX4iYajzez8Zj6F4s3Tff11P+sh+oYTyp181fOJQJ0DG
4yh/TSfD1UdSfp337F+4q+z+8HnuF8ZezagX09xNnud4r1au0U2094Sfy/Ee
FOf35H6hDeVnvRwfTflZL8dnUf1f/cKX/xYZ+Ml+wY/q/9Wlg35OHtJW1Uf4
3/hUrt88jYy/Tyt/Y562PuxY/nvViDg/2S+E+8y8vGGJi9LX9r8V20LEL/8i
6K3XrrpuypZXp6u93+Ev4+f7v/k51dVJnud+QT+osuUQbf3G5zk+oOaH0No9
3OVzOU4+i3xP7heOUv/CejnuTP0L6+V4vQYbnxhrv8/GTSOPeG71kv3CvXc2
4Te09W3Iy8hVYb/5yPiK69Yn5mq/w66bwXF5lr4yvpLiVWuNe2yvtJX9ghXl
z6nSLfH+Hl8Z5/wnnuk/NXqikfGv32yXxWnfn89zv7BtkL3RYO334fMcN9lo
mZmorZP5uRyvQnF+T+4XOD/r5TjnZ70ct0sd22Oj9u+7JHvri+7/CNkvbDXo
8NxGe39ipk60ThzhJ+MDYvafvjfdVckf2Nam7lR/Ge9P8TN1dnzv0MZH9guc
v94GjZupQYCMb6b8FvrjSo519JVxh/aZpn9r7w+f535hWK+DL9sfdpPnOX4g
vkuL8tp7ws/l+EGK83tyv8D5WS/Hh1N+1svxL0NthjSu4KTkpLeKTDb0Fuxf
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
8lE0LyOQj6J5GYF8FOdHPkqP8iMfdYjqf+SjHKj+Rz6K+wjko3guA/komnfI
QD4qhOY7kI+KpfkI5KNoHkQgH8Xz3chHcd+BfNTf1L8gHyWof0E+inh+gXzU
QJq/Rj5qCc1xIx/FceSjOD/yUTzfjXwUz3cjH3WP5q+Rj6J5B4F8FM07COSj
OD/yUTcoP/JRNA+SgXzUaJq/Rj5qLc1xIx8VS3Hko2IpP/JRNA8ikI+KoPlr
5KNe0Pw18lE8x418FMeRj+L8yEfRvIyKj2Ke/2HuhMKcSt5y/uIt8fwbjZ1u
XbrUVs5fmFI9EJ3Z+1XvO23l/AXmYf+CeGOZh/0LzMP+Bc87n1sQGfJ5oI/0
L7geM8v97c9pXXykf8Hzzi4rzFJ29veR/gXPOy+3D9+5XvhI/2Ip1WOVFy9K
CW3nI/0L7oPOLrQz0G+tkf4F/45qf7PG6x9/aKR/sZjqsffj9f23eGmkf0Hz
JqJ5+8B+/07VSP9iCdVjPnMs/RqP0Uj/AvWyf4F62b9gvc6kl/0L1Mv+Bepl
/wL1sn+Betm/QL3sX6Be6V+QXkF62b+geX9l0a7QmKbpftK/YI7lvv6r+OTd
ftK/II4940PKh9ePjvhJ/4LvVY/Arnk31/tJ/8Ka7tXlpGFv1m7xk/6FOc2b
7BgyTrT64iP9C65je1UucD1U2Vf6F3SfNW36ZGcv+OYj/QtT4ucfnokoXF7b
V/oXdJ8zBg8alX2pmq/0L1Av+xeol/0L1Mv+Bepl/wL1sn+Betm/QL3sX6Be
9i9QL/sXqJf9C7rPyojITjPHdPOX/gVzd+aOZ8YXDvGX/gWeZ/+Cz9eh8+xf
sB9kcCWkUYSxt5y/IO5L7Jg7SCx43lbOX+B59i/wPPsXfM9/TjtmcbyHv/Qv
+J5vfPZnowsT/H/5F3TP7ee2tyg3xl/6F5iH/QvMI/0LyMP+hVnw2uju4/1V
fNTqEXYb//DxVfFRL6Ov+bVa0E7FR10vHld3dJivio/6sd8jNKqfUPFRH1ZF
F9j08VLxUY80x17c6ChUfFR/++Z3z0/zVfFRNSsZDSrjfJCPstuS1yetg6+K
j/ryuE71DQP8VXzUtDMxeiuXtlPxUeMqV7tR9n2QjzI4+cPIoVc7FR/VKPFF
/7LvgHyUPcWRjxpL+ZGP4vzIR3VZu6JX2fsjH5Was8vigvb7IB8V9+3o+Xn9
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

     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxlmntYTfn3xw9JKpcudCFdTldJ6X5z7NXppDGikPFFuRVGjSHJrcQwmW9I
uYzbkKjJtZCSMTjbkGuuM7qQoWKQEEJIvs3vfNbneX5r+2M8z3r2rL3fx9pr
7df7s2ymzh41raNMJjvd/h+t9r9jVm6obr3RG/TrddOKquXwoGOifc6RnjBE
9VV5tcIYLMtjRf/UVwLGn6/4YUfv1/1gpIdFkqq5K7++s2n3prvt12emmJxa
pGsPBzImLu+5tkm4vi+tLGHMe/XAsD37D1cb8bj1uHGf227oidkvI3afNXHm
8Rua6wW8vnTo7un7WyzAQXM94PUY19bcV8T7YvzXo1dLPrZfj8+5+a/TJVPP
OkDegP5/31HYcr0YL752I/Y7HUeuF+O2/3ff3iBjf35r/an57k45i+uJLw6m
XVf6mwLGQ9nvdrBo29yn+6xpXMR4WL7eEPvbXVjclufHOMsPmB/je2atNT1p
Va/u7j7xzf5rTUL3+H9U29LeCxs6bQ0dmfhYKJs77IBNQpNQ/F3Cz7P/2yIU
rK04us33tSAPX1+4NeWskDsnvrVpiDFsv3LS9snDs8LKs7fEzLhXwusrb7rM
8zKW5O8RpKpcfcwSaP5FHWb0D3pvCTT/Qv1AG/3uDpL8Vv5L95R3cgCX4V92
zDWzgOzEeeZXFUbwU94n+XALE7C11bo4RWkJ49eLuVHdTGGX7qa4pbNNQJH2
rNNWLWuI3//t8z5tXcFvaKLJZVcTKOnS/NuUyzZwqe73kR/fmoD+5eOnvQ6b
QIznrbCUDXKYGr11nnOYIXQcnTZy0UYTUH799pPVNjlkbYku3pRkDOLL+oYf
G2xgyKQ3053SbGDvG3lk97Bu4HnK5MIz0Qa2xesOEXdbw4djfSvHeJnCt32d
EobUtl9/o4P8ZWlfuDLKpeXW4m7QFqXdd12ODTxdHNL6m70FlBf6jfOf0RNW
mO388/tCG4ne/t0Xmp05/0hN9U54lHfXdUC9murd++RESrXHIzXV261ubcCP
jrVqqnfMNue8Sdp1aqp3xtzFVpe+aEv17g3Jih2nLdGr02+13/U72hK9kx1l
Tz5UdpLondtrxh9zemjDQU09qO+cdF2mXi2HIl2XNo8xtrCX1ZV/eWTIT2/s
QBj0waY81RZyNHWi3lNw7cWkg9agV/N4QcJEW9jC6m32vFEWFY/tYN52vXKH
nbZQXHkqYEnH18JJ9zMDXhjJ4eWDOb2GrrPF+wqR4bnD8xxtwdVx/dh17s54
X+GtsOS/NWpr2N18zrNFxxnvK/w0Ueu+lo49VERW3Bvl5Iz3Vas3Lz2SccUa
Zm08mr7jcT+8r3ruHYOcpBxbeBU+HJLf9pPodb+z7bsf9utL9E7Lu/7pUURX
id51tqtGJ1/Xl+j1s++VF3Grq0Svg2/hpeptXSV6jfaaz/yc0Ueit0W51OZK
QB+J3slau5OWJfeR6M1YHnW118feEr2bPmQG3OzVBxo0/+7ixWJvmwtL+8O6
rNwHP5i3CDQ+Z5Xn6bS7llDrvSNXd7orhK3+aLegqkpw+qP26rlrRpJ4gNc7
3bc37fn78o+Qm7ilpT/8WpHicNPvnTCYvRdFA4Pr/MydYcbMCc3nlr8TsJ47
nH2VXOLiDOn6N4tPvzGCYKzb3s150/2cwWpY4WTdo0aS/G/v7sscF2MJNH/+
MpsVFUmWQPM3VM36nPDQXpK/ZGHUaNNz9sDml9r02NFDllm+fD7K2bzIl8cZ
jZrvyuMyNjdrvr716eoZdx7P08wvsbrjiWEd9/rx+ZivmV9i9uaqzUeqPXic
zS9x8qCxg/e4BvL4NM1859fjfFSxeYTXY/yFZr7z+2KczXcRnxPn43E2r1Ev
xi3Y/EK9GP9r4vc+M9t/H9v06Durhrjw+VjCnv+qm4HNpleePI7fCY/7pjgE
LPTh8cxt2avN258T4zgfqzT5Bcz//+esMc+PcfbvK46eFlxvvdoN4u7XTFJk
G2A/FNPLIjOSD7hBumrXtHtWMuyHopW2h//5ODeodKvqdnelAfZDMVe88jJ3
oRvURcZPMTmhDaEs/xiW/+4fb0Yd+c1Okv+rvFmt6XOtJfmN4l/1kxXaSfJP
cpocaFZtA4dZ/1mQoVxyKcsLVrk9LzwfZQEi6z8Dmyc8a032Ars92y36b7IG
kfWfr/NiwXmNF8gNB6zRyTaDOaz/9FKN3nQ93gsmhG97s2iVNRxn/afKJifh
9FwvGGFupGcX395PWP85npoZsU3uDksiK4ZmbewLOaz/fDGdXzfd1x3OeK9S
y8rMQMb6z8MZszL8Hd0h0X/YsT3t30E5rP/0vpjquzHUHUY+WmsYU2MGIus/
Yxvco34Fd/gt7sgLj5WWEr2vhvYM1Vc0ClRvc3j0P1MKZRK9Nj9fflGz9oCa
6r3VNFq5Y6lMotdwS6D1u0MPBar3j+OuPQ5+fi1QveLqOctW2mWpqV6PrabD
I1tlkMX0mjO9X0xaDVzfpwhUb5HhL7t9zr0T2BwXP11rfecd6g+e1+3OzU5y
4HVb4m0ybaaHP6z/++t033tO8Aurq5uPLE9sUvqDTDznYbDJDkJYXf2S1s1g
kNwfLq78avLKm07wjNXVxJjxz5z7+UMvVWlCdqs9DND0SXGwOPRy52pvKJiy
dV2koSPYab5bxB/HDYz687k3jBiVWL5mnx32TzFun6NO/j1vqJ3zQV7c5ITf
aWK2rv8RWZs3mO1PeqsosYOpmu8WsaZ/423D995wpbHzQ/tVjkD19mkZrDzR
q6dEb7XJ6vKhj8wkekuqU60+fWMg0RsyY+Xix1fNJHrv18bsMLUzlujt0dfp
3orhvfC7lOsd2XZ3VPMSA4nepMAnX5RdzSV6HxU8yPvmZwOJ3mGeWssdBBPQ
slrcPG2Sq3i2QydVYmYACFfePHjRVU8SfxeinHDtuRyc2Px6sNlA50SxG4z/
webAhB064MzidSyecvRqxtORcv4+6v/ScFvIC4BzGRPKr8+S8fexqaF2mdHG
AOjSKWCDT5kBHGb1aT/sjfOs4gBobIyds3E7fy/UU2flh6cWBEDp+33OXk36
kvybfSw2dV5pLcnvPGZ344Crdvx9x/xT1lqqS9dZS/L3vHmoYOd0W8B5F6lI
6F5UreTz8RibFw9vx8z/fqKCxw+zufl9jw4zjR8JPD7m0fNR8e3Xl8TMq8md
Fszno+6ft86suOgumhWuWJ6cCjyemWufFlbgKS6SnR3zbq+Kx7MDVUYHfh/A
r8f5mMHmEV6P8QFtS3blyr35fTH+ks1ZfE6cj3FsXqNejIex+YV6Ma7hdFtR
M+8G8fm4jj2/22KrC7P0gnj8KPvdBiXcvqQeruTxJelrzP59TozjfNR8t/Tm
+TGexfRifoxXP/NZ6dw4UPT6bkN60mgFIJ9mTk72sXNzE8PB6O324QpAPu3I
6vxMwYluP84aBMint9s8bk/tP1CMKomr8IxWwCvGpzQ/8inNj3xK8yOf0vzI
p8Gs/2iPjjb4EgecT79i/edeRX6HV52CIIfxKfafhGy9/4z4R+B8+hXrP89g
emmnjkGcT/E7eXDTmd8vhwHnU/b+irkLTgS3rAPOp9hvtzyuzevaJHA+BdZ/
EpKNnG7oBnE+LWb9J8U4xv/RW4Hz6XTWf+LvjNnichg4n1K9yKdUL/Ip1Yt8
SvUin1K9yKdUL/KpRC/jU6oX+ZTqRT6lepFPv6ktjcif7y5eTAwY7n1eyfkU
6yrn/YrBjpODOZ92fH0m6d3igeKn2XXfRo9Qcj7FeiuYEtwcEB3M+ZRxjSgz
3Nki26vkfIp1OH3L5mWuz5WcT1t1U9Kj57mJmT1HZA4areR8ivXpuf1lbOf2
voF8mgWlbhe6u4s/7F9b7fSNkvPp4zEOiyIT3UXXT+3/n34w51OqF/mU6kU+
pXqRT6le5FOqF/mU6kU+pXqRT6le5FOqF/mU6kU+dahcbfdLlK94zj3F21cr
hPMpjSOf4ndXROKrY437BgHyKY0jn+L3yeqNpqvibUI4n25l78XpLPWvG/ap
OJ9iPY/y7l8+t1DF+bSU1a3qSrzJpCMqzqc0P/IpzY98SvMjn9L8yKfa4+/f
jdfxlfi9rP9L/N6pAYHN/mEKid/L5prE72XzEajfu04zL4D6vWz+AvV7szTz
S+L3fqOZ40D93lpXr9Zh7ddTv3dwj6yevV/7S/zesvt1lXUVgRK/V8OhvhK/
l/EmUL8Xfzfq96KfTP1eTR5/id/L5rXE723TvC+QXusaetjuo4B8yt4XGFj/
2+Y0x08C8il7X6D+fu67OzYfBORT9r6AzsmEAxezPgjIp59Z/jUsP/IpzY98
SvMjn2L+Liw/8mnpsI9hQ8f5wkbbcDA4Zs751Cso2bSs3hcWny5uuTfVnPOp
XmCT44dIP6hLrQzbkGvO+bQsZd7yaD9/MGhbl+ckN+d8arm+/krDdn8wTyoz
fKgw53ya0Tcpd1COP/jc1O6z56MO59MeTs1VYi9/iPslYL/+ri6cT/1cl15c
k+cHP/d+22GXVRfOp0saP85yOuMLgy2WjZov1+V86qjpJ+Dsar7wS0MXzqdU
L/Ip1Yt8SvUin1K9yKdUL/Ip1Yt8SvUin1K9yKepTG8g04t8SvUin7I+D3/1
3G5cG+rA+ZT1eQitu/Yy1NKB8+lfrK6WKB9s3T3YgfMp1pXx8lMhzz/bcz7F
utqiGNt6Wd+B8+lYzVyDIy/i52lXWnI+ZXMNLo/ufNLX2YrzqZZmrsHUDfUz
lj+15HyapZlr4Nmzn8HzOCvOp/XMn3TZ8Xa3e7gV51OqF/mU6kU+pXqRT6le
5FOqF/mU6kU+vcP0XmF6kU9RbyzTi3yKer2ZXuRTqhf5NIidI8Qu3l8wocqJ
8ymNI582/lS68/5yAV4lbZm2KOGTgHyK8WYWRz7F+nx9cMHN5g79OJ9ifZ4K
m+64rdaJ8ym+jw7d0pPD5f04n2J97h758lxCz36cT2l+5FOaH/kU8zuy/Min
ND/yKc476vfivKB+rwubm9TvZb4rUL83lp3PUr/3a3bOSP1exstA/V7mrwL1
e/eyc1Lq9+KcpX5vFzavqd+L85r6vW12jnYH238f6vfi+TL1e/F3o36vHfOT
qd87bmKt37/PQ/1e1Ev9Xmt27hYSfslv8mRXzqfH2PlayvvzPQ5FunI+xXO0
ybdMg5ZsdOF8iudlG2sX3KpJdOV8SvMjn9L8yKc0P/IpzY98KmP9Z1Ht6qPH
izw4n+Icd3pquWn7P56cT7H/3K++29DlrDvnU+w/qlM7Opx74Mn59AnrPw19
xuhFzPfgfMo4Akqch/Q+IPPkfIr9Vsf2qO+FcnfOp51Y/4nweFc3vsmT8ynj
CGgY4VW+85Y759MHrP+omlLOGis8OZ9SvcinVC/yKdWLfEr1Ip9SvcinVC/y
qUQv41OqF/mU6kU+pXqRT/F8qk0+ZID9TF/Op+w7Hwqdq3vo7vDjfIrnxdP6
bIpNWuTD+ZR9/8PFtrHJAzf7cT7F8+LZ0T1+POniy/kU6zDwO9lG01JfzqfM
B4A1sbOOeK7w4XyK9Xk78XDUhXw/zqd4XpyQ9SKka7oP51PmA8Bld1/Fsje+
nE+pXuRTqhf5lOpFPqV6kU+pXuRTqhf5lOpFPqV6kU+pXuRTqhf5lHGl8C77
0men+kDOpzSOfMq4FVKj0zaM6DaA8ymNI5/i90larGzPOqtBnE/xe74hKuLv
WrdAzqdYz0b5jv1z/AM5n2awun1/c696oRDI+ZTmRz6l+ZFPaX7kU5of+RTn
HfV72XklUL+3kc1N6vd2Yueq1O/F81nq95qxc0bq9+I+EvV7ndg8on4vu6/E
78U5S/1e3Eeifm8Rm1/U77Vj+0jU72XPI/F7v2K/G/V78fyX+r3MTwbq97Jz
WKB+L/P/1YELbvx9+4mCn58uY+duYxyrPbU+KPj56TJ27mZz4UL63ioFPz89
zOr/YV7PaZvvK/j5Kc2PfErzI5/S/MinND/yKfafTvv8knTGB3E+xTk+JSrE
ZVd4EOfTQaz/fF98qaJ0bBDn0yLWfyI7nflhVWgQ59NY1n+8Eme87DAsiPMp
9p+hwadP3Q8ROJ/ivkFmTV74wfEC59MtrP8kuWz/mPq1wPlUxfrPgTUFedVx
AufTRtZ/nhROvtQQI3A+pXqRT6le5FOqF/mU6kU+pXqRT6le5FOqF/mU6kU+
pXqRT6le5FM8Lz5/qVeRoiSY8ymeF9sukc+s3B/M+VRWrqkr99v5xi+Kgjmf
Yl2Z2GefFncHcz7FumrZoHLxyw/mfMruK3yrPNnHoS2I8yk/L8s8FLumi5Lz
Katnoc2n/4kkmZLzKbuv2uyxZ49cAyXn0xzmT/ouzNjVv5uS8ynVi3xK9SKf
Ur3Ip1Qv8inVi3xK9SKfikQv8inVi3xK9SKfUr3Ip6yeReeYrf+JGqfifErj
yKf4PbncoHTO7s8Kfn5K48inWJ/XDq3Z9UeMivMpfg+IY7u8PzBBxfkU6/Ou
jmFYdbyK8ynW58ctcX9P+VbF+ZTmRz6l+ZFPaX7kU5of+dTv6UEIKwiW+L1v
l2ndf3xCKfF7Z1TfCTt6fYjE7w0LTLF90n499XsDN2137eguSPze4rKh8f/6
xtTv/f3XfM+qbkESv7etW8TPg9rrgPq9pvGvRvzr01K/d8/oyoh/r6d+71/B
2tG58hCJ32t+sPC0Tq8hEr9X47sGS/xefH7q9zaz3436veeZn0z9Xo0/HCLx
e78wvdTvLRlsUVLQGYDu96bWbGn4cBiA7vfWupgnP30IQPd7/byzMwxnAOD+
LfIpzY98SvMjn9L8yKc0P/Kp0dSADwEVwZL93ps1i/9e2EfF912RT0+OK/nH
KFIl2e/duvi9cVmZSrLfq9I+dFy/RSXZ7229vCCv+INKst+riPBVzy9WSfZ7
R/3ZeqwmWSXZ751fdCLdWU8l2e+97Kj1qL4yWLLfS/Uin1K9yKdUL/Ip1Yt8
SvUin1K9yKcSvYxPqV7kU6oX+ZTqRT59yXw8ut97jNUV3e/d9fs3p0IFALrf
i/X2Pdnv7TcjIhPqAeh+L9Yh3e+VF1X9fGAnAN3v9cX6JPu9xU7HxdMNAtD9
3mjjoQvcVwpA93upXuRTqhf5lOpFPqV6kU+pXuRTqhf5lOpFPqV6kU+pXuRT
qhf5FM8X6H4vjSOfPiyb0v1QY6hkv5fGkU/xfaH7vb+z94Lu9w5m9Uz3e5Ow
bsl+L82PfErzI5/S/MinND/yKc476vfivKB+L85N6vfGsHNV6vfi+Sz1e1PZ
OSP1ewV2vkn9XpxH1O/Fc1Lq9+KcpX7vCTavqd+L85r6vY16a0v//X2o34vP
T/3eIva7Ub8X/WTq9059NuBlZfvzUL/3ItNL/V5vdu5G93vx3I3u915k5250
v9eC1T/d78VzPbrfS/Mjn9L8yKc0P/Lpc9Z/6H4vznG635vD+g/d78X+Q/d7
nVn/ofu92H/ofi/2H7rfi/2H7vceZf2H7vdi/6H7vVQv8inVi3xK9SKfUr3I
p1Qv8inVi3xK9SKfUr3Ip9hv6X4v1Yt8iufFdL8X64ru92Jd0f3eC6yu6H5v
X1ZXdL8Xz4vpfq8BOy+j+73+7LyM7vfieRnd70V/ku73Ur3Ip1Qv8inVi3xK
9SKfUr3Ip1Qv8inVi3xK9SKfUr3Ip1Qv8imeI9D9XhpHPjVk84vu92Kc7vdi
fdL9XqxPut9bxOqT7vdOZPVJ93tpfuRTmh/5lOZHPqX5kU9x3lG/F+cF9Xun
sLlJ/V7cR6J+L57PUr93PTtnpH4v7iNRvxf3c6jfi+ek1O/FOUv9XgWb19Tv
xXlN/d5jbB+J+r1r2fNTvxf3kajfy/algfq9a9k+EvV7US/1ez+ycze634vn
a3S/F+uc7vfifgLd76X5kU9pfuRTmh/5lOZHPsX+Q/d7fVj/ofu9XVn/ofu9
uJ9D93ux/9D93jWs/9D93u6s/9D9XtxPoPu9y1j/ofu9uJ9A93upXuRTqhf5
lOpFPqV6kU+pXuRTqhf5VKKX8SnVi3xK9SKfUr3Ip52Zj0f3e2V6mrqi+70V
7NxKst/L6o3u9+J+Dt3vxf0cut9bxc6/6H4v27MFut+7np2L0f3eOnZeTPd7
qV7kU6oX+ZTq5fu9RC/yKdWLfEr1Ip9SvcinVC/yKdWLfEr1Ip/i+QLd76Vx
5NMoNnfofi+NI58eZ+8L3e/VZ+8F3e81ZPVM93txj47u99L8yKc0P/IpzY98
SvMjn/4PxYYaWA==
     "], 0.67]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[CompressedData["
1:eJx1kyFIQ1EUhh8qIhoEEV0QcRMNsjAWnEHwZ8gsS4pNQQciiFOj6LAOF8Ri
lKFDg6ahxTZmtxnehpgUbAbBBYPC7rmX+1/vg1c+eOd9933nRXO7ixsdQRBM
/92dgXtlr3szE889YP7wU/xqlmPY3j+4ii+NYbj7470aDqCrvl64bY04/GVn
JYycfM7J820ew17kdSr3OAnmZ6W7/nJ1UObUxo9XG6VMHOLDXHzsOUntw1x8
ZM75QmVt9DSlfZjbPgn13lnyMVx88mrO8lvfzeERtA9z2ydRa3umycdw8tHn
Ix/NxefiPtWqF2acXszJB9yLOfWCpxe4lz0nSftjOPWCpxe4l5yfezEXny01
h3sx/3+f05595l7w9DJcfIpD4dP35rzTi7n9feDpBafXperOvZjbveDpBadX
Rc3hXsx5nz3/F7iX7C33Yi4+eWuvTC/m4vMLSn8FvQ==
     "], 1.56]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679828567889*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"4b63f181-a955-43ff-b3d4-d315697de276"]
}, Open  ]],

Cell["\<\
By default the input list is repeated as many times as necessary and the two \
blocks therefore alternate in a predictable fashion. We can also make \
\[OpenCurlyDoubleQuote]shuffled\[CloseCurlyDoubleQuote] version:\
\>", "Text",
 CellChangeTimes->{{3.780677116405409*^9, 
  3.7806771979958477`*^9}},ExpressionUUID->"c4d29e88-8b10-4e70-beba-\
6b178b9716c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SynthesiseStructure", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<BlockA\>\"", ",", "\"\<BlockB\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1"}], "}"}], ",", "\"\<TestStructure2\>\"", 
    ",", 
    RowBox[{"\"\<SelectionMethod\>\"", "\[Rule]", "\"\<Random\>\""}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"CrystalPlot", "[", "\"\<TestStructure2\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7806772028925877`*^9, 3.7806772050763617`*^9}, {
  3.780677266123638*^9, 3.780677297148031*^9}, {3.780677383403097*^9, 
  3.780677407241646*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"683fc8e2-7767-4132-94b6-8f2b00b9c99d"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1: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
+iH7hX7IfqFfsV//AZXiP7k=
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1: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
bOQv+fdIsb9k3/X12BfZd4u/PnLsu2J/yb5b/DXIse8Wf8m+W/wlz9PiL3fH
87T4Sz4Xi7+Qs78wn/0ln5fFX3KeLf6S82zxV2/HubX4Czn7S86zxV+Yz/56
5thHxf6a6thHi78mOPZasb+Qs7/+lfnsL8xnf8n3lWJ/yfehYn/J957FX8jZ
X5jP/nok89lfA+T8s79w/tlf8u+CxV/oPdhf16Q/YX9VlP6E/XVb+gf2F/oH
9hd6DPaX/F5V7C/sL/vruuwv+0t+byj212XH7wGLvwIdvysU+ws5+0t+byj2
l/zesPhLfi8p9tcPjt9Liv0lv8cs/kLO/vpV5rO/5PeeYn81cvyeVOyvxY7f
k4r95eL4XarYX26Ss7/k96pif30h89lf8ntbsb/k97xif8nvdsX+cpec/YX5
7K+WMp/9dUXOP/tL+gTF/hLXKPYX+kP2l136E/ZXqvQn7C+53sb+kr5Fsb9O
S4/B/qoje8f++kP2l/31ruwv++sr6ffYX5HS77G/lkpPyP5Cf8j+Qn/I/sJ8
9hf6Q/ZXI+n32F8F0hOyv9Afsr8wn/3lLfPZX3bp99hf0rco9pf0LRZ/rZWc
/ZUs89lfSuazv9Dvsb/Q77G/lkpPyP5Cf8j+wnz2F+azv67L+Wd/4fyzv+Q8
K/aXnGeLv9CfsL/kPFv8dV36B/YX+gf2F3oM9pfsu8VfybK/7C+5X8X+ui79
HvsL/R77Sz4vi7/k87L4C/0h+wvz2V9y3mzsrwjp99hf86UnZH+hV2R/YT77
C/0k+ytC+j32l+yjxV/oCdlfZyVnf2E++6uNzGd/bZV+j/2Ffo/9Jd+HFn/J
96HFX+gP2V+Yz/5K3ZxeeWWFUIu/om1r4nImh1j8tTn+zcpr9oVb/DX3p5tX
TqSGWPxVt0pq1rJLNou/BoWMG2X6gv0VVZw8eumPyuKv7TE5HiNCQiz+2tqv
2ZW6hiPYX6OPf7Smn/E9xf4atqh89YCCUIu/DhbX7RrYN9zirwrv+0WZz4f9
tX/NmPx5i8Mt/ro2fUDjk8ZzYH8hZ385yXz2F+azv3LCJl823z/7q9w5uL/5
fNhf15tEVGrWItziL+Tsr/0yn/2F+eyvxOV7A8zPl/1VOruBl3l+2F8tLta6
5mT4nf2FnP01UuazvzCf/VXS1tvHPD/srw/v5b1l+pr99Zrb417mOWF/1ZKc
/VUq89lfI2Q++wvnn/0VL+ef/YU9Yn+h92B/oT9hf/lKf8L+Qv/A/qoj/QP7
a4z0GOwv7B37K1L2l/2F/WV/nZyyrtty4/mwv7Y+cd1qfr7sr7kHntw3nwP7
Czn7K0/ms7+2yHz2V8p2z3Tz/bO/jl1Ii+toPB/21+HZdy6b54T9hZz9tUXm
s7/yZD77K/jdJ9eeGp8v+ys9f0bhDeP8sL8erO+/aKThd/bX35KzvzCf/fWd
zGd/7fZZUb7AOD/sr8D06mUphq/ZXw8L2/Y2zwn7q1Ry9td3Mp/91Vbms79w
/tlf0odb/IU9Yn+h92B/oT9kfxVJf8L+Qv/A/iqU/oH9hf6Q/YW9Y38NlP1l
f2F/2V+rpN9jf6E/ZH9J32vxF/pD9tcKmc/+cpX57K9Xpd9jf6HfY3+hJ2R/
SU9u8Rf6SfbXCpnP/pI+X7G/pM+3+GuS9ITsL/SH7C/MZ39Nkfnsr0+l32N/
PZV+j/0lf0+x+Av9Iftrisxnf2E++wvnn/0lfw9S7C/sEfsLvQf7Szyl2F/P
2jn6E/YX/vsl9td70j+wv9ykx2B/Ye/YX96yv+wv9P/sr/3S77G/0B+yv+Tv
lYr9JX+vVOyvLJnP/rok89lfF6TfY3+h32N/1ZeekP2F/pD9hX6S/ZUl89lf
6PfYX/L3aMX+8pCekP2F/pD9hX6S/bVQ5rO/Zku/x/56Q/o99pf89wCK/YVe
kf21UOazvzCf/XXt6tj+vn7RFn99PqVPeq+USIu/Lmx83q/V7Z4Wf+U4JbeO
Pxtp8dchm3ubuFoRFn8Nv/pwvukL9tdnPgPtzQsjLP66uujThOeJkRZ/zR9x
yt7UcAT7a0tl/6J7nSIt/lp/NOfO34+iLf567HNxad7MnhZ/tV/75wbz+bC/
Hp7za9Qgo6fFXx7ZdSaYz4H9hZz91U7ms79KZT77q+SzYP+SR9EWfwWHl+w0
nw/7q1ZcpX5ZsT0t/qotOfurVOazvzCf/TVqztq/BhqfL/vL98Dl0eb5YX9F
ph47sNrwO/urh+Tsr0SZz/7CfPaX99hbU8zzw/4aGZjypK3ha/ZXVPQP28xz
wv6Klpz95Svz2V+Yz/7C+Wd/Jcj5Z39hj9hf6D3YX+hP2F9R0p+wv4ZL/8D+
Qv/A/kKPwf7C3rG/Zsr+sr+wv+yvek8XTDCfD/vr1+D8/5mfL/vrSb2sSPM5
sL+Qs7/qynz21yWZz/66WHj+5RaFERZ/1U1d8bn5fNhfZfb/+t83zgn765nk
7K9LMp/9hfnsr9jbHQ6uMD5f9pdr02mh5vlhf/m/MnKt6Xf2F3L2F+azv1xk
PvvL5czcXub5YX/Frup2OsHwNfurza53p5rnhP2FnP2F+eyvGJnP/sL5Z3+h
P2R/YY/YX+g92F/oT9hfg6U/YX+hP2R/pUr/wP5Cj8H+wt6xv9Afsr+wv+wv
9HvsL7v0e+wv9ITsL+TsL8xnf6E/ZH+hP2R/PZd+j/2FnpD9dUNy9hf6Q/aX
0yuO+ewv9IfsL/R77C/0hOyv5pKzvzCf/YX57C/0h+wv9IfsL/SH7C/0h+wv
9IfsL8xnf+H8s7/QH7K/sEfsL/Qe7C/0J+wvP+lP2F/oD9lfntI/sL/QY7C/
sHfsL/SH7C/0h+yvE9Lvsb/QH7K/0BOyv+ZIzv5Cf8j+SpH57C/0h+yvo9Lv
sb9+kp6Q/XVEcvYX5rO/0B+yv9Dvsb++l36P/YWekP2FXpH9FSTz2V/oD9lf
u6TfY3+hP2R/oSdkf6FXZH+hP2R/YT776/904uni
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxlnXdUVdfzxRE7GuyKgqig2FEEVBB5h15VrLEkFuy9t9iIPSK2IPbesCsa
7PKsMbbYe+9i7zX6fe/3Zh9/a9+/stass+befTnE2ZzzmSkT37tRR3s7OzuV
y84uq+W/a1oOnj1vQGk1OuL7rI2R7irP/SmR5TyLqyn2i377fsdRObydljKh
t72Ov68XN7TS8QpqcMFH/e5PyKLjhdauXfXlVX41buyyEdPvlVfPxh8JXZFa
QalSfUcO3bbJpMbsHpv+pYCOT+u9IumyTwFz6dgdb1PX/Fhf2rY+A+uTOo8P
KTfcSU21rVdYj7g814znIj4xcUb4ri759Hsu3phviZ1KN3mmjEjb4/VDL+I+
1ev1mPOsgtaLeO7QlmvmW77P55It9oRmHDOdfFZkvOuNsqq3W/aUZ3kqKJ/D
LwYOKOCiED87ou+x/yzfoXtT5w7LFjjr+BmJPx7X6c6wytnUmW1O+4r55lfI
v/3h5llburnpeC/J32z5nr2XQ7Lq+ORRbQ/u9fqxPt/G6WNcx5VVDYK7b75q
+T5Yj/j6bPZ//FK1gn4u4hskjvds4FvmcLGH+VWS5IdexOtLfuhFPKH318kv
0zeZLgT/PG7DtkLqzbW7uZ1VFlXw10LeXyz756fSG7olDyyv49m8XKdkdMln
Tn144PbaOsb4ld2L4vq9cFHL83yOn9OutM6/tmyXv5MuVtbx/JK/QOyxwCXD
fqy3+/d+b/vtmzKw/s2BFd99t3835U2ttD/rXUcz1uv4gxzf0y37BM/lON6z
ffTIjnN2lla3TtryQy/ieSQ/9CK+/fjjtNlmZ2XnWDak4HR3NaCE48soFxdV
ZUXJZ70mFlCOnSPU/huvTIg32tS9tH3TSsreb3/A7w9y6/XHet95tyZrYXX3
c5XEzOPlVK2nuV7N8CqvRk+r0tZ+1puMsPf9PF91K6DjP8/asOtcHUdz0Pwm
M9IcKul4gm29Cevda+ScbzeliGpmW6+wHvHjtuea8VzEnezLrfklLLd+z/Al
znHl/DJNwx0SXuU97Kb1Ih7s2ulcmTvltV7EBy7aeGGu5fuktw478OHJBdPo
iecvV2/qodr5PK3asVhF9bbcDv92DYspxCcFpxZfb/kOm7vkinp1vJQhvmuv
k5d5zgfTqWze3g+SHNQgye9fJulpnJubQjxe8l+6V8nX7mBeHb/2Jj6ro+X9
sb5l4TPV8jq6q7MB/lkvW74P1iPecOmD22OXe+jnchzvubPb4p4B5wupq5If
ehFHfuhFfNjVkBcOlp/v6X8XX+0fWVj9HXGneQeXnKrnmZ//6WHZP0//LXhi
UpFyOp6yatOrtmG5zTF9/c81alxRx5Mlnrw6rXtZs5O6cXuAq+P5kmq45K/a
OsSl8tTKOt5L8ld8b1f3yoLSOj4xrMjpTylvTFgf9Ty13bLvb0xPBt/N33di
ATPWIz7vlznxzS37BM9FfLbE8Z5O9+vuWOvlpvNDL+LID72IP29f4pehJc5k
DJrXNEu77F9N6SeaTIxY+spk/3NyzVEF3pkWlc+V9D3ko8nFrVf9cv0LKZcs
IbezPv1uGpOyNd/trx9Nqy9WtW9/3V69lDyDJc+Oy6UqbKtbUmWVPMslj0+H
gOhyZT10nrGSJ/8/09o/KVNGNcw+ZE6/Lk5qeYH0EhOeFVcJz/pPHbXaWW04
dettZoiLcnv6ceSiFsXVpQZPp6S5u6m50d5/bR5bSr3rEVje4WpxFbu07641
7wur2Kz1Jv/yzk19z1f56OZMJzUy8n6hRXZuatqlpWXWx5VV2ytfqJTpVFyl
tezf8ujX4srzee1vpfqVVQXf1eq0IzGnmpjSoOvFCFeVMHHsqfZj3VQJlbZg
4pZcqvm9zCuvVhdRiTGt+tjdK636BZavt2VTTnXjZaprsxFuqtjVBiM+tXNW
7T7Wy9lhem7l+ObjKaeXRdSU6ssbNV/rpJ6bP4S98cmtmlaMWzj5bSmD3jl+
0TFnlj4wsd4jr+dtHHUvh5otet+K3tyljzQ59+Z5Buv95fyoA17Ncxj0tgxP
DG/42xkT631uLpR05Og7E/QWE71r8n1rPq/F44zJore/6L01aMrzn2JyKSfR
21r0fp6TlNq+wsMM6H0qesvkLdpuwYivprwXP8WfGGZnvpH4b8L89h6qqmcX
n+POHmp5QlzzHX+8ynD59DIttbiHCp8w98vebpX0vhq/o1DO1i09VHKuzkfb
7XdTuWRfOeSZdMnrTjmVOerPhLURlfS+ejj7Zq76n8qpw/cezukbVk452p6r
FtllnztlkavaYt+szMdu5fFcU1mP/b6DvEupuavdW2Z3ccdzTQ1WDE/Kk+aq
Yiv8nBh/sJLKZntuRrj9tMz2Sy37blOl804md1XC9tyMKQ/u/VF5QClVPPbC
rkZBFRTrzZd+yK1/fCGD3qAulTY3t3Mx6N15fvyCgDa5td48ojexhcsur53O
Br0h7oee7fmrgEFviTZLvh61K2rQe6bF0GtHDzlovQ1Fb701y04t2uJi0Gsa
PPOIU6M8Br0PXy3xSlhfDPvZ3CrrYLV4dwX1c4MHpUb0z6M22vaz2SWlqWNy
jorq0Xm/HB16vzXx+q8PvmX2jXDX611l/SHnORHfXpZURYbVfN1xQhXl5+nz
b5MGX00h/3n2OFEzhzpwK7OU20BPVXm2qW3690+ms9WHh8buKKTX15L1gwsW
+Bb2sYxeX1XWT+0ecqh2hIf+vd56vsbOG4cqqFv93rX/s0dh/XtdbezuRw6B
FZU5f78b3ye8M02Xfd7ofaftzz0qqqcDHv7x8LijIU9KXrum1xZ7GPIMr7Sq
brlarorztKs+atzxkmWVnaut/m/cxdNvwd+1tF/4U+r/Qnft2tbsW13HC4uP
uHU40Tm4yY/4ZFs9bz433q7KlCL+2i9IPW+Ov/+ro/fSGjrubavnzUu6JT6c
89FPx9fa/I5eD78wzeZ39HrExe/o5yIu72nGe8Iv2Il/gV7Ep4h/gV7EE2z1
pGnes0bPJvxVRfsFqVeVa/qaSUvL++p4Lltdan46xzd8g8OPeH6JN5g57PHW
1OraLyB/z+05/RY1r6XjuSR/yaE5VpgT/9/6Pv9Xb2dgPfxCYVu9bcZ6xO1s
dbvCcxHPJXG8J/mFDOhF3EnyQy/5EXPEzLGOXgW8tV+Is/kR8+xz45bmu+Gn
4+J3zJ2252/tvO9HXPyO+ciWZlnc2vhqvyB+yvzwwp24vPkCdLyh5E+ZdXt3
1eAf68Wv6fXwC+IH9XrEz9l8n34u4uIH9XvCLzhIfuhFHPmhF/GJUv/POGae
cvJJLe0Xmkv9n21QJ7f2oz11XOp5lZbn7+Qibb10XOp5s33wobSduf20X5B6
3uw++tj2LCNr6HiQrZ43by7YIn1hhTo6Ln5Hr4dfEL+j1yPe0OZ39HMRPyG+
A+8JvwD/Ar2INxH/Ar2IT7PVkxnFtw6enflfFe0XMm31pMrneH3Xgg/eOj7f
Vpea997ok/F70ZqG+JfFCbf2+1XTfgH5PZsOvNvTp5aOP5X8Vcqc639ol5eO
J9jqbRPWwy9IvW3GesSlbld4LsfxnvALQyQ/9CLeR/JDL+Lid8zjPxbtEO/r
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
uAn1Cx/4K9Yw/yL7ptvl7R/HGOZfbPWfbO85I8Yw/4L14vyC9eL8gvXi/IL1
4vyC9eL8gvXi/IL14vyC9eL8gvXi/IL14vwC9+F5/gXuw/P8iyujRmWfYvFF
PP+ipew3nn+x9nhQMffhUYb5F9iHPP9iVe3P+/PnjjLMv8D+5PkXmQXGfKt5
LsIw/2Lu/KqX40dEGOZfsF6cX7BenF+wXpxfsF6cX7BenF+wXpxfsF6cX7Be
nF+wXpxfsF6cX0wV3ofnX4Dr4fkXvB7nF7we5xfdahY3Z/8pzjD/4tSlzMqf
VjYwzL/g9Ti/4PU4v6gnv488/+K9/N7x/Avsf55/wXlwfsF5cH7BeXB+gfqf
+QvU/8xfZBMfwfxFpnDfzF+AH2f+Avw48xfgr5m/+E34a+YvygnHzfyFSXwH
8xfwL8xfwL8wfzFpVe9P1u/D/IV7m5Y+byz1LfMXweERE63fgfmLIIkzfzFR
8jN/4Sb5mb/oVvPVKOv7M39xemSOMOv3Yf5i86zir6x1MvMXWyTO/EV3yc/8
BfIzf7E3uVSE9efL/EXzWIfR1v3D/MVg7w/nu/cNNvAXiDN/gfzMXyA/8xeL
3ZecmNcm1MBf5OyRPsPK1zB/8XDsP4HWfcL8xSOJM3+B/Mxf5JD8zF+g/mf+
oorU/8xfzBMfwfyF5r6JvwA/zvxFQeHHmb8Af838xX/CXzN/MQUcN/EXqeI7
mL+Af2H+opj4F+YvBjpsrJjH8n2Yv1jk3qTEaUt9y/zFJVfHftbvwPwF4sxf
DJL8zF8slvzMX4w8u7mB9f2Zv2iyM28b6/dh/sIlo1HO4pY6mfkLZ4kzfzFC
8jN/gfzMX6z90Hqw9efL/MX5/Nm6WPcP8xeOefdmLDkbbOAvEGf+AvmZvzgn
+Zm/2GJut8C6f5i/+GPV7nVWvob5i7h19k2t+4T5C8SZv0B+5i8mSX7mL8AL
8/wL8MI8/wK8MM+/4Dw4vwiUPDz/gvPg/AL1GM+/WCD1GM+/uCr1GM+/0PUY
zb9YI/UYz78oKPUYz79APcbzL1CP8fwL1GM8/2KO1GM8/4L14vyC9eL84grp
xfkF68X5BevF+QXrxflFqujl+ResF+cXrBfnF6wX5xfg2Xn+Be7J8/wL8Ps8
/wL70zD/QvYVz78Az87zL1DH8vyL+sLn8vwL8Lk8/wI8O8+/YL04v2C9uj8t
6cX5BevV8y9IL84vWC/OL1gvzi+gl+dfsF6cX7BenF+AK+f5F+B6eP4Fr8f5
Bdbz/AvU7Tz/Yrv4cZ5/wetxfsHrcX6Bfc7zL7DPef7FbNnnPP+C8+D8gvPg
/ILz4PwC9T/zF6j/mb+Aj2D+Av2jmL8AP878Bfhx5i/AXzN/Af6a+Qv0j2L+
Av2jmL+Af2H+Av2jmL9AfyfmL3JJfyfmL9A/ivkL9I9i/gL5mb9A/yjmL9A/
ivkL9Hdi/gL9o5i/mC1x5i/QP4r5C+Rn/gL9o5i/CJT+TsxfoE8U8xeIM3+B
/MxfBEh+5i/QP4r5i4vS34n5C/SPYv4C/aOYv0B+5i+Qn/kLe6n/mb9A/yjm
LxLERzB/Ae6b+Qv0j2L+Av2jmL8Af838BfpHMX+B/lHMX6B/FPMXDuJfmL9A
/yjmL9A/ivkL9Hdi/gL9o5i/QP8o5i/QP4r5C+Rn/gL9o5i/8Jf+TsxfoH8U
8xeIM3+B/lHMX6B/FPMX6O/E/AX6RzF/gT5RzF8gzvxFKcnP/AXyM3+B/k7M
X1yX/k7MX6BPFPMXiDN/gfzMXyA/8xfghXn+BfrV8PwL8MI8/4LzcP8onn/B
ebh/FM+/QD3G8y9Qj/H8CyX1GM+/QD3G8y9Qj/H8C9RjPP8C9RjPv9D9YWj+
Beoxnn/Berl/FM+/gI/j+Resl/tH8fwL1sv9o3j+Bevl/lE8/wJ6ef4FuFee
f3FC7snz/AvsK55/gX3F8y8Gyb7i+Rc3pI7l+Rfop8TzL8Cz8/yLzsLh8vwL
3Ofn+ResF/6C9XL/KJ5/wXrhL1gv/AXr5f5RPP+C9cJfsF7uH8XzL8CV8/wL
9I/i+Re8nvtH8fyLGuLHef7FQvHjPP+C18Nf8HruH8XzL07JPuf5F+j7xPMv
OA/8Befh/lE8/wL1P/MXb6X+Z/4C/aOYv0D/KOYvwI8zf7FH+HHmL8BfM38x
Qfhr5i/QP4r5i0LiO5i/gH9h/gL+hfkL9I9i/uK59Hdi/gL9o5i/KCZx5i/Q
P4r5C/SPYv4C/aOYv0B/J+Yv0CeK+YsREmf+AvmZv6gl+Zm/QH8n5i/CpL8T
8xfoE8X8BeLMX+SX/MxfhEh+5i/OSH8n5i+WSH8n5i/QP4r5C/SPYv4C/aOY
v0B+5i/+lfqf+Qv0j2L+oqP4COYvwH0zfzFP+HHmL9A/ivmLtcJfM3+B/lHM
X6B/FPMX6B/F/AX8C/MX6B/F/MUo6e/E/EVX6e/E/AX6RzF/gf5RzF+gfxTz
F+gfxfwF+kcxf4H+UcxfoE8U8xf3Jc78BfIzf4H+UcxfoL8T8xd1pb8T8xfo
E8X8BeLMXyA/8xfIz/wF+jsxf7FK+jsxf4E+UcxfIM78BfIzf4H8zF+AF2b+
ooDwwsxfgBdm/oLzwF9wHvgLzgN/gX5KzF+A02T+AvUY8xeox5i/GCD1GPMX
6KfE/AX+jsr8Beox5i/QB4b5i0NSjzF/wXrhL1gv/AX0Mn/BeuEvWC/8BeuF
v2C98BesF/6C9cJfHCa98BfgXpm/wH145i/AwzJ/gX5KzF/8JfuK+YtxUscy
f4F+SsxfoL8Z8xfgcJm/mC48O/MXrBf+gvXCX7Be+AvWC3/BeuEvWC/8BeuF
v2C98BesF/6C9cJfgCtn/mIIuHLiL3g9/AU4IOYviokfZ/4Cfpz5C14Pf8Hr
4S+wz5m/QJ805i8Oyj5n/oLzwF9wHvgLzgN/8T8iraDW
     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxlfHdUlFf3NVZEVBAVRBSkIyqKiDRxLr3a0dh7iaJGRKxYotHEjr3EDrF3
sRcee6+JKHZQo8GKveIPv7n7vuvbz/vPu9ZdkzOzxzNnP+fuvXHs8Uur3sVN
TEzulzQxKVH0/z0nz835ermaMH9gNmlHjpO4XzzZdeX2yiIyPPp8TnAlYX++
lxYwtsCA8+cTf11W7XUt0bJB9ZTwt+XU60vbVHh1q+j1s1KtD400cxUbZ3SZ
UHnmK8Ol9ZNOJLX5kFU/fu2GbTlW6rxm+/bfCi+X1Za/bLH6mLWnOr9sfL0B
r98Ts7rPho/VhZvx9QKvx3kp4/tqeF+c/7Xzwq7PRa/H51z4z+FdPY65iYy6
te/eDHZWeHGeefFyrwGm7govzp3/3/tWEybyf/u+/v721goneV5We7Fp0qXQ
ABuB8yj5vW3asWTIf+tr8rmG8/g1ZSNdr5WR586qPs5lfYH6OF8zcKbNQYcH
WVNyvaK2uXw29L93u2vwckux9NxB5ycPj2XVf7Bv4ST3L4Yp4at633EwEXNL
Lo5qmfzY8OBe+vubjp8M1+vdKH9rsqXYd/1Q4Jjirw2mB5M2nk77ZMhLSOxu
vb+Uqj9d1r919E2r7ftcdPWjMwZ+nTKkpq6+VWJBLZMtLmKvrF9G1u/q0S2o
ao6jqNP0+7IhVauLec7NheVuWzG13vMtJztVF07OJU53D7UXow5nfrzTw1a4
rF1avfaCmiJ40tOSi0vUFHljr8fPTbcVThXrTjddXlVklnm7r/tZR2FZODvD
w8lWdGy+5M3IqTVFT5+r8alznYRtyomKD4NtRTNbq7IuiXYiJPbdF4clTqLR
lVJ2az+bijEJ2TFp82qIyK5v+nhMchT9/wzcYL6qjDjiOzXL5ERVsTjRLFJb
XVPMr/au2CqHMiI5IG732qJ/t4jLxZxe7qkhmlQf32qYk5lo+WhmxZ63q4on
oyK+7nOtLjy9bEd8zy8j9vXf/qLBZHsd3oKYylHmwc8MjPdt887/dt9iosPr
OP/si9szN2Yx3quvWocuG2eiw1txUVDN91sfGhjv0b1eFpu+vTYwXm3a4PGT
XdKyGG+DxTZNE76aiEiJN0ji/W791dLrQ6qB8e6o+OfqRsffGzbNzN65xO91
1j+Vl1bKjXITPpdcjv+S4ibWyb6Kyrv4MsreTcy5GzvF746HWCn7akzo/cWr
m7gJE+14A8sFLmKR7KtKEw5FPP/mKk5Pju42+YqHyJR9tSj4p69nzd1ElfA9
Scu/ugr5vobtLxKHlrpuLzZ3Xzw7oaI73tdwtnXpg36eDqJZq+Tz09e74H0N
PeY+6DvhP3uRO/iTU+YrDzHP+L5ZPpVrWT7v7yCqbkh5F7zLBe+bVWfZu9Xe
zR3EuWelH7pOdReM1+5jk9D9VSrr8OZYTzsf86iqDu+unLEOX9pa6vBG9J08
6vGFqjq893J7LrNxqaTDa1HD487EplUU3nMSb8vCW63ejrFUeHtJvClBT76H
lrNVeH0l3keb72e0nW+pwxvnU2KCm8Fa1DX2s9Zr1IbNHW94CMO5N/dflCur
O38fEdrx4nMnUcxh1NveXb3E65RFvUcmfTF0+NVxY8dlpur8rTxP3Xlhxn8t
ndTv8fWm4VfeFqsljs/oeP7SQBP1ezwU38d9Sa6HKFMycG6jE5YiTPanW/kp
o5s71RLPnvUaPG+pifhP9ufqli+PJ1WuJfZ8WO/Z8JW5rv7CRtUXlJ5cU1ff
s83qZ3UvuIhwWd9d1u8+0z5rz+yauvqVr2zdvKKPs5D8lWWze+dW+zQ/xY9O
ki/WOPW3ajXMS52bSN68HXv1y4Uj3uo8w8hfWk7x/XHF1/krflxj5C9t+cIb
C7fnNFDnkr+0bo1/arLWK0id9zbyu3o9+DFc8hFej/MXRn5X74tzye8aPif4
ca/ka+DFeXXJX8CL83+6DGrUr+j7cZ7S+ebUyDqKH3fJz3+hnqXjggIfdY7n
hMc1Ut0CRzRS57OWLJ9mW/Q5cQ5+vGGsb0D9/59nK6n66tzYD1pE8zP+3bp5
iQqJ/4YvmfTBIOeelvrhpMXWBC+ROSBp/i9/fDSgz7tdtQkZM6+OSB+c+PVV
ZCXRxDi3tXm5w6/eTvYSBefelBnasJKuvkVI+PVpu+0F1x9ZrG/tkA/2guuP
MA9yNK/gpqvvEDBu7fmSRd+/nD8jc6ft3Lujgfg944tT0+rWYpucPx7/2S9Y
+q+PWGm2oP+4X6yFJufPvZxb+WWOeQv/mGTrs17WIk3On/BDy4odv+8jzM/u
Pdxwm7Xi8Xy7NmVbDGsgiree1HLkvKL6cv7s8oysttHER2gvH+T/lu8oVsr5
Y+q80+/UeW/hc8j61FPNUQg5f1o0eJ/X4ZWP+LmGR1JkriPeNyu/WcPzK656
i8JOpWrMXukoNDl/wl+lHqsU7CMmVl3x96Atjjq8tSuMqHrk5KMsxtvxUcYt
r7oPshjvuif7U3MaPMpivOXzZgb+5p6bxXjbLPHM6FoqL4vx9h0yyuHM91J6
vOsi0nq1L6XDa1prmv+lm6V0eLu5mzz5dL2kDu+QKn2PDrYohecWrdApsq5r
Pz+xw6xOYYM2zphj2hbPHAuzZf7C0PiT4/mxzmKJcY5pve0W9EoZ2UiUvf14
eFIXZ8wx7XThT6PrL/QXQ5eWPe+2wlk8M84x7ZfOFr8drOMnXt4fXCVmtjOe
W7SgASbzbPb4CS/3OT/N9vYUjsbnFm16r4HbfSY2EqvfHvf5aOqp+vNa8rZO
p9b4i+yE7DutPDzFbuNzi5aU9iKi3JRGYuC8nVOWPa4lehifW7Sz3n7B49/4
iYLmTcXod7V0eL1vLhnw6wZzHd7eGZe+PGpRTod3tvPU1qMvmevw+rtWyWhx
tZwOr5vfljM5S8rp8Fqts+33bYadDu/H0HGO5wLtdHi7lVidMn60nQ7vjAmd
LlT5XE2Hd8GnWYFXqtiJ+77L0s36eGnvl5/55vEgSMxOS7//q+1HA58Pnupz
eNIte5EveWds50lzm5WvKzyO5l44ftFKdx7Y8L3Zuyuu+J1mTeplsna2Q2Px
V3aq2xX/9wbZn1n5nVrcza0XJPr26/j2+IT3BvSz1Rr32isDgsQU8yuZh99Y
CU327Ycr67JGGIKEQ9yWbmY7rXT1391aP6t9T3vB9deMd5yYnWIvuH7+jYHf
kh666urvGtGptc1xVwG+SwhOqrAjJ1Tx427JFw+v9Rw2qEuwOt8meXOQRbF+
lR4Z1HmbR89bJRa9flfPobfTe4cpfjT7++qRiae9tapbJk4YPVao81nprpPi
N/toI02OtXm/LlydLw8Kt9p4oK56PfhxhuQjvB7ndQvHrEp38lXvi/OXkmfx
OcGP/SVfAy/O4yV/AS/OjXu6s2bku8aKH2fLz19vlMOpgWVD1PlO+b01Trp2
JqtpqDofM2V61R+fE+fgR+NzSzVVH+dpEi/q4zznaaPJns/qaw0HzJ2S0jpY
8emsbqMbudSrpzUXVu+WNg1WfFrc+ByoHdm8v/xvAxsrPr1W2OBaj9r1tU67
+mf7dA5WfMr1wadcH3zK9cGnXB98GibnT6nWnS2/9xeKT6Pl/LmTvaZYQckQ
xad/yvmTtLxsu2b/GhSfRsv581T02VOyeIjiU/k71Zq8OnLgbLxQfOop50/6
8P1hH2cLxacucv4sepybUe6V4X98KudP0mgrj8tmIYpP5Z6opVbqGfDonUHx
aR85fxJvtllUZ5tQfMp4waeMF3zKeMGnjBd8ynjBp4wXfKrDCz4lvOBTxgs+
Zbzg07a5e1qsGeatnU4ObOp7MlTxKfpq5YeJTdy7hSk+Lf76SMr7UfW1L7/k
/dy5WajiU/Tb5u5hbwM7hyk+zZVz26Tiio8m60IVn6IP+yxaON7reaji069m
qVM6D62nzarcbFbj1qGKT9GfPktf9ipdNDfAp2liT71TFby1XzfMzPFoG6r4
9HEbt5EJyd6a15ei/848TPEp4wWfMl7wKeMFnzJe8CnjBZ8yXvAp4wWfMl7w
KeMFnzJe8Knb9Wkuf3by0457p/r6lYhQfMrn4FM8d7VILtj9bH1jxad8Dj4N
lb+XafNspiY6Rig+lfujdjgt66+568MVn6KfW/nWPj9kS7ji0z2yb8PPJVp3
3R6u+JTrg0+5PviU64NPuT74FHy3bEWZEwlPYxQ/gi+Cmp4pyNEi1Hk7yZsm
+TaJdUpGqfP7Xg2/xhW9/tsJ87mRw2MVPxos0ipXex2gdbO0C7BPi1LnJ+/l
Xc/LDtKO9OhQbvH+OHVeqsO9W4mmfur14Mexko/wepz3DAx6GxAfrN4X516S
Z/E5wY+rJF8DL87nSP4CXpy375Lr/+P7uel20vlJwwjFj6fk5x9xe/cYy+rR
6jxNfm+T/h4wvkfXmP/x7ImYxB+fE+fgx28u7i6bij4P6uMceFEf5xYeb29o
VQK0nlW7j+58IELx6dhnnwd6HPHTBk+o6Z20N0Lx6Z64z/Ex7f20WvuGHuoV
HaH41DzolfunBH/tw8HzqxoX4QWfcn3wKdcHn3J98CnXB5+2k/On2a63J1el
Rik+vSnnj1tAk71zraMVn5aU8+fX7UvzzhT9O6r9VM4fn/RvA9dWilZ8ivnz
e6v2QwZ2iVJ8Ku+XtGc5LT8vSY9SfFoo50+VtmXM1ptFKT7NlvNn/531d4fY
Rf9vP5Xzx/RZdOv55aIUn/4n509m4+fNLh2JUnzKeMGnjBd8ynjVfkp4waeM
F3zKeMGnOrySTxmv2k8JL/iU8YJPp9dISW+8MkCrmH2lxI3rMYpP0VdP2tu9
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
vram0osdYYpP0VfWrssPa6vDFJ+irz7ODa/jvyZM8Sn8Vz+HHrRzKwxRfAo/
ifmsrb2mlwlVfCr72VDYqPb+FJNQxafyfbOqPvaxSLcMVXy6Uup9fiNmrKpd
PlTxKeMFnzJe8CnjBZ8yXvAp4wWfMl7wqUZ4waeMF3zKeMGnjBd8Ch+UZ8/F
7Tq1D1d8yufgUxP5PDnBcs/g1d+CFZ/yOft7L26dvupoz3DFp3ge0H4q82Fj
x3DFp+jPW6YV43MSwxWfoj8/L+p/t/vP4Tp/L+qDT7k++3tRH3zK9dnfy/op
+IL1U/h7WT+V/KXTT+F3Yv0U/l7WTyW/6/RTyVM6/RT+XtZPwbOsn2qSr1k/
lfwuWD+9LP29rJ/Cr8X6Kfy9rJ/OlPos66eyvoH1U+Bl/RQ+FtZP4Q9k/RR9
zvop/H6sn3J93Pdyfdz3cn3297J+qsn5w/op5g/rp5g/rJ9i/rB+Kn0OBtZP
MX9YP8W8Zf0U84f1U8wf1k8vy/nD+injxX0v48V9L+PFfS/jxX0v42V/L+un
Orzyvpfx4r6X8eK+l/Hivhd+D9ZP4Xdl/RR+V9ZP0W+sn8qcjk4/RR+yfiqf
W3T6KfqT9VP4r1g/hd7H+injZX8v66eMl/29rJ8yXvb3sn7KeNnfy/op48V9
L+Nlfy/rp3yO+17kqlg/5XP297J+it8F66fjZT+zfrpS9i3rp1wf971cH/e9
XB/3vVwf973+/20S8ZvDdPrpu/El7j3eH6rTT/vm3IzfeSlSp5/GB6U6Pyl6
PeunQQuWehX3Nuj000yjP0ennx74a43PjfIhOv20sHyL+Y2LnqtYP7VJLGj2
Q/dk/XRt6+stfrye9dN/wkp1TneK0Omntpu2HDatEqnTT406ZphOP8XnZ/30
rfzeWD+V/iudfmrUWyN0+ul3iZf1011Nqu/aXFoIzp+uPND2UJRBCM6fjru9
KP/TNiE4f1qrb4tZ4oEQnD9Ffc6fcn3sp1wf+ynqc/7Uqkfgp8DsMF3+9PLt
UXdH2IXr8qcH2u/61yohXJc/XTzqQ6UTJ8J1+dOIUlv3mn8M1+VPv54dnpH5
KVyXPw1u4Zc1LDNclz9t9ffX3bdHh+vypyk79k/xLBuuy5+edS/x6MH1MF3+
lPFiP2W82E8ZL/ZTxov9lPFiP2W82E8ZL/ZTxov9FHg5f8p4sZ8+/33PinsT
DILzp+grXf5U9hXnT8fKvuL8qafsK86f5tWxHf3fQyE4f+q848b8jSuE4Pyp
v+/yGRX7CsH5050ee7XD+QbB+VPofZw/ZbzYTxmvyp8SXuynjBf7KePFfsp4
sZ8CL+dPgZfzp8DL+VPGi/0UujznT/kc+2kdk8VOpZ9GiQLKn+Kc86dNZH9y
/hT9yfnTobI/OX+K/uT8KdfHfsr1sZ+iPudPuT72U/Ad66fgC9ZPwZusn0qf
rU4/hd+J9VPpX9Xpp9IPrNNPwUesn8J3xPopeJb10/2Sr1k/BV+zfvqs7Mw9
P74f1k/x+Vk/3SG/N9ZPoc+yftrjad2X14s+D+unpyVe1k99pI+F86fwq3D+
FH3O+dMA6T/h/CnXx37K9bGfcn3sp1wf+ynmD+dPd8v5w/nTVXL+cP4U84fz
p5g/nD/NlfOH86dOcv5w/tRPzh/On+6W84fzp13k/OH8KePFfsp4sZ8yXuyn
jBf7KePFfsp4sZ/q8Mr9lPFiP2W82E8ZL/bTfVIX4/xpI9lXnD8tJ30gnD9F
v3H+tLr0X3H+dIbsQ86fVpB+Es6fSp+t4Pyp9NkKzp96SP8V508ZL/ZTxov9
lPFiP2W82E8ZL/ZTxov9lPFiP2W82E8ZL/ZTxov9FHo950/5HPvpGck7nD/l
c+ynL+TvhfOneA7h/KmL7GfOn2bKvuX8KdfHfsr1VV6G6mM/5frs72X9FHzB
+ml3yZusn8Lfy/op/E6sn8p8imD9FP5e1k/hd2X9FL4j1k/Bs6yfBku+Zv0U
fM366W7p72X9VN7fCtZP4e9l/VTeDwvWT2dKfy/rp8DL+uln6WPh/Cn8Kpw/
hS+F86fw33L+lOuDT7k++JTrs7+X86fw13H+FPOH86eYP5w/PSHnD+dPpc9f
cP4UvM/5U8wfzp9i/nD+dLycP5w/dZfzh/OnjBd8ynjBp4wXfMp4waeMl/29
nD/V4ZV8ynjVfS/hBZ8yXvBpaamLcf5U5g4E509lTkfo8qey3zh/KnORgvOn
8Lty/hT+K86fwn/C+dM50n/C+VP4Tzh/ynjBp4wXfMp4Vf6U8IJPGS/7ezl/
ynjBp4wXfMp4waeMl/29nD/lc/b3cv6Uz8Gne+XvhfOn8N9y/rSi7GfOn+I5
gfOnXJ/9vZw/5frgU67P/l7WT+XfExCsn9aWvMn6Kfy9rJ/C78T6KXw7rJ/C
38v6KfImrJ/Cd8T6KXiW9VNTydesn2J/ZP3UxNXo72X9FH4t1k/Bs6yfwk/F
+mk76e9l/RT8y/op/L3/Lvv+V/nSkcqPBB/Lm3cTW7hUiFR+pL3Sx5ITMfrL
+28Ryo/UTfb/gUzHfoOKRSo/EtfHfS/Xx30v18d9L9dnf29T88u1NyRG6/y9
Gw7fzgvrHq3ue/+W82ePdfcZHfpFq/tezJ9lfdr5120frfP3jrlW+FdGp2id
v/f5xGHz52RGqvte+P3SLve7+/FwpM7fO3HEI5+83ZE6f+9yjxd/WJyK1Pl7
D+2Lslt0LFLn7wVe9vcCL+57GS/uexkv+3uBl/29wIv7XsbL/l7gxX0v42V/
L/Cyv9eizuaf75+M1fl7B9zb5zDqYKzO3zvKr8nZtOOx6r5X/t0e0fV335Se
mbE6f694fyvv5p5Ynb93W0brq6ctYtR9L/yuCQWRdvWqxej8vVGLjw6uahWj
7nvhP+kec+5EhFOMuu+F/2TcTZd2F+1jdP5e4GV/L/Cyvxd4cd/LeNnfC7zs
7wVe9vcCL/t7gRf3vYwX972MF/e90OWTT9S3+N4/Tt338jn7e6fmv36RbBmp
8/finP29NlYu7XqnxKn7Xjyfm+1fsbnZwDh13ztd9qdL/3XFU8fEqfveh7I/
w74Um19yVJzO34v6uO/l+rjv5fq47+X6uO8d5Np/bl52nE4/rX1I8x77MFan
ny6vsmhFzKdmOv10wvCAYT9ez/ppwu/m/W2ORun0U0uHHmV+6LCsnxbk9pw8
yC9Gp582jC3/5GqtWJ1+erTAd9QP3ZP10zuz5qX/eD3rp+bjj24NiG+q00+b
P0msuLxJM51+avy7DXE6/RSfn/VTT/m9sX4KfZb1U+PfeWiq0099JV7WT5+O
yjENrx+ty59mVm0bnHYzWpc/temXfWFchRhd/nRQUsf7a9OidflTro/9lOtj
P+X62E+5PvbT6OUf4q58j9PlT01t/b0tIuJ1+dPX84cErB8Tr8ufXtqd2afj
y3hd/nRUyADz1Y5NdfnTBqa+H2Kdm+ryp8nT31Ysfzdelz/9w2K/WfJf8br8
6aYXw29rPvG6/KlJL81vVLF4Xf6U8WI/ZbzYTxkv9lPGi/2U8WI/ZbzYT3V4
5X7KeLGfMl7sp4wX+2ldqYtx/vSZ7CvOn17/UMny7s/Ruvwp+o3zp13Ty+dl
l4vR5U/Rh5w/bfdi/pOQM9G6/OlA9CflT9Na2O58Zx+ty58+OtG9wtZnUbr8
KePFfsp4sZ8yXuynjBf7KePFfsp4sZ8yXuynjFf9fSTCi/2U8WI/hV7P+VM+
x35a/tdZ25zMW+jyp3yO/TRK/l44f1ogfxecP0U/c/50I/qW8qdcH/sp18d+
yvWxn3J97KfgO9ZPwResn4I3WT/9WfqUWD+F34n1U/idWD/Nln4h1k/BR6yf
rpG+I9ZPwbOsn76SfM36Kfia9dNNIb9t+fH9sH6Kz8/6qYX83lg/hT7L+uki
96chPz4P66fVJF7WT+Fj4fwpfCycP10ifSycPw2X/c/5U9Tn/CnXx37K9bGf
cn2Vl5Hzh/On4HHOn2bL+cP5U8wfzp92k/OH86eYP5w/xfzh/CnmD+dPMX84
f/pQzh/OnzJe7KeMF/sp41V/D5/wYj9lvNhPGS/2U8aL/ZTxYj8FXs6fMl7s
p/Bfcf4UfcX5U/QV50/RV5w/RV9x/hT+K86fwn/C+VP4Tzh/Cv8J50+h93H+
lPFiP2W82E8ZL/ZTxov9lPFiP2W82E8ZL/ZTxov9lPFiP2W82E+hy3P+lM+x
n4K/OH+Kc86foj85fzpA9ifnT2fJ/uT8KZ4HOH/K9bGfcn3sp1wf+ynXx34K
vmP9FHzB+il4k/VT+JRYP4XfifXTXdK3w/op/EKsn4KPWD+F74j1U/As66fg
a9ZPwdesn8Lfy/qp/PuBOv0U/l7WT+XfJ9Tpp/D3sn4KvKyfwsfC+VPo6Zw/
hf+W86fw33L+lOuzv5fzp1yf/b2cP8X84fwp5g/nT/fL+cP500Vy/nD+FM/J
nD/F/OH8KeYP508xfzh/ivnD+VP4/Th/ynjZ38v5U8YLPmW87O/l/CnjBZ8y
Xvb3cv6U8bK/l/On8F9x/hR+V86foq84fwr/FedP4b/i/Cn8rpw/hd+V86fw
u3L+FH5Xzp92lnof508ZL/t7OX/KeNnfy/lTxsv+Xs6fMl7293L+lPGCTxkv
+BQ+KM6f8jn7ezl/yufs7+X8KfqT86foT86foj85f8r12d/L+VOuz/5ezp+C
71g/hb+X9VPwJuun8Peyfgq/E+un8Duxfgp/L+un8AuxfgrfEeun4FnWT8HX
rJ+Cv1g/hb+X9VP4jlg/Bc+yfgp/Eeun8Peyfgr+Zf0Uf6eO9VP8nTrWT09L
Hwvrp/ANsn7K9cGnXB98yvXBp1wffIr5w/op5g/rp5g/rJ9i/rB+ivnD+ime
n1k/hd+V9VP4XVk/xfxh/RTzh/VTxgs+ZbzgU8YLPmW84FPGCz5lvOBTxgs+
ZbzgU8YLPmW84FP4r1g/lX9XVqefoq9YPz0l+4r1U/ivWD/FPGf91FL6SVg/
hf+c9VP8HTnWT+G/Yv2U8YJPGS/4lPGCTxkv+JTxgk8ZL/iU8YJPGS/4lPGC
Txkv+BQ+KNZP+Rx8WlE+T7J+yufgU/Qn66eNZH+yfrpD9ifrp/Cfs37K9cGn
XB98yvXBp1wffPp/bYzWRg==
     "], 0.67]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[CompressedData["
1:eJx1lTFIQlEUhqUiooYgohwiUskhHEQCG4IOUmrgZLUVmBBFpTVGSTRlOUgN
tYmU1FCT1BIUiEFjW4NGNBVFi0OQQ0OB97zH/e+7gssHHr9333fec8TXogtN
Npst9v9ttqmfyHl7cPCpjZDf/Ka/n/NOWt3YPPNMDVBv6+d7sdJFLeX51GW9
T+EvydmKPVsb4983uJPW7a9D8Xs3IT/KXHXmi908p+Tan6tmgh5iH+TsI8/x
GT7I2Yfn5EKFWP+B3/BBLvt4xf+Ogo/J2Sch5sy8dVxsbZPhg1z28ZYangHw
MTn7nF776+XUSKnqfnB9DE8YPsjl++UV1xWC+2Vy9uE5saWd3PTXpOGDHM7H
OG84H4Ozz0ljjtIPcjgfwn6QQz+k6YewH3mOD8+HNP2Qph/Cfvj6sR/k7LMs
5mA/yK33K6DZr4CyX9gPcnm/arfYD3LcL+wHuexDmn5Mzj7pnsrjz+K40g9y
2Yc0/ZDSj+hc6Qe53A9p+iGln4KYg/0gx/3SPH8I++E9wn6Qs09C6tzsBznu
l6Yfwn5WxBzsBzn7JMUc7Ae5fL/CSj/I2ecueuzIHkaUfpDLz8Ow0g9y9uEO
sR/k7CPPMftBzj57Yg72gxz3y7ofUvrZFXOwH+TW+4XvL1L64T3SvL+UfniO
9fuLlH54j7Af5OzzB/GIxMo=
     "], 1.56]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.780679841085346*^9},
 CellLabel->"Out[97]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2kopHiW4Octm0oFTHhpRL20mp04AJX/z+xN09rmPZ9GdR4+U6Zsb0ZlTT167
hsl5FDXwYLHLGjI/nD8QfHCa5ZCnH2s93O5g27inNZ92neFm9WpX6fqjdNSw
apVZU5P2CuqbaCdj0xFuA5zxauIAKSehjFqWEEyzKkrl36s5KMSc/1ePH9Oy
Vau03Px8fTeeUQvG+KOk0OQWPaOs2iDj9aJpYkw8SNvIaH3gjyhsfcEbfOdO
H7p924VqZkbx7iwDRMDEPFjyXVrRWrYb5zmElh2eKnRPOhLunwAm0us5vpq/
xYJpa/Clo11nNFQEuod7uOfoUhntecIM52Y5QK3+hpqsuTqIhgOs46ar3dj2
vN1WPXqiE508B5ieC23fHYK2srUKiiDyMy2kQY42KOACVqPmjI1cOrOatsS7
yUYi4EoZZpGC6IIFC5QRHHWj6A4m+DePHzc853PWbn1CpR0NgCxobqbPzHyK
IwtrXqu4SXPOwIBL04F3VPnyATihetGoMc60+0gvamzsQ/e/GUg73pwKfSwT
rQ+mMlenzlTu143mBTqKxwMeW/gX4enqDCnN+iHq3OwoARMZpEzasBidbR7h
wxpFsUIFHUB3GIgnl9vdckSNBWLMOBsmVYG8VL7+3C2GBYSYOV4RpcaPGxut
fYLrMe0t/XGgsi5cv65wIqjabDZtfuJgCvPuL7EVrCAc6KVJIfSgJowaKkuE
LRJAphwOcoAlnVZXZ5eU8PZWwIGXmltMK7ZU0dVbmdrte8HqwUPj7NRBiIMA
H0I1F+3/j2DNnHOQJZswImUgCNYLC6kw0I3KLX2oIcZDTuOdigCaEj2QiiJ8
aU22P8GUgI4lLSdHiqyYKOe7axIr9RyYTeOrFwC1SlPqhmmPfvVXwVL1M3U0
qp7NsH8yNQNJCjQZsKQNb14QbgCTMBGwOqD3Pr53T0W3GQPTNRPH0huZvk/h
6qePL6ZLE4KoeGQhKMdhRsyOtK2jSxqljl5N7169Qyt3nSMQi1TYQrVPPu9m
rKmtsaZ/Sv8JAQB2GK0WXpO6/ehZ/W110gYHB2uFJSUawhRvPz8BQRRY3GmU
bw8qDXKlM7me4negaZkfOpCmZERxrjoZDRBT4crSqmMgDQyvp2WvnaUTnz1W
2M3p3pdfM684iLa9HgInbnlIbcc+dZRk5GxS7RK68OUPVP3yfS1v/i/4glAg
oGvPmbN8OxqE8dHDKBaIIl09QO7rlom6Ty/mDUN5m1cmG89HU7t265apYdiy
gx/1GTyWcsYulmZ35YqLWuFqcmzW3Nno4AiyX42JT6PFyut0/uaPNGH1DzQo
ohxcMNqshgbBDKLegKM0xNAAxHJQq6hKj6Lg/n1EIhY8YOgxY/I3i/ccojIY
ducIx9GOU/iHvFw/n3hyD66kEZOWijKTKZTCH7RC9q2xyaNp7prddOHWjzR+
9f+0idUz0VAyyUtqFi3C8L7wZ+G3FuRk0Cx2/6iem3h1VKkxPinkyxs2mB1r
dDw1v6BhFJW7itLrv6befqPIL3Yhvbz7LZtd36yZ+Cz04qLjrRSZWELz1++j
i3ceaqMbvjCh1sAnyN5jogZNWLSwXPl5oZsGZgAoZpZkJHKOPEAOOCIN8A8h
DUM7QmZSN25U+3sNpqic+ZRWe1eNr7qqnyynSHLxyaKUUatJPXcONmGcfoKC
5GNbq7N/lUjD5cz/SkssnKP4ckAxc9EioSi6eluIAZQhHHqj1AeQENCopXyC
5nOkD6zatPp6ue3IYyFqs37bNuidNbHwum4SOo7hpbdlTOXA2ev02oG3Dbob
SxcnJ1DjCDmMUaYTWiD0kbLmEWXUXhAmaYTpsI/ol2CGADUL9FrBUQExYYRf
eGYmFxQ6GmBvAWvr7MWLQVWl3XrwwHGlqZXzT4FIDonOII+oNTINZp31P+32
w4ctzMfXJZbTyIMUWnRREFlJ419FZ9G6R1XtbAno/2P+jaNybf+xY+CDIStn
aSV8YqDwjOITsrVrd+442vOSfynw0EAbIBwJihlF3gnbON94QBOWP7Ce/fhj
gy8VWwcIDgIio+PuJMd74PBXeDs/4v80Sp91W4sftcaWkStRvoDrVrzyihhi
CBrwrQEnu+wXKOYUvuDIExFMIQlG/IdZfawS2qCo9YO4D6V0+CTo+E2dOdOG
clbnfhm8I4f4MT6kzfs/dCjTT9MgwwjA54THxAhJDc4f31Jof9k4bbV5hK8U
BmhopoFfs55P0PbDx8iStFDziHnZFhQeJ7BCaH1hIBBN/cNnzqjofXNOqaGB
evuHH6wf3LhhQGaUQUHhItSZNZ9oxCqiV/ed0Q6fOqV/ubtoTgEQgilv4E4R
DoJglg+MrTfbD1DY8OMCBTyeh5KRn4/v1WLSSigqeYT0shGxrN6yjRILF1Nc
/nwhxTh69qxMB6F5s2nbNjESqB2irohh3en82E9duaJduXXLxnbIdvzyZagr
m4BasFNmF5fTsNGfyamasOlXIC1M2BBIi4Bj4hgKgBHFyclJc+3fnwbwyjwG
DpSaPkeXppt3DlykQVcFvfuFOgJBG5a5xNYv1JwWlgDUlLCwsf+SCwnkGOj2
Dp06ZYN0Lcc36PDYySDCDGlb4IeGxI2j6AnfUN5SUktXPTZjI4T2+D4NnEUY
jy+tqLD5h4SAqxEkoVABsPkHBiqWoUMVDg2MW4cIQw1KbiDrqPFSJ4VqLi9D
/3I3ROoqZnlQgkUPOZ49OlZx84cfaCl7BQ4mIa4n3Xa0hGbMnq2hfMLvAHQW
0vAAARvMElh1EFjCa/lEzaa4Kb9BnNPmmXAI7tXWtWtXzdXVVeH/sGoN6hlD
hw3T/AYNKtaPto9+tPX3qvfhJSXG+AU0FTFAib0HegHqzcAugREXOCDt22/l
+12C6ygoYToVlNVA4Ax+zNKqVSttmaESj86agyQG9UbTz9rF2VNcZd1Shcrm
v09VS4ViQoZ0njE2ioNG4XrFrwcDiVBLsZEE4AlTbOkc1qDhhbIoKIawbICg
cRRA7g3oAQwpzjjOcknVckHkgqKovLpabnBkQoLCpkxhg2qDnA4fJUD7EduC
9gqRuAnTbtc9ktwHZwr729zVW6lWua4s395oHBakKBq+BN8GnjyAoFA2dOVc
AWAfiNgiK+aYBfbB8LTSHgH3HXI2XDqA7+MyRmtssYCKNUIUIQV21gGnMlIM
APOV27cBNDRpuNC70dr3jKHkEfUiqQHPPGPZm0rS5E9MhQRQBojJnlxbi7hO
IIMAj/Cv1gDxQE6O7AZmHnOrbNEU/h6TAQ8OG1TswKmA1Gw3O+eS8nL9y89L
3rJUUfCJgAzHTphgy8jKsnH+BKCcvno+aBxwYoxM34MXrW5+SdTDI4PyJ64g
7bvvRMNiYk09TVz4AQ2zrhVuG7Bnw/NhgBmLxGIBykGalpqZqbm4uEDKD4nJ
CP1k65it9oL+Qotl0+7davmoPJpYWiQjCEBHstkSX4DKzNnPNGVIUpk1JTMT
M2sWA1Rk6+2dI9AJYDZRsYmKEiJWkYPf/tZbgvPRfVczvRjAxxJRHTKq09du
UVLlHSVuxCvGI5CbJnsIqirgmNHKReQN3/TBRx+Re59eUiYHSiCW3y3uORJR
aFuDjR3fC7G7Pe+cpTFT5tmWrl+PoSl+7DOlEHz2k09glk1iHXevACElQ4gB
FiYOMcD/bNJDAXqMiX80nXBk0TtDjtGHHQiOK5iygBYDocCew4eV7QcPmlGi
KMejD3Gd09pJs9ZTZPZCAlKXd0phO23minzeBB0v69E3Sh3oG0QpuSUUV37H
HkJ8dv++1BX0pbUF0FGGL2F6QaaPuA1J5aXr16WPhiOAkBr9LUSRgFjw3bcY
ao/CWg0bg7gO6kZV89bT/veOwxQZsXRrqZ8O8A2l+JwKSqi8R8NGHBcYsYxJ
s4kD0xPggSvZlAGghS3BsCHKtQjtRbySPzf6eGrp+PEOxvnzlI/N0QuwxnZr
rqbFhMvLYtBkY0M9VUGwviRdqY7xsbFdtrlwOpRdPIk8otdxRPah6p951GSP
szz33HP0Gu/0uetXaMHyKQrnyXaNM3g7kLULvowf8JW7P1JR1XYMHVgjxv9g
HDvcYjEwODrgi49jaxns60kBA1yFsggATaTfKK+DUQmjs7cePhTJz5WKAqNO
GaPqyCdxB4WN/oTT+rniCGGF8VSu3PpMHRre28h1rW6enmLXkNvAaCuvv03X
7j1SUmf8biLexLgjCsOyIOWIdgV68Ci3BPPZApoagTrgT6gKa99/r3AmI7rP
nMpBxtFOt4g62MAh4yR6G1p4kt7g23Ln4UN1+uwyPqfNzIoAzC1SdFwmZf9l
Kpj1vvbWmU9s17/5xsEEwsC+mgEjgm8Qgnm5u9LwQLbq/fsJl4Dw9vDbA8sS
RLXZHQoPpgGCkreWlltMg6JrQWugZUy5agmLbWZJyGhmpJStRTUcQTwiv2V7
riHlFM5yDA9zcGDDOYShwigaLj1UOlI4KMD2IMCFOYzidcA38tPSjp46ZZ49
D/nYUtqsgA2McG1LEwZ2oDKfLrRq2ljautBGS4Y40ewgJ5of6kw5qfGUjWvE
Vy48cxHFTf5FeGnzZ32OQRUzsuEPWlT8i9KNXri6tbZ2S2tLQkozow5l8/T1
hU1A3mx7qV+W5hccKZklBh6B2z1+/jxNnDyPxlfU09rDj4GQt8uCoe6N6WYg
izDJi5mTtFB/ueTg20A0BLYVwESm4gGunGtTzdH15yTDAQte7hJSksqvSboO
M5aW1UuARQtWymoBNrKzU3F8IUxUwDy0d47TPC2JINzjkC9UgiyEQDBtO49+
IIFY7ZqTWLJxegU9jG8Bq8emnTvtQhwjM1MpPtQi9/WjxkZaMH0KvblrC62e
wwmwxZeAY+JHpnGgb8ckNe8YyBdrO6XU/kV5YGoYXU0ZOS4ixoalg1fLwcRx
NxOoVmCwwOVsbZ0ieeXJWLmM0Zi5H3CDKMOZ72DOso3W7Xv3NqGI0hJ1TlAt
IX44HeTDHswhCmLp5NhoinF3kgk6GFgU8DkitU0oLzeHjU34IYJKz4Assljf
o/Q6UHd8yQHSC6Au0ta91tpcMGYF/IODsWe21l1DtYEBScI6nz92rAlOt4XH
Pkt+/r4CEsaiN+/aZc0Zqxh1XBX1AM40QLAnrhFdAyDYUDrEAkFKwNstAvHG
LRggH/vJLYjp/gQ8sySkKynh3QVAA4KpUYOc5YwhxoCnRfe3kp3Oyo3bKHPa
5zR23S+05+Q965J16ywhkc04aGwmhCxVs1rJ1Pitn7pxMNaT9zNYScsvdmzW
TDCr8pgA0EDpA4/CEhVJecXNpYG+aI2rOqIkT1BrAOMBrbV4+XRSL9RYxk59
zrwXNrZ1MqSCbBYVUhxEtKrwnFDFwedCBF+QSMtGJtK5TFeILhn1O6tb2Eoa
x6ljxbbfNIykhkU2s0XHPUuTqlsKTcaXP3ZFA1vNLe6nRiWmWzt0E3VLGb5B
DAm7E5ZURoPS3iIP/+EUHt2Wxk1uoU2f25IKivsjOZFK25o1a7S3zxlyPi+I
/sYSdhocsioZcTGUFx0qcI/RHp2oMsKL5kd70KsRPei16J6UFeQpJOpo/7xz
/ryN3a3Z/glOXUFFSx/T6sP/UyfXWmlU2QscdnZka9uVvvvNSdn4Zlfo1dlC
oxPkColgO29kakElDYxRyCdmKWpKyII58n1B9BSBRpm7rAfVzBTpR2Xtxo1G
PCPOXqYqOMr179eTjX4/QV5jn9ng/o2kcC4oJlD4wwmbvTVnj0iKK3mbxqz+
hba9exH0aPTZt46QvUPHQXJ0oODBVT5xWg1VzW6g3oMmkCXrIPXq64vQ1ZRq
U4cn/ZviU5+Xe1Q7vzvVLUrW2OwZsdOziLJBrSu0tRyD2Pjxm+0fpMKAFzoU
Nb0BL6px3VtIu3ZRUFfaGess8AkdveQuiKZ30/rR6Jx0quR3jxqUjABzBsIv
ZSvjE3btzh128J9yJvgcAAp/Q4fcoa1IF12/3Z2WLOlFCYl+5BucTO5hDZpf
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
fvP3EzrT5XG9TM5AYDDLg8zl8rLLxqfgxAWOyiaF6dAzngITXqXX916kV/f/
4oDualHZU5L0PcDSdXMe+Mqe2pXWq45DuqSkBGOis00LNnPC55SX32rG3rq9
StRBi8jsLVSM6Oh89PnnRp+IxRr4tMBbgewYjwmJE4pNq6aOpCTfjjLFCJc8
LjFaClQrOV9bsXg+eGWQwcOUJJYEHcOW3btN4/0b34s+HBuFWx41QMUkgZl1
eGCQ0a3BHwC+1fNft5Hqz+ub+ptLPHrU2HfsmPP5XlMMoBLQsLCXCW+IIAfL
XDM1nZL9OkoQhDAXVgvXgwAI/Rq0GNH3P3H1qrQwrf66HIwpY3NozOztxisf
zRbXxs9W1mnhSh5ap5XuOrU9TY2PDnWhLVuDaMarc4Stb922PdLbrd+6Fe4Q
L9RAXgD4TvXSWioc6EW747zFDcugBKDblRaolW1hAUf7uIVAG39+/bp26Isv
LHYqaflFJYyk0TPfMcYuJyUobTNI/8jiZFSwXKv1wcmEDx+QvvTJwUF04HCa
LE178z1gWGw8tYg3oOAGCi70hTKig2ll8PP0CYfG32T3MWckymxuyKH05ewI
KUhwUCgCKW5W9QASnkmT1hrpVTedqZUkjzE6upG684A4IHttVebNM29jS5k6
Qwviqx9+oNf0OxSv/q4NHm5GH4B1LeJVzSqtMFZxUp3h94Ik9AjgAI7Mz0yn
2+pQOl4UT3n5+ehNQ9NVdJX2ffaZAU4Z9IvsHrVPz55iNHgwaCTyTbXAlI8A
eYzfF8VWK1Jy4txa88ZOqRcv3f6dFpx9VYY/kZ6h+2bcuwd2RwOgycJJWVQX
0UW6bNgzQl06PoHOzY6kkuwxlMzfQ5Pgwu3b2o27d+1GJHaq5GAo7YAk9IHQ
pLkmaNuWLbDpTITi8aGNgoJF0qhcenf/flln4epfadmG3aCL1ELjRUNPOoaI
/EvZ+Hx9vEUbN3dwdzo8xk8MrzauF0UG9iY1yo+G8GmF+RPAb6uWLLEpHofx
t9B+4VBcR/rOCS+q8zbuz9ZddjN5vpwWVZkNhIMiZnjMKIpLL5ATGgut2PCD
Vr9tt10kBa5ExjVA/4XBccyZj/LvRNMGdKTpwT3p2mR/ujY9kKaHdadhA3wp
ul8fSuDXxJgD3njo6tCICKlk7j95UgNKzSpjGzjbUkePVvlG21i/hiu2mMrc
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
\
\>"],ExpressionUUID->"b75a0208-7406-487f-9b39-6417c1e77a4e"]
}, Open  ]],

Cell[TextData[{
 "Learn about more options in ",
 ButtonBox["the documentation",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/SynthesiseStructure"],
 "."
}], "Text",
 CellChangeTimes->{{3.7806773397692547`*^9, 
  3.780677364080214*^9}},ExpressionUUID->"33382da6-5de8-452e-b3b8-\
66487624069c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Modelling domains", "Subsubsection",
 CellChangeTimes->{{3.780662728931423*^9, 3.780662747034754*^9}, {
  3.7806741492405577`*^9, 
  3.780674154120232*^9}},ExpressionUUID->"c84867ab-4c6f-4a28-8481-\
fd30ea3a13f7"],

Cell["\<\
We can investigate a larger-scale model consisting of domains. Consider the \
following two functions:\
\>", "Text",
 CellChangeTimes->{{3.780663159570574*^9, 3.780663171129908*^9}, {
  3.780677470799046*^9, 
  3.7806774925016603`*^9}},ExpressionUUID->"6695bfb1-ba1d-4a23-b17d-\
1258cd971f17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ConstructDomains"}]], "Input",
 CellChangeTimes->{{3.7806627006788397`*^9, 3.780662703948793*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"d5063e7f-81e7-43c2-9734-8a498489a604"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/ConstructDomains",
              ButtonNote->"paclet:MaXrd/ref/ConstructDomains"],
             "\"paclet:MaXrd/ref/ConstructDomains\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstructDomains\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"A\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"B\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"C\\\", \\\
\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\
\", StyleBox[\\\"c\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
constructs an \\\", Cell[BoxData[StyleBox[RowBox[{\\\"A\\\", \
\\\"\[Times]\\\", \\\"B\\\", \\\"\[Times]\\\", \\\"C\\\"}], \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" structure of \\\", Cell[BoxData[StyleBox[\\\"n\\\
\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" domains iterated \\\", \
Cell[BoxData[StyleBox[\\\"c\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
cycles.\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/ConstructDomains", 
                    "paclet:MaXrd/ref/ConstructDomains", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ConstructDomains", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`A_Integer", ",", "MaXrd`Private`B_Integer",
                     ",", "C_Integer"}], "}"}], ",", 
                    "MaXrd`Private`numberOfDomains_Integer", ",", 
                    "MaXrd`Private`numberOfCycles_Integer", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`structureSize", "=", 
                    RowBox[{
                    "MaXrd`Private`A", " ", "MaXrd`Private`B", " ", "C"}]}], 
                    ",", "MaXrd`Private`insertionCoordinates", ",", 
                    "MaXrd`Private`domainTable", ",", 
                    RowBox[{"MaXrd`Private`transitionProbabilities", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"TransitionProbabilities\"\>", 
                    "]"}]}], ",", "MaXrd`Private`visitOrderInCurrentCycle", 
                    ",", "MaXrd`Private`currentCellIndex", ",", 
                    "MaXrd`Private`currentCell", ",", "MaXrd`Private`nearest",
                     ",", "MaXrd`Private`nearestFiltered", ",", 
                    "MaXrd`Private`neighbourDomains", ",", 
                    "MaXrd`Private`numberOfDomainsEqualToSelf"}], "}"}], ",", 
                    
                    RowBox[{
                    RowBox[{"MaXrd`Private`insertionCoordinates", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "MaXrd`Private`j", ",", 
                    "MaXrd`Private`k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "0", ",", 
                    RowBox[{"MaXrd`Private`A", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", "0", ",", 
                    RowBox[{"MaXrd`Private`B", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`k", ",", "0", ",", 
                    RowBox[{"C", "-", "1"}]}], "}"}]}], "]"}], ",", "2"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`domainTable", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"MaXrd`Private`insertionCoordinates", "\[Rule]", 
                    RowBox[{"RandomSample", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{
                    "Range", "[", "MaXrd`Private`numberOfDomains", "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    
                    FractionBox["MaXrd`Private`structureSize", 
                    "MaXrd`Private`numberOfDomains"], "]"}]}], "]"}], "]"}], 
                    ",", "MaXrd`Private`structureSize"}], "]"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`visitOrderInCurrentCycle", "=", 
                    RowBox[{"RandomSample", "[", 
                    RowBox[{
                    "Range", "[", "MaXrd`Private`structureSize", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`currentCellIndex", "=", 
                    RowBox[{
                    "MaXrd`Private`visitOrderInCurrentCycle", 
                    "\[LeftDoubleBracket]", "MaXrd`Private`i", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`currentCell", "=", 
                    RowBox[{
                    "MaXrd`Private`insertionCoordinates", 
                    "\[LeftDoubleBracket]", "MaXrd`Private`currentCellIndex", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`nearest", "=", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    "MaXrd`Private`insertionCoordinates", ",", 
                    "MaXrd`Private`currentCell", ",", "26"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`nearestFiltered", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Delete", "[", 
                    RowBox[{"MaXrd`Private`nearest", ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SquaredEuclideanDistance", "[", 
                    RowBox[{"MaXrd`Private`currentCell", ",", "#1"}], "]"}], 
                    "\[LessEqual]", "3.`"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`neighbourDomains", "=", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "MaXrd`Private`domainTable", ",", 
                    "MaXrd`Private`nearestFiltered", ",", "0.`"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`numberOfDomainsEqualToSelf", "=", 
                    RowBox[{"Count", "[", 
                    RowBox[{"MaXrd`Private`neighbourDomains", ",", 
                    RowBox[{
                    "MaXrd`Private`domainTable", "[", 
                    "MaXrd`Private`currentCell", "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Random", "[", "]"}], "<", 
                    RowBox[{
                    "MaXrd`Private`transitionProbabilities", "[", 
                    "MaXrd`Private`numberOfDomainsEqualToSelf", "]"}]}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`domainTable", "[", 
                    "MaXrd`Private`currentCell", "]"}], "=", 
                    RowBox[{
                    "RandomChoice", "[", "MaXrd`Private`neighbourDomains", 
                    "]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "3"}], "}"}]}], "]"}]}], 
                    ",", "MaXrd`Private`numberOfCycles"}], "]"}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`A", ",", "MaXrd`Private`B", ",", "C"}], 
                    "}"}], ",", 
                    RowBox[{
                    "Values", "[", "MaXrd`Private`domainTable", "]"}]}], 
                    "}"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "ConstructDomains", "]"}], "=", 
                    
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", "_", ",", 
                    "_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`ConstructDomains] = {
                    "ArgumentsPattern" -> {{
                    Blank[], 
                    Blank[], 
                    Blank[]}, 
                    Blank[], 
                    Blank[], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"\<\"TransitionProbabilities\"\>", "\[Rule]", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"0", "\[Rule]", "0.95`"}], ",", 
                    RowBox[{"1", "\[Rule]", "0.92`"}], ",", 
                    RowBox[{"2", "\[Rule]", "0.86`"}], ",", 
                    RowBox[{"3", "\[Rule]", "0.75`"}], ",", 
                    RowBox[{"4", "\[Rule]", "0.4`"}], ",", 
                    RowBox[{"5", "\[Rule]", "0.5`"}], ",", 
                    RowBox[{"6", "\[Rule]", "0.75`"}], ",", 
                    RowBox[{"7", "\[Rule]", "0.12`"}], ",", 
                    RowBox[{"8", "\[Rule]", "0.03`"}]}], 
                    "\[RightAssociation]"}]}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`ConstructDomains\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/ConstructDomains",
              ButtonNote->"paclet:MaXrd/ref/ConstructDomains"],
             "\"paclet:MaXrd/ref/ConstructDomains\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstructDomains\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"A\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"B\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"C\\\", \\\
\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\
\", StyleBox[\\\"c\\\", \\\"TI\\\"], \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
constructs an \\\", Cell[BoxData[StyleBox[RowBox[{\\\"A\\\", \
\\\"\[Times]\\\", \\\"B\\\", \\\"\[Times]\\\", \\\"C\\\"}], \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" structure of \\\", Cell[BoxData[StyleBox[\\\"n\\\
\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" domains iterated \\\", \
Cell[BoxData[StyleBox[\\\"c\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
cycles.\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ConstructDomains\", \"[\", RowBox[{\"{\", \
RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"B\", \"TI\"], \",\", \
StyleBox[\"C\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"c\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" constructs an \", \
Cell[BoxData[StyleBox[RowBox[{\"A\", \"\[Times]\", \"B\", \"\[Times]\", \
\"C\"}], \"TI\"]], \"InlineFormula\"], \" structure of \", \
Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" domains \
iterated \", Cell[BoxData[StyleBox[\"c\", \"TI\"]], \"InlineFormula\"], \" \
cycles.\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/ConstructDomains"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`ConstructDomains, {MaXrd`ConstructDomains[{
          Pattern[MaXrd`Private`A, 
           Blank[Integer]], 
          Pattern[MaXrd`Private`B, 
           Blank[Integer]], 
          Pattern[C, 
           Blank[Integer]]}, 
         Pattern[MaXrd`Private`numberOfDomains, 
          Blank[Integer]], 
         Pattern[MaXrd`Private`numberOfCycles, 
          Blank[Integer]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`structureSize = MaXrd`Private`A MaXrd`Private`B C,
           MaXrd`Private`insertionCoordinates, MaXrd`Private`domainTable, 
          MaXrd`Private`transitionProbabilities = 
          OptionValue["TransitionProbabilities"], 
          MaXrd`Private`visitOrderInCurrentCycle, 
          MaXrd`Private`currentCellIndex, MaXrd`Private`currentCell, 
          MaXrd`Private`nearest, MaXrd`Private`nearestFiltered, 
          MaXrd`Private`neighbourDomains, 
          MaXrd`Private`numberOfDomainsEqualToSelf}, 
         MaXrd`Private`insertionCoordinates = Flatten[
            
            Table[{MaXrd`Private`i, MaXrd`Private`j, MaXrd`Private`k}, {
             MaXrd`Private`i, 0, MaXrd`Private`A - 1}, {
             MaXrd`Private`j, 0, MaXrd`Private`B - 1}, {
             MaXrd`Private`k, 0, C - 1}], 2]; 
         MaXrd`Private`domainTable = Association[
            Thread[MaXrd`Private`insertionCoordinates -> RandomSample[
               Flatten[
                ConstantArray[
                 Range[MaXrd`Private`numberOfDomains], 
                 Ceiling[
                 MaXrd`Private`structureSize/MaXrd`Private`numberOfDomains]]],
                MaXrd`Private`structureSize]]]; 
         Do[MaXrd`Private`visitOrderInCurrentCycle = RandomSample[
              Range[MaXrd`Private`structureSize]]; 
           Do[MaXrd`Private`currentCellIndex = 
              Part[MaXrd`Private`visitOrderInCurrentCycle, MaXrd`Private`i]; 
             MaXrd`Private`currentCell = 
              Part[MaXrd`Private`insertionCoordinates, 
                MaXrd`Private`currentCellIndex]; 
             MaXrd`Private`nearest = 
              Nearest[MaXrd`Private`insertionCoordinates, 
                MaXrd`Private`currentCell, 26]; 
             MaXrd`Private`nearestFiltered = Select[
                Delete[MaXrd`Private`nearest, 1], 
                SquaredEuclideanDistance[MaXrd`Private`currentCell, #] <= 
                3.& ]; MaXrd`Private`neighbourDomains = 
              Lookup[MaXrd`Private`domainTable, MaXrd`Private`nearestFiltered,
                 0.]; MaXrd`Private`numberOfDomainsEqualToSelf = 
              Count[MaXrd`Private`neighbourDomains, 
                MaXrd`Private`domainTable[MaXrd`Private`currentCell]]; 
             If[Random[] < 
               MaXrd`Private`transitionProbabilities[
                MaXrd`Private`numberOfDomainsEqualToSelf], 
               MaXrd`Private`domainTable[MaXrd`Private`currentCell] = 
               RandomChoice[MaXrd`Private`neighbourDomains]], {
             MaXrd`Private`i, 3}], MaXrd`Private`numberOfCycles]; {{
           MaXrd`Private`A, MaXrd`Private`B, C}, 
           Values[MaXrd`Private`domainTable]}]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`ConstructDomains, {
      SyntaxInformation[MaXrd`ConstructDomains] -> {"ArgumentsPattern" -> {{
            Blank[], 
            Blank[], 
            Blank[]}, 
           Blank[], 
           Blank[], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "TransitionProbabilities" -> 
      Association[
       0 -> 0.95, 1 -> 0.92, 2 -> 0.86, 3 -> 0.75, 4 -> 0.4, 5 -> 0.5, 6 -> 
        0.75, 7 -> 0.12, 8 -> 0.03]}, "Attributes" -> {}, "FullName" -> 
    "MaXrd`ConstructDomains"], False]]], "Output",
 CellChangeTimes->{3.780679847646183*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"c34d1702-96ec-4a1a-a9ab-0aceb0598cef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DomainPlot"}]], "Input",
 CellChangeTimes->{{3.7806627058234987`*^9, 3.780662707356998*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"52575b99-5bd6-46aa-9167-a324350de4e0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/DomainPlot",
              ButtonNote->"paclet:MaXrd/ref/DomainPlot"],
             "\"paclet:MaXrd/ref/DomainPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DomainPlot\\\", \\\"[\\\", \
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"A\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"B\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"C\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
\\\"\[ScriptCapitalD]\\\"}], \\\"}\\\", \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
gives a graphical representation of the \\\", \
Cell[BoxData[StyleBox[RowBox[{\\\"A\\\", \\\"\[Times]\\\", \\\"B\\\", \\\"\
\[Times]\\\", \\\"C\\\"}], \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
structure with associated domain list \\\", \
Cell[BoxData[\\\"\[ScriptCapitalD]\\\"], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/DomainPlot", 
                    "paclet:MaXrd/ref/DomainPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DomainPlot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`A_Integer", ",", "MaXrd`Private`B_Integer",
                     ",", "C_Integer"}], "}"}], ",", 
                    "MaXrd`Private`domains_List"}], "}"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`twoDimensionalQ", ",", 
                    RowBox[{"MaXrd`Private`crystalFamily", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"CrystalFamily\"\>", "]"}]}], ",", 
                    RowBox[{"MaXrd`Private`graphicFunction", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"GraphicFunction\"\>", "]"}]}], 
                    ",", "MaXrd`Private`coordinates", ",", 
                    "MaXrd`Private`coordinateDomainMap", ",", 
                    "MaXrd`Private`M", ",", "MaXrd`Private`makePolytope", ",", 
                    RowBox[{"MaXrd`Private`rotationMap", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"RotationMap\"\>", "]"}]}], ",", 
                    "MaXrd`Private`rotationQ", ",", 
                    RowBox[{"MaXrd`Private`typeOfRotationPoint", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"RotationPoint\"\>", "]"}]}], ",",
                     "MaXrd`Private`R", ",", "MaXrd`Private`\[Zeta]", ",", 
                    "MaXrd`Private`numberOfDomains", ",", 
                    RowBox[{"MaXrd`Private`preferredColours", "=", 
                    RowBox[{"OptionValue", "[", "\<\"Colours\"\>", "]"}]}], 
                    ",", "MaXrd`Private`coloursToUse", ",", 
                    "MaXrd`Private`colourTable", ",", 
                    "MaXrd`Private`rotation", ",", "MaXrd`Private`polytopes", 
                    ",", "MaXrd`Private`graphicList"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`twoDimensionalQ", "=", 
                    RowBox[{"C", "===", "1"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`A", " ", "MaXrd`Private`B", " ", "C"}], 
                    "\[NotEqual]", 
                    RowBox[{"Length", "[", "MaXrd`Private`domains", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DomainPlot", "::", "InputMismatch"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"AnyTrue", "[", 
                    RowBox[{"MaXrd`Private`domains", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NonNegative", "[", "#1", "]"}], "\[Nand]", 
                    RowBox[{"IntegerQ", "[", "#1", "]"}]}], "&"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DomainPlot", "::", "InvalidDomainIndex"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`numberOfDomains", "=", 
                    RowBox[{"Max", "[", "MaXrd`Private`domains", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinates", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`i", ",", "MaXrd`Private`j", ",", 
                    "MaXrd`Private`k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "0", ",", 
                    RowBox[{"MaXrd`Private`A", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`j", ",", "0", ",", 
                    RowBox[{"MaXrd`Private`B", "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`k", ",", "0", ",", 
                    RowBox[{"C", "-", "1"}]}], "}"}]}], "]"}], ",", "2"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`twoDimensionalQ", ",", 
                    RowBox[{"MaXrd`Private`coordinates", "=", 
                    RowBox[{
                    "MaXrd`Private`coordinates", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`coordinateDomainMap", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    "MaXrd`Private`coordinates", "\[Rule]", 
                    "MaXrd`Private`domains"}], "]"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coloursToUse", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"MaXrd`Private`preferredColours", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"96", ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"MaXrd`Private`numberOfDomains", "-", 
                    RowBox[{
                    "Length", "[", "MaXrd`Private`preferredColours", "]"}]}], 
                    "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`colourTable", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{"0", "\[Rule]", "Transparent"}], "]"}], ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{
                    "Range", "[", "MaXrd`Private`numberOfDomains", "]"}], 
                    "\[Rule]", 
                    RowBox[{
                    "MaXrd`Private`coloursToUse", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "MaXrd`Private`numberOfDomains"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`M", "=", 
                    RowBox[{"InputCheck", "[", 
                    
                    RowBox[{"\<\"GetCrystalFamilyMetric\"\>", ",", 
                    "MaXrd`Private`crystalFamily", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    "MaXrd`Private`twoDimensionalQ", ",", "\<\"2D\"\>", 
                    ",", "\<\"3D\"\>"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`coordinateDomainMap", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`M", ".", "#1"}], "\[Rule]", "#2"}],
                     "&"}], ",", "MaXrd`Private`coordinateDomainMap"}], "]"}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`graphicFunction", "=!=", "Automatic"}], 
                    ",", 
                    RowBox[{
                    "MaXrd`Private`makePolytope", "=", 
                    "MaXrd`Private`graphicFunction"}], ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`makePolytope", "[", 
                    "MaXrd`Private`origin_", "]"}], ":=", 
                    RowBox[{"Parallelepiped", "[", 
                    RowBox[{"MaXrd`Private`origin", ",", 
                    RowBox[{"Transpose", "[", "MaXrd`Private`M", "]"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`rotationQ", "=", 
                    RowBox[{"MaXrd`Private`rotationMap", "=!=", 
                    RowBox[{"Association", "[", "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`rotationQ", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`coordinateDomainMap", ",", 
                    "MaXrd`Private`\[Zeta]", ",", "MaXrd`Private`R"}], "}"}], 
                    "=", 
                    RowBox[{"InputCheck", "[", 
                    RowBox[{"\<\"DomainRotation\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`A", ",", "MaXrd`Private`B", ",", "C"}], 
                    "}"}], ",", "MaXrd`Private`domains"}], "}"}], ",", 
                    "MaXrd`Private`rotationMap", ",", 
                    "MaXrd`Private`typeOfRotationPoint"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`rotation", "[", 
                    RowBox[{"MaXrd`Private`xyz_", ",", "MaXrd`Private`d_"}], 
                    "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`twoDimensionalQ", ",", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`makePolytope", "[", "MaXrd`Private`xyz", 
                    "]"}], ",", 
                    RowBox[{
                    "MaXrd`Private`\[Zeta]", "[", "MaXrd`Private`d", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"GeometricTransformation", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`makePolytope", "[", "MaXrd`Private`xyz", 
                    "]"}], ",", 
                    RowBox[{"MaXrd`Private`R", "[", 
                    RowBox[{"MaXrd`Private`d", ",", "MaXrd`Private`xyz"}], 
                    "]"}]}], "]"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`polytopes", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`rotationQ", ",", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`colourTable", "[", "#2", "]"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`rotation", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}]}], "}"}], "&"}], ",", 
                    "MaXrd`Private`coordinateDomainMap"}], "]"}], ",", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`colourTable", "[", "#2", "]"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`makePolytope", "[", "#1", "]"}]}], 
                    "}"}], "&"}], ",", "MaXrd`Private`coordinateDomainMap"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`graphicList", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", 
                    RowBox[{"OptionValue", "[", "Opacity", "]"}], "]"}], ",", 
                    "MaXrd`Private`polytopes"}], "}"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`twoDimensionalQ", ",", 
                    RowBox[{"Graphics", "[", 
                    RowBox[{"MaXrd`Private`graphicList", ",", 
                    RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], ",", 
                    RowBox[{"Graphics3D", "[", 
                    RowBox[{"MaXrd`Private`graphicList", ",", 
                    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DomainPlot", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", "_"}], 
                    "}"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`DomainPlot] = {
                    "ArgumentsPattern" -> {{{
                    Blank[], 
                    Blank[], 
                    Blank[]}, 
                    Blank[]}, 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"Colours\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[1, 0, 0],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0, 1, 0],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0, 0, 1],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.6666666666666666, 0.6666666666666666, 0.],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[1, 1, 0],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.33333333333333337`, 0., 0.33333333333333337`],
                    FrameTicks->None,
                    
                    ImageSize->Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.5, 0, 0.5],
                    Editable->False,
                    Selectable->False]}], "}"}]}]},
                    {
                    
                    RowBox[{"\<\"CrystalFamily\"\>", 
                    "\[Rule]", "\<\"Cubic\"\>"}]},
                    {
                    
                    RowBox[{"\<\"GraphicFunction\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"Opacity", "\[Rule]", "1.`"}]},
                    {
                    RowBox[{"\<\"RotationMap\"\>", "\[Rule]", 
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]},
                    {
                    
                    RowBox[{"\<\"RotationPoint\"\>", 
                    "\[Rule]", "\<\"Centroid\"\>"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","6","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"Colours\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[1, 0, 0],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0, 1, 0],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0, 0, 1],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.6666666666666666, 0.6666666666666666, 0.],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[1, 1, 0],
                    Editable->False,
                    Selectable->False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{
                    {GrayLevel[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {GrayLevel[0], 
                    RectangleBox[{1, -1}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}]}, 
                    {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.33333333333333337`, 0., 0.33333333333333337`],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                    PlotRangePadding->None],
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]],
                    Appearance->None,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                    DefaultBaseStyle->{},
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    RGBColor[0.5, 0, 0.5],
                    Editable->False,
                    Selectable->False]}], "}"}]}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","6","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`DomainPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/DomainPlot",
              ButtonNote->"paclet:MaXrd/ref/DomainPlot"],
             "\"paclet:MaXrd/ref/DomainPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DomainPlot\\\", \\\"[\\\", \
\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"A\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"B\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"C\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
\\\"\[ScriptCapitalD]\\\"}], \\\"}\\\", \\\"]\\\"}]\\)\\!\\(\\*RowBox[{\\\" \
gives a graphical representation of the \\\", \
Cell[BoxData[StyleBox[RowBox[{\\\"A\\\", \\\"\[Times]\\\", \\\"B\\\", \\\"\
\[Times]\\\", \\\"C\\\"}], \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
structure with associated domain list \\\", \
Cell[BoxData[\\\"\[ScriptCapitalD]\\\"], \\\"InlineFormula\\\"], \
\\\".\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DomainPlot\", \"[\", \"{\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"B\", \"TI\"], \",\", \
StyleBox[\"C\", \"TI\"]}], \"}\"}], \",\", \"\[ScriptCapitalD]\"}], \"}\", \
\"]\"}]\)\!\(\*RowBox[{\" gives a graphical representation of the \", \
Cell[BoxData[StyleBox[RowBox[{\"A\", \"\[Times]\", \"B\", \"\[Times]\", \
\"C\"}], \"TI\"]], \"InlineFormula\"], \" structure with associated domain \
list \", Cell[BoxData[\"\[ScriptCapitalD]\"], \"InlineFormula\"], \".\"}]\)", 
    "Documentation" -> Association["Local" -> "paclet:MaXrd/ref/DomainPlot"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`DomainPlot, {MaXrd`DomainPlot[{{
           Pattern[MaXrd`Private`A, 
            Blank[Integer]], 
           Pattern[MaXrd`Private`B, 
            Blank[Integer]], 
           Pattern[C, 
            Blank[Integer]]}, 
          Pattern[MaXrd`Private`domains, 
           Blank[List]]}, 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`twoDimensionalQ, MaXrd`Private`crystalFamily = 
          OptionValue["CrystalFamily"], MaXrd`Private`graphicFunction = 
          OptionValue["GraphicFunction"], MaXrd`Private`coordinates, 
          MaXrd`Private`coordinateDomainMap, MaXrd`Private`M, 
          MaXrd`Private`makePolytope, MaXrd`Private`rotationMap = 
          OptionValue["RotationMap"], MaXrd`Private`rotationQ, 
          MaXrd`Private`typeOfRotationPoint = OptionValue["RotationPoint"], 
          MaXrd`Private`R, MaXrd`Private`\[Zeta], 
          MaXrd`Private`numberOfDomains, MaXrd`Private`preferredColours = 
          OptionValue["Colours"], MaXrd`Private`coloursToUse, 
          MaXrd`Private`colourTable, MaXrd`Private`rotation, 
          MaXrd`Private`polytopes, MaXrd`Private`graphicList}, 
         MaXrd`Private`twoDimensionalQ = C === 1; 
         If[MaXrd`Private`A MaXrd`Private`B C != 
           Length[MaXrd`Private`domains], Message[
             MessageName[MaXrd`DomainPlot, "InputMismatch"]]; Abort[]]; If[
           AnyTrue[MaXrd`Private`domains, Nand[
             NonNegative[#], 
             IntegerQ[#]]& ], Message[
             MessageName[MaXrd`DomainPlot, "InvalidDomainIndex"]]; Abort[]]; 
         MaXrd`Private`numberOfDomains = Max[MaXrd`Private`domains]; 
         MaXrd`Private`coordinates = Flatten[
            
            Table[{MaXrd`Private`i, MaXrd`Private`j, MaXrd`Private`k}, {
             MaXrd`Private`i, 0, MaXrd`Private`A - 1}, {
             MaXrd`Private`j, 0, MaXrd`Private`B - 1}, {
             MaXrd`Private`k, 0, C - 1}], 2]; 
         If[MaXrd`Private`twoDimensionalQ, MaXrd`Private`coordinates = 
           Part[MaXrd`Private`coordinates, All, {1, 2}]]; 
         MaXrd`Private`coordinateDomainMap = Association[
            Thread[MaXrd`Private`coordinates -> MaXrd`Private`domains]]; 
         MaXrd`Private`coloursToUse = Join[MaXrd`Private`preferredColours, 
            Map[ColorData[96, #]& , 
             Range[
             MaXrd`Private`numberOfDomains - Length[
              MaXrd`Private`preferredColours]]]]; 
         MaXrd`Private`colourTable = Join[
            Association[0 -> Transparent], 
            Association[
             Thread[
             Range[MaXrd`Private`numberOfDomains] -> 
              Part[MaXrd`Private`coloursToUse, 
                Span[1, MaXrd`Private`numberOfDomains]]]]]; 
         MaXrd`Private`M = 
          MaXrd`InputCheck[
           "GetCrystalFamilyMetric", MaXrd`Private`crystalFamily, 
            If[MaXrd`Private`twoDimensionalQ, "2D", "3D"]]; 
         MaXrd`Private`coordinateDomainMap = Association[
            KeyValueMap[
            Dot[MaXrd`Private`M, #] -> #2& , 
             MaXrd`Private`coordinateDomainMap]]; 
         If[MaXrd`Private`graphicFunction =!= Automatic, 
           MaXrd`Private`makePolytope = MaXrd`Private`graphicFunction, 
           MaXrd`Private`makePolytope[
             Pattern[MaXrd`Private`origin, 
              Blank[]]] := Parallelepiped[MaXrd`Private`origin, 
             Transpose[MaXrd`Private`M]]]; 
         MaXrd`Private`rotationQ = 
          MaXrd`Private`rotationMap =!= Association[]; 
         If[MaXrd`Private`rotationQ, {
             MaXrd`Private`coordinateDomainMap, MaXrd`Private`\[Zeta], 
              MaXrd`Private`R} = 
            MaXrd`InputCheck[
             "DomainRotation", {{MaXrd`Private`A, MaXrd`Private`B, C}, 
               MaXrd`Private`domains}, MaXrd`Private`rotationMap, 
              MaXrd`Private`typeOfRotationPoint]; MaXrd`Private`rotation[
              Pattern[MaXrd`Private`xyz, 
               Blank[]], 
              Pattern[MaXrd`Private`d, 
               Blank[]]] := If[MaXrd`Private`twoDimensionalQ, 
              Rotate[
               MaXrd`Private`makePolytope[MaXrd`Private`xyz], 
               MaXrd`Private`\[Zeta][MaXrd`Private`d]], 
              GeometricTransformation[
               MaXrd`Private`makePolytope[MaXrd`Private`xyz], 
               MaXrd`Private`R[MaXrd`Private`d, MaXrd`Private`xyz]]]]; 
         MaXrd`Private`polytopes = If[MaXrd`Private`rotationQ, 
            KeyValueMap[{
              MaXrd`Private`colourTable[#2], 
              MaXrd`Private`rotation[#, #2]}& , 
             MaXrd`Private`coordinateDomainMap], 
            KeyValueMap[{
              MaXrd`Private`colourTable[#2], 
              MaXrd`Private`makePolytope[#]}& , 
             MaXrd`Private`coordinateDomainMap]]; MaXrd`Private`graphicList = {
            Opacity[
             OptionValue[Opacity]], MaXrd`Private`polytopes}; 
         If[MaXrd`Private`twoDimensionalQ, 
           Graphics[MaXrd`Private`graphicList, Frame -> False], 
           Graphics3D[MaXrd`Private`graphicList, Boxed -> False]]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`DomainPlot, {
      SyntaxInformation[MaXrd`DomainPlot] -> {"ArgumentsPattern" -> {{{
             Blank[], 
             Blank[], 
             Blank[]}, 
            Blank[]}, 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {"Colours" -> {
        RGBColor[1, 0, 0], 
        RGBColor[0, 1, 0], 
        RGBColor[0, 0, 1], 
        RGBColor[1, 1, 0], 
        RGBColor[0.5, 0, 0.5]}, "CrystalFamily" -> "Cubic", "GraphicFunction" -> 
      Automatic, Opacity -> 1., "RotationMap" -> Association[], 
      "RotationPoint" -> "Centroid"}, "Attributes" -> {}, "FullName" -> 
    "MaXrd`DomainPlot"], False]]], "Output",
 CellChangeTimes->{3.7806798486370783`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"d092f713-6ee8-4c3a-b53b-8f4d97d23f75"]
}, Open  ]],

Cell[TextData[{
 "The first function, ",
 ButtonBox["ConstructDomains",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/ConstructDomains"],
 ", produces a representation of domains for a given structure size. An \
underlying set of (configurable) transition probabilities controls how the \
different blocks should \[OpenCurlyDoubleQuote]change\[CloseCurlyDoubleQuote] \
in relation to its neighbours, and a Monte Carlo approach drives the process. \
The other function, ",
 ButtonBox["DomainPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/DomainPlot"],
 ", simply helps visualise the result."
}], "Text",
 CellChangeTimes->{{3.780677513933865*^9, 
  3.780677781711564*^9}},ExpressionUUID->"630fed73-6ee8-49f5-94e9-\
ddce6659c9aa"],

Cell[TextData[{
 "For instance, a 7\[Times]7\[Times]1 structure with two domains (imagine red \
and green representing blocks ",
 StyleBox["A",
  FontSlant->"Italic"],
 " and ",
 StyleBox["B",
  FontSlant->"Italic"],
 ", respectively) could look like the following (after 25 iterations):"
}], "Text",
 CellChangeTimes->{{3.780677807639225*^9, 
  3.780677887493491*^9}},ExpressionUUID->"5a3a0bc4-23fc-44ab-a334-\
0e92fc361d6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testDomain", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"size", ",", "domains"}], "}"}], "=", 
   RowBox[{"ConstructDomains", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "7", ",", "1"}], "}"}], ",", "2", ",", "25"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.780678075300219*^9, 3.780678076073512*^9}, {
  3.780678292239843*^9, 3.780678305765065*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"32a77976-e5f1-4b3e-8b81-a8aedccaf257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", "2", ",", "1",
      ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "2", 
     ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.780679853655984*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"8c63b412-b06b-4dcf-b327-df992f6cab1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DomainPlot", "@", "testDomain"}]], "Input",
 CellChangeTimes->{{3.780678078242649*^9, 3.780678082089487*^9}, {
  3.780678311702538*^9, 3.780678312389964*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"3d11214a-f8dd-4c55-85cf-af0bb5faa6f0"],

Cell[BoxData[
 GraphicsBox[
  {Opacity[1.], 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{0., 0.}, {1., 0.}, {1., 1.}, {0., 1.}}],
     Parallelepiped[{0., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{0., 1.}, {1., 1.}, {1., 2.}, {0., 2.}}],
     Parallelepiped[{0., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{0., 2.}, {1., 2.}, {1., 3.}, {0., 3.}}],
     Parallelepiped[{0., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{0., 3.}, {1., 3.}, {1., 4.}, {0., 4.}}],
     Parallelepiped[{0., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{0., 4.}, {1., 4.}, {1., 5.}, {0., 5.}}],
     Parallelepiped[{0., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{0., 5.}, {1., 5.}, {1., 6.}, {0., 6.}}],
     Parallelepiped[{0., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{0., 6.}, {1., 6.}, {1., 7.}, {0., 7.}}],
     Parallelepiped[{0., 6.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{1., 0.}, {2., 0.}, {2., 1.}, {1., 1.}}],
     Parallelepiped[{1., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{1., 1.}, {2., 1.}, {2., 2.}, {1., 2.}}],
     Parallelepiped[{1., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{1., 2.}, {2., 2.}, {2., 3.}, {1., 3.}}],
     Parallelepiped[{1., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{1., 3.}, {2., 3.}, {2., 4.}, {1., 4.}}],
     Parallelepiped[{1., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{1., 4.}, {2., 4.}, {2., 5.}, {1., 5.}}],
     Parallelepiped[{1., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{1., 5.}, {2., 5.}, {2., 6.}, {1., 6.}}],
     Parallelepiped[{1., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{1., 6.}, {2., 6.}, {2., 7.}, {1., 7.}}],
     Parallelepiped[{1., 6.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{2., 0.}, {3., 0.}, {3., 1.}, {2., 1.}}],
     Parallelepiped[{2., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{2., 1.}, {3., 1.}, {3., 2.}, {2., 2.}}],
     Parallelepiped[{2., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{2., 2.}, {3., 2.}, {3., 3.}, {2., 3.}}],
     Parallelepiped[{2., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{2., 3.}, {3., 3.}, {3., 4.}, {2., 4.}}],
     Parallelepiped[{2., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{2., 4.}, {3., 4.}, {3., 5.}, {2., 5.}}],
     Parallelepiped[{2., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{2., 5.}, {3., 5.}, {3., 6.}, {2., 6.}}],
     Parallelepiped[{2., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{2., 6.}, {3., 6.}, {3., 7.}, {2., 7.}}],
     Parallelepiped[{2., 6.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{3., 0.}, {4., 0.}, {4., 1.}, {3., 1.}}],
     Parallelepiped[{3., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{3., 1.}, {4., 1.}, {4., 2.}, {3., 2.}}],
     Parallelepiped[{3., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{3., 2.}, {4., 2.}, {4., 3.}, {3., 3.}}],
     Parallelepiped[{3., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{3., 3.}, {4., 3.}, {4., 4.}, {3., 4.}}],
     Parallelepiped[{3., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{3., 4.}, {4., 4.}, {4., 5.}, {3., 5.}}],
     Parallelepiped[{3., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{3., 5.}, {4., 5.}, {4., 6.}, {3., 6.}}],
     Parallelepiped[{3., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{3., 6.}, {4., 6.}, {4., 7.}, {3., 7.}}],
     Parallelepiped[{3., 6.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{4., 0.}, {5., 0.}, {5., 1.}, {4., 1.}}],
     Parallelepiped[{4., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{4., 1.}, {5., 1.}, {5., 2.}, {4., 2.}}],
     Parallelepiped[{4., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{4., 2.}, {5., 2.}, {5., 3.}, {4., 3.}}],
     Parallelepiped[{4., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{4., 3.}, {5., 3.}, {5., 4.}, {4., 4.}}],
     Parallelepiped[{4., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{4., 4.}, {5., 4.}, {5., 5.}, {4., 5.}}],
     Parallelepiped[{4., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{4., 5.}, {5., 5.}, {5., 6.}, {4., 6.}}],
     Parallelepiped[{4., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{4., 6.}, {5., 6.}, {5., 7.}, {4., 7.}}],
     Parallelepiped[{4., 6.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{5., 0.}, {6., 0.}, {6., 1.}, {5., 1.}}],
     Parallelepiped[{5., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{5., 1.}, {6., 1.}, {6., 2.}, {5., 2.}}],
     Parallelepiped[{5., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{5., 2.}, {6., 2.}, {6., 3.}, {5., 3.}}],
     Parallelepiped[{5., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{5., 3.}, {6., 3.}, {6., 4.}, {5., 4.}}],
     Parallelepiped[{5., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{5., 4.}, {6., 4.}, {6., 5.}, {5., 5.}}],
     Parallelepiped[{5., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{5., 5.}, {6., 5.}, {6., 6.}, {5., 6.}}],
     Parallelepiped[{5., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{5., 6.}, {6., 6.}, {6., 7.}, {5., 7.}}],
     Parallelepiped[{5., 6.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{6., 0.}, {7., 0.}, {7., 1.}, {6., 1.}}],
     Parallelepiped[{6., 0.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{6., 1.}, {7., 1.}, {7., 2.}, {6., 2.}}],
     Parallelepiped[{6., 1.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[PolygonBox[{{6., 2.}, {7., 2.}, {7., 3.}, {6., 3.}}],
     Parallelepiped[{6., 2.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{6., 3.}, {7., 3.}, {7., 4.}, {6., 4.}}],
     Parallelepiped[{6., 3.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{6., 4.}, {7., 4.}, {7., 5.}, {6., 5.}}],
     Parallelepiped[{6., 4.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{6., 5.}, {7., 5.}, {7., 6.}, {6., 6.}}],
     Parallelepiped[{6., 5.}, {{1., 0.}, {0., 1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[PolygonBox[{{6., 6.}, {7., 6.}, {7., 7.}, {6., 7.}}],
     Parallelepiped[{6., 6.}, {{1., 0.}, {0., 1.}}]]}},
  Frame->False]], "Output",
 CellChangeTimes->{3.7806798550764637`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"5edd2b48-73f8-403f-afd1-49c946686af0"]
}, Open  ]],

Cell["\<\
The transition probabilities are set such that agglomeration is favoured. \
Here is a 3D example with four domains:\
\>", "Text",
 CellChangeTimes->{{3.780677904261429*^9, 3.7806779153096867`*^9}, {
  3.78067797103356*^9, 
  3.7806780074111223`*^9}},ExpressionUUID->"8beb1679-3970-48f3-92ba-\
3f3e08c113ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DomainPlot", "@", 
  RowBox[{"ConstructDomains", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", "4", ",", "1500"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7806780161161118`*^9, 3.780678047074226*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"f87114dd-495e-48f3-af4d-1fbd1b688ac3"],

Cell[BoxData[
 Graphics3DBox[
  {Opacity[1.], 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 0.}, {1., 0., 0.}, {1., 1., 0.}, {0., 1., 0.}, {
      0., 0., 1.}, {1., 0., 1.}, {1., 1., 1.}, {0., 1., 1.}}],
     Parallelepiped[{0., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 1.}, {1., 0., 1.}, {1., 1., 1.}, {0., 1., 1.}, {
      0., 0., 2.}, {1., 0., 2.}, {1., 1., 2.}, {0., 1., 2.}}],
     Parallelepiped[{0., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 2.}, {1., 0., 2.}, {1., 1., 2.}, {0., 1., 2.}, {
      0., 0., 3.}, {1., 0., 3.}, {1., 1., 3.}, {0., 1., 3.}}],
     Parallelepiped[{0., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 3.}, {1., 0., 3.}, {1., 1., 3.}, {0., 1., 3.}, {
      0., 0., 4.}, {1., 0., 4.}, {1., 1., 4.}, {0., 1., 4.}}],
     Parallelepiped[{0., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 4.}, {1., 0., 4.}, {1., 1., 4.}, {0., 1., 4.}, {
      0., 0., 5.}, {1., 0., 5.}, {1., 1., 5.}, {0., 1., 5.}}],
     Parallelepiped[{0., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 5.}, {1., 0., 5.}, {1., 1., 5.}, {0., 1., 5.}, {
      0., 0., 6.}, {1., 0., 6.}, {1., 1., 6.}, {0., 1., 6.}}],
     Parallelepiped[{0., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 0., 6.}, {1., 0., 6.}, {1., 1., 6.}, {0., 1., 6.}, {
      0., 0., 7.}, {1., 0., 7.}, {1., 1., 7.}, {0., 1., 7.}}],
     Parallelepiped[{0., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 0.}, {1., 1., 0.}, {1., 2., 0.}, {0., 2., 0.}, {
      0., 1., 1.}, {1., 1., 1.}, {1., 2., 1.}, {0., 2., 1.}}],
     Parallelepiped[{0., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 1.}, {1., 1., 1.}, {1., 2., 1.}, {0., 2., 1.}, {
      0., 1., 2.}, {1., 1., 2.}, {1., 2., 2.}, {0., 2., 2.}}],
     Parallelepiped[{0., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 2.}, {1., 1., 2.}, {1., 2., 2.}, {0., 2., 2.}, {
      0., 1., 3.}, {1., 1., 3.}, {1., 2., 3.}, {0., 2., 3.}}],
     Parallelepiped[{0., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 3.}, {1., 1., 3.}, {1., 2., 3.}, {0., 2., 3.}, {
      0., 1., 4.}, {1., 1., 4.}, {1., 2., 4.}, {0., 2., 4.}}],
     Parallelepiped[{0., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 4.}, {1., 1., 4.}, {1., 2., 4.}, {0., 2., 4.}, {
      0., 1., 5.}, {1., 1., 5.}, {1., 2., 5.}, {0., 2., 5.}}],
     Parallelepiped[{0., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 5.}, {1., 1., 5.}, {1., 2., 5.}, {0., 2., 5.}, {
      0., 1., 6.}, {1., 1., 6.}, {1., 2., 6.}, {0., 2., 6.}}],
     Parallelepiped[{0., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 1., 6.}, {1., 1., 6.}, {1., 2., 6.}, {0., 2., 6.}, {
      0., 1., 7.}, {1., 1., 7.}, {1., 2., 7.}, {0., 2., 7.}}],
     Parallelepiped[{0., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 0.}, {1., 2., 0.}, {1., 3., 0.}, {0., 3., 0.}, {
      0., 2., 1.}, {1., 2., 1.}, {1., 3., 1.}, {0., 3., 1.}}],
     Parallelepiped[{0., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 1.}, {1., 2., 1.}, {1., 3., 1.}, {0., 3., 1.}, {
      0., 2., 2.}, {1., 2., 2.}, {1., 3., 2.}, {0., 3., 2.}}],
     Parallelepiped[{0., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 2.}, {1., 2., 2.}, {1., 3., 2.}, {0., 3., 2.}, {
      0., 2., 3.}, {1., 2., 3.}, {1., 3., 3.}, {0., 3., 3.}}],
     Parallelepiped[{0., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 3.}, {1., 2., 3.}, {1., 3., 3.}, {0., 3., 3.}, {
      0., 2., 4.}, {1., 2., 4.}, {1., 3., 4.}, {0., 3., 4.}}],
     Parallelepiped[{0., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 4.}, {1., 2., 4.}, {1., 3., 4.}, {0., 3., 4.}, {
      0., 2., 5.}, {1., 2., 5.}, {1., 3., 5.}, {0., 3., 5.}}],
     Parallelepiped[{0., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 5.}, {1., 2., 5.}, {1., 3., 5.}, {0., 3., 5.}, {
      0., 2., 6.}, {1., 2., 6.}, {1., 3., 6.}, {0., 3., 6.}}],
     Parallelepiped[{0., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 2., 6.}, {1., 2., 6.}, {1., 3., 6.}, {0., 3., 6.}, {
      0., 2., 7.}, {1., 2., 7.}, {1., 3., 7.}, {0., 3., 7.}}],
     Parallelepiped[{0., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 0.}, {1., 3., 0.}, {1., 4., 0.}, {0., 4., 0.}, {
      0., 3., 1.}, {1., 3., 1.}, {1., 4., 1.}, {0., 4., 1.}}],
     Parallelepiped[{0., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 1.}, {1., 3., 1.}, {1., 4., 1.}, {0., 4., 1.}, {
      0., 3., 2.}, {1., 3., 2.}, {1., 4., 2.}, {0., 4., 2.}}],
     Parallelepiped[{0., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 2.}, {1., 3., 2.}, {1., 4., 2.}, {0., 4., 2.}, {
      0., 3., 3.}, {1., 3., 3.}, {1., 4., 3.}, {0., 4., 3.}}],
     Parallelepiped[{0., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 3.}, {1., 3., 3.}, {1., 4., 3.}, {0., 4., 3.}, {
      0., 3., 4.}, {1., 3., 4.}, {1., 4., 4.}, {0., 4., 4.}}],
     Parallelepiped[{0., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 4.}, {1., 3., 4.}, {1., 4., 4.}, {0., 4., 4.}, {
      0., 3., 5.}, {1., 3., 5.}, {1., 4., 5.}, {0., 4., 5.}}],
     Parallelepiped[{0., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 5.}, {1., 3., 5.}, {1., 4., 5.}, {0., 4., 5.}, {
      0., 3., 6.}, {1., 3., 6.}, {1., 4., 6.}, {0., 4., 6.}}],
     Parallelepiped[{0., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 3., 6.}, {1., 3., 6.}, {1., 4., 6.}, {0., 4., 6.}, {
      0., 3., 7.}, {1., 3., 7.}, {1., 4., 7.}, {0., 4., 7.}}],
     Parallelepiped[{0., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 0.}, {1., 4., 0.}, {1., 5., 0.}, {0., 5., 0.}, {
      0., 4., 1.}, {1., 4., 1.}, {1., 5., 1.}, {0., 5., 1.}}],
     Parallelepiped[{0., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 1.}, {1., 4., 1.}, {1., 5., 1.}, {0., 5., 1.}, {
      0., 4., 2.}, {1., 4., 2.}, {1., 5., 2.}, {0., 5., 2.}}],
     Parallelepiped[{0., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 2.}, {1., 4., 2.}, {1., 5., 2.}, {0., 5., 2.}, {
      0., 4., 3.}, {1., 4., 3.}, {1., 5., 3.}, {0., 5., 3.}}],
     Parallelepiped[{0., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 3.}, {1., 4., 3.}, {1., 5., 3.}, {0., 5., 3.}, {
      0., 4., 4.}, {1., 4., 4.}, {1., 5., 4.}, {0., 5., 4.}}],
     Parallelepiped[{0., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 4.}, {1., 4., 4.}, {1., 5., 4.}, {0., 5., 4.}, {
      0., 4., 5.}, {1., 4., 5.}, {1., 5., 5.}, {0., 5., 5.}}],
     Parallelepiped[{0., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 5.}, {1., 4., 5.}, {1., 5., 5.}, {0., 5., 5.}, {
      0., 4., 6.}, {1., 4., 6.}, {1., 5., 6.}, {0., 5., 6.}}],
     Parallelepiped[{0., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 4., 6.}, {1., 4., 6.}, {1., 5., 6.}, {0., 5., 6.}, {
      0., 4., 7.}, {1., 4., 7.}, {1., 5., 7.}, {0., 5., 7.}}],
     Parallelepiped[{0., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 0.}, {1., 5., 0.}, {1., 6., 0.}, {0., 6., 0.}, {
      0., 5., 1.}, {1., 5., 1.}, {1., 6., 1.}, {0., 6., 1.}}],
     Parallelepiped[{0., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 1.}, {1., 5., 1.}, {1., 6., 1.}, {0., 6., 1.}, {
      0., 5., 2.}, {1., 5., 2.}, {1., 6., 2.}, {0., 6., 2.}}],
     Parallelepiped[{0., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 2.}, {1., 5., 2.}, {1., 6., 2.}, {0., 6., 2.}, {
      0., 5., 3.}, {1., 5., 3.}, {1., 6., 3.}, {0., 6., 3.}}],
     Parallelepiped[{0., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 3.}, {1., 5., 3.}, {1., 6., 3.}, {0., 6., 3.}, {
      0., 5., 4.}, {1., 5., 4.}, {1., 6., 4.}, {0., 6., 4.}}],
     Parallelepiped[{0., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 4.}, {1., 5., 4.}, {1., 6., 4.}, {0., 6., 4.}, {
      0., 5., 5.}, {1., 5., 5.}, {1., 6., 5.}, {0., 6., 5.}}],
     Parallelepiped[{0., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 5.}, {1., 5., 5.}, {1., 6., 5.}, {0., 6., 5.}, {
      0., 5., 6.}, {1., 5., 6.}, {1., 6., 6.}, {0., 6., 6.}}],
     Parallelepiped[{0., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 5., 6.}, {1., 5., 6.}, {1., 6., 6.}, {0., 6., 6.}, {
      0., 5., 7.}, {1., 5., 7.}, {1., 6., 7.}, {0., 6., 7.}}],
     Parallelepiped[{0., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 0.}, {1., 6., 0.}, {1., 7., 0.}, {0., 7., 0.}, {
      0., 6., 1.}, {1., 6., 1.}, {1., 7., 1.}, {0., 7., 1.}}],
     Parallelepiped[{0., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 1.}, {1., 6., 1.}, {1., 7., 1.}, {0., 7., 1.}, {
      0., 6., 2.}, {1., 6., 2.}, {1., 7., 2.}, {0., 7., 2.}}],
     Parallelepiped[{0., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 2.}, {1., 6., 2.}, {1., 7., 2.}, {0., 7., 2.}, {
      0., 6., 3.}, {1., 6., 3.}, {1., 7., 3.}, {0., 7., 3.}}],
     Parallelepiped[{0., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 3.}, {1., 6., 3.}, {1., 7., 3.}, {0., 7., 3.}, {
      0., 6., 4.}, {1., 6., 4.}, {1., 7., 4.}, {0., 7., 4.}}],
     Parallelepiped[{0., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 4.}, {1., 6., 4.}, {1., 7., 4.}, {0., 7., 4.}, {
      0., 6., 5.}, {1., 6., 5.}, {1., 7., 5.}, {0., 7., 5.}}],
     Parallelepiped[{0., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 5.}, {1., 6., 5.}, {1., 7., 5.}, {0., 7., 5.}, {
      0., 6., 6.}, {1., 6., 6.}, {1., 7., 6.}, {0., 7., 6.}}],
     Parallelepiped[{0., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{0., 6., 6.}, {1., 6., 6.}, {1., 7., 6.}, {0., 7., 6.}, {
      0., 6., 7.}, {1., 6., 7.}, {1., 7., 7.}, {0., 7., 7.}}],
     Parallelepiped[{0., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 0.}, {2., 0., 0.}, {2., 1., 0.}, {1., 1., 0.}, {
      1., 0., 1.}, {2., 0., 1.}, {2., 1., 1.}, {1., 1., 1.}}],
     Parallelepiped[{1., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 1.}, {2., 0., 1.}, {2., 1., 1.}, {1., 1., 1.}, {
      1., 0., 2.}, {2., 0., 2.}, {2., 1., 2.}, {1., 1., 2.}}],
     Parallelepiped[{1., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 2.}, {2., 0., 2.}, {2., 1., 2.}, {1., 1., 2.}, {
      1., 0., 3.}, {2., 0., 3.}, {2., 1., 3.}, {1., 1., 3.}}],
     Parallelepiped[{1., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 3.}, {2., 0., 3.}, {2., 1., 3.}, {1., 1., 3.}, {
      1., 0., 4.}, {2., 0., 4.}, {2., 1., 4.}, {1., 1., 4.}}],
     Parallelepiped[{1., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 4.}, {2., 0., 4.}, {2., 1., 4.}, {1., 1., 4.}, {
      1., 0., 5.}, {2., 0., 5.}, {2., 1., 5.}, {1., 1., 5.}}],
     Parallelepiped[{1., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 5.}, {2., 0., 5.}, {2., 1., 5.}, {1., 1., 5.}, {
      1., 0., 6.}, {2., 0., 6.}, {2., 1., 6.}, {1., 1., 6.}}],
     Parallelepiped[{1., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 0., 6.}, {2., 0., 6.}, {2., 1., 6.}, {1., 1., 6.}, {
      1., 0., 7.}, {2., 0., 7.}, {2., 1., 7.}, {1., 1., 7.}}],
     Parallelepiped[{1., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 0.}, {2., 1., 0.}, {2., 2., 0.}, {1., 2., 0.}, {
      1., 1., 1.}, {2., 1., 1.}, {2., 2., 1.}, {1., 2., 1.}}],
     Parallelepiped[{1., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 1.}, {2., 1., 1.}, {2., 2., 1.}, {1., 2., 1.}, {
      1., 1., 2.}, {2., 1., 2.}, {2., 2., 2.}, {1., 2., 2.}}],
     Parallelepiped[{1., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 2.}, {2., 1., 2.}, {2., 2., 2.}, {1., 2., 2.}, {
      1., 1., 3.}, {2., 1., 3.}, {2., 2., 3.}, {1., 2., 3.}}],
     Parallelepiped[{1., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 3.}, {2., 1., 3.}, {2., 2., 3.}, {1., 2., 3.}, {
      1., 1., 4.}, {2., 1., 4.}, {2., 2., 4.}, {1., 2., 4.}}],
     Parallelepiped[{1., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 4.}, {2., 1., 4.}, {2., 2., 4.}, {1., 2., 4.}, {
      1., 1., 5.}, {2., 1., 5.}, {2., 2., 5.}, {1., 2., 5.}}],
     Parallelepiped[{1., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 5.}, {2., 1., 5.}, {2., 2., 5.}, {1., 2., 5.}, {
      1., 1., 6.}, {2., 1., 6.}, {2., 2., 6.}, {1., 2., 6.}}],
     Parallelepiped[{1., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 1., 6.}, {2., 1., 6.}, {2., 2., 6.}, {1., 2., 6.}, {
      1., 1., 7.}, {2., 1., 7.}, {2., 2., 7.}, {1., 2., 7.}}],
     Parallelepiped[{1., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 0.}, {2., 2., 0.}, {2., 3., 0.}, {1., 3., 0.}, {
      1., 2., 1.}, {2., 2., 1.}, {2., 3., 1.}, {1., 3., 1.}}],
     Parallelepiped[{1., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 1.}, {2., 2., 1.}, {2., 3., 1.}, {1., 3., 1.}, {
      1., 2., 2.}, {2., 2., 2.}, {2., 3., 2.}, {1., 3., 2.}}],
     Parallelepiped[{1., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 2.}, {2., 2., 2.}, {2., 3., 2.}, {1., 3., 2.}, {
      1., 2., 3.}, {2., 2., 3.}, {2., 3., 3.}, {1., 3., 3.}}],
     Parallelepiped[{1., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 3.}, {2., 2., 3.}, {2., 3., 3.}, {1., 3., 3.}, {
      1., 2., 4.}, {2., 2., 4.}, {2., 3., 4.}, {1., 3., 4.}}],
     Parallelepiped[{1., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 4.}, {2., 2., 4.}, {2., 3., 4.}, {1., 3., 4.}, {
      1., 2., 5.}, {2., 2., 5.}, {2., 3., 5.}, {1., 3., 5.}}],
     Parallelepiped[{1., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 5.}, {2., 2., 5.}, {2., 3., 5.}, {1., 3., 5.}, {
      1., 2., 6.}, {2., 2., 6.}, {2., 3., 6.}, {1., 3., 6.}}],
     Parallelepiped[{1., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 2., 6.}, {2., 2., 6.}, {2., 3., 6.}, {1., 3., 6.}, {
      1., 2., 7.}, {2., 2., 7.}, {2., 3., 7.}, {1., 3., 7.}}],
     Parallelepiped[{1., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 0.}, {2., 3., 0.}, {2., 4., 0.}, {1., 4., 0.}, {
      1., 3., 1.}, {2., 3., 1.}, {2., 4., 1.}, {1., 4., 1.}}],
     Parallelepiped[{1., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 1.}, {2., 3., 1.}, {2., 4., 1.}, {1., 4., 1.}, {
      1., 3., 2.}, {2., 3., 2.}, {2., 4., 2.}, {1., 4., 2.}}],
     Parallelepiped[{1., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 2.}, {2., 3., 2.}, {2., 4., 2.}, {1., 4., 2.}, {
      1., 3., 3.}, {2., 3., 3.}, {2., 4., 3.}, {1., 4., 3.}}],
     Parallelepiped[{1., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 3.}, {2., 3., 3.}, {2., 4., 3.}, {1., 4., 3.}, {
      1., 3., 4.}, {2., 3., 4.}, {2., 4., 4.}, {1., 4., 4.}}],
     Parallelepiped[{1., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 4.}, {2., 3., 4.}, {2., 4., 4.}, {1., 4., 4.}, {
      1., 3., 5.}, {2., 3., 5.}, {2., 4., 5.}, {1., 4., 5.}}],
     Parallelepiped[{1., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 5.}, {2., 3., 5.}, {2., 4., 5.}, {1., 4., 5.}, {
      1., 3., 6.}, {2., 3., 6.}, {2., 4., 6.}, {1., 4., 6.}}],
     Parallelepiped[{1., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 3., 6.}, {2., 3., 6.}, {2., 4., 6.}, {1., 4., 6.}, {
      1., 3., 7.}, {2., 3., 7.}, {2., 4., 7.}, {1., 4., 7.}}],
     Parallelepiped[{1., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 0.}, {2., 4., 0.}, {2., 5., 0.}, {1., 5., 0.}, {
      1., 4., 1.}, {2., 4., 1.}, {2., 5., 1.}, {1., 5., 1.}}],
     Parallelepiped[{1., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 1.}, {2., 4., 1.}, {2., 5., 1.}, {1., 5., 1.}, {
      1., 4., 2.}, {2., 4., 2.}, {2., 5., 2.}, {1., 5., 2.}}],
     Parallelepiped[{1., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 2.}, {2., 4., 2.}, {2., 5., 2.}, {1., 5., 2.}, {
      1., 4., 3.}, {2., 4., 3.}, {2., 5., 3.}, {1., 5., 3.}}],
     Parallelepiped[{1., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 3.}, {2., 4., 3.}, {2., 5., 3.}, {1., 5., 3.}, {
      1., 4., 4.}, {2., 4., 4.}, {2., 5., 4.}, {1., 5., 4.}}],
     Parallelepiped[{1., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 4.}, {2., 4., 4.}, {2., 5., 4.}, {1., 5., 4.}, {
      1., 4., 5.}, {2., 4., 5.}, {2., 5., 5.}, {1., 5., 5.}}],
     Parallelepiped[{1., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 5.}, {2., 4., 5.}, {2., 5., 5.}, {1., 5., 5.}, {
      1., 4., 6.}, {2., 4., 6.}, {2., 5., 6.}, {1., 5., 6.}}],
     Parallelepiped[{1., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 4., 6.}, {2., 4., 6.}, {2., 5., 6.}, {1., 5., 6.}, {
      1., 4., 7.}, {2., 4., 7.}, {2., 5., 7.}, {1., 5., 7.}}],
     Parallelepiped[{1., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 0.}, {2., 5., 0.}, {2., 6., 0.}, {1., 6., 0.}, {
      1., 5., 1.}, {2., 5., 1.}, {2., 6., 1.}, {1., 6., 1.}}],
     Parallelepiped[{1., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 1.}, {2., 5., 1.}, {2., 6., 1.}, {1., 6., 1.}, {
      1., 5., 2.}, {2., 5., 2.}, {2., 6., 2.}, {1., 6., 2.}}],
     Parallelepiped[{1., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 2.}, {2., 5., 2.}, {2., 6., 2.}, {1., 6., 2.}, {
      1., 5., 3.}, {2., 5., 3.}, {2., 6., 3.}, {1., 6., 3.}}],
     Parallelepiped[{1., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 3.}, {2., 5., 3.}, {2., 6., 3.}, {1., 6., 3.}, {
      1., 5., 4.}, {2., 5., 4.}, {2., 6., 4.}, {1., 6., 4.}}],
     Parallelepiped[{1., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 4.}, {2., 5., 4.}, {2., 6., 4.}, {1., 6., 4.}, {
      1., 5., 5.}, {2., 5., 5.}, {2., 6., 5.}, {1., 6., 5.}}],
     Parallelepiped[{1., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 5.}, {2., 5., 5.}, {2., 6., 5.}, {1., 6., 5.}, {
      1., 5., 6.}, {2., 5., 6.}, {2., 6., 6.}, {1., 6., 6.}}],
     Parallelepiped[{1., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 5., 6.}, {2., 5., 6.}, {2., 6., 6.}, {1., 6., 6.}, {
      1., 5., 7.}, {2., 5., 7.}, {2., 6., 7.}, {1., 6., 7.}}],
     Parallelepiped[{1., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 0.}, {2., 6., 0.}, {2., 7., 0.}, {1., 7., 0.}, {
      1., 6., 1.}, {2., 6., 1.}, {2., 7., 1.}, {1., 7., 1.}}],
     Parallelepiped[{1., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 1.}, {2., 6., 1.}, {2., 7., 1.}, {1., 7., 1.}, {
      1., 6., 2.}, {2., 6., 2.}, {2., 7., 2.}, {1., 7., 2.}}],
     Parallelepiped[{1., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 2.}, {2., 6., 2.}, {2., 7., 2.}, {1., 7., 2.}, {
      1., 6., 3.}, {2., 6., 3.}, {2., 7., 3.}, {1., 7., 3.}}],
     Parallelepiped[{1., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 3.}, {2., 6., 3.}, {2., 7., 3.}, {1., 7., 3.}, {
      1., 6., 4.}, {2., 6., 4.}, {2., 7., 4.}, {1., 7., 4.}}],
     Parallelepiped[{1., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 4.}, {2., 6., 4.}, {2., 7., 4.}, {1., 7., 4.}, {
      1., 6., 5.}, {2., 6., 5.}, {2., 7., 5.}, {1., 7., 5.}}],
     Parallelepiped[{1., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 5.}, {2., 6., 5.}, {2., 7., 5.}, {1., 7., 5.}, {
      1., 6., 6.}, {2., 6., 6.}, {2., 7., 6.}, {1., 7., 6.}}],
     Parallelepiped[{1., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{1., 6., 6.}, {2., 6., 6.}, {2., 7., 6.}, {1., 7., 6.}, {
      1., 6., 7.}, {2., 6., 7.}, {2., 7., 7.}, {1., 7., 7.}}],
     Parallelepiped[{1., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 0.}, {3., 0., 0.}, {3., 1., 0.}, {2., 1., 0.}, {
      2., 0., 1.}, {3., 0., 1.}, {3., 1., 1.}, {2., 1., 1.}}],
     Parallelepiped[{2., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 1.}, {3., 0., 1.}, {3., 1., 1.}, {2., 1., 1.}, {
      2., 0., 2.}, {3., 0., 2.}, {3., 1., 2.}, {2., 1., 2.}}],
     Parallelepiped[{2., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 2.}, {3., 0., 2.}, {3., 1., 2.}, {2., 1., 2.}, {
      2., 0., 3.}, {3., 0., 3.}, {3., 1., 3.}, {2., 1., 3.}}],
     Parallelepiped[{2., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 3.}, {3., 0., 3.}, {3., 1., 3.}, {2., 1., 3.}, {
      2., 0., 4.}, {3., 0., 4.}, {3., 1., 4.}, {2., 1., 4.}}],
     Parallelepiped[{2., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 4.}, {3., 0., 4.}, {3., 1., 4.}, {2., 1., 4.}, {
      2., 0., 5.}, {3., 0., 5.}, {3., 1., 5.}, {2., 1., 5.}}],
     Parallelepiped[{2., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 5.}, {3., 0., 5.}, {3., 1., 5.}, {2., 1., 5.}, {
      2., 0., 6.}, {3., 0., 6.}, {3., 1., 6.}, {2., 1., 6.}}],
     Parallelepiped[{2., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 0., 6.}, {3., 0., 6.}, {3., 1., 6.}, {2., 1., 6.}, {
      2., 0., 7.}, {3., 0., 7.}, {3., 1., 7.}, {2., 1., 7.}}],
     Parallelepiped[{2., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 0.}, {3., 1., 0.}, {3., 2., 0.}, {2., 2., 0.}, {
      2., 1., 1.}, {3., 1., 1.}, {3., 2., 1.}, {2., 2., 1.}}],
     Parallelepiped[{2., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 1.}, {3., 1., 1.}, {3., 2., 1.}, {2., 2., 1.}, {
      2., 1., 2.}, {3., 1., 2.}, {3., 2., 2.}, {2., 2., 2.}}],
     Parallelepiped[{2., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 2.}, {3., 1., 2.}, {3., 2., 2.}, {2., 2., 2.}, {
      2., 1., 3.}, {3., 1., 3.}, {3., 2., 3.}, {2., 2., 3.}}],
     Parallelepiped[{2., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 3.}, {3., 1., 3.}, {3., 2., 3.}, {2., 2., 3.}, {
      2., 1., 4.}, {3., 1., 4.}, {3., 2., 4.}, {2., 2., 4.}}],
     Parallelepiped[{2., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 4.}, {3., 1., 4.}, {3., 2., 4.}, {2., 2., 4.}, {
      2., 1., 5.}, {3., 1., 5.}, {3., 2., 5.}, {2., 2., 5.}}],
     Parallelepiped[{2., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 5.}, {3., 1., 5.}, {3., 2., 5.}, {2., 2., 5.}, {
      2., 1., 6.}, {3., 1., 6.}, {3., 2., 6.}, {2., 2., 6.}}],
     Parallelepiped[{2., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 1., 6.}, {3., 1., 6.}, {3., 2., 6.}, {2., 2., 6.}, {
      2., 1., 7.}, {3., 1., 7.}, {3., 2., 7.}, {2., 2., 7.}}],
     Parallelepiped[{2., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 0.}, {3., 2., 0.}, {3., 3., 0.}, {2., 3., 0.}, {
      2., 2., 1.}, {3., 2., 1.}, {3., 3., 1.}, {2., 3., 1.}}],
     Parallelepiped[{2., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 1.}, {3., 2., 1.}, {3., 3., 1.}, {2., 3., 1.}, {
      2., 2., 2.}, {3., 2., 2.}, {3., 3., 2.}, {2., 3., 2.}}],
     Parallelepiped[{2., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 2.}, {3., 2., 2.}, {3., 3., 2.}, {2., 3., 2.}, {
      2., 2., 3.}, {3., 2., 3.}, {3., 3., 3.}, {2., 3., 3.}}],
     Parallelepiped[{2., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 3.}, {3., 2., 3.}, {3., 3., 3.}, {2., 3., 3.}, {
      2., 2., 4.}, {3., 2., 4.}, {3., 3., 4.}, {2., 3., 4.}}],
     Parallelepiped[{2., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 4.}, {3., 2., 4.}, {3., 3., 4.}, {2., 3., 4.}, {
      2., 2., 5.}, {3., 2., 5.}, {3., 3., 5.}, {2., 3., 5.}}],
     Parallelepiped[{2., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 5.}, {3., 2., 5.}, {3., 3., 5.}, {2., 3., 5.}, {
      2., 2., 6.}, {3., 2., 6.}, {3., 3., 6.}, {2., 3., 6.}}],
     Parallelepiped[{2., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 2., 6.}, {3., 2., 6.}, {3., 3., 6.}, {2., 3., 6.}, {
      2., 2., 7.}, {3., 2., 7.}, {3., 3., 7.}, {2., 3., 7.}}],
     Parallelepiped[{2., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 0.}, {3., 3., 0.}, {3., 4., 0.}, {2., 4., 0.}, {
      2., 3., 1.}, {3., 3., 1.}, {3., 4., 1.}, {2., 4., 1.}}],
     Parallelepiped[{2., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 1.}, {3., 3., 1.}, {3., 4., 1.}, {2., 4., 1.}, {
      2., 3., 2.}, {3., 3., 2.}, {3., 4., 2.}, {2., 4., 2.}}],
     Parallelepiped[{2., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 2.}, {3., 3., 2.}, {3., 4., 2.}, {2., 4., 2.}, {
      2., 3., 3.}, {3., 3., 3.}, {3., 4., 3.}, {2., 4., 3.}}],
     Parallelepiped[{2., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 3.}, {3., 3., 3.}, {3., 4., 3.}, {2., 4., 3.}, {
      2., 3., 4.}, {3., 3., 4.}, {3., 4., 4.}, {2., 4., 4.}}],
     Parallelepiped[{2., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 4.}, {3., 3., 4.}, {3., 4., 4.}, {2., 4., 4.}, {
      2., 3., 5.}, {3., 3., 5.}, {3., 4., 5.}, {2., 4., 5.}}],
     Parallelepiped[{2., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 5.}, {3., 3., 5.}, {3., 4., 5.}, {2., 4., 5.}, {
      2., 3., 6.}, {3., 3., 6.}, {3., 4., 6.}, {2., 4., 6.}}],
     Parallelepiped[{2., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 3., 6.}, {3., 3., 6.}, {3., 4., 6.}, {2., 4., 6.}, {
      2., 3., 7.}, {3., 3., 7.}, {3., 4., 7.}, {2., 4., 7.}}],
     Parallelepiped[{2., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 0.}, {3., 4., 0.}, {3., 5., 0.}, {2., 5., 0.}, {
      2., 4., 1.}, {3., 4., 1.}, {3., 5., 1.}, {2., 5., 1.}}],
     Parallelepiped[{2., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 1.}, {3., 4., 1.}, {3., 5., 1.}, {2., 5., 1.}, {
      2., 4., 2.}, {3., 4., 2.}, {3., 5., 2.}, {2., 5., 2.}}],
     Parallelepiped[{2., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 2.}, {3., 4., 2.}, {3., 5., 2.}, {2., 5., 2.}, {
      2., 4., 3.}, {3., 4., 3.}, {3., 5., 3.}, {2., 5., 3.}}],
     Parallelepiped[{2., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 3.}, {3., 4., 3.}, {3., 5., 3.}, {2., 5., 3.}, {
      2., 4., 4.}, {3., 4., 4.}, {3., 5., 4.}, {2., 5., 4.}}],
     Parallelepiped[{2., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 4.}, {3., 4., 4.}, {3., 5., 4.}, {2., 5., 4.}, {
      2., 4., 5.}, {3., 4., 5.}, {3., 5., 5.}, {2., 5., 5.}}],
     Parallelepiped[{2., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 5.}, {3., 4., 5.}, {3., 5., 5.}, {2., 5., 5.}, {
      2., 4., 6.}, {3., 4., 6.}, {3., 5., 6.}, {2., 5., 6.}}],
     Parallelepiped[{2., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 4., 6.}, {3., 4., 6.}, {3., 5., 6.}, {2., 5., 6.}, {
      2., 4., 7.}, {3., 4., 7.}, {3., 5., 7.}, {2., 5., 7.}}],
     Parallelepiped[{2., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 0.}, {3., 5., 0.}, {3., 6., 0.}, {2., 6., 0.}, {
      2., 5., 1.}, {3., 5., 1.}, {3., 6., 1.}, {2., 6., 1.}}],
     Parallelepiped[{2., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 1.}, {3., 5., 1.}, {3., 6., 1.}, {2., 6., 1.}, {
      2., 5., 2.}, {3., 5., 2.}, {3., 6., 2.}, {2., 6., 2.}}],
     Parallelepiped[{2., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 2.}, {3., 5., 2.}, {3., 6., 2.}, {2., 6., 2.}, {
      2., 5., 3.}, {3., 5., 3.}, {3., 6., 3.}, {2., 6., 3.}}],
     Parallelepiped[{2., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 3.}, {3., 5., 3.}, {3., 6., 3.}, {2., 6., 3.}, {
      2., 5., 4.}, {3., 5., 4.}, {3., 6., 4.}, {2., 6., 4.}}],
     Parallelepiped[{2., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 4.}, {3., 5., 4.}, {3., 6., 4.}, {2., 6., 4.}, {
      2., 5., 5.}, {3., 5., 5.}, {3., 6., 5.}, {2., 6., 5.}}],
     Parallelepiped[{2., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 5.}, {3., 5., 5.}, {3., 6., 5.}, {2., 6., 5.}, {
      2., 5., 6.}, {3., 5., 6.}, {3., 6., 6.}, {2., 6., 6.}}],
     Parallelepiped[{2., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 5., 6.}, {3., 5., 6.}, {3., 6., 6.}, {2., 6., 6.}, {
      2., 5., 7.}, {3., 5., 7.}, {3., 6., 7.}, {2., 6., 7.}}],
     Parallelepiped[{2., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 0.}, {3., 6., 0.}, {3., 7., 0.}, {2., 7., 0.}, {
      2., 6., 1.}, {3., 6., 1.}, {3., 7., 1.}, {2., 7., 1.}}],
     Parallelepiped[{2., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 1.}, {3., 6., 1.}, {3., 7., 1.}, {2., 7., 1.}, {
      2., 6., 2.}, {3., 6., 2.}, {3., 7., 2.}, {2., 7., 2.}}],
     Parallelepiped[{2., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 2.}, {3., 6., 2.}, {3., 7., 2.}, {2., 7., 2.}, {
      2., 6., 3.}, {3., 6., 3.}, {3., 7., 3.}, {2., 7., 3.}}],
     Parallelepiped[{2., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 3.}, {3., 6., 3.}, {3., 7., 3.}, {2., 7., 3.}, {
      2., 6., 4.}, {3., 6., 4.}, {3., 7., 4.}, {2., 7., 4.}}],
     Parallelepiped[{2., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 4.}, {3., 6., 4.}, {3., 7., 4.}, {2., 7., 4.}, {
      2., 6., 5.}, {3., 6., 5.}, {3., 7., 5.}, {2., 7., 5.}}],
     Parallelepiped[{2., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 5.}, {3., 6., 5.}, {3., 7., 5.}, {2., 7., 5.}, {
      2., 6., 6.}, {3., 6., 6.}, {3., 7., 6.}, {2., 7., 6.}}],
     Parallelepiped[{2., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{2., 6., 6.}, {3., 6., 6.}, {3., 7., 6.}, {2., 7., 6.}, {
      2., 6., 7.}, {3., 6., 7.}, {3., 7., 7.}, {2., 7., 7.}}],
     Parallelepiped[{2., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 0.}, {4., 0., 0.}, {4., 1., 0.}, {3., 1., 0.}, {
      3., 0., 1.}, {4., 0., 1.}, {4., 1., 1.}, {3., 1., 1.}}],
     Parallelepiped[{3., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 1.}, {4., 0., 1.}, {4., 1., 1.}, {3., 1., 1.}, {
      3., 0., 2.}, {4., 0., 2.}, {4., 1., 2.}, {3., 1., 2.}}],
     Parallelepiped[{3., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 2.}, {4., 0., 2.}, {4., 1., 2.}, {3., 1., 2.}, {
      3., 0., 3.}, {4., 0., 3.}, {4., 1., 3.}, {3., 1., 3.}}],
     Parallelepiped[{3., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 3.}, {4., 0., 3.}, {4., 1., 3.}, {3., 1., 3.}, {
      3., 0., 4.}, {4., 0., 4.}, {4., 1., 4.}, {3., 1., 4.}}],
     Parallelepiped[{3., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 4.}, {4., 0., 4.}, {4., 1., 4.}, {3., 1., 4.}, {
      3., 0., 5.}, {4., 0., 5.}, {4., 1., 5.}, {3., 1., 5.}}],
     Parallelepiped[{3., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 5.}, {4., 0., 5.}, {4., 1., 5.}, {3., 1., 5.}, {
      3., 0., 6.}, {4., 0., 6.}, {4., 1., 6.}, {3., 1., 6.}}],
     Parallelepiped[{3., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 0., 6.}, {4., 0., 6.}, {4., 1., 6.}, {3., 1., 6.}, {
      3., 0., 7.}, {4., 0., 7.}, {4., 1., 7.}, {3., 1., 7.}}],
     Parallelepiped[{3., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 0.}, {4., 1., 0.}, {4., 2., 0.}, {3., 2., 0.}, {
      3., 1., 1.}, {4., 1., 1.}, {4., 2., 1.}, {3., 2., 1.}}],
     Parallelepiped[{3., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 1.}, {4., 1., 1.}, {4., 2., 1.}, {3., 2., 1.}, {
      3., 1., 2.}, {4., 1., 2.}, {4., 2., 2.}, {3., 2., 2.}}],
     Parallelepiped[{3., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 2.}, {4., 1., 2.}, {4., 2., 2.}, {3., 2., 2.}, {
      3., 1., 3.}, {4., 1., 3.}, {4., 2., 3.}, {3., 2., 3.}}],
     Parallelepiped[{3., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 3.}, {4., 1., 3.}, {4., 2., 3.}, {3., 2., 3.}, {
      3., 1., 4.}, {4., 1., 4.}, {4., 2., 4.}, {3., 2., 4.}}],
     Parallelepiped[{3., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 4.}, {4., 1., 4.}, {4., 2., 4.}, {3., 2., 4.}, {
      3., 1., 5.}, {4., 1., 5.}, {4., 2., 5.}, {3., 2., 5.}}],
     Parallelepiped[{3., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 5.}, {4., 1., 5.}, {4., 2., 5.}, {3., 2., 5.}, {
      3., 1., 6.}, {4., 1., 6.}, {4., 2., 6.}, {3., 2., 6.}}],
     Parallelepiped[{3., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 1., 6.}, {4., 1., 6.}, {4., 2., 6.}, {3., 2., 6.}, {
      3., 1., 7.}, {4., 1., 7.}, {4., 2., 7.}, {3., 2., 7.}}],
     Parallelepiped[{3., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 0.}, {4., 2., 0.}, {4., 3., 0.}, {3., 3., 0.}, {
      3., 2., 1.}, {4., 2., 1.}, {4., 3., 1.}, {3., 3., 1.}}],
     Parallelepiped[{3., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 1.}, {4., 2., 1.}, {4., 3., 1.}, {3., 3., 1.}, {
      3., 2., 2.}, {4., 2., 2.}, {4., 3., 2.}, {3., 3., 2.}}],
     Parallelepiped[{3., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 2.}, {4., 2., 2.}, {4., 3., 2.}, {3., 3., 2.}, {
      3., 2., 3.}, {4., 2., 3.}, {4., 3., 3.}, {3., 3., 3.}}],
     Parallelepiped[{3., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 3.}, {4., 2., 3.}, {4., 3., 3.}, {3., 3., 3.}, {
      3., 2., 4.}, {4., 2., 4.}, {4., 3., 4.}, {3., 3., 4.}}],
     Parallelepiped[{3., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 4.}, {4., 2., 4.}, {4., 3., 4.}, {3., 3., 4.}, {
      3., 2., 5.}, {4., 2., 5.}, {4., 3., 5.}, {3., 3., 5.}}],
     Parallelepiped[{3., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 5.}, {4., 2., 5.}, {4., 3., 5.}, {3., 3., 5.}, {
      3., 2., 6.}, {4., 2., 6.}, {4., 3., 6.}, {3., 3., 6.}}],
     Parallelepiped[{3., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 2., 6.}, {4., 2., 6.}, {4., 3., 6.}, {3., 3., 6.}, {
      3., 2., 7.}, {4., 2., 7.}, {4., 3., 7.}, {3., 3., 7.}}],
     Parallelepiped[{3., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 0.}, {4., 3., 0.}, {4., 4., 0.}, {3., 4., 0.}, {
      3., 3., 1.}, {4., 3., 1.}, {4., 4., 1.}, {3., 4., 1.}}],
     Parallelepiped[{3., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 1.}, {4., 3., 1.}, {4., 4., 1.}, {3., 4., 1.}, {
      3., 3., 2.}, {4., 3., 2.}, {4., 4., 2.}, {3., 4., 2.}}],
     Parallelepiped[{3., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 2.}, {4., 3., 2.}, {4., 4., 2.}, {3., 4., 2.}, {
      3., 3., 3.}, {4., 3., 3.}, {4., 4., 3.}, {3., 4., 3.}}],
     Parallelepiped[{3., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 3.}, {4., 3., 3.}, {4., 4., 3.}, {3., 4., 3.}, {
      3., 3., 4.}, {4., 3., 4.}, {4., 4., 4.}, {3., 4., 4.}}],
     Parallelepiped[{3., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 4.}, {4., 3., 4.}, {4., 4., 4.}, {3., 4., 4.}, {
      3., 3., 5.}, {4., 3., 5.}, {4., 4., 5.}, {3., 4., 5.}}],
     Parallelepiped[{3., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 5.}, {4., 3., 5.}, {4., 4., 5.}, {3., 4., 5.}, {
      3., 3., 6.}, {4., 3., 6.}, {4., 4., 6.}, {3., 4., 6.}}],
     Parallelepiped[{3., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{3., 3., 6.}, {4., 3., 6.}, {4., 4., 6.}, {3., 4., 6.}, {
      3., 3., 7.}, {4., 3., 7.}, {4., 4., 7.}, {3., 4., 7.}}],
     Parallelepiped[{3., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 0.}, {4., 4., 0.}, {4., 5., 0.}, {3., 5., 0.}, {
      3., 4., 1.}, {4., 4., 1.}, {4., 5., 1.}, {3., 5., 1.}}],
     Parallelepiped[{3., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 1.}, {4., 4., 1.}, {4., 5., 1.}, {3., 5., 1.}, {
      3., 4., 2.}, {4., 4., 2.}, {4., 5., 2.}, {3., 5., 2.}}],
     Parallelepiped[{3., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 2.}, {4., 4., 2.}, {4., 5., 2.}, {3., 5., 2.}, {
      3., 4., 3.}, {4., 4., 3.}, {4., 5., 3.}, {3., 5., 3.}}],
     Parallelepiped[{3., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 3.}, {4., 4., 3.}, {4., 5., 3.}, {3., 5., 3.}, {
      3., 4., 4.}, {4., 4., 4.}, {4., 5., 4.}, {3., 5., 4.}}],
     Parallelepiped[{3., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 4.}, {4., 4., 4.}, {4., 5., 4.}, {3., 5., 4.}, {
      3., 4., 5.}, {4., 4., 5.}, {4., 5., 5.}, {3., 5., 5.}}],
     Parallelepiped[{3., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 5.}, {4., 4., 5.}, {4., 5., 5.}, {3., 5., 5.}, {
      3., 4., 6.}, {4., 4., 6.}, {4., 5., 6.}, {3., 5., 6.}}],
     Parallelepiped[{3., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 4., 6.}, {4., 4., 6.}, {4., 5., 6.}, {3., 5., 6.}, {
      3., 4., 7.}, {4., 4., 7.}, {4., 5., 7.}, {3., 5., 7.}}],
     Parallelepiped[{3., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 0.}, {4., 5., 0.}, {4., 6., 0.}, {3., 6., 0.}, {
      3., 5., 1.}, {4., 5., 1.}, {4., 6., 1.}, {3., 6., 1.}}],
     Parallelepiped[{3., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 1.}, {4., 5., 1.}, {4., 6., 1.}, {3., 6., 1.}, {
      3., 5., 2.}, {4., 5., 2.}, {4., 6., 2.}, {3., 6., 2.}}],
     Parallelepiped[{3., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 2.}, {4., 5., 2.}, {4., 6., 2.}, {3., 6., 2.}, {
      3., 5., 3.}, {4., 5., 3.}, {4., 6., 3.}, {3., 6., 3.}}],
     Parallelepiped[{3., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 3.}, {4., 5., 3.}, {4., 6., 3.}, {3., 6., 3.}, {
      3., 5., 4.}, {4., 5., 4.}, {4., 6., 4.}, {3., 6., 4.}}],
     Parallelepiped[{3., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 4.}, {4., 5., 4.}, {4., 6., 4.}, {3., 6., 4.}, {
      3., 5., 5.}, {4., 5., 5.}, {4., 6., 5.}, {3., 6., 5.}}],
     Parallelepiped[{3., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 5.}, {4., 5., 5.}, {4., 6., 5.}, {3., 6., 5.}, {
      3., 5., 6.}, {4., 5., 6.}, {4., 6., 6.}, {3., 6., 6.}}],
     Parallelepiped[{3., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 5., 6.}, {4., 5., 6.}, {4., 6., 6.}, {3., 6., 6.}, {
      3., 5., 7.}, {4., 5., 7.}, {4., 6., 7.}, {3., 6., 7.}}],
     Parallelepiped[{3., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 0.}, {4., 6., 0.}, {4., 7., 0.}, {3., 7., 0.}, {
      3., 6., 1.}, {4., 6., 1.}, {4., 7., 1.}, {3., 7., 1.}}],
     Parallelepiped[{3., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 1.}, {4., 6., 1.}, {4., 7., 1.}, {3., 7., 1.}, {
      3., 6., 2.}, {4., 6., 2.}, {4., 7., 2.}, {3., 7., 2.}}],
     Parallelepiped[{3., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 2.}, {4., 6., 2.}, {4., 7., 2.}, {3., 7., 2.}, {
      3., 6., 3.}, {4., 6., 3.}, {4., 7., 3.}, {3., 7., 3.}}],
     Parallelepiped[{3., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 3.}, {4., 6., 3.}, {4., 7., 3.}, {3., 7., 3.}, {
      3., 6., 4.}, {4., 6., 4.}, {4., 7., 4.}, {3., 7., 4.}}],
     Parallelepiped[{3., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 4.}, {4., 6., 4.}, {4., 7., 4.}, {3., 7., 4.}, {
      3., 6., 5.}, {4., 6., 5.}, {4., 7., 5.}, {3., 7., 5.}}],
     Parallelepiped[{3., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 5.}, {4., 6., 5.}, {4., 7., 5.}, {3., 7., 5.}, {
      3., 6., 6.}, {4., 6., 6.}, {4., 7., 6.}, {3., 7., 6.}}],
     Parallelepiped[{3., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{3., 6., 6.}, {4., 6., 6.}, {4., 7., 6.}, {3., 7., 6.}, {
      3., 6., 7.}, {4., 6., 7.}, {4., 7., 7.}, {3., 7., 7.}}],
     Parallelepiped[{3., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 0.}, {5., 0., 0.}, {5., 1., 0.}, {4., 1., 0.}, {
      4., 0., 1.}, {5., 0., 1.}, {5., 1., 1.}, {4., 1., 1.}}],
     Parallelepiped[{4., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 1.}, {5., 0., 1.}, {5., 1., 1.}, {4., 1., 1.}, {
      4., 0., 2.}, {5., 0., 2.}, {5., 1., 2.}, {4., 1., 2.}}],
     Parallelepiped[{4., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 2.}, {5., 0., 2.}, {5., 1., 2.}, {4., 1., 2.}, {
      4., 0., 3.}, {5., 0., 3.}, {5., 1., 3.}, {4., 1., 3.}}],
     Parallelepiped[{4., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 3.}, {5., 0., 3.}, {5., 1., 3.}, {4., 1., 3.}, {
      4., 0., 4.}, {5., 0., 4.}, {5., 1., 4.}, {4., 1., 4.}}],
     Parallelepiped[{4., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 4.}, {5., 0., 4.}, {5., 1., 4.}, {4., 1., 4.}, {
      4., 0., 5.}, {5., 0., 5.}, {5., 1., 5.}, {4., 1., 5.}}],
     Parallelepiped[{4., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 5.}, {5., 0., 5.}, {5., 1., 5.}, {4., 1., 5.}, {
      4., 0., 6.}, {5., 0., 6.}, {5., 1., 6.}, {4., 1., 6.}}],
     Parallelepiped[{4., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{4., 0., 6.}, {5., 0., 6.}, {5., 1., 6.}, {4., 1., 6.}, {
      4., 0., 7.}, {5., 0., 7.}, {5., 1., 7.}, {4., 1., 7.}}],
     Parallelepiped[{4., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 0.}, {5., 1., 0.}, {5., 2., 0.}, {4., 2., 0.}, {
      4., 1., 1.}, {5., 1., 1.}, {5., 2., 1.}, {4., 2., 1.}}],
     Parallelepiped[{4., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 1.}, {5., 1., 1.}, {5., 2., 1.}, {4., 2., 1.}, {
      4., 1., 2.}, {5., 1., 2.}, {5., 2., 2.}, {4., 2., 2.}}],
     Parallelepiped[{4., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 2.}, {5., 1., 2.}, {5., 2., 2.}, {4., 2., 2.}, {
      4., 1., 3.}, {5., 1., 3.}, {5., 2., 3.}, {4., 2., 3.}}],
     Parallelepiped[{4., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 3.}, {5., 1., 3.}, {5., 2., 3.}, {4., 2., 3.}, {
      4., 1., 4.}, {5., 1., 4.}, {5., 2., 4.}, {4., 2., 4.}}],
     Parallelepiped[{4., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 4.}, {5., 1., 4.}, {5., 2., 4.}, {4., 2., 4.}, {
      4., 1., 5.}, {5., 1., 5.}, {5., 2., 5.}, {4., 2., 5.}}],
     Parallelepiped[{4., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 5.}, {5., 1., 5.}, {5., 2., 5.}, {4., 2., 5.}, {
      4., 1., 6.}, {5., 1., 6.}, {5., 2., 6.}, {4., 2., 6.}}],
     Parallelepiped[{4., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{4., 1., 6.}, {5., 1., 6.}, {5., 2., 6.}, {4., 2., 6.}, {
      4., 1., 7.}, {5., 1., 7.}, {5., 2., 7.}, {4., 2., 7.}}],
     Parallelepiped[{4., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 0.}, {5., 2., 0.}, {5., 3., 0.}, {4., 3., 0.}, {
      4., 2., 1.}, {5., 2., 1.}, {5., 3., 1.}, {4., 3., 1.}}],
     Parallelepiped[{4., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 1.}, {5., 2., 1.}, {5., 3., 1.}, {4., 3., 1.}, {
      4., 2., 2.}, {5., 2., 2.}, {5., 3., 2.}, {4., 3., 2.}}],
     Parallelepiped[{4., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 2.}, {5., 2., 2.}, {5., 3., 2.}, {4., 3., 2.}, {
      4., 2., 3.}, {5., 2., 3.}, {5., 3., 3.}, {4., 3., 3.}}],
     Parallelepiped[{4., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 3.}, {5., 2., 3.}, {5., 3., 3.}, {4., 3., 3.}, {
      4., 2., 4.}, {5., 2., 4.}, {5., 3., 4.}, {4., 3., 4.}}],
     Parallelepiped[{4., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 4.}, {5., 2., 4.}, {5., 3., 4.}, {4., 3., 4.}, {
      4., 2., 5.}, {5., 2., 5.}, {5., 3., 5.}, {4., 3., 5.}}],
     Parallelepiped[{4., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 5.}, {5., 2., 5.}, {5., 3., 5.}, {4., 3., 5.}, {
      4., 2., 6.}, {5., 2., 6.}, {5., 3., 6.}, {4., 3., 6.}}],
     Parallelepiped[{4., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{4., 2., 6.}, {5., 2., 6.}, {5., 3., 6.}, {4., 3., 6.}, {
      4., 2., 7.}, {5., 2., 7.}, {5., 3., 7.}, {4., 3., 7.}}],
     Parallelepiped[{4., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 0.}, {5., 3., 0.}, {5., 4., 0.}, {4., 4., 0.}, {
      4., 3., 1.}, {5., 3., 1.}, {5., 4., 1.}, {4., 4., 1.}}],
     Parallelepiped[{4., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 1.}, {5., 3., 1.}, {5., 4., 1.}, {4., 4., 1.}, {
      4., 3., 2.}, {5., 3., 2.}, {5., 4., 2.}, {4., 4., 2.}}],
     Parallelepiped[{4., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 2.}, {5., 3., 2.}, {5., 4., 2.}, {4., 4., 2.}, {
      4., 3., 3.}, {5., 3., 3.}, {5., 4., 3.}, {4., 4., 3.}}],
     Parallelepiped[{4., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 3.}, {5., 3., 3.}, {5., 4., 3.}, {4., 4., 3.}, {
      4., 3., 4.}, {5., 3., 4.}, {5., 4., 4.}, {4., 4., 4.}}],
     Parallelepiped[{4., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 4.}, {5., 3., 4.}, {5., 4., 4.}, {4., 4., 4.}, {
      4., 3., 5.}, {5., 3., 5.}, {5., 4., 5.}, {4., 4., 5.}}],
     Parallelepiped[{4., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 5.}, {5., 3., 5.}, {5., 4., 5.}, {4., 4., 5.}, {
      4., 3., 6.}, {5., 3., 6.}, {5., 4., 6.}, {4., 4., 6.}}],
     Parallelepiped[{4., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 3., 6.}, {5., 3., 6.}, {5., 4., 6.}, {4., 4., 6.}, {
      4., 3., 7.}, {5., 3., 7.}, {5., 4., 7.}, {4., 4., 7.}}],
     Parallelepiped[{4., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 0.}, {5., 4., 0.}, {5., 5., 0.}, {4., 5., 0.}, {
      4., 4., 1.}, {5., 4., 1.}, {5., 5., 1.}, {4., 5., 1.}}],
     Parallelepiped[{4., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 1.}, {5., 4., 1.}, {5., 5., 1.}, {4., 5., 1.}, {
      4., 4., 2.}, {5., 4., 2.}, {5., 5., 2.}, {4., 5., 2.}}],
     Parallelepiped[{4., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 2.}, {5., 4., 2.}, {5., 5., 2.}, {4., 5., 2.}, {
      4., 4., 3.}, {5., 4., 3.}, {5., 5., 3.}, {4., 5., 3.}}],
     Parallelepiped[{4., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 3.}, {5., 4., 3.}, {5., 5., 3.}, {4., 5., 3.}, {
      4., 4., 4.}, {5., 4., 4.}, {5., 5., 4.}, {4., 5., 4.}}],
     Parallelepiped[{4., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 4.}, {5., 4., 4.}, {5., 5., 4.}, {4., 5., 4.}, {
      4., 4., 5.}, {5., 4., 5.}, {5., 5., 5.}, {4., 5., 5.}}],
     Parallelepiped[{4., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 5.}, {5., 4., 5.}, {5., 5., 5.}, {4., 5., 5.}, {
      4., 4., 6.}, {5., 4., 6.}, {5., 5., 6.}, {4., 5., 6.}}],
     Parallelepiped[{4., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 4., 6.}, {5., 4., 6.}, {5., 5., 6.}, {4., 5., 6.}, {
      4., 4., 7.}, {5., 4., 7.}, {5., 5., 7.}, {4., 5., 7.}}],
     Parallelepiped[{4., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 0.}, {5., 5., 0.}, {5., 6., 0.}, {4., 6., 0.}, {
      4., 5., 1.}, {5., 5., 1.}, {5., 6., 1.}, {4., 6., 1.}}],
     Parallelepiped[{4., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 1.}, {5., 5., 1.}, {5., 6., 1.}, {4., 6., 1.}, {
      4., 5., 2.}, {5., 5., 2.}, {5., 6., 2.}, {4., 6., 2.}}],
     Parallelepiped[{4., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 2.}, {5., 5., 2.}, {5., 6., 2.}, {4., 6., 2.}, {
      4., 5., 3.}, {5., 5., 3.}, {5., 6., 3.}, {4., 6., 3.}}],
     Parallelepiped[{4., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 3.}, {5., 5., 3.}, {5., 6., 3.}, {4., 6., 3.}, {
      4., 5., 4.}, {5., 5., 4.}, {5., 6., 4.}, {4., 6., 4.}}],
     Parallelepiped[{4., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 4.}, {5., 5., 4.}, {5., 6., 4.}, {4., 6., 4.}, {
      4., 5., 5.}, {5., 5., 5.}, {5., 6., 5.}, {4., 6., 5.}}],
     Parallelepiped[{4., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 5.}, {5., 5., 5.}, {5., 6., 5.}, {4., 6., 5.}, {
      4., 5., 6.}, {5., 5., 6.}, {5., 6., 6.}, {4., 6., 6.}}],
     Parallelepiped[{4., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 5., 6.}, {5., 5., 6.}, {5., 6., 6.}, {4., 6., 6.}, {
      4., 5., 7.}, {5., 5., 7.}, {5., 6., 7.}, {4., 6., 7.}}],
     Parallelepiped[{4., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 0.}, {5., 6., 0.}, {5., 7., 0.}, {4., 7., 0.}, {
      4., 6., 1.}, {5., 6., 1.}, {5., 7., 1.}, {4., 7., 1.}}],
     Parallelepiped[{4., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 1.}, {5., 6., 1.}, {5., 7., 1.}, {4., 7., 1.}, {
      4., 6., 2.}, {5., 6., 2.}, {5., 7., 2.}, {4., 7., 2.}}],
     Parallelepiped[{4., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 2.}, {5., 6., 2.}, {5., 7., 2.}, {4., 7., 2.}, {
      4., 6., 3.}, {5., 6., 3.}, {5., 7., 3.}, {4., 7., 3.}}],
     Parallelepiped[{4., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 3.}, {5., 6., 3.}, {5., 7., 3.}, {4., 7., 3.}, {
      4., 6., 4.}, {5., 6., 4.}, {5., 7., 4.}, {4., 7., 4.}}],
     Parallelepiped[{4., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 4.}, {5., 6., 4.}, {5., 7., 4.}, {4., 7., 4.}, {
      4., 6., 5.}, {5., 6., 5.}, {5., 7., 5.}, {4., 7., 5.}}],
     Parallelepiped[{4., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 5.}, {5., 6., 5.}, {5., 7., 5.}, {4., 7., 5.}, {
      4., 6., 6.}, {5., 6., 6.}, {5., 7., 6.}, {4., 7., 6.}}],
     Parallelepiped[{4., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{4., 6., 6.}, {5., 6., 6.}, {5., 7., 6.}, {4., 7., 6.}, {
      4., 6., 7.}, {5., 6., 7.}, {5., 7., 7.}, {4., 7., 7.}}],
     Parallelepiped[{4., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 0.}, {6., 0., 0.}, {6., 1., 0.}, {5., 1., 0.}, {
      5., 0., 1.}, {6., 0., 1.}, {6., 1., 1.}, {5., 1., 1.}}],
     Parallelepiped[{5., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 1.}, {6., 0., 1.}, {6., 1., 1.}, {5., 1., 1.}, {
      5., 0., 2.}, {6., 0., 2.}, {6., 1., 2.}, {5., 1., 2.}}],
     Parallelepiped[{5., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 2.}, {6., 0., 2.}, {6., 1., 2.}, {5., 1., 2.}, {
      5., 0., 3.}, {6., 0., 3.}, {6., 1., 3.}, {5., 1., 3.}}],
     Parallelepiped[{5., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 3.}, {6., 0., 3.}, {6., 1., 3.}, {5., 1., 3.}, {
      5., 0., 4.}, {6., 0., 4.}, {6., 1., 4.}, {5., 1., 4.}}],
     Parallelepiped[{5., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 4.}, {6., 0., 4.}, {6., 1., 4.}, {5., 1., 4.}, {
      5., 0., 5.}, {6., 0., 5.}, {6., 1., 5.}, {5., 1., 5.}}],
     Parallelepiped[{5., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 5.}, {6., 0., 5.}, {6., 1., 5.}, {5., 1., 5.}, {
      5., 0., 6.}, {6., 0., 6.}, {6., 1., 6.}, {5., 1., 6.}}],
     Parallelepiped[{5., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{5., 0., 6.}, {6., 0., 6.}, {6., 1., 6.}, {5., 1., 6.}, {
      5., 0., 7.}, {6., 0., 7.}, {6., 1., 7.}, {5., 1., 7.}}],
     Parallelepiped[{5., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 0.}, {6., 1., 0.}, {6., 2., 0.}, {5., 2., 0.}, {
      5., 1., 1.}, {6., 1., 1.}, {6., 2., 1.}, {5., 2., 1.}}],
     Parallelepiped[{5., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 1.}, {6., 1., 1.}, {6., 2., 1.}, {5., 2., 1.}, {
      5., 1., 2.}, {6., 1., 2.}, {6., 2., 2.}, {5., 2., 2.}}],
     Parallelepiped[{5., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 2.}, {6., 1., 2.}, {6., 2., 2.}, {5., 2., 2.}, {
      5., 1., 3.}, {6., 1., 3.}, {6., 2., 3.}, {5., 2., 3.}}],
     Parallelepiped[{5., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 3.}, {6., 1., 3.}, {6., 2., 3.}, {5., 2., 3.}, {
      5., 1., 4.}, {6., 1., 4.}, {6., 2., 4.}, {5., 2., 4.}}],
     Parallelepiped[{5., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 4.}, {6., 1., 4.}, {6., 2., 4.}, {5., 2., 4.}, {
      5., 1., 5.}, {6., 1., 5.}, {6., 2., 5.}, {5., 2., 5.}}],
     Parallelepiped[{5., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 5.}, {6., 1., 5.}, {6., 2., 5.}, {5., 2., 5.}, {
      5., 1., 6.}, {6., 1., 6.}, {6., 2., 6.}, {5., 2., 6.}}],
     Parallelepiped[{5., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{5., 1., 6.}, {6., 1., 6.}, {6., 2., 6.}, {5., 2., 6.}, {
      5., 1., 7.}, {6., 1., 7.}, {6., 2., 7.}, {5., 2., 7.}}],
     Parallelepiped[{5., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 0.}, {6., 2., 0.}, {6., 3., 0.}, {5., 3., 0.}, {
      5., 2., 1.}, {6., 2., 1.}, {6., 3., 1.}, {5., 3., 1.}}],
     Parallelepiped[{5., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 1.}, {6., 2., 1.}, {6., 3., 1.}, {5., 3., 1.}, {
      5., 2., 2.}, {6., 2., 2.}, {6., 3., 2.}, {5., 3., 2.}}],
     Parallelepiped[{5., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 2.}, {6., 2., 2.}, {6., 3., 2.}, {5., 3., 2.}, {
      5., 2., 3.}, {6., 2., 3.}, {6., 3., 3.}, {5., 3., 3.}}],
     Parallelepiped[{5., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 3.}, {6., 2., 3.}, {6., 3., 3.}, {5., 3., 3.}, {
      5., 2., 4.}, {6., 2., 4.}, {6., 3., 4.}, {5., 3., 4.}}],
     Parallelepiped[{5., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 4.}, {6., 2., 4.}, {6., 3., 4.}, {5., 3., 4.}, {
      5., 2., 5.}, {6., 2., 5.}, {6., 3., 5.}, {5., 3., 5.}}],
     Parallelepiped[{5., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 5.}, {6., 2., 5.}, {6., 3., 5.}, {5., 3., 5.}, {
      5., 2., 6.}, {6., 2., 6.}, {6., 3., 6.}, {5., 3., 6.}}],
     Parallelepiped[{5., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 2., 6.}, {6., 2., 6.}, {6., 3., 6.}, {5., 3., 6.}, {
      5., 2., 7.}, {6., 2., 7.}, {6., 3., 7.}, {5., 3., 7.}}],
     Parallelepiped[{5., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 0.}, {6., 3., 0.}, {6., 4., 0.}, {5., 4., 0.}, {
      5., 3., 1.}, {6., 3., 1.}, {6., 4., 1.}, {5., 4., 1.}}],
     Parallelepiped[{5., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 1.}, {6., 3., 1.}, {6., 4., 1.}, {5., 4., 1.}, {
      5., 3., 2.}, {6., 3., 2.}, {6., 4., 2.}, {5., 4., 2.}}],
     Parallelepiped[{5., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 2.}, {6., 3., 2.}, {6., 4., 2.}, {5., 4., 2.}, {
      5., 3., 3.}, {6., 3., 3.}, {6., 4., 3.}, {5., 4., 3.}}],
     Parallelepiped[{5., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 3.}, {6., 3., 3.}, {6., 4., 3.}, {5., 4., 3.}, {
      5., 3., 4.}, {6., 3., 4.}, {6., 4., 4.}, {5., 4., 4.}}],
     Parallelepiped[{5., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 4.}, {6., 3., 4.}, {6., 4., 4.}, {5., 4., 4.}, {
      5., 3., 5.}, {6., 3., 5.}, {6., 4., 5.}, {5., 4., 5.}}],
     Parallelepiped[{5., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 5.}, {6., 3., 5.}, {6., 4., 5.}, {5., 4., 5.}, {
      5., 3., 6.}, {6., 3., 6.}, {6., 4., 6.}, {5., 4., 6.}}],
     Parallelepiped[{5., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 3., 6.}, {6., 3., 6.}, {6., 4., 6.}, {5., 4., 6.}, {
      5., 3., 7.}, {6., 3., 7.}, {6., 4., 7.}, {5., 4., 7.}}],
     Parallelepiped[{5., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 0.}, {6., 4., 0.}, {6., 5., 0.}, {5., 5., 0.}, {
      5., 4., 1.}, {6., 4., 1.}, {6., 5., 1.}, {5., 5., 1.}}],
     Parallelepiped[{5., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 1.}, {6., 4., 1.}, {6., 5., 1.}, {5., 5., 1.}, {
      5., 4., 2.}, {6., 4., 2.}, {6., 5., 2.}, {5., 5., 2.}}],
     Parallelepiped[{5., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 2.}, {6., 4., 2.}, {6., 5., 2.}, {5., 5., 2.}, {
      5., 4., 3.}, {6., 4., 3.}, {6., 5., 3.}, {5., 5., 3.}}],
     Parallelepiped[{5., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 3.}, {6., 4., 3.}, {6., 5., 3.}, {5., 5., 3.}, {
      5., 4., 4.}, {6., 4., 4.}, {6., 5., 4.}, {5., 5., 4.}}],
     Parallelepiped[{5., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 4.}, {6., 4., 4.}, {6., 5., 4.}, {5., 5., 4.}, {
      5., 4., 5.}, {6., 4., 5.}, {6., 5., 5.}, {5., 5., 5.}}],
     Parallelepiped[{5., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 5.}, {6., 4., 5.}, {6., 5., 5.}, {5., 5., 5.}, {
      5., 4., 6.}, {6., 4., 6.}, {6., 5., 6.}, {5., 5., 6.}}],
     Parallelepiped[{5., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 4., 6.}, {6., 4., 6.}, {6., 5., 6.}, {5., 5., 6.}, {
      5., 4., 7.}, {6., 4., 7.}, {6., 5., 7.}, {5., 5., 7.}}],
     Parallelepiped[{5., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 0.}, {6., 5., 0.}, {6., 6., 0.}, {5., 6., 0.}, {
      5., 5., 1.}, {6., 5., 1.}, {6., 6., 1.}, {5., 6., 1.}}],
     Parallelepiped[{5., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 1.}, {6., 5., 1.}, {6., 6., 1.}, {5., 6., 1.}, {
      5., 5., 2.}, {6., 5., 2.}, {6., 6., 2.}, {5., 6., 2.}}],
     Parallelepiped[{5., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 2.}, {6., 5., 2.}, {6., 6., 2.}, {5., 6., 2.}, {
      5., 5., 3.}, {6., 5., 3.}, {6., 6., 3.}, {5., 6., 3.}}],
     Parallelepiped[{5., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 3.}, {6., 5., 3.}, {6., 6., 3.}, {5., 6., 3.}, {
      5., 5., 4.}, {6., 5., 4.}, {6., 6., 4.}, {5., 6., 4.}}],
     Parallelepiped[{5., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 4.}, {6., 5., 4.}, {6., 6., 4.}, {5., 6., 4.}, {
      5., 5., 5.}, {6., 5., 5.}, {6., 6., 5.}, {5., 6., 5.}}],
     Parallelepiped[{5., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 5.}, {6., 5., 5.}, {6., 6., 5.}, {5., 6., 5.}, {
      5., 5., 6.}, {6., 5., 6.}, {6., 6., 6.}, {5., 6., 6.}}],
     Parallelepiped[{5., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 5., 6.}, {6., 5., 6.}, {6., 6., 6.}, {5., 6., 6.}, {
      5., 5., 7.}, {6., 5., 7.}, {6., 6., 7.}, {5., 6., 7.}}],
     Parallelepiped[{5., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 0.}, {6., 6., 0.}, {6., 7., 0.}, {5., 7., 0.}, {
      5., 6., 1.}, {6., 6., 1.}, {6., 7., 1.}, {5., 7., 1.}}],
     Parallelepiped[{5., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 1.}, {6., 6., 1.}, {6., 7., 1.}, {5., 7., 1.}, {
      5., 6., 2.}, {6., 6., 2.}, {6., 7., 2.}, {5., 7., 2.}}],
     Parallelepiped[{5., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 2.}, {6., 6., 2.}, {6., 7., 2.}, {5., 7., 2.}, {
      5., 6., 3.}, {6., 6., 3.}, {6., 7., 3.}, {5., 7., 3.}}],
     Parallelepiped[{5., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 3.}, {6., 6., 3.}, {6., 7., 3.}, {5., 7., 3.}, {
      5., 6., 4.}, {6., 6., 4.}, {6., 7., 4.}, {5., 7., 4.}}],
     Parallelepiped[{5., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 4.}, {6., 6., 4.}, {6., 7., 4.}, {5., 7., 4.}, {
      5., 6., 5.}, {6., 6., 5.}, {6., 7., 5.}, {5., 7., 5.}}],
     Parallelepiped[{5., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 5.}, {6., 6., 5.}, {6., 7., 5.}, {5., 7., 5.}, {
      5., 6., 6.}, {6., 6., 6.}, {6., 7., 6.}, {5., 7., 6.}}],
     Parallelepiped[{5., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{5., 6., 6.}, {6., 6., 6.}, {6., 7., 6.}, {5., 7., 6.}, {
      5., 6., 7.}, {6., 6., 7.}, {6., 7., 7.}, {5., 7., 7.}}],
     Parallelepiped[{5., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 0.}, {7., 0., 0.}, {7., 1., 0.}, {6., 1., 0.}, {
      6., 0., 1.}, {7., 0., 1.}, {7., 1., 1.}, {6., 1., 1.}}],
     Parallelepiped[{6., 0., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 1.}, {7., 0., 1.}, {7., 1., 1.}, {6., 1., 1.}, {
      6., 0., 2.}, {7., 0., 2.}, {7., 1., 2.}, {6., 1., 2.}}],
     Parallelepiped[{6., 0., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 2.}, {7., 0., 2.}, {7., 1., 2.}, {6., 1., 2.}, {
      6., 0., 3.}, {7., 0., 3.}, {7., 1., 3.}, {6., 1., 3.}}],
     Parallelepiped[{6., 0., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 3.}, {7., 0., 3.}, {7., 1., 3.}, {6., 1., 3.}, {
      6., 0., 4.}, {7., 0., 4.}, {7., 1., 4.}, {6., 1., 4.}}],
     Parallelepiped[{6., 0., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 4.}, {7., 0., 4.}, {7., 1., 4.}, {6., 1., 4.}, {
      6., 0., 5.}, {7., 0., 5.}, {7., 1., 5.}, {6., 1., 5.}}],
     Parallelepiped[{6., 0., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 5.}, {7., 0., 5.}, {7., 1., 5.}, {6., 1., 5.}, {
      6., 0., 6.}, {7., 0., 6.}, {7., 1., 6.}, {6., 1., 6.}}],
     Parallelepiped[{6., 0., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 0, 1], 
    InterpretationBox[
     HexahedronBox[{{6., 0., 6.}, {7., 0., 6.}, {7., 1., 6.}, {6., 1., 6.}, {
      6., 0., 7.}, {7., 0., 7.}, {7., 1., 7.}, {6., 1., 7.}}],
     Parallelepiped[{6., 0., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 0.}, {7., 1., 0.}, {7., 2., 0.}, {6., 2., 0.}, {
      6., 1., 1.}, {7., 1., 1.}, {7., 2., 1.}, {6., 2., 1.}}],
     Parallelepiped[{6., 1., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 1.}, {7., 1., 1.}, {7., 2., 1.}, {6., 2., 1.}, {
      6., 1., 2.}, {7., 1., 2.}, {7., 2., 2.}, {6., 2., 2.}}],
     Parallelepiped[{6., 1., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 2.}, {7., 1., 2.}, {7., 2., 2.}, {6., 2., 2.}, {
      6., 1., 3.}, {7., 1., 3.}, {7., 2., 3.}, {6., 2., 3.}}],
     Parallelepiped[{6., 1., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 3.}, {7., 1., 3.}, {7., 2., 3.}, {6., 2., 3.}, {
      6., 1., 4.}, {7., 1., 4.}, {7., 2., 4.}, {6., 2., 4.}}],
     Parallelepiped[{6., 1., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 4.}, {7., 1., 4.}, {7., 2., 4.}, {6., 2., 4.}, {
      6., 1., 5.}, {7., 1., 5.}, {7., 2., 5.}, {6., 2., 5.}}],
     Parallelepiped[{6., 1., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 5.}, {7., 1., 5.}, {7., 2., 5.}, {6., 2., 5.}, {
      6., 1., 6.}, {7., 1., 6.}, {7., 2., 6.}, {6., 2., 6.}}],
     Parallelepiped[{6., 1., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 1., 6.}, {7., 1., 6.}, {7., 2., 6.}, {6., 2., 6.}, {
      6., 1., 7.}, {7., 1., 7.}, {7., 2., 7.}, {6., 2., 7.}}],
     Parallelepiped[{6., 1., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 0.}, {7., 2., 0.}, {7., 3., 0.}, {6., 3., 0.}, {
      6., 2., 1.}, {7., 2., 1.}, {7., 3., 1.}, {6., 3., 1.}}],
     Parallelepiped[{6., 2., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 1.}, {7., 2., 1.}, {7., 3., 1.}, {6., 3., 1.}, {
      6., 2., 2.}, {7., 2., 2.}, {7., 3., 2.}, {6., 3., 2.}}],
     Parallelepiped[{6., 2., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 2.}, {7., 2., 2.}, {7., 3., 2.}, {6., 3., 2.}, {
      6., 2., 3.}, {7., 2., 3.}, {7., 3., 3.}, {6., 3., 3.}}],
     Parallelepiped[{6., 2., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 3.}, {7., 2., 3.}, {7., 3., 3.}, {6., 3., 3.}, {
      6., 2., 4.}, {7., 2., 4.}, {7., 3., 4.}, {6., 3., 4.}}],
     Parallelepiped[{6., 2., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 4.}, {7., 2., 4.}, {7., 3., 4.}, {6., 3., 4.}, {
      6., 2., 5.}, {7., 2., 5.}, {7., 3., 5.}, {6., 3., 5.}}],
     Parallelepiped[{6., 2., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 5.}, {7., 2., 5.}, {7., 3., 5.}, {6., 3., 5.}, {
      6., 2., 6.}, {7., 2., 6.}, {7., 3., 6.}, {6., 3., 6.}}],
     Parallelepiped[{6., 2., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 2., 6.}, {7., 2., 6.}, {7., 3., 6.}, {6., 3., 6.}, {
      6., 2., 7.}, {7., 2., 7.}, {7., 3., 7.}, {6., 3., 7.}}],
     Parallelepiped[{6., 2., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 0.}, {7., 3., 0.}, {7., 4., 0.}, {6., 4., 0.}, {
      6., 3., 1.}, {7., 3., 1.}, {7., 4., 1.}, {6., 4., 1.}}],
     Parallelepiped[{6., 3., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 1.}, {7., 3., 1.}, {7., 4., 1.}, {6., 4., 1.}, {
      6., 3., 2.}, {7., 3., 2.}, {7., 4., 2.}, {6., 4., 2.}}],
     Parallelepiped[{6., 3., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 2.}, {7., 3., 2.}, {7., 4., 2.}, {6., 4., 2.}, {
      6., 3., 3.}, {7., 3., 3.}, {7., 4., 3.}, {6., 4., 3.}}],
     Parallelepiped[{6., 3., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 3.}, {7., 3., 3.}, {7., 4., 3.}, {6., 4., 3.}, {
      6., 3., 4.}, {7., 3., 4.}, {7., 4., 4.}, {6., 4., 4.}}],
     Parallelepiped[{6., 3., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 4.}, {7., 3., 4.}, {7., 4., 4.}, {6., 4., 4.}, {
      6., 3., 5.}, {7., 3., 5.}, {7., 4., 5.}, {6., 4., 5.}}],
     Parallelepiped[{6., 3., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 5.}, {7., 3., 5.}, {7., 4., 5.}, {6., 4., 5.}, {
      6., 3., 6.}, {7., 3., 6.}, {7., 4., 6.}, {6., 4., 6.}}],
     Parallelepiped[{6., 3., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 3., 6.}, {7., 3., 6.}, {7., 4., 6.}, {6., 4., 6.}, {
      6., 3., 7.}, {7., 3., 7.}, {7., 4., 7.}, {6., 4., 7.}}],
     Parallelepiped[{6., 3., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 0.}, {7., 4., 0.}, {7., 5., 0.}, {6., 5., 0.}, {
      6., 4., 1.}, {7., 4., 1.}, {7., 5., 1.}, {6., 5., 1.}}],
     Parallelepiped[{6., 4., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 1.}, {7., 4., 1.}, {7., 5., 1.}, {6., 5., 1.}, {
      6., 4., 2.}, {7., 4., 2.}, {7., 5., 2.}, {6., 5., 2.}}],
     Parallelepiped[{6., 4., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 2.}, {7., 4., 2.}, {7., 5., 2.}, {6., 5., 2.}, {
      6., 4., 3.}, {7., 4., 3.}, {7., 5., 3.}, {6., 5., 3.}}],
     Parallelepiped[{6., 4., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 3.}, {7., 4., 3.}, {7., 5., 3.}, {6., 5., 3.}, {
      6., 4., 4.}, {7., 4., 4.}, {7., 5., 4.}, {6., 5., 4.}}],
     Parallelepiped[{6., 4., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 4.}, {7., 4., 4.}, {7., 5., 4.}, {6., 5., 4.}, {
      6., 4., 5.}, {7., 4., 5.}, {7., 5., 5.}, {6., 5., 5.}}],
     Parallelepiped[{6., 4., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 5.}, {7., 4., 5.}, {7., 5., 5.}, {6., 5., 5.}, {
      6., 4., 6.}, {7., 4., 6.}, {7., 5., 6.}, {6., 5., 6.}}],
     Parallelepiped[{6., 4., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 4., 6.}, {7., 4., 6.}, {7., 5., 6.}, {6., 5., 6.}, {
      6., 4., 7.}, {7., 4., 7.}, {7., 5., 7.}, {6., 5., 7.}}],
     Parallelepiped[{6., 4., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 0.}, {7., 5., 0.}, {7., 6., 0.}, {6., 6., 0.}, {
      6., 5., 1.}, {7., 5., 1.}, {7., 6., 1.}, {6., 6., 1.}}],
     Parallelepiped[{6., 5., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 1.}, {7., 5., 1.}, {7., 6., 1.}, {6., 6., 1.}, {
      6., 5., 2.}, {7., 5., 2.}, {7., 6., 2.}, {6., 6., 2.}}],
     Parallelepiped[{6., 5., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 2.}, {7., 5., 2.}, {7., 6., 2.}, {6., 6., 2.}, {
      6., 5., 3.}, {7., 5., 3.}, {7., 6., 3.}, {6., 6., 3.}}],
     Parallelepiped[{6., 5., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 3.}, {7., 5., 3.}, {7., 6., 3.}, {6., 6., 3.}, {
      6., 5., 4.}, {7., 5., 4.}, {7., 6., 4.}, {6., 6., 4.}}],
     Parallelepiped[{6., 5., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 4.}, {7., 5., 4.}, {7., 6., 4.}, {6., 6., 4.}, {
      6., 5., 5.}, {7., 5., 5.}, {7., 6., 5.}, {6., 6., 5.}}],
     Parallelepiped[{6., 5., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 5.}, {7., 5., 5.}, {7., 6., 5.}, {6., 6., 5.}, {
      6., 5., 6.}, {7., 5., 6.}, {7., 6., 6.}, {6., 6., 6.}}],
     Parallelepiped[{6., 5., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 5., 6.}, {7., 5., 6.}, {7., 6., 6.}, {6., 6., 6.}, {
      6., 5., 7.}, {7., 5., 7.}, {7., 6., 7.}, {6., 6., 7.}}],
     Parallelepiped[{6., 5., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 0.}, {7., 6., 0.}, {7., 7., 0.}, {6., 7., 0.}, {
      6., 6., 1.}, {7., 6., 1.}, {7., 7., 1.}, {6., 7., 1.}}],
     Parallelepiped[{6., 6., 0.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 0, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 1.}, {7., 6., 1.}, {7., 7., 1.}, {6., 7., 1.}, {
      6., 6., 2.}, {7., 6., 2.}, {7., 7., 2.}, {6., 7., 2.}}],
     Parallelepiped[{6., 6., 1.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 2.}, {7., 6., 2.}, {7., 7., 2.}, {6., 7., 2.}, {
      6., 6., 3.}, {7., 6., 3.}, {7., 7., 3.}, {6., 7., 3.}}],
     Parallelepiped[{6., 6., 2.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[0, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 3.}, {7., 6., 3.}, {7., 7., 3.}, {6., 7., 3.}, {
      6., 6., 4.}, {7., 6., 4.}, {7., 7., 4.}, {6., 7., 4.}}],
     Parallelepiped[{6., 6., 3.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 4.}, {7., 6., 4.}, {7., 7., 4.}, {6., 7., 4.}, {
      6., 6., 5.}, {7., 6., 5.}, {7., 7., 5.}, {6., 7., 5.}}],
     Parallelepiped[{6., 6., 4.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 5.}, {7., 6., 5.}, {7., 7., 5.}, {6., 7., 5.}, {
      6., 6., 6.}, {7., 6., 6.}, {7., 7., 6.}, {6., 7., 6.}}],
     Parallelepiped[{6., 6., 5.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}, 
   {RGBColor[1, 1, 0], 
    InterpretationBox[
     HexahedronBox[{{6., 6., 6.}, {7., 6., 6.}, {7., 7., 6.}, {6., 7., 6.}, {
      6., 6., 7.}, {7., 6., 7.}, {7., 7., 7.}, {6., 7., 7.}}],
     Parallelepiped[{6., 6., 6.}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 
      1.}}]]}},
  Boxed->False]], "Output",
 CellChangeTimes->{3.780679858874461*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"92b58939-fc6e-41f2-b74e-7c8f5abd5d83"]
}, Open  ]],

Cell[TextData[{
 "If we are happy with how our first domain turned out, we can use ",
 ButtonBox["SynthesiseStructure",
  BaseStyle->"Link",
  ButtonData->"paclet:MaXrd/ref/SynthesiseStructure"],
 " to create a crystal structure with that pattern. The various domains are \
represented by an integer, so we merely have to substitute the numbers with \
the desired crystal labels:"
}], "Text",
 CellChangeTimes->{{3.780678092441534*^9, 3.7806781351760798`*^9}, {
  3.780678179470166*^9, 
  3.780678271134038*^9}},ExpressionUUID->"6f1bd701-bc99-4b11-85b8-\
b74fe7c85800"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blockList", "=", 
  RowBox[{"domains", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "\"\<BlockA\>\""}], ",", 
     RowBox[{"2", "\[Rule]", "\"\<BlockB\>\""}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.780678272490127*^9, 3.7806782874774113`*^9}, {
  3.780678318021649*^9, 3.7806783259007177`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"b855673a-e16a-4cb9-b602-e1089182316c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", ",", "\<\"BlockB\"\>", 
   ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", ",", "\<\"BlockA\"\>", 
   ",", "\<\"BlockA\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7806798616479397`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"0701a5bb-a4fd-4cba-b9f7-9dd3958ba87a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SynthesiseStructure", "[", 
   RowBox[{"blockList", ",", "size", ",", "\"\<SynthesisedStructure\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CrystalPlot", "[", "\"\<SynthesisedStructure\>\"", "]"}]}], "Input",\

 CellChangeTimes->{{3.78067834182484*^9, 3.780678370075695*^9}, {
  3.780678410836754*^9, 3.780678420075116*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"dd1c38a8-d626-42f5-a9ca-d20b06999060"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {16.3249, 0., 0.}}]]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[Line3DBox[{{0, 0, 0}, {-8.16245, 14.13777811424058, 0.}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 12.4163}}]]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058,
      0.}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 0.}, {8.16245, 14.13777811424058, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{16.3249, 0., 0.}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 0.}, {-8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{8.16245, 14.13777811424058, 0.}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 12.4163}, {16.3249, 0., 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{0., 0., 12.4163}, {-8.16245, 14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{-8.16245, 14.13777811424058, 12.4163}, {8.16245, 
     14.13777811424058, 12.4163}}]}, 
   {GrayLevel[0], 
    Line3DBox[{{16.3249, 0., 12.4163}, {8.16245, 14.13777811424058, 
     12.4163}}]}, 
   {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[CompressedData["
1:eJxl3Ht0ldWdxvEIrgpFKCo4OEBGEUMKVhAQrMLwGm4GA5KEGCgUkRHtsoCM
yC0gXrAKeAG19UICAl5AsIVQodACPa2iCHQGcYxcpsAoKCBVLjqjgDg5nufZ
Wfnurv71W+96s/fvtznn87xv4mUj7y4aVScrK+ueullZ1f/Pmn/pH85d/9VF
SYOP6/9q1a5Wyf46469YWNkkGXZyWu7Gr+qmpp+9s2Gf6e1CfV//4/vXVdfL
bnu613V3NQn1w/nTfjZt+cXJHYObrB1zQatk+RPDH2ry5LEef6xXteSHA9om
HQqWLFu568JQbztpTZey6utfHFS54IV6u3q4PnHh1Mevu61+uP4P+YvvWPZ1
i6Tn6hfaVwy8Ilzv+oGta1qWV9f9c13fm1ln4nU+918bV498MyfRflPer+va
b+L9uj70+/pFSZb+t+7Mo1/uebGV6nVT5bc/uKlt/gWJ697XB1UVk75adDnr
KdcLXv1hnys+qKd6Tri/67p/4vu7fm+mP6l/WvP7Fdlzu4b+qz+p7W9+NP4X
H10f6h9n+pM6Nqz47PvdO4X6fs1x07Fr88+06xrmMk/nYcFzO5+r3NUx1H0e
3r2oeMl/NvpJqC9QP329+z9Y6/f1rv+35uKf6/qhzPkJ63T/dX7Cfl13P71f
18+c+qJXl+r+XD7r57tn97ky9N/9WdtyTvbcCR1DXetMnW7/bW7yZddQz3rj
g9Thpe1C3f3/OnP/xPd3/Uqtx/d3fdaIF26cujwnNaj7vzdatSsv9H/nxbPv
OvBex9TVb808VlWnd6i3Wfz8/3xcXU81/svqx1cmoX5Qc1y+u9OehUvyQv+n
6Tw0+92Mh6ZOT0Ld+504YGfy22XdQv1P6qevd/+9fl/v+lHNxT/X9Vvnr91x
pLo/Xqf7/0yy9NXygdeE/bp+jvrp/breLnP+Na9uof8fqj+tj+/ddFdBEup5
2lefU023/rVBz1DvcnFupwZnrwl19z9zbi8K93fd6/H9XS87Wv//iu/vlJr/
Yr1Ngz7LD/0/v7jvhrLT16XKci5dMqVJQaj/fG9J53S9/vjBo9v/tW+o52qO
X3bb+lTPdfmh/4/pPIxo3Pyn2XP7hrrPw8Oz6pZ+c0fvUP+1+unr3f86Wr+v
d32k5uKf6/onsy9Zn+6P1+n+vztt1DdXl3UP+3Xd/fR+Xd82qdnYdH9257x9
+aHOvUP/G6o/Y4onTms4vG80xznDfvvgqJb9Qn100cFfLWrzr6Hu/v/zibXr
GlSfT9/fda/H93d9Ve47+UeWXp86mbV9w9TpA0P/F/WtM3Pm0zekbntrz1WN
nikM9X5PzOqZrhd98EWrHe8PCPXhmuOCm69uPX7UwNB/n4el96z6IrVoQKg3
0n63fTavYcXkglDfrH76evf/Wq3f13Mu/rmut3inqtHi6v54ne7/A8MuyDnw
Xl7Yr+vup/freuacXK/zXxD67/6sWd2w08q7B4T6j7Sv0be2avHwcwNDvahv
4dHy3J6h7v5nPmeuCfd33evx/cP3V8e8AcnhG1LNVjW/pP95g0L/1x8cUVm8
pHfqkQltZu9rXhLqo9odGp2u/638zdF/PFEUzfHNrPvu7/V5cej/Sp2HKUda
v1+5qyjUF2u/DdpcMvJfNhWG+v3qp693/8dq/b6ec/HPdf21c7Z0qKjuj9fp
/pefuvvmFZ/0Cft1vVD99H5dbzH53frp/qyZULb54tcLQ//dn+8e23Hva6mi
UPe+nmo8dlLJpYNCfczBFU3v7N431N3/Kcdveahj9fn0/V33enx/1+dsXzip
wdneqW7/due92XNLQ/8/nPHn3dnr81PLcsYfXPny4FB/4N0+z6brJwp+tPmx
qbdEc/y0cvPuppNKQ//H6zzMLx931YyRt4T6Bu23/c7bNxzrX1LjE/XT17v/
Pp++nnPxz3X9rRdzf5buj9fp/q95/j8ml53uF/Yb/n2pn96v612//3fdW59X
JTWfe+pP6+7Z28vybwn1jdrX6r+s25HzWmmoz5zRqEfHoptC3f3PfC/khfuH
f19aj+/vur4vIs/r+yKh50dkvi8Sel6fS5Hn9X0ReV6fz5Hn9fkZeV7fF5Hn
9TkceV7fp5HnZ2e+TxN6Xt+nkef1eRV53v2ZB897X/S88wg9n3Hj9ZHnvZ55
8Px65SN6Xh5L6Pkjyln0vDyW0PPyWOR5+Tah52eqn/S8vscjz3su9Ly8mtDz
k5Xv6Ple6ic9Lw8k9LxzFj3vfdHzI5RH6PktGc9Envd86fmFykf0vHMEPb9T
OYueP6A50vPOy/R8rvZLz49TP+l5OTmh5z/SXOj5Q8pl9HyF8h09737S8/J2
Qs+7P/S890XPqx55Pld5mZ73euh59SfyfKIcQc+rP5Hn1Z/I8+pPQs9rPZHn
dX4izzsv0/M6Pwk9r/MTed55mZ5vrX7S88qzkeeds+h574ued16m548pL9Pz
ni89r8/zyPNVyhH0vHMWPa/nQpHnfR7o+T7aLz3vftLzHbR+et7PMeh5fc9G
nne+o+fP/j7TT3q+ba28XON594eev1H7ouedR+j5EbXyco3nvR56fqryET3v
vEzPO2fR854jPa/vo8jzu7Rfet7PH+j5c3U+6XnPhZ53LqPntyjf0fPXqJ/0
/FblZXre/aHnd2tf9LzzCD3fQnmZnvd66PlK5SN63nmQnnfOouc9R3o+PD+B
550r6fnw/AGe9/mk5z0Xet65jJ53Xqbnf6l+0vPnKC/T8+4PPd9Y+6LnnUfo
+V7Ky/S810PPa/2R58dkro88rz5EnlcOijyvfBp5Xnkw8rzyWuR55bXI88p9
ked1riLP63xGnlfOjTyfcWle5Hn3h573vuh5Pc+JPJ/xf+/I8zoPkee3Kh/R
812VI+h55yx63nOk530e6Hmdn8jzK9RPet79pOc9F3reuYye1+d/5Hn9e488
Pznz/CHyvHMWPa/nSJHnnafo+eaZ5yeR5/V5G3n+N8pH9LzzID2v56tJ9Hxe
c6TnnZfpeX0+R56fon7S887L9LyeP0ee/7FyGT3vvEzP6/s08nye8jI97/7Q
854jPe98R887L9Pzzpv0/EblI3peHkvoeb2/SOj54ZojPe+8TM/LPwk9/4j6
Sc97/fS83u9Env9EuYyed16m5+W6hJ5vprxMz/t5Aj3vvEzPO0/R887L9Lzz
Jj3vvEzPD1SOoOf9XpKel6sTet7PT+j5S7Vfet55mZ5XHkzoeb9fpue1zoSe
d76j58epn/T84Fp5ucbz7g89733R884j9HztvFwQ5WV63vmInndepueds+h5
z5Ge93mg59WfyPPuJz2v/iT0vOdCzzuX0fPr/T4UnlefI89nnc7kZXre/aHn
vS963nmEnndepuedl+l55yN63nmQnnfOouc9R3o+PD+B550r6Xn3k573+aTn
PRd63rmMnndepufPKJ/S81cqL9Pz7g89733R884j9LzzMj3v5yH0vN4vRJ7X
8/zI83pPEXl+X/dHZ3Qsuiny/PYuP1ncu/HNkecfzbxfiDz/2tjvFlZd2C/y
/MnLss89sr1/5Pl5d77y58PVdXpe730izz+ZeX8UP5/PvB+JPJ9xTr/I8+4P
Pe990fPOI/R8xpMDIs/rfU3k+QrlI3pe+S7yvHMWPe850vNv6DzQ894vPe9+
0vPuJz1/v+ZCzzuX0fN6Pxt5Xu+tIs+feOPQM+n+0PPOWZHntS963nmEni98
45Fh6fNJz+t9aOR55yN63nmQnm+pnEXPL9Uc6Xm9f4w8P1D7pefvUT/pea+f
nr9dc6Hnncvoeedlet79pOedl+l594ee9xzpeedlet55mZ73euh552V6Xp+3
kec/Vc6i55trjvT8dJ0Het55mZ53XqbnvX56/kbNhZ6/VbmMnndepuf1HCny
vPMyPe/nCfS88zI977xMzzsv0/POm/S83y/T8/JMQs/7/TI97+ce9Lx+fyby
fGftl573+2V63nmfnh+mudDzfo9Jz/t9KD2v57SR52vn5QJ6L6HnvS963nmE
nq+dl2s87/nS885H9LzzMj3vnEXPe470/NM6D/S8PJbQ8+4nPS+PRZ7P0Vzo
eecyej68D4XnnZfpeedlet79oee9L3reeYSed16m5/08hJ53PqLnnQfpeecs
et5zpOfX+vkJPO9cSc+7n/S8zyc9v19zoeedy+h55zt63nmZnndepufdH3re
+6LnnUfoeedlej68X4bnJx7ZNGrm04WR5xdfNuYX395xc+T503sOvp6u0/MN
urf65YENhZHnZ/x0wql/VBRHnt+37+CN6evp+XEle6d0yS6MPN90xZh2ybdF
kecPFV5dP12n5/fUeeje3ScGRp7fdP7wLWk/0/Pnjdj4bPp6ej7znLww8rz7
Q897X/S88wg9n3F4ceT5H2g99LzzET3/iHIEPb9fOYue9xzp+Qk6D/S890vP
v6V+0vPuJz2/W3Oh553L6Pllynf0/An1k55vc/yVT9L9oeeds+j5l7Wv6Pm8
8gg93+vrRaXp80nPH9d66HnnZXreOYKef1s5i573HOl5nwd6Xr+PF3ne/aTn
v9T66XnPhZ53Xqbn5yrf0fPuJz1/vvIyPe/+0POztC963nmZnh+rvEzPV2k9
9LzzET3vHEHPL1POouedl+l552V63vul552X6Xn3k56frrnQ885l9LzzMj3v
ftLzx5WX6Xk/T6Dnx2pf9LzzCD1frLxMzztv0vP6/efI884R9Hy2chY97znS
8z4P9LzPAz3vftLz7ic977nQ8/nKZfS8/l4g8rz7Sc9X1crLNZ7X72NEnvcc
6XnnEXr+2lp5ucbzfr9Mzzsf0fN+7xZ5XjmLnvcc6XmfB3re54Gedz/pefeT
nvdc6HnnMnp+mt+HwvN+/kDPT1Repuf9PIGe9xzpeecRer6l8jI97/nS885H
9Lzfu9HztytnRZ7XHOl5nwd63ueBnnc/6Xn3k573XOh55zJ6/nHlO3re+ZSe
T5SX6XnnZXrec6TnnUfo+XOVl+l5z5eef2pm6znFS0oizx+96jd/z99cHHn+
ksff+y5dp+dz9jzw6xU7SiLPL/jw/cvXVZZGnj91X6970tfT84+d7PbSOZ1K
Is936L9tUIMLSyPP1z02p2O6Ts//78L98185ryTy/PSXn2hUUe1ner7V2Rap
9PX0fOZ7pCTyvPtDz3tf9HwT5RF6PvN3K6WR5y/Teuh55yN6fq9yBD3vnEXP
N9Mc6fm5Og/0vPdLz9+nftLz7ic9/5XmEv09rHIZPe98R8+7n/T8756tbPF5
dX/oeecsev4f2hc97zxCz494NuvB9Pmk570eet55mZ53PqLnzyhn0fOeIz3v
80DPe7/R78+rn/S88zI977nQ887L9Pzbynf0vPtJzzsv0/PuDz2/X/ui552X
6XnnZXreeZmedz6i550H6XnnLHr+lOZIzzsv0/PeLz3vvEzPu5/0vPMyPe9c
Rs8739Hz7ic977xMzzs/0vPOy9HzeeURet55mZ53fqfnVysfRZ5XjqDnNyln
0fOeIz3v80DP+zzQ8+4nPe9+0vOeCz3v95j0vP4+MfK8+0nP187LNZ7X30tG
nvcc6XnnKXq+dl6u8bzfL9Pz4X0iPO98RM87Z9HzniM97/MQeV77pefdT3re
/aTnPRd63rmMnne+o+ed7+h552V63jmLnvcc6XnnKXreeZme93zpeecjet75
iJ53zqLnPUd6Pjw/ged9Huj58PwBnnc/6XnPhZ53LqPnne/oeec7et55mZ53
zqLnPUd63nmKnndepuc9X3r+9ZwZa7PXD4k8f97fTv6g6d9LI893btvhx+k6
PX/DlH0byj4dEnl+3YSO/R9+e2jk+aYtXipPX0/Pv/pU+bZtfYdEnr/ps7bT
q3KGRp7PfvLzoek6PX9Bjx7vjGsxJPL8C3lHu6b9TM93r5h6OH199Pvz3/+7
HhJ53v2h570ver698gg9n/n8HBp5vpvWQ887H9Hz3yhH0PPOWfR8J82Rnl+u
80DPe7/0/PPqJz3vftLzjTUXet65jJ53vqPn3U96fkvnxn3S/aHnnbPo+Xra
Fz3vPELPl3W+dVn6fNLzXg8977xMzzsf0fPOy/S850jP+zzQ894vPe9+0vPO
y/S850LPOy/T887L9Lz7Sc87L9Pz7g89733R885T9LzzMj3vvEzPOx/R887L
9LxzFj3vvEzPOy/T894vPe+8TM+7n/S88zI971xGzzvf0fPuJz3vvEzPOz/S
887L9LzzCD3vvEzPez30vPMyPe98RM/7vSQ97znS8z4P9LzPQ/T78+onPe/1
R38Pq7nQ885l9LzfL9Pz7ic9Xzsv13j+JfWHnvcc6XnnKXq+dl4uiPIyPR/e
J8Lzzkf0vHMWPe850vM+D9F/30b7pefdT3re/aTnPRd63rmMng/vQ+F55zt6
3nmZnnfOouc9R3reeYqed16m5z1fet75KPK8cgQ975xFz3uO9Hx4fgLP+zzQ
8+H5AzzvftLzngs971xGzzvfRc/n1U963nmZnnfOouc9R3reeYqed16m5z1f
ev7/AYLz4WY=
     "], 0.87]}, 
   {RGBColor[0.291989, 0.437977, 0.888609], SphereBox[CompressedData["
1:eJxl3Xm0TfX/x/Grb5EGUzcZSpO4hpSxKO7uZuoS1zwVQhGKZqlQhqgUSemr
hCiNon6R8WhQiESFokR9lZKSIsTv7HVer22t5+cva73XXu+z9z6f97nnPF57
b+f3GtT2xhOysrJ+KJyV9Z/0vzuuWVH0ijvOiR5qduyZuc0vjE798fHmF9Uo
GxW67H/rH6heMmp0xawvdn9/MNf1jXPKj3zllSrR9z9VeuGeMUWS7T/tmbf4
n9dLRbvXTdr3a59K0Z4xnzSePScnmn/Z80X3Tfl5eTRyyah3D5dM6nPvOGf/
u38WSy0utGr4tVWrJPV3MtvnevvxfcdcfdH9ZaJXM9tH3t71tZnXTfl1Xc8+
78Zzl+87NdnP6XOLz8iK3s39qUX2ysW/np8cr+udvnywV7kSOcnxuj797Icv
bpg+P4fO6bK08fI1uev2nDmmwrcVo5YPrH9h4M850bGu63tUK1U2cn187ZO/
O5w+D9NTDYb++lyFpP6Y6v92bz1wY5cjuRsWlFlxVt0Skfsv3DXvmbf7XxC5
3kL93x96ZPeAvKJJvWndA5uWpPff2xefO3FkhdEVo6plX7licfr8eHvX179S
b/i21pWT12Xd+9m67vkrz9pVImqm/j5e16upv4/X9Tlr11T+z7M/L/8qr9Po
NxecEf25dWfR8lGhKK/PeW/cl14/d/Sf9t3evy5K6hM/+v2mD/admrr6+Y0D
CxbnJPUnVZ/dZkSDKr+XjWadeqjXszecl/R/rWK/j8dvqpbU3b/Zgt3tdw89
N6mnZtz6y/b0+vH2f34w+1jdhcdyU0Vf3z+8esmUt3d9ytAtmxal14lfl3Xv
Z+/8YTc+u+h4fx9vUld/H6/rb2n9t+tXo/7zH1+WzMtbWv+PlthX55NelyT1
dZqjN2eccUN2ds2krvWcKvz6kP8t7lA/mRet51SvH68vVntmraTeObOeU4Oa
nHHxwIUNkvrOzLwn23teTszMe7K96xsy8568ruufae68n54XHW+uj9f11zW/
Pl7XdT6XT93Tds/D/1c9mRedz6jNNxc0Wd+3TlJ/KvO+pN67c+mjI1bXTepP
q37CXbuaffT5Jcm8uP8tC4vUf6HzZUl9ifrvbvf47idb1EzqEzLrLdfbe14a
Z9Zbytu7PiGzbiO/rutPqe799Ly8pf4+XtevVn8fL+Yx1WzyqGI1S9ZO5qV6
Zh5Ta/7597qGFeon9c8zc52qM2nKi3tGNEjqmvfU4c3rFrd+oU4yL/o8Se36
akfBacWvTOru3/v2m0/IOqFeUp+W+bxKtve86PMw2d71RzOfe8nruv646t5P
z4s+D5Pjdd39fbyue/3f/nSNdrf9lZfMiz7PU199+vLDr3zRMJij6Ka8dV0u
y03qt6fa3bI1fX5aLtz4yoglVyfzUqXXx3X3n1szdaj9yoZLekVJ/ftKR0e+
WLNOKuuk89duvqVxUr/unG5VV592SbK952XPpD3jB6T339u7/kKJFtkDjtZJ
Xtf1LzR33k/Pyw+aXx+v61maXx+v6+N61XxnUfr89Lhic++iw65M5uXSdRNf
n59+f//4LGfLI02uSuolNg3u9k36PMw+++4jO/4+Xi+leqnhF5TMOa1RMi9j
1X9Eo/Lt9i3NS+pXqv/9ZZZ22nxrblKvdM/hHy9P77+397w88eop9/dPnx9v
73qpx+9/5kB6nfh1XT9Nde+n56Wi+vt4XX9c/X28rm/5auGy+P399fUtDa/4
b5TMy7vL+txZPr1+avQofeOK6Vcn9QoTO5ca/Xnt1M7Xeo8t27ZxUj9X9ZXr
hj2Vf8NVyby4/5K1J3+XU7ZJUl+g/kPLf7pgZqm8pL64cKMr16TXj7f3vGwd
Ontmy2l1ku1dr/Pk0adeTa8Tv67rtVT3fnpelqi/j9d19/fxul5V63/xwY+K
ZhfJT+Zlh9b/O80HDD1wuElSv01zdPPkhc+3fqNpUh90dt9xo9LnZ3K5AT0v
XJefzEuPaaPGPnJN/VTeguv3d7+zWVI/q/fir+p3uzLVvO/CkfcNb5HUf1i9
u+/huZcl23teqhd+p2y8/97e9S9bnty3UE7D5HVdn6658356Xrprfn28rv+q
+fXxuj50z5ev/5k+PweHj+z3ckGTZF4O/jKtoGz6/W1QK/XExZ2aJ/VlL9+V
FZ+H34ad/vbok69J6stV3zAjZ/m7ZzVN5sX9V02fX3TyZ9ck9cPq//Bvd+0o
tur49sdqDymzKr3/3t7zMmzi+xNapM+Pt3f9ruWX3zYnvU78uq7frrr30/Ny
VP19vK4/oP4+XteLn3F3yUfT72/d4rft3/Zas+PfA6fuPW1Wev3cveKN8n3m
5yf19mvPvLH84StS1YodbrSkd4uk3kH14jVLt9hze/NkXkqo/0mXTp+8pmrL
pP6k+n/wQO9bm1S8Jqk/lbv193j9eHvPS6kFvf7a8fGVyfauF4y+8vl4nfh1
XW+tuvfT8+L+Pl7X3d/H63p3rf8H36jRs9tjBcm8lNP6P/rqCTX/e/q1Sf1W
zdG8A63b71t2vD67c8Wt5dLnZ1CjB0/dubcgmZcWe6bfMuG9KPVI2b9eLTSm
VVJ/qfWS7H55ealVP1Q+54nmbZJ6uSJzFk3ckpts73nplXfbwHj/vb3rYz7c
sXXNnLzkdV3/SnPn/fS87NT8+nhdr6H59fEm3yerTDo2Ln1+rtpR7tz8Xi2T
eak9/7TDM9Pv78inOjVd3691Ut+/s1a7+DxMHbyhTvbpBUn9b9XPPjF1V5cq
1ybzMk/9xxW6aPvUwQVJvZb6ry84/dl5Xx/fvl7Hf749lN5/b+95mb92+M7v
0+fH27u+b2qXR/un14lf1/W9qns/PS911N/H6/o76u/jdX3my2Xnx+/vA7ed
/NqIpa2Seflk0+s9GqTXz/aJF9z8nx0FSf3DUT9/07lUXqrB5auGzm3QJql/
pHrnSW8UmjCqdTIvL6p/5VXlK102rU1SX6n+hQc/UGp/uYKkvvq+Z69+Mr1+
vL3nZdY/xWctGZKXbO/6mBX/7I3XiV/X9VGqez89L6vU38fruvv7eF3P1/p/
qfvQxdXPbJ/Myxyt/xcLr71jWvG2SX2W5ujf1+8Ynd/veP3W1YOfic/PpL2f
3vTOkPbJvNz06LGnu61rnNrdcOWlG9a0Teor9pRrVLtT09SeyXcM6fn58e3n
zJhf+KlCx7f3vLTMfaZHvP/e3vUZva4q/MzSpsnrcu68n56XsppfH6/rfTS/
Pl7X/6yVUyU+P00u2NL/7/faJPNy82+rro0/f266755h9Ru2S+pnljjYNj4P
qfMrTPhx8vF6adVrvV2t9LBz2ibzsl/935g/+Ipb/mmX1Pup/2NdNlSuevfx
7Qc++W7NeP+9vedl/6gK5ePz4+1dz9lc+tus9Drx67p+kereT89Lf/X38br+
l/r7eF1f2mTIN/H7u/Pnz96auKttMi/HitbtEq+fE6++9cMv+rdP6tsvaH5S
xcpNU91/zv5qxAdhff3QC64r26JdMi/L1L/F0L4Pnly5Q1I/qv5Vz191y0cv
Ht8+67pqLeL14+09L8ufuXXtw+ObJtu7/u2wbud/ml4nfl3Xt6nu/fS8uL+P
13X39/G6fqPW/+riK0sffb5TMi8faP1/sqDMZ4OmdEjqt2iOzu++fHv5P47X
x/b7LHVh+vwsmF7m/dGFOifz8mCV7qlKO5uniu0t+diL7Tsm9a2P3tv36ID8
VMlmyzfW7Hp8+w9yS17ao/Tx7T0vfbf9NTbef2/v+pKs6Zf02pCfvC7nzvvp
efH8+nhdv1bz6+N1vdjnY9rG5+fmjRVXfpzXIZmXgslXr++bfn8fqf7BllNW
djz+u+zNjvfH5+GHDTf/8m6FTkm9puqd+txzW+uXOiTz4v6f917ydKOHOiX1
1uo/75QKIw8fPb59m131359U6Pj2npfiFz7QOD4/3t71S07pPyX+nPHrul5D
de+n56VA/X28rpdQfx+v65t3fnVi5fT7W2Rq+dN6D+6YzEu5OZMeitdPzv73
zn3pz05J/VDqpRp7r8hPPfTfnjXbtuyc1A+r/le1Wxfs3tjx+O8v9R9c7e2t
W+Z2Tupl1b/1huxVT1fvlNTLHxp3Z7x+vL3n5eu6a/9uOzM/2d71f85elB+v
E7+u6wdV9356Xtzfx+u6+/t4XdfvncDnL858Xwp8Xt+7Ap+XMwQ+L6+IcuHz
8oqIPq/fg8n2nhf9Hgx8fnDm92BEn9fvwcDne2a+Dwc+r9+Dgc/r+3bg8yUz
37cDn9f39sDnXafPuz99Xt/nA5/X753A5/V7J/D5dpnfNYHPu06f1++dwOfd
nz5/JPN7LaLP35/5vRb4/J2Z330Rfd51+vy/6k+fd3/6vH7PRvR5/V6O6PP6
XRz4vOv0efenzx9Qf/p8N61/+rzXP31ebhD4vHMx+vy3ytfo8ycoX6PP71I+
RZ93PkWfd85Fn5dnRvR5zy99frvmlz4vj4ro899kvCjw+doZd4ro867T5+VR
EX1eHhX4vDwtos//X8bTIvq8vC7wedfp81+rP31eHhjR58/LeGNEnx+f8caI
Pl8s45YRfb6E6vR5eWZEn39M/enz8tiIPi/vjejzct2IPl9Sdfq8+9Pnq6s/
fX6r1j99XnlTRJ+Xe0f0eefL9PmU8jX6/Bzla/R5bZ9Ln1ceF9Hn1yvnos+X
0dzR5/+n+aXPd9T80uefU/5Ln89X/kufn6AcmT7vfJk+73yZPu/+9Hnny/T5
85T/0ufXKUemzztfps+7P30+R/3p8ynlv/R55XERfV55XODzU1Snz09Xf/p8
pP70eee/9Hnnv/T5CcqR6fPOl+nz7k+fd3/6/Hatf/q81z99Xus5os9rPQc+
73yNPq/1HPj8duVT9HnnU/R551z0ec174PPTNb/0eR1vRJ/frvyXPu/8lz6v
9yvweb1fgc87X6bPuz99Xustlz7fXPkvfX6scmT6vHNn+rz70+edX9Pnmyv/
pc9rHgOfd45Mn9+gOn3e/enzl6o/fX6W8l/6vPNf+rw+DwOf1+dh4PPOl+nz
7k+f1+d54PNdtf7p8yU0R/R558v0eedr9Hl9Hwt83vkyfX638in6vHMu+ryv
66DP6+914POnaX7p885/6fOR8l/6vPNl+ny26vT5R9SfPu/8mj6fo/yXPu/8
lz5fRjkyfV7fxwKf1/e9wOcnqD993vkvfX6h8l/6/DnKkenzzpfp8/q+Gvi8
82v6/DLlv/R5fZ8PfN75Mn3+UtXp84vUnz6/Tf3p876+gj6/U+ufPi9PCHze
+TJ9Xp4Q+Hxp5Wv0eefL9Plqyqfo88656PO+roM+31XzS5/fp/mlzzv/pc8f
Uf5Ln3e+TJ9PqU6fv0/96fPOr+nzWXUy+S993vkvfX6IcmT6vDwh8Hl5ReDz
zq/p886X6fPOf+nzcpXA550v0+edL9PnnV/T5ycr/6XPy6MCn3e+TJ9vpTp9
fpL60+fPUH/6vK+voM+X1fqnzztfps87X6bPO1+mzztfps87X6bP36B8ij7v
nIs+7+s66PPOl+nzl2h+6fPOl+nzdZT/0uedL9PnnS/T550v0+edL9PnnS/T
599W/kufd75Mn/9ddfq882X6vPNl+rzzZfq882X6vPNl+vxK1enzzpfp8x+r
P31+jfJf+rzzX/q882X6vPNl+rzzZfq8+9PnlQcFPq88N/B55UqBz2udBz6v
eQl8vmdmXgKf1zwGPv9yZh4Dn1feHfi8crrA55X3BT7/fibvC3y+UCZPDHx+
WSZPDHxeeWXg867T55VXBj7v/vT5JZm8NfB55bmBzyu3DXzedfq88tzA592f
Pj8gk0cHPq+8O/D5yplcO/B51+nzyrsDn3d/+vy+TF4f+LyuBwh8XtcDBD6v
6wECn9f1AIHP63qAwOe9/unzuh4p8HnPEX3euRh93vkafb6q8jX6vPMp+nwZ
5VP0ef09DXzec0ef1/Uqgc97funzn2Y+rwKf1+dV4PP6PAx83nX6vD4PA59/
Uf3p8/p7Efi8/l4EPq/rjgKfd50+r78Xgc+vUn/6fN3M37vA53W9VuDz+rsZ
+PwfqtPn3Z8+P0/96fNzM98HAp/X9WyBz/+V+V4R+Ly+hwQ+r+8bgc/r+0bg
817/9HldTxv4vOeIPu9cjD7vfJk+L6+I6PPOp+jz+j0Y+LzzZfq8544+r+st
A5/3/NLn9X0+8Hnny/R5fZ8PfN75Mn1e3+cDny+u/vT505X/0ued/9LnnSPT
53WdbeDzzq/p85PUnz6v64Ej+rx+DwY+f7dyZPq882X6vPvT5+9Tf/r8vcp/
6fOHlP/S5/V7OfB558v0ef1ejujz7k+f9/qnz+t68og+7zmizzsXo8/L2yP6
/JF6mXyNPu/7H+nz8syIPi/PjOjznjv6fI7mlz7v60Po8/KoiD7vfJk+L4+K
6PO63yGiz8ujIvr8FvWnz29S/kufd/5Ln5fXBT7vfJk+7/yaPr9I/enzzn/p
8/LMiD6frRyZPu98mT7v/Jo+/4j60+dHKf+lz1+u/Jc+L++N6PPOnenz8t6I
Pu/+9PmftP7p8we1/unzniP6vHMx+rzzZfq879+kzztfps+nlE/R550v0+c9
d/R5zy99vr3mlz4/R/kvfb658l/6vPNl+vxY1enzU9SfPu/+9PlI+S99XnlQ
RJ//VDkyfd75Mn1eeVNEn3d/+vwI5b/0eee/9PkRypHp886d6fPOr+nz7k+f
H6H8lz6/UPkvfd75Mn1+uur0+ayZmf70eefL9PkRWv/0ea3nwOc9R/R552L0
eefL9Hnfv0yfd75Mn9e8Bz7vfJk+77mjz3t+6fPTNb/0eb1fy+nzer8i+rzz
Zfq83q/A5/V+LafPuz99PlL+S5/Xegt8Xus5os87X6bPaz3n0ufdnz7fWPkv
fd75L31e8x74vHNn+rzzZfq8+9Pn9XkY+Lw+rwKfd75Mn9fnYeDz+jwMfN75
Mn3+B61/+vx1Wv/0ec8Rfd65GH3e+TJ93vdv0uedL9Pnf1I+RZ93vkyf99zR
5z2/9PmTlS/T5/V9I/B558v0eefL9Hnny/T5x9SfPu/+9PlLlf/S53U9XuDz
zpfp886X6fPOl+nz7h9cP6/8lz7vfJk+f7ZyZPq872umzztfps+7P30+pfw3
uH5e+S993vkyfd75Mn1+ofrT533/Mn3+222DulSt1jLw+Yfuaz+/7cz8wOc3
TTva+eJdrQKf130igc/rfpPA52/K3G8S+LzuZwl8flvmfpbA53VfTODzLxau
sfu3K/IDn5/68ZKf/zjQMvD5g1U2T1g1olXg85dN+en5+PzQ5//aWO28Cgta
BT6fvbjMnfF5oM+7Tp+vp/70+f3qT5/f92DdGvsOtAx8vm7Tfa/F54c+X7rH
SZ0XFbQKfP4s1enz+9WfPu/+9PmBo6f80j39/tLnq6745pZ4/dDn8+d8suLp
pU0Dn79Gdfr8APWnz7s/fT5n0I/3xeuHPt+/9sx/anVqGvh8i5b/NzteJ/T5
lqrT56uqP33e/enzXv/0ed1vFfi854g+71yMPu98jT7fQvkafV73YwY+73yK
Pu+ciz7vuaPPj9D80uc9v/T5szP3+wQ+r/t9Ap/X/USBz7tOny+n/vT5LepP
n9f9VoHP636rwOd1X1Xg80dUp8/rfqvA592fPq/7xQKf1/1ogc/rvrPA512n
z7s/fb6Y+tPndT9d4PO6Xy/wed2vF/i86/R596fP6369wOe9/unzzpfp854j
+rxzMfq88zX6vK7HCHze+TJ9XvdTBz7vnIs+77mjzztfps97funzzn/p8ynl
v/R558j0edfp8+5Pn3e+TJ93vkyf1/28gc87R6bPf686fd75Mn0+65RMf/q8
82X6vPNf+rxzZPp8JdXp8+5Pn3d/+rzzZfq882X6vPNl+rzzZfq882X6vPvT
573+6fPOl+nzniP6vHMx+rzzNfq8ricMfN75Mn1e12sFPu+ciz7vuaPPO1+m
zztfps/repvA550v0+edI9PnR6tOn3e+TJ+fqf70eefL9HldLxT4vK5HCnxe
1yMFPu/+9Hnny/R557/0eV2vFfi8c2T6vHNn+ryu1wp83vkyff5N5b/0eefL
9HnnyPR55870eefL9Hn3D66f1/qnz/v6Cvq854g+71yMPu98jT7vfI0+73yZ
Pv+D8in6vHMu+rznjj7v+aXP63rjwOefVv5Ln/f9xfR558v0eV0vGvj8k+pP
ny+h/vT505T/0ud1PW3g822VI9PnO6pOn/f9y/R596fP63rjiD7v+4vp87re
OKLPO1+mz/v+aPq8+9Pnhyj/pc/reuyIPu98mT6v67EDn79f/enzvj+aPt9T
658+L6+L6POeI/q8czH6vPNl+rzu54ro886n6PPyzIg+75yLPu+5o897funz
vn+ZPi+Piujzvr+YPu98mT4vj4ro8/KoiD4v7wp8/ivlv/R5eVpEn5fXBT5/
nur0ed+/TJ93f/q87peJ6PO+v5g+L8+M6PPOl+nzzpfp8+5Pn3e+TJ+Xx0b0
eefL9Hl5b0Sfl/dG9HnfH02fd75Mn3e+TJ/3HNHnnYvR550v0+edL9PnnU/R
550v0+edc9HnPXf0ec8vfd75Mn3e+TJ93s/Hps87X6bPO1+mzztfps87X6bP
O1+mzzv/pc87X6bPf6E6fd75Mn3e/enzzpfp885/6fPOl+nzzpfp886X6fPu
T593vkyfd75Mn3e+TJ93vkyfd75Mn3e+TJ8/ZXzpjj2rtg18fus3Yx/af2Ob
wOfH7Nn25Q1j2wU+f++0GlcdeaBN4PP/Nuy74tC5BYHPP1/27W/OWdAq8Plv
5o8f131MQeDzRfuUv351fpvA51OzHjsjdubg+vkZd017v1ab8PnzhRpW+HBC
2/D5Nm+v/uOSDu0Cn6+3u+2Q+PzQ50uPvbN+18HtAp+fdbh/7/g80OddD3xe
/enzZ6o/fT67x71RvP+Bz6/oNDw+P/T5l669oUNO+u8Nfd51+rz70+frqT99
/vPtVV+I31/6/LxhLXvG64c+P+yH0dlxvkOfd50+7/70+bfUnz4/t0ObvvH6
oc9PH9SjZZy/0Oevalz//nid0Oddp8+7P31+hvrT573+6fNe//T5IZoj+rxz
Mfr8duVr9Hnna/T555RP0ef/Vj5Fn5+tnIs+v0xzR5/3/NLnPb/0+SpTX9wZ
nx/6/Mn1P5oVv7/0+Rpd7nk+Pg/0edfp8+5Pny+i/vT5IiVWvxbvP32+9Q8F
X8bnhz7/7NF5qXid0Oddp8+7P32+QP3p82MvPJAdv7/0+aY9GjwTrx/6fO+m
lX+5YUN+4PN9VKfPuz99vrH60+cbn954drx+6POjPs+6MM5f6PP9dp/x2Xvp
dUKf76s6fd796fNj1J8+73yZPu/1T5//UnNEn3cuRp//SPkafb6f8jX6vPNl
+ryelxj4/CPKuejzzpfp8//V/NLnnS/T553/0uf/Vv5Lnz9DOXLw/HnV6fPu
T593vkyfd75Mn6+j/Jc+73yZPu98mT7v/vT5eupPn3e+TJ+vrvyXPt9cOTJ9
3nX6vPvT550v0+edL9Pnnf/S550j0+ddp8+7P31+oPrT550v0+edL9PnF2mO
6PPOxejzrypfo887X6PPO1+mz6eUT9HnBynnos87X6bPD9f80uedL9PnnS/T
550v0+f1XMrA512nz7s/fX6z+tPnnS/T58so/6XPO0emz7tOn3d/+rzzZfp8
W+W/9Hk9jzTweefI9PmLVafP63mqgc87X6bPn678lz7fSvkvfV7PfQ18vpbq
9Hnny/R559f0+Ve0/unzvr6CPv+C5og+71yMPl9B+Rp9Xs+jDnze+TJ9Xs8T
CHx+jnIu+rzzZfq882X6vJ7XHfi871+mz+t5yIHP67nKgc9vVZ0+73yZPu98
mT7vfJk+73yZPu98mT7vfJk+r+ddBz7v+5fp87cq/6XP63nagc87R6bPV1Sd
Pq/ngQc+73yZPu98mT7v+4vp886R6fNnqU6f1/PSA5/vr/70+bO1/unzvn+f
Pj9Kc0Sfdy4WXD+vfI0+r/9PIfB551P0eedT9PnblXPR550v0+edL9PnPb/0
ed+/TJ93vkyf13MbAp9/SHX6vP4/gsDnff8yfX6G8l/6vP6/g8DnfZ8yfd75
Mn3e+TJ93vdH0+cvV/5Ln9fzOgKfd45Mn/9Ndfq8njcS+Lzvj6bPO1+mz/v+
Yvq8nosS+PxB1enzeh5L4PN6Hkvg886X6fPOl+nzGzRH9HnnYvT5PsrX6PO/
K1+jzzufos87n6LPD1HORZ93vkyf9/3L9HnPL33e+TJ93vkyfd45Mn2+per0
eT8fmz7vfJk+73yZPj9B+S993vcp0+edL9Pni6k/fd75Mn3+ROXL9Hk9byrw
eefI9PnBqtPnnV/T550v0+edL9Pnnf/S550j0+ffV50+7+dj0+edX9PnL6p2
1/BquR0Dnz9w767Xlg/tED7f5tErj1VPr0v6/FNXju//8ZMdAp8vs/Wj3R/V
aR/4/O6ql58V+zN9/u+CX+dXmdo+8PmKJwwdM7lHh8Dn7/u9Yu3YmenzY3O/
+Hh8sw6Bz/9n+tRmT8zuGPh8rTZVyh++uVPg823GzpsRnx/6fM1KG3tdNLpT
4PPLn131WHwe6POu0+fdnz5/qfrT5y/5d9PN8f7T5wt6vDsnPj/0+RW/LB/2
Z5tOgc+7Tp93f/p8G/Wnz/86bNwn8ftLn//07NfGxeuHPt91woy343yHPu86
fd796fNr1J8+v/rPuRPi9UOf/6XD45/F+Qt9/rodz8yO1wl93nX6vPvT539V
f/q81z99/metf/r8JM0Rff5h5WL0+VOVr9Hnna/R539WPkWfL618Kni+jXIu
+vxQzR193vNLn/f80ucb1z/h9JXp80Ofv3DThevi95c+Pz+/3MH4PNDnXafP
uz99/gL1p89f8GbOl/H+0+fzShTJvjR9fujz7zxXYne8TujzrtPn3T/4/2HV
nz7/3SVf147fX/r8srWH93dJrx/6/LVX7asQ5zv0edfp8+5Pn1+q/vT5pbOy
jnwwoW3g89sKf9cgzl/o860n/VQiXif0edfp8+5Pn/9W/enzzpfp817/9Hnn
y/R558v0+aPK1+jz05Sv0ee3Kp+izzufos87X6bPD9Tc0eedL9PnnS8HPq/8
lz7vfJk+7xyZPu964PPqT593vkyfd/5Ln3e+TJ93jkyfd50+7/6Bz6s/fd75
L33e+TJ93jkyfd51+rz70+edL9Pnnf/S550v0+edI9PnXafPuz99fqb60+eP
aP3T550v0+edL9PnnS8Hz7dRvkafd75Gn3e+TJ93vkyfd75Mn3e+TJ//WvNL
nz9F80ufd/5Ln3e+TJ93jkyfd50+7/70eefL9Hnnv/T5Vsp/6fPOkenzrtPn
3Z8+73yZPu/8lz7vfJk+7xyZPu/cmT7/sPrT550v0+evVv5Ln3e+TJ93jkyf
d+5Mn3e+TJ93vkyf/07rnz7/oNY/fd75Mn3e+TJ93vkyfd75Mn3e+TJ93vky
fd75Mn3e+TJ93vcv0+cPaH7p875/mT7v+5fp886X6fPOl+nzzpfp886X6fPO
f+nzzpfp886X6fPOl+nzf6o/fd73L9Pnb1H+S5+vpvyXPu/7lOnzzpcDn1d/
+rzzZfq881/6vPNl+rxzZPr8tarT56uoP31+gPrT5z/U+qfP+/59+rzzZfq8
82X6vPNl+rz+v8jA550v0+edT9HnnS/T550v0+d9/zJ93vNLn3f+S593vkyf
d45Mnz+gOn1e/x9i4PO+f5k+v0n5L31e/59j4PO+f5k+73yZPu98mT7vfJk+
73yZPu98mT7vfJk+73yZPu98mT7v+6Pp886X6fO+v5g+73yZPu98mT7vfJk+
73yZPu98mT7vfJk+73yZPu98mT7vfJk+73yZPu98mT7vfIo+73yZPu98mT7v
fJk+7/mlzztfps87X6bPO1+mzztfps87X6bPO1+mzztfps87X6bPO1+mzztf
ps87X6bPO1+mzztfps87X6bPO1+mzztfps87X6bPO1+mzztfps87X6bPO1+m
zztfps87X6bPO1+mz0erNs75u13XwOdLlWn65SNPdAl8fkmVqTkH53ULfH7u
179MevLlLoHP1x5aMXviNZ0Dnz9p1dNR7M/0+ZJ787fun9s58Pnc6Zvn9ryz
S+DzTz8+8rrYmYPn22yr9Ufn67oEPl+h0aHBXRd1DXz+2r0PN145rFvg8wMr
lVgTnx/6fMsPaz72+7PdAp//+rKcd+PzQJ93nT7v/vT5FupPn8+fWm9SvP/0
+QH/Zm+Izw99fuu4CnOW3dQt8HnX6fPuT58fqP70+SLn/PTHhPT7S5/ftajo
2/H6oc/fVSNrW5zv0Oddp8+7P33+f+pPn/9xYrFF8fqhzxfe/+vBQzd3Cnz+
nhF/r4vXCX3edfq8+9Pni6g/fd7rnz5/otY/ff5NzRF9fqZyMfp8JeVr9Hnn
a/T5E5VP0edrKp+iz49TzkWfn6y5o897funznl/6fI9NPevF54c+3+iuhw7E
7y99fu1PQ86/OH0e6POu0+fdnz7fUP3p8w1bPnw03n/6/PVv3tgwPj/0+c8a
DDqjS3qd0Oddp8+7P32+u/rT5w+tvfz6+P2lz28Z0LVCvH7o8/2+K2ge5zv0
edfp8+5Pn9+s/vT5zXk9LorXD33+4KyGfeL8hT7fv2azBvE6oc+7Tp93f/r8
P+pPn3e+TJ/3+qfPT9cc0eedL9Pnna8Fz59Xvkafdz5Fn3c+RZ93vkyfd75M
n3e+TJ93vkyfd/5Ln3e+TJ9PKUemzztfps+7P33e+TJ93vkvfd75Mn3eOTJ9
/n3V6fPuT593vkyfd/5Ln3e+TJ93jkyfd50+7/70eefL9Hnnv/R558v0eefI
9HnX6fPuT593vkyf9/qnz3v90+edL9PnnYvR550v0+edr9HnnS/T550vB8+3
Uc5Fn3e+TJ/3/NLnPb/0eee/9Hnny/R558j0edfp8+5Pn3e+TJ93/kufd75M
n3eOTJ93nT7v/vR558v0eee/9Hnny/R558j0+Zaq0+e/VX/6vPNl+vwS5b/0
eefL9PlWypHp886X6fPOl+nzzpfp886X6fNe//R5zxF93vkyfd75Mn3e+TJ9
3vkyfd75Mn3e+TJ93vly8Px5zW/wfBvNL33e+S993vkyfd45Mn3e9cDn1Z8+
73yZPu/8lz7vfJk+7xyZPu86fd796fPOl+nzG5T/0ued/9LnhytHps87X6bP
O1+mz7s/fd75L33e+TJ93jkyfT5Pdfr8W+pPn/f9y/R5379Mn39O658+73yZ
Pu98OXi+jfI1+vxI5Wv0eefL9HnnU/R558v0eefL9Hnfv0yf9/zS553/0ued
L9PnnSPT5y9WnT6fo/70efenzxdW/kuf9/3L9PkpypHp886X6fPOl+nzzpfp
886X6fPOl+nzzpfp886X6fPOl+nzTdSfPu98mT4/Wvkvfd75Mn3e+TJ93vky
fd75Mn3e+TJ93vkyfd75Mn3e+TJ93vkyfd75Mn3e+TJ93vkUfd75Mn3e+TJ9
3vkyfd7zS593vkyfd75Mn3e+TJ93vkyfd75Mn3e+TJ93vkyfd75Mn3e+TJ93
vkyfd75Mn3e+TJ93vkyfd75Mn3e+TJ93vhz4vPrT550v0+edL9PnnS/T550v
0+edL9PnnS/T550v0+f/H4Y23UY=
     "], 0.56]}, 
   {RGBColor[0.65, 0.7, 0.7], SphereBox[CompressedData["
1:eJxknXVU1Vn3xrERFbELC+wExcDiIIg0SIk6Y3d3B3YrKmK3jtjdwR1rHLu7
c+zOcfTl/u5+Dr/1nL/etfY6a9/74Jd39sP+ns9TvHWPiHZp7ezsfAvY2aVL
+d+1TQfMXdC3mBrV8NecTf6uKsvjaf4lKxVQ09IuGfzrgaNy+BifOL5HWl3/
HBI+qNypMmpAzn96Px6fRtdzrVu3+t93TmrsmBXDZjwqrV6NO+67KqmMUkV7
DR+0a7OXGr1/zM5/c+h6fI9VU6975LAUC97zMWlt6vlitvPJOD+1wzifkkPz
q+m28wrnUZfPteBzUZ8weabfvo7Z9fdcuin7Mju106tS4rCtB9xT9aLu4RbS
dd6rMlov6pl9m65dmPLz+V64yQHf5JNeZ17lGVfkTgnVwyVD4qssZZTHsTf9
+uZwVqhfHNbr5H8pP4cu0YXarlhUSNcvSP3Z2PYPhpRPry7syv9nvmpOCv13
P90yZ1tnF13vLv1jVh44eN0nna5PGdHyyEH31PPZN80YXWRsCRVWv8uWmyk/
H5xHfUP6tBN/q1hGfy7qG6WO7xlWrfixfE+d1FTpD72oh0p/6EU9rsePKW93
bva6Ur/x2I27cqkPtx5mLqTSqJy/56r6b8rzk63Yxs4J/Urrenr3ItOSO2a3
JD09fH9dbbN+Y/+S8N5vnNXKLN9bz2tVTPdfV6LjX1Ovltd1J+mfI/hkvWVD
Us/bnX3cI+3uzck4/+Hwql/Vdv/yyppU7lC6h44WnNf1Jxl/7Ux5TvC5XMf3
bBM4vN28vcXUvTO2/tCLehbpD72o7z71bOtcSyFl51jCJ+cMV9W3oOPbAGdn
VWFV4VfdJ+RQjh0aqkN33nmhHrG5S7G00eVUWs9DdUY+yazPn+zx4NPadLnV
w+8VJj8/VVLVeGn/bqZ7aTUqvkLLtHM+JDf43LvSu845dL3xnI37LtV2tHgv
jJq51aGcrsfZznvhvGuVTAvtpuVRMbbzCudRP2X7XAs+F/X8aUuu/a1BZv09
/ZYVCi/p+dxrqEPcu6zHXLRe1OsXaX+p+IPSWi/q/ZZsujI/5eezs3mDw19e
XPEaNeHydbfoUqqVx8uK7fKVVR9L7qnVqlE+hfqk+kkFNqT8HLZ0tA94d6qo
Ud93ML+7Zd4Xr3Ppq1Z9MtVB9Zf+tYpPfRnu4qJQby39rz0qV83uSFZdv/Wh
dTrHlO+P801zX6ic1dFVXaxTK931lJ8PzqPeaPmT+2NWltKfy3V8z72dl3ar
czmXuin9oRd19Ide1Ifc9HnjkPLve/7s0pt9/HOrvxo+iG3rnEl1u9D4764p
z8/LszlPT8pTUtcTV29+17JBZktQr1qXIiLL6nqC1BPWbO1SwpJf3bnft4jj
5cJqqPSv2NzHufz08rreXfqX/WxX98aiYro+oUGe898SP3jhfMDrpFYrfn3w
ejHgoVOvCTksOI/6gt/mtY5NeU7wuajPlTq+Z/7Hdfesc3fR/aEXdfSHXtTT
NU6oPiLHJ6/rtVdsCHT54fWtRLZfge2/eTld/db69BA71cD/9pmD7y95bW9+
4UqH4bnU2zYFfxtU8IJXL697I9Okt1Pp9zZ9+LxLLqPPxDenM+yuVFRxn7hR
3acdK1vK6FNm89bcE4qVUuEZBs7r3TG/muX+77exk3Ko/jsT/K88yqM2nrv3
8bmPszrysMWELmUKqm83Gz06MDCvmhtYdceWMUXVgVPvglpvyqBKNctaJ/JL
HhWcLmTKb59clOPlRjN9HxRQzruLzlv3NK+Kv7a8+IbwEmpy3U8Tl+3Lrtos
7Fuzz568qvLrmj+L9i6hFty4cvF2mdzq7/b5YlVGFxU3Ycy5NmNc1OXwR5Pe
5smkMl2qOSl4f3E1JahZT7tHxdS5ktdXb71ZUPVKaHYnzX/FVb6bYcO+tSqk
vLvbDai3PJP69Pj8pstjiqtpbisjYtflVx27XbWfdTmPutCn9L13C4obencN
3/RiwKinyax3XsSxbLUfPkhmvR5N3ofFv36SzHrtH248M//qnWTWGxS2uWv8
7XvJrHdyqP+lnd0zGnrHpDuz8KlfBkNvuQxNXu0PyGjorRdUpWrWTukNvZtH
Tfg49Gh65Wh7HiyXCvV+W6iKi1oz82v8AE9XtTIuPHbPxHfJr/qu3OU4spTq
UvJq8y6jXfGcJPd/eT9rmy2FVZp22x121ndV9vK8zey2qM6/v5dSw3LV83yw
11U5p/G5n+7lL6/uF95F/9msuFo69h/7Yytc8bmq6dsWtxuOdFU1Fh89EhxS
Dp/rNapSswpr2xZR/bI8/Rybrpx+Pj/kadVw641S6u7JzEGOvuVURtvnJtes
28nl/Noiqm3hOOcHJ8vic5MtnvcGLG9cQql1l4N/Pihr6M3289SuWbWzGHrz
BjR807pNVkNvj4b7F09tmcXQ2zTNw9h63tkMvc/+njLn9KOshl7XxDifvkcL
GXqX9Dy8eop7IUNv73f24V+2FjL0Dkv49H7xoYKG3mqbl0ZefVtQzbD9u1sG
R7cPmH+8nMqzs+XQThu+em22Pc+WkILLM1daUka5e+apHfc8p3H+/EWXVSPs
iio+f/DNdMuFuyXVkXvPi7r0q6S29b859kmt/7y6b79cPmHtF6/t8afOXEuq
oCbX6pM9892nXn8NfP/kxJqcxvkOuewanUguovj8pOnD8w5MLqki5Pfx3uIn
Dz8uLq9aFLm//1PTT17z5PfOb9DjQZMalFHFtyRPerbykxee/6Tia8Z4Hyqj
HH9vOG7mkJxGn0ev6u94UL6I4j4JM/cmtahXRHGfDWnKPmmWVFLZFbHN/5Ed
K3ku+quG9guzZP7P9dCuZfVebrqeW3zEvWOTC9WPSq1Psc3zlkvj7CpMy1NL
+wWZ5y2tH//uWHV5FV2vapvnLcs6T34676unrq+z+R19Hn4h3uZ39HnUxe/o
z0VdvqcF3xN+wU78C/SiPk38C/SiHmebJ70WvIp4NX5HBe0XZF5VRXaunbS8
dDVdt7fNpZaX86r5bXRIrTtJPWz2kGfbk9y0X0D/brszeS6JraHr9tK/8KCM
qyyT/9/5nv83byfjPPxCbtu8bcF51O1sc7vC56JuL3V8T/ILydCLen7pD73k
RywNZ49xdM9RVfuFcJsfscy9NHZ59jueui5+x9J+t1PzQn+m1sXvWI5vi0nj
0qKa9gvipyxPrzwIz5q9jq43kv6Jc+7vr1g/9bz4NX0efkH8oD6P+iWb79Of
i7r4Qf094RccpD/0oo7+0Iv6BJn/Z560TDvzoob2C7Ey/6fv396lzahKui7z
vNqa5a+EPC3ddV3meUva+ke37s3sqf2CzPMW11End6cZXkXXvW3zvGVLziY7
F5eprevid/R5+AXxO/o86o1sfkd/LuqnxXfge8IvwL9AL+pR4l+gF/V42zyZ
XGD7gLnP/6ug/cJz2zypsjve3rfoS1VdX2ibSy0H7/RMHpm3ulH/d2ncvUOe
lbVfQP9K0f0edvOooesvpX+F4pf6HN3nrutxtnnbC+fhF2TetuA86jK3K3wu
1/E94RcGSn/oRb2n9Ide1MXvWMZ9zdu2dbWq2i9csvkRy/gKuy86bKyp6xE2
X2Op8V/Q1denaul6uNQ/dy80ITTSQ/sF8TuWpD7h/954XlvX0f8Pr02Tq/Su
rut9bX5Nn4dfED+oz6Muvk9/LurTpI7vCb8wQPpDL+roD72o57f9d82y+G0O
t0snKiv4i0a2/z5a2ve5dK7Y6woK/mK+7b+PlrhTnRcddXXT/oL7wF9wH/gL
7gN/kVXmsc/xG148GVtF+4vNMo+NPuAX1nKDh/YX92QeK/tz/U73627aX7yN
sc1jlz0Pz7iywEP7i2Iyj/l07bZ4T8Eq2l/YyzxWc0iJB0MrVtX+YqnMY+tD
Jw9Pl9Fd+wv5XK8MjiXzVbnhof2FncxjTS841pmaz137izIyj71Y0rby2rlV
tb9gvfAXrBf+gvXCX7Be+AvWC3/BeuEvWC/8BeuFv2C98BesF/5CfI1lyIUO
7SLr1ND+QnyNxf6X3d+n2nhqfzHZ5mssm7w6uC2eXk37izzyvDUdMiyLT4Sn
9hczZV49vqF0/lLnq2t/ESnPYfL+O82ePayh/cUmmWOrxDf42mN/Ne0v8HxO
DrsbvzjeU/sL8XGWu7n+3vHtdDXtL6bbfJyl9/0ia/KG1dT+gvXCX7Be+AvW
C3/BeuEvWC/8BeuFv2C98BesF/6C9cJfsF74ix22ud0S9ub+jJnja2t/cdg2
51t2nf/V61bvWtpf8Hn4Cz4PfyG+Q33/kn/d01eVFfwF/OzJ/VFdhhypqOAv
+Dz8BZ+Hv8DvY5rcLneT39fW/sIiv3ceI4uvdfCrpf0Fnv/20aMrtx9TS/sL
7gN/wX3gL7gP/IW7zP+9EytF9vpUX/sF+Xu+ZcXqyqeHJNTT9THiI3pN3jth
/IDUemihogOapcyHW1fNOdXJ2Vf7heBMP8r3q+9m+R51rO7+1krXwy89tG+z
1MMyL9/va99kSz0/+dnXIo/apJ6HX8jh6TLmZcr8hvOou7VpN33ddA/9uah/
Et+B7wm/AP8CvahPEf8CvaifWz9/6f6Un0+L2tfaZB5eR/uFcwvvdrqaMt/G
Hnj5b59V3rr+2r1Ou6YpPwevyluvf0tMrb+R+r0ma2O+n6yn/cJZ6R9Xr1Dk
+wP1df2S9N9Qt1rOjJtSz4f0Shg3v2/qefiFLWFevV+k/HxwHvWYa49Hf7P6
LPlc1KOkju8JvxAs/aEXdfSHXtT/G/Jqu/Xf9+X663Vrz1faL8ws4DZ8fsrz
kxB8Y/xaO19dn1Kv3hxf5WEZcnBJO7f3Pro+VeoV99ffVfVPb+0Xfkj//aft
75Yp0EDXE6V/7kr2s/dsTT1fq/nz1dbnB+fhF7qfTi48tbKHPo96TI2qk8un
PCf4XNSjpI7vCb9QW/pDL+pdpT/0oj5c5v+cx7/8NzGTj/YLPjL/z/7V6mf/
tnUNH+F77lOaZqO9dP397nTnRqfMh4HpvmePS/TRfqGv97CTC6e4W5q6/jdz
RbhK3V8Eva2zuqCHZdmLwzner/LV9b+av/k5sGolfR5+IW1QZue2KfMbzqPe
IveH1vmiqunPRV32LPp7wi/sFf8Cvai7iX+BXtQLF190N0vKz2fR4s57ai2v
o/3CtXcufc+lzLfhz8Ym9MrmreszzxY7OCrl57D6fFjiQ+f6uj5L6tnz9Lhd
ylJX+4Ui0v9e1oik6+vq6zr6H3yc9r7DXS9d//rNdXpiyvfHefiFFa1KObRJ
+fngPOqOi5wvJKXMyfhc1LNKHd8TfgH9oRd19Ide1Evs7B61KOXfd8qd5f9E
rlfaLyzPFPDEJeX5mTqwT7Gkjj663mLq5sPXhlS1PGpZ16XgQF9dby71IwVW
fQ+o7a39AvoXXujl4ZSpga4vlf6F0vb4sS+wvq6X8b/gNDjl+cF5+IX2Mdue
+e/w0OdR3zIvtEq6lOcEn4v6Nqnje8IvoD/0ot5B+kMv6l/aubQtm76S5d7+
GmM32dfT/iLnkOrv242vYPH5Ofdy9Pw62l/ccnSwHHJwszjNmOeQpWE97S+4
D/wF94G/4D7wF24yjx0p171CYpTS/mKkzGMOf9a6E9HRW/sL+bu6Ze+hm64D
ftTT/qKgzGNVfw38NbWFd+r+QuaxLvnPjP1VRGl/IX9vtDxesqZ0qySl/QX+
jlov194X/mW9tL+QPYIl6FnZQ/uGe2t/gXnseWLdNRdqeWl/MUvmMa+tAWe+
3FbaX7Be+AvWC3/BeuEvWK/eX5Be+AvWC3/BeuEvWC/8BeuFv2C98Bdh2643
+qN1Fcv4oKBOpzbV1/6if9yvWse7uFtO389XaOJhH+0vftx/PilxgZulWNqT
Z3pd99b+4rM8b5+LxtQ5stdH+wv5u7Sloue6Q9UG19f+Irc8h0mWcW3npPPR
/uKQzLGtyu3deuONt/YXeD6zO2T69e66j/YXtw48nOu70t1S8+WQGUu+emt/
MTxp2sOXjapY0lwslaWSp4/2F6wX/oL1wl+wXvgL1gt/wXrhL1gv/AXrhb9g
vfAXrBf+gvXCX8SPcd2bdnh1y9smE351ueyr/cXc9Vtbl25bw1IiaM4bpyBf
7S/4PPwFn4e/EP+bPF3tq+9ZsJ72F27iZ7+4XHcZnaGu9hd8Hv6Cz8NfwA8G
dC3zR9osDbS/gO976JKUJcnDV/uLEHn+f2RtcuZypK/2F9wH/oL7wF9wH/iL
UJn/9309mjl3pkDtFzD/F6xeedG9Zn66HiI+Ik3Sx8HtQ1Lrt/8OdrTOh/9m
qjw6a6Ug7RdG+ewZnqVrTUv9Xb9/bN63oa6Pc1rW7NvfdSwPBn1sObNo6vk/
S+7sNXhq6nn4hYOxZxKmpMxvOI96+yUuD7z31NGfy74D31P7CPEv0It6dvEv
0Iv64pkOK/qm/Hy+jhjdcXV4A+0XLvl1bjrXun8pOmZr3l3+ul4xutlYn5Sf
w4QZAfELk1LrlaTuOf3l/SUD/LRfQP+/l27NPPtsgK5fkf5F02xNLtkp9fyt
vpkSH7ZJPQ+/4PjoVhbrzwfnUZ/TtluHsilzMj4X9USp43vCL6A/9KKO/tCL
etXdazNlTfn3rZa918fb6xpqv/DL//IM6/Nze2OveiE5g3T90OB/n93oVMdy
pFgN54vpUuuHpd6/yI1uVy74a7+A/hncls4+WS5Y19ME2Pr/Hr8k6Lcjqed7
z1/93fr84Dz8wsrMw3q6Nqmjz6N+/2pM/vUpzwk+F/V7Usf3hF/oJf2hF/Xl
0h96Ue8n83+zctO3VygQmLq/kPk/V+vj1e4cbmD4iC6BM2uEX/TT9U35k2tZ
58NZ7WYcc0kK1H5h7bBaRaru9LQsH5sQ4Ne6oa5PHb9hel3fOpbnIc2OJ+wK
0vX5LzwuRPjU0OfhF3bd/7OldX7DedRnh2/esWFYXf257DvwPeEX/hb/Ar2o
pxf/Ar2oHzk1ub715zNnS3AuS+sG2i888Bh9qFjKfDs3qHBQ7qL+uv5rxekt
V1N+Dm+rPg0eVylA1+1W2urnXoaW3PmugfYLR6V/2R7Pmg89EKDr6F/mcv7S
ZdI01PWO/bK+GpDy/XEefsG+27mrDVN+PjiP+odjExzTpMzJ+FzU30sd3xN+
Af2hF3X0h17Um74vv9r673tZ1Vry+UBD7RcyWe4ftT4/V244XA0cHKjrs//u
lrfHqtqWiocvXds/MSj1/SipZx1aZ8vLYH/tF9C//c8rz7fmD9b1jNK/bduM
25r/FqDrAS1LNYtMeX5wHn5h4cyede7eqaPPo+448dEL63OCz0XdSer4nvAL
gdIfelFfJP2hF/UqRZJuVzha07Lz4rnyufL4qZ2noyY0XP7Oq0qPM+nXla9h
ydexUjH7Lw2Us0v30JJ9cul5YNpJnwpnfzRQa65WTNvmdlqjz57rRcvsqltY
cR+PtnUCS5YoZfRx+ju+zYvixVWozGPZnzlnmtfbX8W96jN9xJpCeh5r7rsq
l3NLf3Ut7OW0ra4ueh4b9HFDx4Ce/ip4ea99az/nVl9lHrsxIcvv9SL81XD/
x7mW2Lnov5c2elmsU4ZYf7W1aZ+mJ34UUPlkHiv/R9m9Kzb4qQmJYZ2uNiyi
/456K3DZhmIWPxX76PmNd2vyqNsyjx2aPzf2wyY/dedtUpGYYS56HmuZsXbb
n6f9lOOHr+fyv82jRsg89mx5ydgax/1UdNnwxVM+FjX0zvMMDLqw/IkX6z3+
fsGmEY8yar0DRW/mYsejLn14ncx6f7s84rB7bEZDb1O/yX6NBl/wYr2vLbmm
Hj/xyesI6V2b/WfsgibPkm+R3nv9p73OFmRv6P0+b2pSmzJPk4eT3uJZ87Za
NOyH15g3iSvrTKlluZD5u8/Z04GqYqWOHqcKlVIb9u+f2ny2p8Wl3ajwiH0p
/783fv6/BzuX089VnTyTV404GagS7DucaHXIRT9Xi9b8M6/vhkD1fMSsuHUN
y+nnKne2n6tqbwtUxx49nderQUllGXQtKKBbdcvrYxm/XLcPUNvSxhT/2rm0
nmOXdBn+PKZQgJq/xrVpBmdXlTPor5xNPGpaxuzrN7tslgAVXKbx5NZHyqlc
35e+uHHa0+JaOv8yj7IB6tPmcpfze7mqbY+Cqo8eUsuy/nDa2d1cA1SB4Cv7
IrzLKNabfedRlz6tcxl6vTuW2xJr52zo3Xt53KI6LTIbeic3cd7nvreQodfH
9eirAztyGHoLtlj244RdXkPvhSaDbp046mDoDVm74tySbc6GXq8Bs4/nj8hi
6H36bpl73IZ86vOO2YvvJtazbHn6sKpT2yDVOOxJ0WF9sqgz//TYcWCql6XV
lGalp/YPUv9c9szYtsdHLz7/48nP570auurzreX80ULzGv58W1j78eDjXida
5/NTPv9V6nq6un6vz7LA9fiVx+n91EW3ob7Be3IZ5wfkzPGzwdfixvnpXXyO
1mxYSv9eN7wVcaFF+yB1r/enNrO65tbP+ZOGn253HhOkLE697/wa/8kLz3mP
R3fPrxgepF72fTrx6SlHo09iVrvoW0tLGX2Glltdt2SNIor7tHIbMfZU4RJ6
/h+5oVLLZlPCtV+YIPN/27nHIkd3C9H1O+IjghymuGdukVrPldGhlXU+dKn2
cOHVoo20X7jlte+fc4HKMqnAp7VpxoXqevNSla/+Nai+Jc/ro5Pn5089/2Oz
Z+sJzVLPwy98TJj81CVlfsN51M+86lGwa6/6+nNR7yi+A98TfsEi/gV6dV38
C/SifvHMX58cUn4+3g8KFg1sHaz9wrIW70e0Tplvn40s1GnP8TBdbzMj/7Xr
KT+Hcx/u+XntTa23lfqod6Pn1p8YkrqnkP4T05S8t6BnuK6jf6c2Af2PD049
n3vLkX8GTU09D7/gW2x+c+vPB+dRH/W6T0arz8Lnoj5S6vie8As5pD/0ou4n
/aEXdY/vVSueT/n3HdbLfl3cgVDtF6qPnfnI+vzMmjDm+5ccjXR9aLPfFu8O
qG8Z593h2V4Hs34wrleJQY/CtF9A/9J/FypVY3EjXUf/Ve+rp/11OfV8VJet
f1ifH5yHX3jpsuj+b9719XnU8+XO3aV+ynOCz0U9r9TxPeEXIqU/9KL+SvpD
L+rrZf6P8Ju1o8PscO0Xpsn83+xIi5dxl4MNH7FtfdnX7x+F6PrjqKFTu6fM
h6/bJBx8cCtc+4U3t4bsfvRGWV48LW/3rE+ort9vVe3ds+r1LQVjByUvaNtI
18+Wfl/iWVcvfR5+4VXhEdvupMxvOI96u2PV0y+/WF9/LvsOfE/4hYXiX6AX
9d3iX6AX9R/2AbOrpPx87uV69HfrvsHaL6y58nPbHynz7YMN29PscgvT9Wr3
JqW3/hycg5JH5i4WruseUs8f9uRmbLoQ7Re+Sf/dHS2TpncI1/U/pH/PGptv
n8gZquv/9PcJsH5/nIdfqLNmajnrzwfnUd+4JM2NvClzMj4X9U1Sx/eEX3gh
/aEXdSX9oRd1/zkff1j/fZ1XnI+edzZU+4V6Pxbnr5fy/Ewvcv7Y56Phuv54
1Ozto556W/bm3PnXppBGuv5E6jF3LnaY3jxM+wX0b+y261y52Y10vbb0j3l4
ZrtdjXBdH7Hw4Qbr84Pz8Audnib+VWtMfX0edb+jy+ptTHlO8Lmo+0od3xN+
IU76Qy/qnaU/9KLecd3kxt7RXpa0K05UXlQ6RO8vvsh/97f7/Nu4Z89gvb9Y
6XNo65dKylJw6pD3J/xC9P6C+2B/wX2wv+A+2F9gHot5s3DezQGhqfcvZB5b
OLZT0NzJYXp/gXnszSrnX3HLQvT+AvPYkcOru14cFZa6v5B57MetH+9964fq
/cUhmcf6t72W8MfJUL2/mCPzmNuZLA+f7QrR+4scMo/d2hBbOc3yML2/yCHz
WKb4039utITo/cVOmcfO9R9Yu26aML2/YL36/gXpxf6C9WJ/wXr1/oL0Yn/B
erG/YL3YX7Be7C9YL/YXrBf7i9t51g551tTbktW+7osJncL1/qL3jzo9B99V
lsqRrr4dPoTr/YXHhipzWw1Qlm3HvtXe9SNM7y86yfPm2/vQpfRvwvX+4pjl
XtZ5q+tZ7v58OedAaLjeX2COXXjoRsfus8L1/uKUzLGDBnzMHp85XO8v8HyG
Py24c8HPcL2/KFGo8pLd/ypLu9joEe+zhev9Rb/4MUemRHhb/j5Zbr/nxnC9
v2C92F+wXuwvWC/2F6wX+wvWi/0F68X+gvVif8F6sb9gvdhfsF7sL4b/PLNp
Tkcfi5rebGfs0EZ6fzF6Zt70a2/6WG5malOpfI1Gen/B57G/4PPYX/QV332t
7RTH1m4hen8RJ/O5Y8yCnxn/CNb7Cz6P/QWfx/5ilPw+dpu7LnOJOY30/gK/
d/v6dNn/uXwjvb/IKc//X/8cXjS1diO9v+A+2F9wH+wvuA/2F5j//2g+eF+F
PFHaL7SQ+T/mv0oZZnlFpN6/EB8RuDPHx+iaqfUSyx42sc6Hfk8qfU1KitJ+
4cvtAjkXtvC1PK97zO3CyQhdH3hkqt2saX6WWktyPO2yLPV83rC5kyN7pp6H
X5jdscQi6/yG86g/m3zGp8Y4P/25qJ8V34HvCb/wr/gX6EX9s/gX6EV9zNj6
K60/nwYu1zt/3tNI+4WrCzZd+Joy3xbofT17pW6Run7qSec81p9DtvL7f75t
l1o/LfXHa6au7h0Sof3CWOm/YWvP2t2+Reo6+l9v3TOxml/q+VWfLYWt3x/n
4RfqblwXa/354Dzqu8u5N7H6LHwu6rukju8Jv7BS+kMv6vWkP/SiHjZ3Zoz1
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
5T64waeV+yCK+bTyHpfBp5X7IAafdortfTCDTyvv8xt8Wnmf3+DTyvv8Bp82
u9T3Ep8W/ZlPK+/zG3xauY9g8GnlvoPBp5X7DvpzNT9K6synRX/m08p9B4NP
K/c1FPNp5b6GwaeVex+K+bQfpT6L+LQdpD/zadGf+bRyX0Yxn/ah7T6LYj6t
3JfRn8t15tOiP/Np0Z/5tLdt7wOra8SnDbHdCzD4tPL+v2I+LffB+1HcB+9H
cR+8HyXvjRt8WnlvXB0mPq28N27waeV9A4NPu9323o7Bpx1t+zunwaddb/s7
p8GnrWp7z8Hg08p7SgafVt5TUh2IT8t68X4U68X7UawX70exXrwfxXrxfhTr
xftRrBfvR7FevB/FevF+FOvF+1F5bfc+FPNpwRFlPu1N23vsivm08h67Yj6t
vMeumE8r91wMPq3cc1HMp8XzyXxauWetmE8L3inzaVkv3o9ivXg/ivXi/SjW
i/ejWC/ej2K9eD+K9eL9KNaL96NYL96PYr36frfwkJlPC+4x82n5PN6P4vN4
P0ruZRh82qO2PZ3Bp+XzeD+Kz+P9qD/l95H5tPi9a0B8Wnd5/plPy33wfhT3
wftR3AfvR02S+Z/5tJj/mU8r96YNPq3wmhTzaYXXpJhPmyD5GsynrSj5FMyn
rSb5FMynFS6uYj5tmPgO5tMKz0oxnxb+hfm0dWy8IMV8WuEFGXxa4REp5tNG
Sp35tMIjUsyn7Sb9mU/7r42npJhPK7wmxXxa4TUZfFrUmU8rvCbFfNpZ0p/5
tMKbUsyn3WzjTSnm0wrPSjGfVnhWivm06M982k3Sn/m0Z2w8LsV82gs2Hpdi
Pq3wvhTzaYX3pZhPi/7MpxXel2I+LeZ/5tOmkfmf+bTwEcyn1bkYxKfdKfka
zKcVXpNiPu0wyadgPi3yKZhPq3MuiE8L38F8WuFZKebTxoh/YT5tSRsvSDGf
VnhEBp9WeESK+bRbpc582lLSn/m0wiMy+LTCU1LMpxVek2I+rfCaDD6t8JoM
Pi36M592ifRnPq3wphTzaYU3pZhPK9wqxXxaJ6kznxb9mU+L/synFR6XYj7t
LRuPSzGfVnhfivm0qDOf1ln6M58W/ZlPizyFmXUmfK/+V2W9vwiSPIW8036e
dAirrPcX02Qe+FAo6kep9pX1/oL7YH+BXIb80gf7C+6D/YVwb9R3/1tVVy/2
0PsLzGPzf70M3jDIQ+8v5N6xOtvi5+dM8z30/kLPYxP23H33u4feXwyTeSwu
7NGXEZ089P4CPsjj8Kd5+3O76/0F5rHZWR/H7fR01/uLf2Uea7n+4pVmBdz1
/kLuWatFo/O/7hXtrvcX22Qe27T/1eWHAe56f8F6sb9gvdhfsF7sL1gv9hes
F/sL1ov9BfQmiF7sL1gv9hesF/sL1ov9BfI+Rk5K3JAr2lPvL7YKR7So9+pj
Bdw89f5ioTxXUct29+wb7qn3F3iu8p3o06R5bs/U+93yXGWYsbjXy6Keen/h
Lnkfe9JvzlX2ZDW9v8AcWyh0yXeXt9X0/gJ5H49fTQ0/fraa3l/klZwC16MX
OtzJUl3vLxKEd1rt5+qwcLvqen/BerG/YL3YX7Be7C9Yr77fTXqxv2C92F+w
XuwvhGuknohe7C9YL/YXrBf7C+TdePl1njp7ZC29vwD3eMn0Jn2n/1FL7y/4
PPYXOL9MzmN/AT/+3NG3b79zlfX+IlH8eNmh7f4YOa6y3l/weewv+Dz2F3jO
u1T2P+ExrpbeX+A5X5Nx6v3AQ7X0/gI+a59X67/376yl9xfcB/sL7oP9BffB
/iJJ5n/m086V+Z/5tMjXYz4tcjGYT2tXzJavwXxa5Osxnxb5FMynlfOK+bRO
knPBfNp48R3Mp60g/oX5tNXFvzCfVvIOFPNpkX/HfFrJU1DMpz0ndebToj/z
adGf+bSTJP+O+bTBkn/HfFrk6DGfdr3UmU+L/D7m00qehWI+rZ0tj8OL+bSS
l6GYTyt5HAafVvI4DD4t+jOf1l76M58W+XrMp3WS/Dvm00peiWI+reSVKObT
oj/zae2kP/Npt8v8z3zaMjL/M58WPoL5tMjFYD6t5E0kM582XPI1mE8bL/kU
zKeVPA7FfFrk6zGfFr6D+bSDxb8wn1aJf2E+reQpKObTtpT8O+bTTpEcPebT
os58WvRnPi3y9ZhPi3w95tNek/w75tNK3oRiPq3kTSjm06I/82nPSX/m00oe
RzLzabtK/h3zaedKjh7zaeOlznzaeOnPfFrJ41DMp42T/Dvm0/4j+XfMp0WO
HvNpUWc+Lfozn1bySgw+rZPkdjGfFv/dZz6tamvLQWA+LffhfD3m03Ifztdj
Pi049synha9hPi3mMYNPK/MY82kryTzGfFrMY8ynnSbzGPNpJQdEMZ92isxj
zKdlvTr/gvRyvh7zaVkv5+sxn5b1cr4e82lZL/YXrBf7C9aL/YU8DwafFhxR
5tPKc5LMfFo8b8ynRd4H82nxHDKfFnMs82nt5PlkPq0T8uaITyufm8x8WtaL
/QXrxf6C9WJ/wXqxv2C92F+wXuwvWC/2F6wX+wvWi/0F69X7C+EhM58W3GOD
T0vnOV+P+bTw3cyn3SrzOfNp+Tz2F3we+4so+X1kPi1+75hPm1uef+bTch/s
L7gP9hfch/P1mE87ReZ/5tPCRzCfVvKyDT6tzPMGnxb5GsynlTxxg0+LfD3m
036UnAvm08J3MJ9W/E4y82kTxL8wn1bmSS/m0yL/jvm0yNdjPi3y9ZhPi/7M
p0V/5tPa9bLl3zGfFvl3zKdFjh7zaZG7x3xameeTmU8redkGnxb5d8ynFb9j
8GnF1xh8WuTrMZ92mvRnPm2U9Gc+bVbJv2M+bU/Jv2M+LfL1mE8rftDg0yJf
j/m0XaU/82llnk9mPm1Lmf+ZTwsfwXxa5GIwnxb5esynlXne4NOK3zH4tMjX
Yz4tci6YTwvfwXzanuJfmE8rfkcxnxb5d8ynlXlVMZ9W5lKDT4s682nRn/m0
yNdjPi3y9ZhPK/O8waeVeV4xn1bmecV8WvRnPi3y9ZhPi3w95tOK3zH4tMjX
Yz4t8vWYT4v+zKcVv2PwaZGvx3xa8YMGn1Z8n8GnRZ35tAOlP/NpxQ8afFrk
KTCf1lnyFJhPK3+3NPi03Af7i/zUB/sL7oP9BeYx5tNiHmM+rcxFycynlbwq
L+bTOsk8xnxa5M0xnxbzGPNpJSfLi/m0yMliPi14+8ynZb3YX7Be7C+gl/m0
rBf7C9aL/QXrxf6C9WJ/wXqxv2C92F8UI73YX4AXynxa8EKZTztJnivm0+K5
Mvi08lwxnzZY8j6YT4s5lvm0yPtgPm2o5BQwn1b2cQaflvVif8F6sb9gvdhf
sF69vyC92F+wXuwvWC/2F6wX+wvWi/0F68X+ArkbzKcF95j5tHwe+wucZz4t
/DjzadeLH2c+LZ/H/oLPY3+B55z5tHjOmU+L55z5tNwH+wvug/0F98H+AvM/
82nl7/kGn1b2AgafFvl6zKdFvh7zacMkX4P5tMjXYz6to+RTMJ8WORfMp0Wu
N/NpZV9j8GllX2PwaU9J/h3zaa9J/h3zaZGvx3za91JnPi3y+5hPi3w95tOG
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
yL9jPu0DydFjPi1y95hP20P6M592ufRnPi3y9ZhPi/w75tP+KTl6zKdFvh7z
aZGvx3zaNNKf+bRyX0Mxn1buaxh8Wrn3oZhPizrzadGf+bTZpD/zaZF/x3xa
5N8xn7aC5Ogxnxb5esynRX/m06I/82nnyfzPfFrk6zGfFj6C+bQtJReD+bQn
JF+D+bTI12M+LfL1DD6t5FMwn/aj5Fwwn3aj+A7m08p9EINPi3w95tMi/475
tPK+vcGnRb4e82mRr8d8Wnmf3+DTIl+P+bTIv2M+LfL1mE+LfD3m0yZKnfm0
TaQ/82mRr8d8WuTrMZ82k+TfMZ8W+XrMp0Wd+bTtpT/zadGf+bRyn0Uxn/aB
5N8xnxY5esynRZ35tMjXYz4t+jOfFnkKNx/0fn4vYz39ftRNyVNYlKXSxRMn
6ur3o5DnNflC7IvYK3X1+1HcB+9HcR+8H8V98H4U5rFj48aGf27prd+PQt5c
3gfZfh8U6q3fj8ol85j7zLxb/2jurd+PkvcQ1IxSff9YoLz1+1H4e2nmSRO3
tvbz1u9HwQcdHV8iU9qaXvr9KHlPXpU6n+v1v7956fej4I/e90zru6yOl34/
CvNYZf+GzXYN9NLvR8l78sp7pLNP2W5e+v0o1ov3o1gv3o/C/OkmevF+FOvF
+1GsF+9HsV68H8V68X4U68X7UawX70chX0+JXrwfhby5iatbT62w30e/HyX3
PtT1tC/mbVrjo9+Pui3P1YetH17f2uOj349C3kdUw0YPzy/w0e9HjZDn6uTa
9m/mLvPR70fJPWu1qm0PVeOLt34/CnNsTOanVbdnrq/fj0J+Qe0md+6M++at
349C3tzNI3HPZ+Srr9+PEl6BatOqy50TOerr96NYL96PYr14P4r14v0o1ov3
o1gv3o9ivXg/ivXi/SjWi/ejWC/ej2K9eD9K7juojmODh3WL8NXvRwmvQOUv
d6Tn87a++v0oPq/fj5LzBeQ83o+CH890Krx0XJZ6+v0o7INWjWqlxj2pq9+P
4vN4P4rP4/0o+Kyfg/YVOhDlq9+PqirP+aLHv5c+3ttXvx81TZ7zUqP8C6Xp
5qvfj+I+eD+K++D9KO6D96Mw/zOfFvl6zKdFTjfzab9KLgbzaZGvwXzaCZKv
wXxa5FMwnxb5FMynRc4F82mFZ6WYTwv/wnxa5Osxnxb5d8ynRf4d82ljJUeP
+bTI3WM+raf0Zz4t8vuYT4t8PebTCk9JMZ92suToMZ8W+XrMpxVek2I+baL0
Zz6t8KYU82mFN6WYTyvcKsV8WtSZT+sv/ZlPu1H6M59WeF+K+bTIv2M+7UvJ
0WM+7VupM58W+XrMp0V/5tMek/mf+bR2Mv8znxY+gvm0UZKLwXza/ZKvwXxa
5Osxn3a45FMwn1Z4Vor5tMUk54L5tG/FdzCfVnhWivm0yNdjPi3y75hPK7wg
g08r3CHFfFrk6zGfVnhEivm0yNdjPi3y75hPi3w95tMiX4/5tC2lznxaV+nP
fNql0p/5tMi/Yz7tcsm/Yz4t8vWYT4s682nRn/m06M98WuTfMZ/2muTfMZ8W
OXrMp0Wd+bToz3xa9Gc+LXjszKcNRJ4X8WmRp8B8Wu4Df8F94C+4D+frMZ8W
HHvm02IeYz4t8sSZT4u8OebTIm+O+bTC+VHMp8U8xnxa5Gcxnxa8febTsl7O
12M+LXwc82lZL+frMZ+W9cJfsF7O12M+LeuFv9hOeuEvkAvAfFrwQplPi7w5
5tMi74P5tDPluWI+bRWZY5lPi7wP5tMKJ1YxnxY5BcynRd4c82lZL/wF6+V8
PebTsl74C9YLf8F6OV+P+bSsV9/vJr2cr8d8WuRuMJ/WgtwN4tPyefiLzXKe
+bTw48ynxT6I+bR8Hv6Cz8NfIMec+bTf5TlnPu1mec6ZT8t94C+4D/wF94G/
WC/zP/Np42T+Zz6t5E0o5tPml1wM5tMiX4P5tMjXYz4t8imYTztX8imYT4uc
C+bTxonvYD6tm/gX5tO6iX9hPq3kKSjm00regWI+7TXJ0WM+LfL1mE+bXvoz
nxb9mU87QfLvmE+L/Dvm0yZJjh7zaZGvx3zaeOnPfFr0Zz4t8u+YTyt5GYr5
tMjXYz4t6syntetu6898WvRnPq3dOVv+HfNpkX/HfFo7ydFjPi3y9ZhPa3fG
1p/5tMjvYz7tZpn/mU+LfD3m08JHMJ/2nORiMJ+2peRrMJ8W+XrMp10q+RTM
p5U8DsV82uOSc8F8WifxHcynHSj+hfm0yNdjPm1P5N8Rnxb5esynnSA5egaf
VurMp42T/synbSv9mU97T/LvmE97T/LvmE8bJTl6zKdFnfm015DfR3xai/Rn
Pi3y9ZhP21Hy75hPixw95tMulTrzadGf+bTI12M+LfLvmE+LfD3m08ZLjh7z
aZdKnfm06M982rfSn/m0yFNgPi3yFJhPizwv5tNyH/gL7gN/wX3gL8CrZz5t
ksxjzKeFr2E+rXBilcGnlXmM+bT4OyrzafF3V+bTIt+Z+bROMo8xn3aCzGPM
p2W98BesV/NpSS/8BevV97tJL/wF64W/YL3wF6wX/gL5esynZb3wF+CFMp9W
5s9k5tPiuWI+bTF5rphPq+S5Yj5tMZljDT6tzLHMp0XeHPNp5XOTmU+L/ALm
07Je+AvWC3/BeuEv8HvEfFrWC3/BejWflvTCX7Be+AvWC3/BeuEv/IV7zHxa
5G4wn5bPa39B5+Ev4MeZTws/znxaPg9/wefhL4T/rJhPi+ec+bR4zplPy33g
L7gP/AX3gb9AvjbzaWWeN/i0Ms8r5tPKPG/waWWeN/i0yNdjPq34HYNPK37H
4NMiX4/5tOJ3DD6t+J1k5tNOEP/CfFqZV72YTyvzqmI+rcyrBp8W+XrMp7U7
ZevPfFr0Zz6tXW9b/h3zaZF/x3zat262HD3m0yJfj/m0Ms8nM58W/ZlPi3w9
5tOKHzH4tMjXYz4t6synFb9j8GnRn/m0yNdjPi3y75hPK37Q4NMiX4/5tPbS
n/m0yO9jPq3M88nMp0W+HvNp4SOYTyvzvMGnlXne4NMiX4/5tOJ3DD6t+B2D
TxsuORfMp5XvafBpxe94MZ8W+XrMp10q+XcGn1by75hPK3OpwaeVOdbg07aU
/synlXlVMZ92qeTfMZ9W5nmDTytzu2I+LerMp20p/ZlPO1D6M58W+XfMpxW/
Y/BpkaPHfFrxOwafFv2ZT4t8PebTIv+O+bTI12M+rfg+g08rPtHg06I/82nF
Dxp8WuTiMZ8WeV7Mp0WeAvNpuQ/n6zGflvtwvh7zaTGPMZ8W8xjzaTF/Mp8W
vob5tPg7KvNpMY8xnxbzGPNpMY8xn1bmwGTm07Je+AvWC38RR3rhL1gv/AXr
hb9gvfAXrBf+gvVyvh7zaVkv5+sxnxZ5H8ynxXPFfFon5DYSn1bmNINPizmW
+bTi4ww+LfI+mE+LfBPm0yK/gPm0rBf+gvXCX7BeztdjPi3rhb9gvfAXrJfz
9ZhPy3rhL1iv3l8I95j5tMjLYz4tn+d8PebTwo8znxZ598yn5fPwF3we/kJ+
v7yYT4vnnPm0eM6ZT8t9OF+P+bTch/P1mE9bU+Z/5tMiX4/5tMGSi8F82lDJ
12A+rbyPZPBpp0g+BfNps0o+BfNpka/HfFp5X8vg0yJfj/m0S8W/MJ8W+XrM
p0W+HvNp5X0bg08r79uYfFrpz3xa9Gc+LfL1mE+7WfLvmE/bUnL0mE+LfD3m
08r7SAafFv2ZT/tD8u+YT4v8O+bTIl+P+bSoM5/2p/RnPi36M58W+XrMp5X3
zQw+rbzPZvBpka/HfFrk6zGftrv0Zz4t8vWYT4t8PebTwkcwn1beRzL4tL0l
X4P5tMjXYz4t8vWYTyvvaxl82uaSc8F8WtmzGHxa5Osxnxb5esynRb4e82nv
Sf4d82kTJEeP+bTI12M+bX7pz3xa5Osxnxb5esynRb4e82mRr8d8WtSZT2v3
3daf+bTI12M+LfLvmE+LfD3m0yJfj/m08r6WwadFf+bTyvtaBp8W+XfMp20v
+XfMp0W+HvNpka/HfFr0Zz4t8vWYT4s8L+bTIs+L+bTIU2A+LfeBv+A+8Bfc
h/P1mE+LeYz5tJjHmE+L+dPg08o8xnxa5M0xnxbzGPNpMY8xnxbzGPNpkTfH
fFrWy/l6zKeNJ73wF6yX8/WYT8t64S9YL+frMZ8W+XrMp2W98BfghTKfFnkf
zKfFc8V8WuTrMZ9W3jMx+LSYY5lPi7w55tMi74P5tMg3YT4t8guYT8t64S9Y
L+frMZ8Wv0fMp2W9nK/HfFrWC3/Bejlfj/m0rJfz9ZhPK/eJDD4tn4e/4POc
r8d8WuTlMZ+Wz3O+HvNpZT9o8GnxnDOfFs8582m5D/wF94G/4D46X29y9J1n
84INPu3JlfffvO8caPBpix6fnHh6U6jBp81QrmK3tAsCDT6t+6vP24uM9Tf4
tJszjj5WOsbP4NPmHDqwdoe+/gafNqH1y7LNVwQafFrlVX+0lbPKfNqmt5eu
D+0TaPBpKxa82rbKxGCDT7vJLiiy7O5Qg0+7qsEZl+cpPx/m09b7b/fvB0eE
Gnza3x+t2mL9OTCf9jepM592pfRnPm1d6c982jGXwtZYvz/zaV86t+tu/fkw
n/ZUtYEFC04INfi0Z6TOfNpx0p/5tOjPfNobVYb3tP77Mp+2z/OO66zPD/Np
Z56P/lV9nJ/Bp0Wd+bTXpT/zadGf+bR7//z1uX1ff4NP6+KQZ//MaX4Gnzat
a5mO1ueE+bTppM582n3Sn/m0xaU/82k9Xyc4XvkYZPBpG3a6efnchkCDT7tz
aURcupxhBp92YdqPMTX/CzT4tEXCqz92uNfQ4NNWPDl0vZW/ynzaUgU8swwp
EGDwafMvfu8T1zLQ4NOuaT9knpWzynzaw+lvHMqfI9Dg03rvmuPhVynE4NNW
qdOoW1C/UINPG5+ULdL682E+7d4/t/osPBRq8Gk/7O+6wPpzYD7tR6kzn3aG
9Gc+Lfozn3ZeL6dB1u/PfNoesV0mWH8+zKet/vsWt0clQw0+LerMp50r/ZlP
i/7Mpz02+8BS678v82nfbmw9w/r8MJ+27FrnZ13/8TP4tGWkznxa9Gc+7Rvp
z3zaM80txwanPD/Mp13ZoNCV7UF+Bp+2S2Cr4dbnhPm0XaXOfFr0Zz7tKunP
fNobI0ZkmBbrr/oviE7TKsMPL/iLpo1fvgstGaCWlLaf+svnqxf8xbpT3vlc
hwao0Ynbs9//8dUL/gJ9Bkgf+Av0WSl94C/QZ4z0gb8I3tE+6PzEILUix86C
418V0P5i95mU4TtDsHJ5+XX4kiYFtL/4XPhOpSbdgtWnrvVKO9wsoP1Fv0+B
hQrWClG/spc/seV5fu0vjnVeql7Hh6jd5a+Ue56/gPYXld4e/RI4L0Tl/FSj
/Z7JmVLz9a7EvrxZOEQVVFsXTdhmr/3F2PGhuQ/vCFa965UO2bY5k/YXGTbf
L532WZBq9TUkU9sZmbW/2F5rStpKM4NS5vgvDT54ZNb+gvXCX7Be+ItPovej
6IW/YL3wF6wX/oL16nw90ZtX9MJfQG8f0Qt/Ab3NRa++fyF6X4pe+Isq+exd
MvZrqO5MPhu3sE0p7S/AEXX+9nZrUoFS2l/guRq3J1em5k1LaX+B58ohy6Rr
7g9Kan+B5+rp3Lv2od9Kan+RK6LDmRFjUp5nuwzzpy0pov3F6prfDzllDlAl
Sh2q1r9qUe0vOj178/zLUn8Vtmro1Cxbi2h/8TzH6J/VLzVUfmnjn7dZXlT7
i3nCO5325NHE8n2Lan/BeuEvWC/8BeuFv4DeLKIX/oL1wl+wXvgL1gt/Ab2N
RC/8BeuFv2C98BdfhXvcLN0AtXR/Ge0vwD12Tox2TMhYVvsLPg9/gfNF5Dz8
RcfIo30XLg5TnpU8zkaF/fCCv+hcvYAlQ7ZwVX6uV8udv755wV/gfA05D3+B
8xXlPPwFnvPtl6vsvXO0jPYXeM4rj9n/j0O9stpfbJPnPOJz+92vS5XV/oL7
wF9wH/gL7gN/gfmf+bSY/5lPm158BPNpn0suBvNpka/BfFrkazCfFvkUzKcd
LPkUzKctKTkXzKf1Et/BfFr4F+bTwr8wn3bS6h7frD8f5tO6tmjq8SFlvmU+
bX2/hhOsPwfm03pLnfm0E6Q/82ldpD/zaTtXfzfC+v2ZT3t+eMYG1p8P82m3
zCnwzjonM592m9SZT9tF+jOfFv2ZT3swoWhD678v82ljgx1GWZ8f5tMOqPrl
cpde9Q0+LerMp0V/5tOiP/Npl7ouO72gha/Bp83UdedMK3+Y+bRPx/xdz/qc
MJ/2H6kznxb9mU+bUfoznxbzP/NpK8j8z3zaBeIjmE+rczGIT4t8DebT5pR8
DebTIp+C+bT/ST4F82mnIeeC+LRJ4juYTwv/wnzafOJfmE/bz2FT2SwpPx/m
0y5xjSp4PmW+ZT7ttSKOva0/B+bTos582v7Sn/m0S6U/82mHX9wSZv3+zKeN
2pu1hfXnw3xa5+SITAVS5mTm0xaSOvNph0l/5tOiP/Np131pPsD678t82stO
6Ttanx/m0zpmPZi87GJ9g0+LOvNp0Z/5tJekP/Npt1laLbI+P8ynnbh6/3or
f5j5tOHr00ZbnxPm06LOfFr0Zz7tJOnPfFrkJjCfFv/dZz5tqOQgMJ+W+4BP
y33Ap+U+4NO6yzzGfNqFMo8xnxbzGPNpm8g8xnxazGPMp80p8xjzaZNkHmM+
bWeZx5hPi3mM+bTg7TOflvWCT8t6wadlveDTsl7waVkv+LSsF3xa1gs+LesF
n5b1gk/LesGnRd4H82nBEWU+LfI+mE/rJc8b82mR98F8WjyHzKedInMs82mR
98F8WuQUMJ8WvFPm07Je8GlZL/i0rBd8WtYLPi3rBZ+W9YJPy3rBp2W94NOy
XvBpWS/4tH2Fh8x8WuRuMJ+Wz4NPy+fBp90jvpv5tDtkPmc+LZ8Hn5bPg08L
P8h82pvye8d8Wjz/zKflPuDTch/wabkP+LSY/5lPi/mf+bTwEcynRb4e82mR
r8F8WuRrMJ8W+RTMp0U+BfNpka/HfFrk6zGfFv6F+bTI12M+LfLvmE9rL/l3
zKdFvh7zaZGvx3xa9Gc+LfL1mE+LfD3m0yL/jvm0yNdjPu1cqTOfFvl6zKdF
f+bTIl+P+bT1JP+O+bTI0WM+LerMp0V/5tPWkf7Mp0W+HvNpr0r+HfNpka/H
fFrk6zGfFv2ZT4v+zKdNK/M/82mRr8d82jjxEcynRS4G82mRr8d8WuTrMZ8W
+RTMp0W+HvNpka/HfFrk6zGf1kH8C/Npka/HfFrk6zGfFvl3zKdFvh7zaZGv
x3xa5Osxnxb9mU+LfD3m09aS/Dvm0yJfj/m0qDOfFvl6zKdFvh7zaZF/x3xa
5OsxnxY5esynRZ35tEWlP/Np0Z/5tMi/Yz7tbcm/Yz4tcvSYT4s682nRn/m0
6M98WuQpMJ8WeV7Mp0WeAvNpuQ/2F9wH+wvug/0F5jHm02IeYz4t8qqYT6tk
HmM+LeYx5tNiHmM+LeYx5tPCHzGfFvMY82mRN8d8WtaL/QXrxf4C8yfzaVmv
fj+K9GJ/wXqxv2C92F+wXuwvWC/2F9DLfFrkAjCfFrxQ5tPiuWI+LZ4r5tP2
l+eK+bSSo23waTHHMp8WeR/Mp5U8eoNPi7wP5tOyXuwvWC/2F6wX+wvWi/0F
68X+gvVif8F6sb9gvdhfsF7sL1gv9hfI3WA+reTRG3xaPo/9BTjJzKfF3M58
2sXix5lPy+exv+Dz2F/AZzGf9pw858ynHSbPOfNpuQ/2F9wH+wvug/0F5n/m
036U+Z/5tMjXYz4t8vWYT4t8DebTHpB8DebTIp+C+bTjJZ+C+bTI12M+bS7x
HcynhX9hPi38C/Npka/HfNrXkn/HfFrk6zGfNp/UmU+LfD3m0yJfj/m0yNdj
Pi3y75hPixw95tMOkzrzadGf+bQ1pD/zaZF/x3zaBpJ/x3xa5OgxnxZ15tM6
SX/m0/pIf+bTXpD8O+bTLpP8O+bTIl+P+bTI12M+LfL1mE+L/synPSvzP/Np
ka/HfNp24iOYT4tcDObTLpB8DebTIl+P+bTrJJ+C+bTI12M+LfL1mE+LfD3m
08K/MJ8W+XrMpx0h+XfMp+0k+XfMp0W+HvNpka/HfFrk6zGfFvl6zKdFvh7z
aZGvx3xa5Ogxn/ax1JlPi/7Mp0W+HvNpkX/HfNq6kn/HfFrk6DGfFnXm06I/
82nRn/m0yL9jPu1qyb9jPi1y9JhPizrzadGf+bToz3xa5CkwnzaH5CkwnxZ5
Xsyn5T7wF9xH37+gPvAX4NUzn/aMzGPMp8U8xnxazGPMp8XfS5lPi7w55tMi
b475tJjHmE+LnCzm0x6VeYz5tKwX/oL1wl9AL/NpWS/8BeuFv2C98BesF/6C
9cJfsF74i2OkF/7iT+GFMp8WvFDm0yLfhPm0yJtjPu0Oea6YTztW5ljm0yJv
jvm0yPtgPq275Bcwn3aG5Bcwn5b1wl+wXvgL1gt/wXrhL1gv/AXrhb9gvfAX
rBf+gvXCX7Be+Au5b2LwaeW+iWI+LZ+HvwAnmfm0yMVmPi38OPNp+Tz8BZ+H
v8Bzznxa5Egyn/aIPOfMp+U+8BfcB/6C+8BfHJL5n/m0+2X+Zz5te/ERzKdF
vh7zaZGvwXxa5Gswnxb5FMynjZB8CubTIl+P+bS3xHcwn3aM+Bfm044R/8J8
2t6Sf8d82pWSf8d8WuTrMZ/2ntSZT9td+jOfFvl6zKd1k/w75tMiX4/5tBbJ
0WM+7RGpM5/WQ/oznxb9mU97S/LvmE/rKPl3zKdFjh7zaVFnPu0N6c98WvRn
Pu1Cyb9jPu01yb9jPi3y9ZhPi3w95tMulv7Mp70k/ZlPO1fmf+bTIl+P+bQJ
4iOYT4tcDObTnpJ8DebTIl+P+bT9JZ+C+bTI12M+LfL1mE+LfD3m0yaJf2E+
LfL1mE/rj/w74tPOl/w75tMiX4/5tE5SZz5tsPRnPi3y+5hP+5vk3zGf1l7y
75hPixw95tMmSJ35tLHI7yM+bXrpz3xa5Osxnzaj5N8xn/aj5Ogxn/at1JlP
i/7Mp7WX/synRf4d82kfSf4d82l/So4e82ntVtrqzKdFf+bT3pP+zKdFngLz
aZHnxXxa5OIxn5b7wF9wH87XYz4tePXMp02UeYz5tPA1zKfNLfMY82nha5hP
i7+jMp8Wf3dlPi3ys5hP6ybzGPNpkZ/FfFrWC3/BeuEvnEgv/AXrhb9gvfAX
rBf+gvXCX7BeztdjPi3rhb8AL9Tg0wovlPm0eK6YTyv3jhXzaePkuWI+bbjM
scynxdzLfFrkFzCfVu6VK+bTIu+D+bSsV/NpSS/8BevlfD3m07Je+AvWC3/B
euEvWC/8BeuFv2C98Bcewj1mPi1yN5hPy+fhL/g8/MVX8ePMpz0nfpz5tHwe
/oLPa38hzznzafGcM58WzznzabkP/AX34Xw95tMKr0kxn1Z4TYr5tMJrMvi0
yNdjPi3y9ZhPGy/5GsynRb4e82mFZ6WYT4t8PebTCs9KMZ9WeFaK+bSh4l+Y
Tys8IsV8WuEFGXxa5Osxn1Z4RIr5tDWlP/Npka/HfNrvkn/HfFrk6zGfdpLk
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
1yHj0150/uouvTrlZXzaAZUO++DT/h0zPu13y9+om/x87NMuOeWy4nn5HTM+
7eVjLxqW/Bzs0/LcPi3n26flfPu0XUeVHJr889unHXvBuKuSn4992hIvP3rp
x8UdMz4tz+3Tcr592nFxvn3aUS9O7578+7VPW1Chwl3J+2Of9u2jKuQlvrF9
2rfiuX1azrdPmx/n26f9Y+i2p5L3xz5tUfMNRyf+sH3a6QsHdE3eE/u0PLdP
y/n2aYvjfPu0tY59uvqlx+RlfNpX89pMeL5vh4xPO/D7f+18d3rHjE977YyP
8/s83CHj01Z988+p6w/Lzfi0PUvVPTB1ZbuMT7ug6l8LRs3Mzfi053xX1LpM
sw4Zn/bTJ2p/++VZ7TI+7R2Pr7m/6NQOGZ926ZB5Tb5/Ji/j09aoV+qz/u07
ZnzaXgO+zkt+PvZp/9hfq/WJAztmfNoJ+yoOSn4O9mkfief2aTnfPi3n26fd
vvGbq5N/fvu0HVtN6Jf8fOzTvtjmxUavnNMx49Mujuf2aTnfPi3n26fdf80r
Q5J/v/Zpx/96zIDk/bFPe+U3my5LfGP7tN3iuX3aA3G+fdqH43z7tMPWvvpA
8v7Yp918z8fnJv6wfdq8Jg9dk7wn9mlz47l9Ws63T/tJnG+f9ogrK11QvlFu
xqd9+538JwbMyc34tP2HH3hhy4bcjE/LOfZpOcc+LefYp13xxz/fe35Th4xP
O3jE2/l9j8/L+LTHzV+7fFDrvIxPu/GEw2p9/Fxexqe984MFlzfempfxaS+e
2GhW/8/zMj7tHaVHV375ybyMT7v18xHPP3tjXsanPWVg+/ptSudlfNpblz5V
9YutHTI+refl+1Gel+9HMa99Ws/L96M8L9+P8rx8P+r2mNc+7baY1z7tqTGv
fVrmtU+LF2qf9trwQu3T8l7Zp30n3iv7tLxX9mnPajG+XJn/5mZ82huWbL6/
45TcjE+7fvzGSi2uzs34tJXb5XRY+3f7jE+7/uNd5/85u33Gp/W8fD/K8/L9
KM/L96OY1z6t5+X7UZ6X70d5Xr4fxbz2aT0v34/yvHw/qlq4x/ZpcY/t0/rz
fD+Kz9unXddiRc8Tv+qY8WlHfDho5/rT8zM+LZ+3T8vn7dPyntun5T23T8t7
bp/W5/D9KJ/D96N8Dt+P4v5vn5b7v31a9gj7tKdFF8M+bbvoa9infTf6GvZp
L4w+hX3aBdGnsE97RXQu7NPeGnuHfVr2F/u0V8f+Yp/2s5uOm538fOzTzl87
+vXkfmufdtCwwzYnPwf7tAPjuX1azrdP+2ycb582t07RzuSf3z5tyaWvT0p+
PvZpf7l298zknmyfluf2aTnfPm2pON8+7W/rt0xJ/v3ap31o1FsfvnLw/bFP
O//GF85NfGP7tM/Gc/u0nG+f9sE43z7txm5Xnpa8P/Zp6829+euuT7bK+LSV
Vowcl7wn9mkrx3P7tJxvn7Z+nG+flvu/fdrucf+3T3tN7BH2aV+iiyGflr6G
fdqW0dewT0ufwj5tjehT2KddRedCPu3W2Dvs07K/2Kdlf7FPW3jmpa8mPx/7
tLsWjlqc3G/t0x7VZc2q5Odgn/boeG6flvPt03K+fdpP/lXr/eSf3z7t/b+9
81zy87FP+/TfpeYn92T7tHPjuX3aTXG+fdrRcb592s8uOWX1Rwf//dqnLd12
xZLk/bFP27jl7eUT39g+bdN4bp/2yzjfPu2Rcb592p37Kv3Y7OD7Y592+ZdD
Dtx1VauMTztqx2tzkvfEPu3weG6fdkecb5/2tTjfPu3A6CbYp6WPYJ92eLju
9ml9Dr+/8Dn8/sLn8PuLq+M+Zp+W+5h9Wu5j9mnZa+zTch+zT8t9zD4t9zH7
tNzH7NOeFvcx+7Tr4j5mn9bz8vsLz8vvLzwvv7/wvPz+wvPy+wvPy+8vPC+/
v/C86e8vNC+/v/C8/P6idfQ+7NPS+7BPS+/DPi3vm33aN6L3YZ+W99A+LfdY
+7Qj4/20T0u/wD4tvQ/7tJ6X3194Xn5/4Xn5/YXn5fcXnpffX3hefn/hefn9
hefl9xeel99feF5+fzEvPGT7tLPDPbZP68/z+wt/nt9fsHfbp+V+bp/Wn+f3
F/48v7/oHf892qflvzv7tOxf9ml9Dr+/8Dn8/sLn8PsL+nr2aenr2aetFHuE
fVr6evZpL4m+hn1a+hr2aStEn8I+7fjoU9inbRSdC/u09PXs014Q+4t9Wvp6
9mnp39mnpa9nn5aOnn1antun5Xz7tPT17NPS17NPuzv6d/Zp6ejZp+W5fVrO
t09LX88+LX09+7S3RP/OPi0dPfu04+K5fVrOt087IM63T0tfzz7tadG/s09L
R88+7WHx3D4t59unpd9nn7Z23P/t0zaP+799Wvp69mmnRxfDPi19Dfu09PXs
09KnsE97YvQp7NPS17NPuzL2Dvu0ObG/2Kelr2efdnz07+zT0r+zT7snOnr2
aenr2aflfPu0nG+flv6dfdr+0b+zT1s7Onr2aenr2aflfPu0nG+f9o3o39mn
/T76d/Zp6ejZp60az+3Tvh3n26el32eflv6dfdrZ0b+zT3tDdPTs014Xz+3T
ro3z7dPS77NPe0V0Ez5bVmvEwiMapPtFxegjNNk/+aOCR+ul+wUdhHLjphxZ
pkWDdL/wOewXPof9wuewX7SK+9iqqjdcMDE/J90vuI8duaLutrxrGqX7xS9x
H1uycvOZg/Y1SPcLenOXHBh8YEy3Rul+QW+u7wnrRhyolJPuF9XjPvb1jKfP
6T43J90vuI81qLBkd8vzGqb7Bfex1jvPW7l0aKN0vzgs7mO7JtZ/ekPdhul+
QT+r4aLL1/2+NSfdLzwv+4XnZb/wvOwXnpf9wvOyX3he9gvPy37hedkvPC/7
hedlv6geXui/Wre+9t2FjdP9Ai907efHn3zf603S/YLex2kl1qy7aVOjdL/o
Eu/bb5UL661a0iTdL7iv/l+dZ1bWvK1xul/Qm5u7fGSvSYc2SfcLeh/dqy5Z
9MkPjdL9om+8n8ccWerAT5uapPsFnYLa394+bsYfjdL9gt7cIR+cXebCOk3S
/cLzsl94XvYLz8t+4XnZLzwv+4XnZb/wvOwXnpf9wvOyX3je9PtR4SH/2GnU
gb4fNU33i9HhHldpPemHcq2b/u/7Ufo8+4U/z35BF++hnKWN65zUIN0v+H3K
72dsOuPew+un+4U/z37hz7Nf0Lu8/PpzZ5co0yzdL+h4fnnG3DJzazRN9wve
/31lO637qGPTdL/wOewXPof9wuewX9DXs0/L/d8+LX09+7R0MezTnhB9Dfu0
E6OvYZ/2j+hT2KcdHH0K+7RnR+fCPi1db/u0/4z9xT4tfT37tPT17NNWif6d
fVo6evZpc+K5fVrOt09LX88+LX09+7Tro39nn3ZRdPTs09LXs0/L+fZpN8T5
9mmXR//OPm3n6N/Zp6WjZ592YDy3T/tanG+flr6efdoZ0b+zT0v/zj4tHT37
tDvjuX1a+nr2aY+I8+3Tcv+3T3t+3P/t09LXs087LLoY9mkPi76GfVr6evZp
y0afwj7t/uhT2Kelr2efdk7sHfZp2V/s09LXs09L/84+LX09+7T/jY6efVr6
evZpB8X59mkfi/Pt09K/s09L/84+LX09+7T09ezT3hHn26ctiPPt086L/p19
2g3Rv7NPWzY6evZp6evZp50f59unpa9nn5b+nX1a+nf2afOio2eftl08t0+7
KM63TzsqzrdPSzfh5ZxLhuw9tnm6X/wZfYTrPu85c+2VzdL9Atf9/apfXXZu
zebpfuFz2C98DvuFz2G/qBb3sbJjDv+ydu8W6X5B7zjvzA0Tfh3SMt0vNsV9
bHaTES23PdQ83S/oHd/Rvdzi6je1zPT1nr/t6npPVG+R7hfsQReWaLTt0CUt
0v2C/x91R99bLmgxu3mmrzeh9YrBV45tmenrvfp/l5Ypu7B5ul9MjvvYqIqf
D3/0hxbpfuF52S88L/uF52W/8Lzu6zEv+4XnZb/wvO7rMa/7eszLfuF52S8q
hhe6fv4XlW9ccXmmr3dc04Xvn/9Rq3S/eDV6H9f26jGi4u6W6X7B+9Zw2Hd7
er/bKt0vHor76sCpjYd8PPryTF/vpzMqnVz32FaZvt68Bzpce+chl6f7RW68
n0XXP/afCbtbZfp697Sr0LLxkZen+wW9j1Y1X12xvlWrdL/wvO7rMS/7hedl
v/C87Bee13095nVfj3nZLzyv+3rMy37hed3Xq7Os8uKjt7dO94v+4R73m3/h
7OevaJ3p6/F59gt/3n29sSV+LXqtUvP//f1F7LOrfj60Za8JzTJ9PT6f/v2F
Ps9+Qe9y/LrXrph1Spt0v2DvO39Ew5WtmrdO94sd8f43vfHH4YOvbp3uFz6H
/cLnsF/4HPaL4+P+b592Qtz/7dPuiD3CPi19Pfu0f0dfwz7tb9HXsE+7NfoU
9mm7Rp/CPu1x0bmwT0tfzz4tfT37tOwv9mlvjP6dfVr6evZp6ejZpz0rnmd8
2jjfPi19Pfu09PXs0/4n+nf2aSdFR88+LX09+7Tt43z7tPT17NPOiv6dfVr6
evZp6ejZp10cz+3T0tezT1s/zrdPS//OPu3G6N/Zp6WjZ592XTy3TzsizrdP
+3Gcb5+Wvp592nJx/7dPS1/PPm2f6GLYp90QfQ37tPT17NP+FH0K+7RfRp/C
Pi19Pfu0D8TeYZ+Wvp59Wvp69mnT/p182nujf2efdll09OzT0tezT9s1zrdP
S1/PPi19Pfu09PXs05aIjp59Wvp69mm70++TT0tfzz5tpejf2ad9Mfp39mm/
io6efdpv4rl92ipxvn1a+nr2aenf2af9LPp39mlrRUfPPm2NeG6fdlKcb5/2
kzjfPu1Z0U0o8eTqatPPaZvuF1ujj/BCk7+K+vdvk+4XuO4njbl9z+rmbdP9
wuewX/gc9gufk/pRcR8r/GHalM2D2qX7xT1xH5s24trWk0e3T/cL7mM/zDrl
wN0z26b7Bb3jVa/Puf6DYe3/9/fdcR/bt2XfnqaN26X7BXvQwF4fT5i9pl26
X3Afq76uzJc7X2yb7hfcx7bML652yBPt0/2C+1ipsWtXLFjeNt0v6GetHzj4
svqHtP+fH6V52S88L/uF52W/8Lzp33drXvYLz8t+4XnZLzwv+4XnZb/wvOwX
v4QXWvaI+rtHXZub7hf0Pqp1PLNpn59z0/3iyeh9PP/mn5e9uK99ul/Q+2g6
YOWHh/2Qm+4X3Fc/3f/tpFfa5ab7Be/htJWfXHPDw7npfkHvY8igX44ZWzo3
3S9qxvuZu/2kxVP356b7Bb2Pq4sL7tpzVG66X9D7eGdN1WV1FuSm+4XnZb/w
vOwXnpf9wvOyX3he9gvPy37hedkvPC/7hedlv/C87Bd4yDkPdVlcfEeHdL+Y
G+7x5lI9Lzy/Vod0v/Dn2S/8efaLGbF3f9zrgaN7VG+b7hf8PuXowqn7S85u
k+4X/jz7hT/PfkHvst/kZ0pXmdQh3S/oWi69ue+y387vkO4X6+L9f2vH69PH
XNYh3S98DvuFz2G/8DnsF/vi/m+fdk/c/+3Tro09wj4tfT37tKuir2Gfdnn0
NezT0qewT0ufwj7tZ9G5sE9bPvYO+7T09ezTsr/Yp6WvZ5/2u+jf2ac9Ljp6
9mkrxnP7tB3jfPu09PXs014S/Tv7tDWif2eflr6efVr6evZp6evZp6XfZ5+2
YvTv7NM2j/6dfVo6evZp747n9mnLx/n2aZvG+fZp6evZp308+nf2aeno2aft
Hc/t034Y59unfSLOt0+7Lu7/9ml3xf3fPi19Pfu0k6OLYZ92WvQ17NPS17NP
+2z0KezTjo0+hX1a+nr2ab+IvcM+7Q+xv9inpa9nn5b+nX3aa6J/Z5+2cXT0
7NM2j+f2aYfH+fZp6ffZp6V/Z5+2QfTv7NNuj46efVr6evZpm8f59mnp69mn
3RH9O/u0taN/Z592QXT07NP+O57bp/0+zrdP2yDOt09L/84+7bzo39mnrR0d
Pfu0F8dz+7R/xPn2aZ+K8+3T0k2wT0sfwT4tHQT7tD6H/cLnsF/4HPaLPXEf
s0/7btzH7NNyH7NPy33MPi3dcPu09I7t09I7tk/Lfcw+Lfcx+7T0s+zTel72
C8/LfuF52S88L/uF52W/8LzsF56X/cLzsl94XvYLz8t+8Wr0PuzTTg5H1D4t
vQ/7tPTm7NMuivuqfVreQ/u09D7s09IvsE9Lv8A+Ld6pfVrPy37hedkvPC/7
hedlv/C87Beel/3C87JfeF72C8/LfuF52S/wkO3TDgj32D6tP89+4c+zXwyP
vds+Lb9PsU/rz7Nf+PPsF/Qu7dPStbRP2zvef/u0Pof9wuewX/gc9gv6evZp
6evZp+0Ve4R9Wvp69mkfjL6GfdqK0dewT0ufwj4tfQr7tPnRubBPS1/PPi19
cPu07C/2aenr2aelr2eflo6efdpt8dw+bf843z4tfT37tPT17NPub/n/+3f2
aVdGR88+LX09+7QXx/n2aenr2afdFv27jE8b/Tv7tHT07NNOiOf2aen32ael
r2eflr6efVr6d/Zp6ejZp60ez+3T0tezT0u/zz4tfT37tC/E/d8+LX09+7Q9
oothn5a+nn1a+nr2aenr2aftHH0K+7T09ezTPht7h31a+nr2aenr2adtFf07
+7T09ezTlo2Onn1a+nr2advF+fZpp8X59mk7R//OPi19Pfu0k6OjZ5+Wvp59
2sI43z5tyTjfPm2v6N/Zpy0R/Tv7tHT07NPS3bNP2z/Ot09LX88+Lf27jE8b
/Tv7tCWio2efdl909+zTrozz7dNuifPt09Ips09LV9c+LR0u+7Q+h/3C57Bf
+Bz2i2VxH7NPS2/OPi33Mfu03Mfs0/L/l9qnHRn3Mfu09I7t03Ifs0/Lfcw+
Lf0s+7Sel/3C87JfeF72C8/LfuF52S88L/uF52W/8LzsF56X/cLzpj5tdAHs
064KR9Q+7SfRC7BPS2/OPu0dcV+1T8t7aJ+W3od9Wnof9mnpFNinxTvN+LSa
l/3C86Z/f6F52S88L/uF52W/8LzsF56X/cLzsl943vTvuzVv+vcX4SHbpx0c
7nHGp9Xn2S/8efaLDbF326fl9yn2af159gt/nv2C3qV9Wjqe9mnpadqn9Tns
Fz6H/cLnsF9sOWRHo9EDCzM+7dSjF6w+pltBxqdtdtqhle68pyjj09Z+v+N9
xw8qyPi07y2qPf+s6/MzPu2Dr+2vmfir9mkb3jbkx3d65md82rv6Pd+n2e0F
GZ92Y5crKybOqn3aL+cd9XT9ngUZn7bNO+eOqHZDYcanHbOsx755I4oyPu0R
3ar0Sn4+9mk/WjLlnluvLcr4tL0uHPtM8nOwT8tz+7Scb5/2wzjfPu3gs6+e
k/zz26d9dvUP9yU/H/u0pxb92e3JfkUZn5bn9mk53z4t59unfbJg3/3Jv1/7
tP2fu2lu8v7Ypz1Q5ZoNiW9sn5bn9mk53z7tjXG+fdoKp9Zfl7w/9mmbr3jr
34k/bJ/2pbbvj0zeE/u0PLdPy/n2aVvE+fZp854v1fmQKoUZn3bTj/NeGXp3
QcanHffAN+UnLyrK+LTD69caevHcgoxP26xX8RtTT8zP+LTvzvzr3MRftU/7
ztudPu64OD/j0zYevfiWjZ0KMj7t/T/cVjlxVu3TTmpQ9YUzLi7I+LQbjy/d
7+XlhRmftv0nV5eu16so49PeVa7pHcnPxz5thekTb/nq/qKMT7vw0ZsfT34O
9mn/Hc/t03K+fVrOt09b4tZmDyX//PZpb9ixZ2Ly87FPu2HXsX1H1SvK+LTv
x3P7tJxvn5bz7dOeWOqUJ5N/v/Zp5z98w9Tk/bFP22pc67cS39g+bet4bp/2
pDjfPu2CON8+7fS+py5O3h/7tKU/Xf1K4g/bp+33+XfjkvfEPm3feG6flvPt
0x4R59unPXPfHQVbC/IzPu2XfZ5fU39ZfsanHX3GldvmbM/P+LScY5+Wc+zT
co592i0T+/8x9PuCjE87/sxzhl56QWHGp72o9QW7Gl9VmPFpf1rc46on3yzM
+LSTbzrq5qP2FGZ82rY1Hl932W+FGZ920pydLYe/VJjxaf+466stg4YXZnza
WhUX9D6+UmHGpx3b6dD8+XsKMj6t58Wn9bz4tMxrn9bz4tN6Xnxaz4tPOzHm
tU/7Z8xrn7Z2zGuflnnt074XXqh92uHhhdqn5b2yT/tVvFf2aXmv7NPmfP1j
nY278zM+7X3FdV+otCA/49Purl6zZfnb8jM+bdU39r//XIX8jE9775H5r7XY
0THj03pefFrPi0/refFpmdc+refFp/W8+LSeF5+Wee3Tel58Ws+LT4t7bJ8W
59k+rT+PT8vn7dPu/LrymK/+KMr4tI8P2Fh+2qXFGZ+Wz9un5fP2afnv2j4t
77l9Wt5z+7Q+B5/W5+DT+hx8Wu7/9mm5/9unZY+wT3t+dDHs066MvoZ92nui
r2Gf9uLoU9inpU9hn/ad6FzYp2XvsE/L/mKf9u7YX+zT/nXMre8lPx/7tG/3
3fVtcr+1T1v46WfHLTr4c7BPy3P7tJxvn/atON8+bd///qf86p75GZ/2sdtz
fk1+PvZpjzmi1Zrknmyftlw8t0/L+fZpZ8T59mknlmz722sH//3ap+3RY2WF
5P2xT/vTRy/VT3xj+7Q8t0/L+fZpOd8+bcl1Y+ok74992joDTjgl8Yft087b
f/qe/x58T+zT8tw+Lefbp60b59un5f5vn5b7v31a9gj7tIPoYsinrR19Dfu0
r0Vfwz7tsuhT2KetGX0K+7R30rmQT8veYZ+W/cU+LfuLfdqbVkzYnvx87NMe
3m77p8n91j7tzNaryqw9+HOwT/tEPLdPOyDOt0/L+fZpfzlr4t7kn98+7VVT
mpS46eDPxz7tqqm9Nyb3ZPu0r8dz+7Scb5+W8+3Tlnnp+qOTf7/2aWc0fa1k
8v7Yp63XeNrFiW9sn7Z+PLdPWzbOt0/7eJxvn3bsKTecnrw/9mn/eujk8xJ/
2D5tt/EN/l528D2xT9s1ntunfSjOt0+7N863T0tPYXy9UXsvfataDvsFPYXj
Hty/5sj21XLYL4ZGT+Hnk/P3nd27Wg77hc9hv+CcE+Ic9gufw36BV7+35ZZL
5jxWI90v8OofPfBtm/lDaqT7Bfex97rt/63UozXS/YL72PhRL3/6U9ca6X7B
fezu9l/9fte1NdL9omHcx2q8/uuUZRUvSveL++M+9kjZr+9eXOeidL/YFfex
q579YGOXEy9K9wvuY9PvPeH7mwouSvcL7mMLl3330ZeXX5TuF56X/cLzsl94
XvYLz8t+4XnZLzwv+wX3zwkxL/vFbs3LfuF52S88L/sFvY977p84v0JBnXS/
GBSOaOVGc948sXqddL84Nt6r/Jkv9b8lt066X/BeHb/65k5XVqyT7he8V4eP
e+ymbyvXSfcL7rEvH/bvCuetqZnuF9xjT243Y+8ZP9ZM9wv6Jl9/Nyb37fdq
pvsF/YIz39jQZ1uZS9P9YmB4pzX3z2mf+49L0/3C87JfeF72C8/LfuF52S88
L/uF52W/8LzsF8z7TczLfuF52S88L/sF7nHD5teNeeSeuul+gXs846FOtzw0
u266X/jz7Bd8fmZ8nv2CfXzX0U1vuXV9tRz2C/bx8+64evY9I6vlsF/48+wX
/jz7Be9532otV9cYWTfdL86P9/zpkmM+b7WybrpfDIv3fGnDHu8sW1w33S98
DvuFz2G/8DnsF/T17NPS17NPS1/PPm2l6GLYp6WvYZ+WvoZ9WvoU9mnp69mn
pa9nn5a+nn1a+nr2adlf7NPSv7NPS//OPi0dPfu0PLdPy/n2aTnfPi39O/u0
9PXs09LRs0/Lc/u0nG+flr6efVr6d/Zp6evZp6WvZ5+Wvp59Ws63T0tfzz4t
/Tv7tIXRv7NPOy06evZp6evZp+V8+7T09ezT0tezT0tfzz4tfT37tNdFF8M+
LX0N+7T09ezT0qewT3tu9Cns09LXs09LX88+LX09+7T09ezT0r+zT0v/zj4t
fT37tPT17NNyvn1azrdPS//OPi39O/u09PXs09LXs0/L+fZpOd8+LX09+7T0
9ezT0tezT3tVPLdPS1/PPi19Pfu09O/s026J/p19Wvp69mnp69mn5Xz7tPT1
7NPS7bJPy//u26elg2Cf1ufw/Sifw/ejfA7fj1oe9zH7tNzH7NNyH7NPy33M
Pi33Mfu0l8R9zD4t9zH7tPSz7NNyH7NPe0vcx+zTel6+H+V5+X6U5+X7UZ6X
70d5Xr4f5Xn5fpTn5ftRnpfvR3levh/lefl+FF0A+7Q4ovZp6QXYp6X3YZ+W
3od92irxHtqnvTHusfZpeT/t09L7sE/7Xnin9mk9L9+P8rx8P8rz8v0oz8v3
ozwv34/yvHw/yvPy/SjPy/ejPC/fj/K8fD8KD9k+7Ypwj+3T+vN8P8qf5/tR
7N32adln7dP683w/yp/n+1Hsg/Zp+f9P7NPy/tun9Tl8P8rn8P0on8P3o7j/
26fl/m+flr6efVr6evZp6evZp6WvZ5+Wvp59Wvp69mnp69mnHRh7h31a9hf7
tPT17NPSv7NPS1/PPi19Pfu09PXs03K+fVr6evZp6d/Zp6WvZ5+Wjp59Wp7b
p+V8+7RHxPn2aenf2acdG/07+7T09ezT0tezT/trnG+flr6efdqPon9nn5a+
nn1a+nr2aenr2aelr2eftkGcb5+W+799Wvp69mnp69mnpa9nn7Zu9DXs09LX
s0/bOPoU9mnp69mnpa9nn5a+nn1a9hf7tGfH/mKflv6dfVr6d/Zp6evZp6Wv
Z5+W8+3Tcr59Wvp69mnp69mnpa9nn5a+nn1a+nr2aenr2aelr2ef9ojo39mn
pa9nn5a+nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6WvZ5/21TjfPi3d
Lvu0dHXt046IDoJ9Wp/DfuFz2C98jvt69mm5j9mn5T5mn5b7mH1a7mP2admD
7NPy/6Pap+U+Zp+W+5h9Wnpz9mk9L/uF53Vfzz6t53Vfzz6t53Vfzz6t53Vf
zz6t52W/oPdhn5beh31aeh/2aXnf7NPSm7NPS2/OPi29D/u09D7s09Kbs0+L
d2qf1vO6r2ef1vO6r2ef1vO6r2ef1vO6r2ef1vO6r2eflh6HfVrcY/u0/rz7
evZp6eXZp6WXZ5/Wn3dfzz5tn/jv0T4t/93Zp60U7799Wp/jvp59Wp/DftE2
7v/2aVfH/d8+LX09+7T09ezT0tezT/tc9DXs09LXs0/7cPQp7NPS17NPS1/P
Pu3/xf5in5b9xT7trOjf2aelr2eflo6efdou8dw+LX09+7T09ezT0r+zT0tf
zz7t2ujo2aelr2efdkScb5+Wvp592s3Rv7NPS1/PPi19Pfu09PXs09LXs097
c5xvn5b+nX3a06N/Z5+Wvp59Wvp69mmXxvn2aenr2aelr2eflr6efVr6evZp
6evZp60cfQ37tPT17NOeE30K+7T09ezT0tezT0tfzz4tfT37tPT17NOOo38n
n/bl6N/Zp6WvZ5+Wvp592ofjfPu09PXs006J/p19Wvp39mnp69mnpa9nn3YS
/T75tDfG+fZp6evZp/0u+nf2aenr2ac9L57bp6WvZ5+Wvp59Wvp69mnp69mn
7RcdPfu09PXs09LXs0/7ZJxvn5Zul31a+lz2aekg2Kf1OewXPsd9Pfu03Mfs
074Y9zH7tNzH7NPSm7NPy/9fap+WPcg+Lfcx+7Tcx+zTch+zT0tvzj6t52W/
8Lzu69mn9bzu69mn9bzu69mn9bzsF57XfT37tPTm7NPS+7BPS+/DPi29D/u0
3Fft0/Ie2qelN2eflt6cfVp6H/Zp8U7t03pe9gvPy37hedkvPK/7evZpPa/7
evZpPa/7evZpPa/7evZp7w/32D6tP89+4c+7r2eflt+n2Kf159kv/Hn39ezT
0lW3T0sXzz6tz2G/8Dnu69mnvTju//ZpF8b93z7tobFH2Kelr2eflr6efVr6
evZp6evZp6VPYZ+Wvp592oaxd9inLR/7i31a9hf7tPTv7NOeGf07+7T09ezT
0tezT3tfnG+flr6efdpro39nn5a+nn1a+nr2aenr2aelr2ef9v043z4tfT37
tJ2if2eflr6efVr6evZp6evZp6WvZ5+Wvp59Wvp69mnp69mnpa9nn5a+nn3a
UnG+fdpT4/5vn5a+nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+W
vp592rNif7FPS1/PPi19Pfu09O/s09LXs0+7KZ7bpx0c59unpd9nn3Zo9O/s
09K/s097anT07NPS17NPS1/PPi39Pvu09PXs09LXs097VHT07NPS17NPS1/P
Pu1Hcb59Wvp69mlHR//OPi19Pfu07eO5fVr6evZp6evZp6XbZZ+WPpd9Wrp4
9ml9DvuFz3Ffzz4tvTn7tNPiPmaflvuYfVruY/Zp6c3Zp6U3Z592TtzH7NNy
H7NPy33MPi29Ofu0npf9wvO6r2ef1vO6r2ef1vOyX3he9gvP676efVrPy35x
bHQB7NPSm7NPS+/DPi29D/u09Obs0/Ie2qcdE/dY+7T0PuzT0vuwT4t3ap/W
87qvZ5/W87JfeF739ezTel72C8/rvp59Ws/rvp59Wjxk+7Q3hntsn9afZ7/w
59kvltDLk0/L71Ps0/rz7uvZp027ePJp6eLZp90Z7799Wp/jvp59Wp/jvp59
Wvp69mnp69mnpa9nn5a+nn1a+nr2aenr2aelT2Gflr6efVr6evZp6evZp2V/
sU9LX88+LX09+7T09ezT0tezT0tfzz4tfT37tPT17NPS17NPS1/PPi19Pfu0
9PXs09LXs09LX88+LX09+7T09ezT0tezT0tfzz4tfT37tPT17NPS17NPS1/P
Pi19Pfu09PUyPm2cb5+Wvp59Wvp69mnp69mnpa9nn5a+nn1a+nr2aenr2ael
r2eflr6efVr6evZp6evZp6WvZ5+Wvp59Wvp69mnp69mnpa9nn5a+nn1a+nr2
aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+Wvp59Wvp69mnp69mnpa9nn5a+
nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+WLp59Wvpc9mnp4tmn
9Tnu69mn9Tnu69mnpTdnn5b7mH1a7mP2afn/S+3T0puzT0tvzj4t9zH7tNzH
7NPSm7NP63nd17NP63nd17NP63nd17NP63nd17NP63nd17NPS2/OPi29Ofu0
9D7s09L7sE9Lb84+Le+hfVp6c/Zp6X3Yp6X3YZ8W79Q+red1X88+red1X88+
red1X88+red1X88+red1X88+LR6yfVp6efZp/Xn39ezT0suzT8vvU+zT+vPu
69mnpYtnn5Yunn1aunj2aX2O+3r2aX0O+8XvM5r3LRzdOePTLn627C+f3Nwp
49Ne9Wr3Fi0ndsn4tB1vXLToi9GdMj7trtxJG3+8uzjj0z7dtWu3xF+1T9v5
hI9PfGRwccanfbRM+XHlxnbK+LQ//bmsfuKs2qfd3/L6DUcM7pTxafv0+deC
vcM6Z3zauZ1XnDXw0S4Zn/bMv4eNSX4+9ml/LP5jXs7QLhmf9q53v/8w+TnY
p+W5fVrOt0/L+fZpH171+vrkn98+7ZvXtHs++fnYp639a9F9NwzrkvFpeW6f
lvPt074V59unffXnzi8k/37t045uv/795P2xT3vS62/+dcc9RRmfluf2aTnf
Pu39cb592guXTv19wuDijE/bvdvZnyT+sH3aD3ZX+3fyntin5bl9Ws63T9sj
zrdP269D73vfrd0549P+8mDp7Zc/0inj0z5btVm9nm91yfi0MzY/MufvZZ0y
Pu1VJV78vveFxRmfdnvDznmJv2qf9qveLx1SeU1xxqftet6xj828oVPGp501
ZlPLxFm1T7toy6it3zXvlPFpf/pPn4nDP+qc8WmvG7zq4lJDumR82kcXPDEr
+fnYp73wsl+nL5zRJePTrq694Z3k52Cfdk08t0/L+fZpOd8+7akVnnop+ee3
T3vfyA7Lk5+PfdrvRt0yoWOHLhmf9tt4bp+W8+3Tcr592hqzbns3+fdrn/bt
i9auSt4f+7RXV5v346RFRRmftnc8t09bM863T/tOnG+f9qXSd3xaaU1xxqet
cud52y/rVZTxaUfd1WZp8p7Ypx0Zz+3Tcr592jPjfPu0DR7dPHTudcUZn3b/
4eV/PeL94oxPO3v5slI37yvO+LScY5+Wc+zTco592t9rvHd6q0M7Z3zaBStG
zDmkUeeMT9tm5/0Vjr61c8anLVuw4r4bNnfO+LTPH3P9tI9Ldsn4tNds2P97
yTJdMj7tomYtB7Rf2znj01ao1KRkkymdMz5t3qKyY7+4uHPGp33m9+53Di7V
OePTel78KM+LH8W89mk9L36U58WP8rz4Uc/FvPZpK8a89mk7xrz2aZnXPu2u
8ELt084IL9Q+Le+VfdoD8V7Zp+W9sk/b5d72PWf+o1PGp33qt8lbd64szvi0
Jd97+KatDxZnfNpmPbv+dce5xRmf9rG5i3aU/7so49N6Xvwoz4sf5Xnxo5jX
Pq3nxY/yvPhRnhc/innt03pe/CjPix/VLtxj+7Q4z/Zp/Xn8KD5vn/aw4UMX
LzzqioxPu7RczXp9Wl+R8Wn5vH1aPm+flvfcPi3vuX1a3nP7tD4HP8rn4Ef5
HPwo7v/2abn/26dlj7BP2zy6GPZpt0Zfwz7ttOhr2KdtG30K+7T0KezTfhWd
C/u07B32adlf7NNOjf3FPu1xCz74I/n52Kf9svTlx20+eL+1TzvgzoY5yc/B
Pu1N8dw+Lefbp/0izrdPO/LWivWSf377tC+fOKPSMwd/PvZpq86e+0tyT7ZP
y3P7tJxvn3ZJnG+f9rmnnqmc/Pu1Tzv0H6fXT94f+7Rlbzm+T+Ib26fluX1a
zrdPe2ecb5/29Ou/7ZG8P/Zp88sNapb4w/Zp35h298nJe2Kfluf2aTnfPi3n
26fl/m+flvu/fdrHYo+wTzueLoZ82o7R17BP+0n0NezT/jf6FPZpc6NPYZ92
Mp0L+bRPxd5hn5b9xT4t+4t92ge6/Vyuz8Gfj33a075tVrrVwfutfdplO8+o
mfwc7NO+Es/t03K+fVrOt09bbtUvZyb//PZpb6/1xPnJz8c+7ad13jiQ3JPt
026L5/Zpj4nz7dNyvn3aswvX1Er+/dqnXfLFqdWT98c+bdFne7skvrF92uJ4
bp/23DjfPu3SON8+7bwl77ZK3h/7tMddeFte4g/bp72t+vSzk/fEPu3geG6f
lvPt0x4b59unrR49Bfu09BTs006JnoJ9Wp/DfsE59ml9DvsF9zH7tHj19mm5
j9mn5T5mn5b7mH3aznEfs087K+5j9mkPj/uYfVruY/ZpuY/Zp/W87Beel/3C
87JfeF72C8/LfuF52S+4f9qnLal52S88L/uF52W/wAu1T4sXap+W98o+7Z54
r+zT8l7Zp6X3YZ+W3od9WvoF9mnpF9inHRf9Avu0npf9wvOyX3he9gvPy37h
edkvPC/7hedlv2Be+7Sel/3C87Jf0N2wT4vzbJ/Wn2e/wEm2T8s+bp92fuzj
9mn9efYLf579gvfcPm3zeM/t0/Ke26f1OewXPof9wuewX9DXs0/L/d8+LX09
+7R0MezTro++hn1a+hr2aXOiT2Gflr6efVo6F/Zp6evZp6WvZ5/2wdhf7NPS
v7NPS1/PPi0dPfu0PLdPy/n2aenr2aelf2eflv6dfVo6evZpeW6flvPt03K+
fVr6d/Zp6evZp6WjZ592fzy3T8v59mnp69mnpX9nn5a+nn1aOnr2aXlun5bz
7dPS17NPS1/PPi19Pfu09PXs09LFsE9LX8M+LX0N+7T0KezT0qewT0vnwj4t
fT37tPT17NPS17NPS//OPi39O/u09PXs09LXs0/L+fZpOd8+Lf07+7T07+zT
0tezT0tfzz4t59un5Xz7tCdE/84+LX09+7T09ezT0tezT0tfzz4tfT37tPTv
7NPS17NPS1/PPi19Pfu00+J8+7T09ezT0lPY/MWAXZ+VbJDjvt70Mhd+sHp1
/XS/eCB6CqM3FO8u3lg/x309znFfj3PYL3yO+3pvjhyR+9tVjTJ9veO+OKrr
kHaNMn29i8Yft2j2lY0yfb1xZ98ye2pOo0xfr/T99y3q0bxRpq/3xr+qlCpR
u2Gmr3f2+xW+/+uKhpm+3p7+JZrOrNcw3S/SflbLFl1eHNww09drdM8pTc7r
1zDT12Ne9/WY13296jGv+3rM674e87qvx7zu6zGv+3rM674e87qvlxPzuq93
35weYy5Y1iTT19tUYveUhU83yfT1fl708/dbXm6S6evlt+jw5ftTm2T6emvm
9f5h8swmmb7erF435tT6vVGmr1dYevslL5RunOnrXdZp27aRfzbK9PU2r7p7
17jjG2f6ej279922+p+NM3095nVfj3nd12Ne9/WY13095nVfj3nd12Ne9/WY
13095nVfj3nd17tmRJs7++U1zfT1Tqi6qv+uXk0zfT0+777eifF59/VKvZt7
zt1lGuS4rzdrWPeckd/Uz3Ffj8+7r8fn3dfbP2Tpya/kN8309aZ/3fWctwc0
zfT1zh7W8uRD+jXN9PU4x309znFfj3PYL9bF/d8+Lfd/+7TsEfZp6evZp6Wv
Z5+Wvp59Wvp69mnpU9inpa9nn5a9wz5tg9hf7NPS17NPS//OPi19Pfu0dPTs
0/LcPi3n26elr2eflv6dfVr6evZp6evZp6WvZ5+W8+3T0tezT0v/zj5tz+jf
2afdEx09+7T09ezTcr59Wvp69mnp39mnpa9nn5aOnn1antun5Xz7tPT17NNy
/7dPy/3fPi17hH1a+nr2aenr2aelr2eflr6efVr6evZp6evZp2XvsE/L/mKf
lv3FPi19Pfu0JaN/Z5+Wjp59Wp7bp6WvZ5+Wvp59Wvp39mnp39mnpa9nn5bn
9mk53z4t59unpa9nn5a+nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6Wv
Z5+Wvp59Wvp69mnp69mnpZtgn5b/3bdPSwfBPq3P4e8vfA5/f+Fz+PsLenP2
abmP2ac9I+5j9mnZa+zTstfYp+U+Zp+W+5h9Wu5j9mnpZ9mnpZ9ln9bz8vcX
npe/v/C8/P2F5+XvLzwvf3/hefn7C8/L3194Xv7+wvPy9xeel7+/oPdhn5be
h31aeh/2aXnf7NPS+7BPy3ton5Z7rH1a3k/7tJWiU2CfFu/UPq3n5e8vPC9/
f+F5+fsLz8vfX3he/v7C8/L3F56Xv7/wvPz9hefl7y88L39/gYdsnxb32D6t
P8/fX/jz/P0Fe7d9Wu7n9mn9ef7+wp/n7y/479E+LXuffVr2L/u0Poe/v/A5
/P2Fz+HvL7j/26elr2eflr6efVr6evZp6WvYp90efQ37tPQp7NPS17NPS1/P
Pi19Pfu07C/2adlf7NN+H/07+7T07+zT0tGzT9syntunpa9nn5bz7dPSv7NP
S1/PPi0dPfu0PLdPe2Wcb5+Wvp59Wvp39mnp69mnpa9nn5a+nn1azrdPS1/P
Pi39O/u0RdG/s09LX88+LX09+7Scb5+Wvp59Wvp69mnp69mnpa9nn5a+nn1a
+hr2aenr2aelT2Gflr6efVr6evZp6evZp6WvZ5+Wvp592rR/J5+W/p19Wvp6
9mnp69mn5Xz7tJxvn3ZH9O/s09K/s09LX88+LX09+7Tf0O+TT5sX59unpa9n
n5a+nn1a+nr2abvFc/u09PXs09LXs09L/84+LX09+7T09ezT0tezT8v59mk3
xfn2aekm2Kelz2Wflg6CfVqfw37hc9zXs0/Lfcw+7cC4j9mn5T5mn5b7mH1a
7mP2abmP2aflPmaflvuYfVruY/Zp6c3Zp/W87Bee1309+7Se1309+7Se1309
+7Sel/3C87qvZ5+W3px9WhxR+7T0AuzT8r7Zp+W+ap+W99A+Lb05+7S8n/Zp
6X3Yp8U7tU/red3Xs0/red3Xs0/red3Xs0/red3Xs0/red3Xs0+Lh2yfdnm4
x/Zp/Xn2C3+e/WJk7N32adln7dP68+wX/rz7evZp6eLZp6WLZ5/W57ivZ5/W
57ivZ5/267j/26c9JfYI+7T09ezT0tezT0tfzz4tfT37tPQp7NPS17NPe2vs
HfZp2V/s07K/2Kelf2eflv6dfVr6evZp6evZp+V8+7Scb5+W/p19Wvp69mnp
6Nmn5bl9Ws63T1sqzrdPS1/PPu1D0b+zT0tfzz4tfT37tPT17NPS17NPS1/P
Pi19Pfu09PXs09LXs09LX88+bf043z4t93/7tPT17NPS17NPS1/PPi19Pfu0
9PXs09LXs09LX88+LX09+7T09ezTsr/Yp6WvZ5+W/p19Wvp39mnp69mnPSae
26ctivPt03K+fVr6evZp6d/Zp50XHT37tPT17NPS17NPS7/PPi19Pfu09PXs
0zaJjp59Wvp69mnp69mnLRPn26elr2efdkX07+zT0tezTzsintunpa9nn5a+
nn1aul32aelz2aeli2ef1uewX/gc9/Xs09Kbs097bdzH7NNyH7NPy33MPi33
Mfu09Obs0/L/o9qn5T5mn5b7mH1aenP2aT0v+4XndV/PPq3ndV/PPq3ndV/P
Pq3ndV/PPq3nZb9oHV0A+7T05uzT0vuwT0vvwz4tvTn7tLyH9mlfj3usfVp6
H/Zp6X3Yp8U7tU/red3Xs0/redkvPK/7evZpPS/7hed1X88+red1X88+LR6y
fdpZ4R7bp/Xn2S/8+UxfTz4tv0+xT+vPu69nnzbt4smn5b87+7SV4/23T+tz
3NezT+tz3NezT0tfzz4tfT37tPT17NPS17NPS1/PPi19Pfu09Cns09LXs09L
X88+LX09+7TsL/Zp6evZp6WvZ5+Wvp59Wvp69mnp69mnpa9nn5a+nn1a+nr2
aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+Wvp59Wvp69mnp69mnpa9nn5a+
nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+Wvp59Wvp69mnp69mn
pa9nn5a+nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+Wvp59Wvp6
9mnp69mnpa9nn5a+nn1a+nr2aenr2aelr2eflr6efVr6evZp6evZp6WvZ5+W
vp59Wvp69mnp69mnpa9nn5a+nn1a+nr2aenr2aelr2eflr6efVr6evZp6eLZ
p6XPZZ+WLp59Wp/jvp59Wp/jvp59Wnpz9mm5j9mn5T5mn5b/v9Q+Lb05+7T0
5uzTch+zT8t9zD4tvTn7tJ7XfT37tJ7XfT37tJ7XfT37tJ7XfT37tJ7XfT37
tPTm7NPSm7NPS+/DPi29D/u09Obs0/Ie2qelN2eflt6HfVp6H/Zp8U7t03pe
9/Xs03pe9/Xs03pe9/Xs03pe9/Xs03pe9/Xs0+Ih26ell2ef1p93X88+Lb/3
sU/L71Ps0/rz7uvZp6WLZ5+WLp59Wrp49ml9jvt69ml9DvvF/wPe2EO1
     "], 0.53]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxlnXmcjuXbxkcI2XdS9p0w9rHNzQxjGczK2EoospSdbEmrspWyZSfZk2yp
eBQiCvWzlbKX7MqapZd3zuPq0/d6/3k/n+vz/E7P8XTNedzndd/f4y7W5YWE
Zx4KCwu7mC0sLO39/9/19cmH7+x9NMh8MtNrqw8XD449NKDU3E/yBE2im+4+
XD93UHh3t1DEqCuRWr/wysuzHv2zXBBf9bFB0VezuM8/nD/b5Z/vf37iiHxf
vpipVLBs/JNj8ky4HLlnyWvb+iXf2Fwl9qOlqw7ncutF27W7e2/vI6HZl+Lm
f52vvFvfm/r5SH1+fbP5zy69+VhQOvXzgT6v9fSp/25I/67WP/z0u7V/3/+8
vufU/21a2+Xr0sHCJyr8+lP9Ek6v1td8v7db7wxlnF6tl/j/f/fRIMz+77M7
b1z9eU5xW38kdHH5a3saReQPtB5jv9vy1TP6/7GkKNdDWo9d9EiTUvsz2noJ
V1/rVj9Qfa1/1GdC/i+KnNycLfzJv5Z+fzkyW6/fome8diNycrrpMfEDfo/c
1r/FsmL9Lkeu6d3v/RfevBm5YsKBT2fU+jOyeOt3V04f8XXkgr697lxukjuY
ueuLEmdOfR35+tc/hCb2vBL5566/Mg6snturn71h9MG31xUOWP/FNN0rNLxR
OGD9oZnrFsucrbRXv0jESx/tTlc6qNjyn1n9CzwWzB4wsOB39XMFbyy8Xbzl
Y/mCEiXS7ni6UeGg/buhBR2z5g/mZZrS86UX8gX1XzuXbnraokGvpT0uFLqX
JajdbEC+byvlC9ZmvPrZ098WC3ae+Dz+72v5gszfbthUfVW+oGu1H2JHTC4e
dOk0fWD52JzBQ4mvxb/4Xr6gUfNrt4vMKB5MmtZpzZRBuYPQpZNnXz1bLGjy
1F/Pln2tWLD4r+JJ2WKzBtW+zPfNuVCxYEavTE1C84sGt9Y9fjC5ev6gx+Nl
+zU5fv/ze9MUv7T+8WBXQsWbPwzLGtzrmP7xd+YWC/4Y1vjOZ6UeC3avrN0u
onue4JUCc358fmUxT2+FbEMLbNl+ejP1dji98OdKT5zcTL2Lz2wccbjq6c3U
m/XEhDqvljm+mXqTZ5Rf+FT6E5upt3v/YUV2/pPe17u48aRu7dJ7ejOUe7v2
np/Se3o7lwk7c+tgOk9v/7zdv+qbPX2wPHU/bP7pi0qjN79dPFidqeK9qskl
gsW2ryJ2JzV+46+SQWS9W8V2jyoRzE3dJ5s/WvH9xaeWFw0eOfL7kH5Plgim
2X57YWDCYwd+LxkMnPnI7tJzSgRrDn5ZZ+RDf0Z+Eb7liYu5igeXjvXN2+yd
Evp3I5NaL2i5sEyJoFKZd9u+E15e/27ktciRbx7ZXDSYf3VrtZsZyuvfjXzj
ybRH02YoFRxIOvBLQtny+nc3b5760ifjdxUN+rz36dhZv5fTv7u5/0855g6a
WyK40rplMPxaOU9v+E8zer+8NLOn95mFe26fjsvi6X2nxFuJw/dk9vTWLpV3
YdwPWTy9pWut3Hl4RhZPb67FBZ+7O76Qp/dmo5eK7apTyNPbOe38QaOHF/L0
jh/T8bu8fz/q6Z1ya2KdfXkLBWdT/7uHdqypUeyblyoE70xacOzlgjcjud73
rWqbXvu5cHC8xqwFmZ6tFMS+/XfJIYcORZb96vh3W7/P5a3XqX4907V9pdzf
y2+RCwZMu1kh+PDAiNL7al+PbGB/F6urRJ2oXbB80P25Dle3jrkeqf2c5usr
w9dWLB+Mzbxvzaa/cgVR2rePXl34bO3yQZEWKztn+jSXV//az0smtutaOGD9
RaOLvXJgUOGA9c8e6nO336lSXv21Qzsm5t9aKjD/2px/3acfF55Uy/ljcfOL
RcV75koYXMmth5lvHmn+w+3vtoS79YWp/hU6/NDGFg8tru38cVGqf4VmTz00
9ZPDVd26+Veoc722DT6qVNetP5Pq7+7z8sdo8yN9XusXU/3d/btaN38P6XvK
HzeYX0uv1h8z/5Jerf/vyedrPnf/9ykxttNPbzWp6PxxrX3/7yrnKDblSjW3
ruuE3x8fUbrO0JpufeKM2W8XvP89tS5/PJRaP1L1/+uzuV19t5763zfUuPXO
2p07Vwrkp9b3QiNubM/+cVKlQH76ROr+CXX+IX/Dke9VDOSntn9C7x0f8sOR
AZWCK+anrC8/ZX35KevLT1lffrrB+s+Lx9/+dMPqqs5PV1n/KftH4Skzf6sW
zDU/DVn/OXr457MZvw53fjrJ+k/0l7PSbD1WzfnpBus/ZwslPxI3uKrz01XW
f9aWb/LosrBqzk/nWv/JUOLTWt/sDnd+Glj/iat6/UT7y9Wcn9q/u/lsq+q7
5/wQ7vw0ZP0n+vKIr3PXr+b8lHrlp9QrP6Ve+Sn1yk+pV35KvfJTT6/5KfXK
T6lXfkq98tOGqT4eule8yROlnqvl/NT6Umhl+cPZM82q7fzUfDz0TKEp3Qa9
WNP5abTttx332g6vMrW289Pz1rdf6JT91S8q1nJ+an0yVLd32Hv519dyflos
9bolNK5bn0+qvVLT+an25/4Bqzp+s6i289N1qdctoX6TLjbOMram89Muqdct
oW/Da9Uf/Vct56fUKz+lXvkp9cpPqVd+Sr3yU+qVn1Kv/JR65afUKz+lXvnp
sVQfDF2fvfNu2ZN1nZ9yXX5qPhuM6vTa5FZZnwjkp1yXn9q+3fxat7CP3ilS
z/mp7c/NZzvG/Xq8cl3np9rPuRaVqTA3oq7z05Dt2xv7Fm8eGlnX+Snry09Z
X37K+vJT1pefyu+S6vfLtvpwI+eP68wvTu3vOvj5J+u79VXmm89nT/Nc7tOR
bj359IWEXvc/v7brwCMLnoly/pjpxx+2vLIjPFRg5Stjho8K3PrEBaVei11R
LfRi2NfJ1xdHu/XZdaNzLfv8Cfd5+eN48yN9XutP3Bs5b0HxGu7f1fol81l9
T/ljT/Nr6dV6rPmX9Go9dU4vEUr1u3rOH9+x7195WJFv+jzS0K1/ar9bvX77
d25u2citjxw7rsCD76l1+WPqdcujrr7WJ5le1df64XM1Xy9/vkqoeu/JYwcl
1nd+OrHz8JolK1cOtQ5yXZvZsr7z04eKDLv6zFOVQltWbMz6ap96zk/336u6
v0uFKqGOa3seqNapvvNT1pefsr78lPXlp6wvP42y/pM+sVOOf3oGzk+bWv/5
5cCiNFfSNXR++oH1n36zH0lp9Vuk89Om1n/OBc+uT/dQQ+enuk5ucHnL59/G
Bs5Py1v/WTBkY9TNdwLnpyWt/0z7/fjCLJcj//VT6z/9hucquzdTQ+ena6z/
jMjdNeL0tUjnp89a/+n1U/K0iqsC56fUKz+lXvkp9cpPqVd+Sr3yU+qVn3p6
5afQKz+lXvkp9cpP2xxfH7docHhox4A6LWtsb+T8VPtq7o1XGpTpHOX89KE/
twy6PqxK6PYLJ3p0atXI+an224qno67W6RTl/NTmmlBYzjk3wxY3cn6qffjs
tKmjK11o5Pz0TqYRYzsNrByamKfVxHqJjZyfan9Wm3mp28P3+4b8dFKwvvI3
2cJDLy+dcLhsm0bOT39PLv1i0oDwUKXb9/93maOcn1Kv/JR65afUKz+lXvkp
9cpPqVd+Sr3yU+qVn1Kv/JR65aelD75d8oOOtUJbw0fUqJW2sfNTrstPdd0V
N+DKuvNL6jk/5br81M5VQm+/l/+tXsUaOz+dbn8XmyZt/nDykmjnp9rPCTUq
7O6/Mtr56Xrbt9G7euV76pNo56esLz9lffkp68tPWV9+Kr+bNSfjtqRzzZw/
yi/qttx55XCosVtPMd8MO5u/V8V0MW79WKXqd1rc//zdbZknNxnS3PljZPZJ
eR79MyLUOUehiMKTYtz69qMnDp44UDe0pUv7LNM3tnDr6dsf/blXhlru8/LH
UeZH+rzWu9apezUitr77d7VeyXxW31P+OM/8Wnq1/q75l/Rqvd2Tx2s/+H1+
Kr29xJnqjZ0/fmPff+iRdSNzPNbUrU+y3+21H3uP7vJUs399dluzXg++p9bl
j3dLlim5/P73UX2tS6/qaz172auHQnkjQr/N+ufDrA83CXoePfJU/dk5gohK
L+0Yt7B26K9rr8SVzNYkGBs975lfioQFI8//3afsllqhw42H375+t3FwsPKh
rD+/niMoY/v/8zXFnns+TZPgRFKvp/NtTO/V//mrvxI++aykV7/pwj53xvYv
6tXP1etKubCVJb36T5XtXLfA4WJBW+s/LTPvrbC0V9PgrcoXVm7v+Fjwk/Wf
pZuOnIh6umlQ8qOZj1WYUjRIZ/1nfb6nx7d/rmlQPOcT4zLMLhC8a/1n1rMp
tZ9o1zTo0HrGXy++VdRdP4/cf+/DhR2bBq0K5nqkZK9CQVrrPxdeGfz+u2ua
BCOTDjSb9N7jwV3rP5P2PvfrzU1Ngi013toctq1AcMD6zytDT1c7sa5JMCCi
xbqPlhQN3rH+M7vsxTezf9MkiD89IWfXIwWCM9Z/vvwsptC0r5sEn/X85GLV
1wt7eq80yxOTuf75SOq92rrTb0+vDPP0Fnv/24tHJizbTL0/XE5sNOulME9v
zml1i17/+FQk9X61oVL25Xf/jKTe0Nt9R79ectJm6q06PX/LpDthnt5/8t3J
UenGiEjqXZ3zg/k1t16PHP/4oAX15kaEsldc0ePY9uZBtT0lt74wqLTbV72P
flZk2BfNg3d/bT621i9lgzq2r4bVavDtpK3Ng7DQ1qo5ppR0++qpN2oM6rqm
ebDj9aadX99X1u2r4PrPJ35a3zzIG72+3+w79/tbi79jm7WrFVq1MPGHHdmb
BSuenv5OUs4yQY2Gw/NvO1krlHSlSaHKjzYLWiUM2D1uSckgc93LZW4l1Q7F
TP+qb4FczYLjfW8VX3O5bPDNiIFjOtWOCD3dbNe2xsWbBQWWDrpWf23J4PF3
T+46OzMi9NJPJVO+L9ws2HX+4VOl3ioTUG+hmw0abcybx9N7ON/bu5udLuDp
XXt4VJHbbXJ4eht3f33Y798V8PQePd51Vv6SuT292R8v+8srLfN6euPv/Zxw
dWQOT++gumf+aZSlYLAdek+vOLawzfs5PL0tqqUdUzoyX3DhjfVzjo6JDA3Y
ViX7Pz1bBJG7/jp2Mcsj3vr1xo06fH+heBBt/vXW2T8vDsjRJGj/crFlHWZl
cL6m9RGffjf+j/jiwT3bn/lzlUx5ZlCLYOv4Drv39Alzf4+ZNs5Z0apPiyBj
ujqTa27LEbxr+7Nkz8UPjRjZIjh/vlvf92aGub/HqNtp3k837L5f3FhSvvrl
zF79qTUfm/Lw60W9+uWT559/4ruSbv+r/tMTCm9e/05Rr36efR+vmPNsiSAw
v/srbO+Xw0fFOX+UX7z2cefFI36IdesnzTebxX5cbE/eVm49X68rrR58vsR7
+xYO3Brn/HHjh4uqHcraMLS4/+pLoXmt3Pq9rHHv1wtrFHrtxNDjjz8b79br
TJlZ6aHwSPd5+eMa+ZF9XuuxdUeUOLOxkft3td7NfFbfU/6Y0fxaerX+kvmX
9Go99Zw2wubHWOeP+v5bGrSq/ukTrd26rhN+f3TMB2Nqx7n1a6PTHv39/vfU
uvwx9dy7lquvdfmv6rt5dvWh95fNCULLht0MD/su1s2na8puCG06GxnaeGr9
77nvDyqaT7XP+xfKMjBD+1g3n879vM2XMZFBqEGRbilH98W6+ZT1NZ+yvuZT
1td8yvqaT8dZ/5mSf9zI6Amt3Hyaw/rPCx/sf75m2dZuPlX/+TZ39em987Vy
86n6z4j075dsXqq1m0/LWv/Ze7855ujbys2n66z/1Kj3x6r6a1u5+VT958kN
cza3KNTKzadZrP+kDRq+n/f+76/5dIf1n7hWxzLVLtzKzaeFrf/cnf1q+v4/
tnLzKfVqPqVezafUq/mUejWfUq/mU+rVfOrptfmUejWfUq/mU+rVfHqiYsHh
f5wKQk/MrN7py4Fxbj4tYfuq4JOHk9dtiXPzaa0as8fn7B6EmszI2Gvf/b8L
zaerbb8Vyf1ZlSAU5+bTJ3M3GxL+emRo59nfqi54Js7NpxdtH46odPJ6xJtx
bj5d2+CxtSseDkKTeje4F9SNc/PpPNufXapk/6PU/b6h+fSlI9PO3loVhMau
f7LE+npxbj4t1z1uYnAyCB07WqVY0tQ4N59Sr+ZT6tV8Sr2aT6lX8yn1aj6l
Xs2n1Kv5lHo1n1Kv5lPq1Xy6s0za0ycPRoXKD0+ObzA53s2nXNd8+pv5TsSo
j3bUHRrr5lOuaz7V9cmEiguGp8yPd/Npbfu7+Kj8kLG97/d/zac1bT//eWf5
Y0d6xLv5VPv2XMx3DRN6xrv5lPU1n7K+5lPW13zK+ppPPze/K7C6UMGWGZKc
P8ovfs844uPsf8a79YLmm83alji/YXKCW1+UeDDuwedjGj8e1qRlkvPH/VHp
Oy0o3jj04tmSP35yOMGtF1y+clOGvE1CSyZvrXfp4r+fr/3H8iB2RZT7vPxR
fqTPa7374Z9iP93TxP27Wm9pPqvvKX9sYH4tvVpfa/4lvVrveu6JSwfv/z7r
Bg3bkW95vPNHff/X9va/trRIouezmXd/dz1xy7/rOYp0yfjge2pd/nj2kQnr
H3wf1de69Kq+1hvE1do8eE10qF741LFL8iS4+TTxxzvrjgyPDkV1OvzrmgIJ
bj4duHrj2PKPRIdqpE+uPjtHgptPd9j+X1Sv7Ll2uRLcfMr6mk9ZX/Mp62s+
ZX3Np+o/l7q/tHtITKKbT+Xjs7akXxzdKNHNp7Wt/yy8EHO3dZNEN5/K36e+
/3VCRINEN592tP6T8bspma5FJrr5VP0nWJiQ5nyvBDefqv+803x3qSL9Etx8
qv7zduG39ubuk+DmU/WfaYOzDS8/KMHNp+Wt/5SJrLv1+QEJbj6lXs2n1Kv5
lHo1n1Kv5lPq1XxKvZpPqVfzKfVqPqVezafUq/n07rdDFq65FR2Ku3nhbK5B
SW4+rW/76l78wO1HX0hy86n2VfpR6wqdG5Dk5lPtq5ulqvb7X68kN5+qbz/X
KX3ZSX2S3Hyas0udW3UORIXmVd9S5I3piW4+3Xtk2K9DC0WH/vypTvTG2Ylu
Pv283drfciVFh86vvHlx5YxEN5/OGHYj97Zt0aFbD4+cvm1+optPG6f/eEPm
m9GhN/csOZFpXqKbT6lX8yn1aj6lXs2n1Kv5lHo1n1Kv5tM90Kv5lHo1n1Kv
5lPq1XxaMWx68YfPxYQe2la5QfFvktx8ynXNp5PkXwdzrDxSMMHNpxOxrvlU
+zOp15IuybuT3Hyq6/OWkd2zNt+R5OZT7c/2U8+t77w3yc2nFWx/nn2qQJoP
v09y8ynraz5lfc2no61+B6uv+ZT1NZ8eML+r17X7wMKT2v7rm+YXmTd+88jx
YclufbH5Zp+ML8S89Vgbt77lSo1hDz7f+3qPDvkPtHX+ePl419efr9UsNOuD
vpVe6dLGrVdvnvXMD+Wah76PzjEtNCTFrSe+kbln/q9i3Oflj/IjfV7rY4ZE
DB51qrn7d7Xew3xW31P+WMf8Wnq1ft38S3q1nnru2tjOY5OdP+r7L3l5U9yI
xW08n60ysmBCqeZt3XqFL0PhD76n1t190v8/H45y9bUuvaqv9XYX3z/TcGfT
UOcTJ04Nm5Xs/PT5fh2OfTSpaah7tlJ1Xp+X7Px0YlzBT68Vbhpqt27uxBem
Jzs/Pbnt6Wwfn48JfXthQJMKHyQ7P2V9+Snry09ZX37K+vJT9Z88BXeVaba3
jfNT9Z8t/ePT5tvVxvmp+s+O2ZNTiu1p4/x0kPWfz5tkX/nIN22cn6r/VBx1
otv2HW2cn+ay/tMteXbHL68mOz9Vv117O//Ll28lOz/9wvrPx3v2Vzh9Ldn5
qfrPF2XaH7h9N9n5aRPrP7GXXy8S3El2fkq98lPqlZ9Sr/yUeuWn1Cs/pV75
KfXKT6lXfkq98lPqlZ8WeO7Ady9laxYatCSiyam7bZ2fpti+KpE2VOyTm22d
n2pfla/80JAv7rR1fqp99fjBkbs/vNrW+ekp21fjs8W/8vT1ts5P1c+3nc4y
PKV4W+enZ4cdzhBdpWko/7jX57xdpq3z0wM3cuf4tUfTUI7O0c1Hl2jr/HRt
gTb1J/10/9/dsOPqlAptnZ92XpD1xIEszUIrRl+r/3O5ts5PqVd+Sr3yU+qV
n1Kv/JR65afUKz+lXvkp9cpPqVd+Sr3y05jZN1rs+6dFqMzg4dP/ap3i/JTr
8tOTdj25+s2OmVbOT3Z+egLr8lPtzxcfu/Zl6eQU56e6Huh/eXWPQvEpzk+1
P19qWit31XYpzk+1P7Pn7NZxcNsU56esLz9lffmp6o+2+vJT1pef2v1Kj5ex
52c8XqZL6jmqx8vYc0EeL2PPFwXkZd5JvV8ZkJex+7kBeRm7L+nxMm1S7+cG
5GWOp55Le7xMg9TzbY+X2ZZ6TuvxMqnP8dbyeBl7XjcgL6PfjbyMeBzyMnae
7PEydv/a42Xs/ldAXsbO+QPyMnb/LiAvkzb1Pl0gnkXnvayv817W13kv6+u8
l/V13mvnkB4vY+eQjh/Ree8jqeeQHi9j9308XsbOIT1exs5dPV7G7nN5vIyd
u3q8jJ27eryMPY/h8TLUq/Ne6tV5L/XqvJd6dd5LvTrvpV6d93p67byXenXe
S70676VenffaczIBeRm7bxWQl/lf6n2rgLyM9tvz4GXsvlVAXkb7kLyM3acO
yMuk0/4EL2PPBQXkZew+dUBehnp13ku9Ou+lXp33Uq/Oe6lX573Uq/Ne6tV5
L/XqvJd6dd5LvTrv7WZ8FnkZruu8185PPF6G6zrvtfvCHi9j9389Xkb7mbyM
27fgZVhf572sr/Ne1td5L+vrvFd+R15GfkFepqL5JnkZ41YC8jLdjG8lL9Pc
OE3yMva8cUBexviUgLzMYuNMycvIZ8nLZDS/Ji8jvyYvcy/1eaGAvIz4XPIy
+t3Iy5Q0Hoe8jD3vFJCXkV7yMva8WZD4TNTJom9XdvOpuMWx25LGD19W2c2n
9nxmUCR91YjtPSu7+VTc4oLQrksLhlZ282lxq59s9TWfsr7mU9bXfMr6mk/V
f4aMbzRy56Tqbj615xKDKlc7nLszvLqbT9V/mi/sFpQfV93Np/Zc4v35JHHK
nl7V3Xyq/nOo2Nx+m/pXd/OpPYcZbBg1MW5G8XA3nx6y/vNP/sEnnq0V7uZT
ew4zONW9z/iIMuFuPp1g/efRHaNqvRcT7ubTE9Z/2p4N7/hhEO7mU+rVfEq9
mk+pV/Mp9Wo+pV7Np9Sr+ZR6NZ9Sr+ZT9duCplfzKfVqPhXfd/v7O9drxES4
+bSo7au1NfI981zVCDef1rN9te904Y1TGkW4+VT76oPXsuaoVzzCzafGcQRP
dm1/rny5CDefirdtEGr27cOHa7j5VPzgq+2qdPzxQg03n4q37bmkTIZFv9Rw
86k9Rx3MzhTxSdi9Gm4+vWh8x5EK5/fnvFHDzafUq/mUejWfUq/mU+rVfEq9
mk+pV/NpU+jVfEq9mk+pV/Mp9Wo+XWwc1tdp0kUPmFjHzadc13yq68ljU3Nk
2LimsptPtX7C1jWf2nPRQeYPzu6PXFjHzafan5fPHh+d6706bj7V32OpFn+V
77OmjptPtT+79FnUetSKOm4+ZX3Np6yv+ZT1NZ+yvuZT+R15GeM9A/Iy5803
ycukMy6VvIz4VvIyBYzTJC+jPAfyMmXNj8jL2L/r8TLyWfIyynMgL7Pa/Iu8
TEnLcyAvY9/H42Wa2u9GXkb8LHkZ43EC8jLGsQbkZULGLZKXmWt8InkZcYjk
ZUYbb0hehvU1n7K+5lPW13zK+ppPy1r/IS+j/kNeRv2HvIz6D3kZXSeTl1H/
IS+jfkteRv2HvIz6D3mZU9Z/yMtQr+ZT6tV8Sr2aT6lX8yn1Ms+BvIynF3kO
5GWoV/Mp9Wo+Fd9HXsY4vs3kZWyfbCYvo/1GXsY4i0jyMtqH5GVsP0eSl9H+
JC8z2rhC8jLiO8jLUK/mU+rVfEq9mk+pV/Mp9Wo+pV7Np9Sr+ZR6NZ9Sr+ZT
6tV8esb4LPIyXNd8qjmXvAzXmedAXkZ5C+RltJ/JyxjPG5CXYX3mOZCXYX3N
p6zPPAfyMvIL8jLKcyAvY/7l8TLiW8nLKM+BvIz5u8fLmE95vIzyHMjLyGfJ
y4TMr8nLmL8H5GX2Wp4DeRnxueRllOdAXmaC8TjkZax+JHkZ6SUvI06cvIw4
cfIy4hbJy4gTJy/D+ppPWV/zKetrPmV9zafqP+Rl5OPkZcJ2p/Yf8jKdrf+Q
l1H/IS+j/kNeRrw2eZkw6z/kZazvbSYvs8r6D3kZ6tV8Sr2aT6lX8yn1aj6l
Xs2n1Kv5lHo1n1Kv5lPq1XxKvZpPxUGQlxFvS15mpu0r8jLaV+RltK/Iyyjf
gLyM+EHyMso3IC8j3pa8TGfjbcnLUK/mU+rVfEq9mk+pV/Mp9br7p9Cr+bQo
9Go+pV7Np9Tr7p9Cr+ZTca/kZbiu+VTXk+RluK75VPuTvIyuB8jLaH+Sl9H+
JC/D+ppPWV/zKetrPmV9zaeLze/Iy8gvyMtsMN8kL5NkXCp5GTtf9XgZx2mC
l5lpfCh5GeUbkJex82ePl7lsPkteprf5NXkZ5TmQl/lvnkOsx5mSl9HvRl5G
PCl5mZL/yXP4l5eR/5KXEbdYOWxqx1X5Wzo/TW/cYv2UQhm+KdLS+ek44xaL
Lc61enr2ls5PfzVuMW3+z4rkzN3S+Snry09ZX37K+vJT1pefikeb0qf7idiR
rZ2fRlv/uVJ04PTf+rd2fjrb+s8/Q29G3R3W2vmp+s/pHZcu7unZ+t/zXus/
39Sa0jHm+dbOT9V/av2WNbbG9pbOT9V/DldN8/4He1s6P1W+wXc/jTj76o6W
zk83WP/5/a3XIlcfaun81ObE0MOPHd1XZ39L56fUKz+lXvkp9cpPqded90Kv
/JR65afUKz+lXvkp9cpPqVd+mmK8bcWY+RMbno9zfmrnzKGf5pbtle33OOen
4m2P7+4ZKnguzvmpnbOF/jfwt7xpT8Y5PxVv23j5Z7s3nYpzfhpm/XzkK4O2
rs0R5/z0b+MNvy936cyZvHHOT+1cPbTj7vLJv+SMc34q3nB/cniDqwXjnJ8q
36Bb4SffqF0gzvkp9cpPqVd+Sr3yU+qVn1Kv/JR65ac3oVd+Sr3yU+qVn1Kv
/FQc1q+5T52IaxDv/JTr8tNjdj35Y+xbH+Yr3tL5Kdflp9qfVTZ2yvBqVLzz
Uzu3CZWbUGj10Mh456fKd6r525yOE2PinZ8qb2T7yt0f/tg43vkp68tPWV9+
utHq17L68lPWl58+ovwi8DLKcyAv0958k7yM8hzIy9jzPx4vI06TvEw640PJ
y8iPyMvY81EeL6M8B/Iy85W/BF5GeQ7kZZTnQF5G35+8jH438jLiZ8nL2P1Z
j5dRnhJ5GXGL5GXqGj9FXmaEcYvkZUoZt0hehvXlp6wvP2V9+Snry0/Vf8jL
qP+Ql5GPk5eZZP2HvIz6D3kZXT+Tl1GeDHkZ8d3kZcSPk5cR301ehnrlp9Qr
P6Ved/8UepnnQF6GeuWn1Ms8B/Iy1Ms8B/IyE4yDIC+TzfYVeRnxtuRlxNuS
l1EOD3kZ9XPyMtXED4KXsee+PF5GeQ7kZZRvQF6GeuWn1Ms8B/Iy1Cs/pV75
KfXKT6tCr/yUeuWn1Ms8B/Iy543DIi/DdflpU7ueJC/Ddfmp9id5GV0PkJfR
9QB5mT9sf5KXYX35KevLTydbffIyrM88B/IyynMgL6M8B/IyynMgL6M8B/Iy
4jTJyyjPgbyM/Ii8jPIcyMsoz4G8TAbza/IyynMgL6M8B/Iy+v7kZfS7kZcR
T0pexp4f9ngZ5TmQlxEnTl5G3CJ5GXHi5GU6GLdIXob15aesLz9lffkp68tP
1X/Iy6j/kJeRj5OXGWX9h7yM+g95GeXJkJepbv2HvIzyDcjLiOMmL6N8A/Iy
1Cs/pV75KfXKT6lXfkq98lPqlZ9Sr/yUeuWn1Cs/pV75qTgI8jLibcnLaF+R
l/nU9hV5GfG25GXUz8nLrDHekLyMeEPyMqOMNyQvI96WvAz1yk+pV35KvfJT
6pWfUq/8lHrlp9QrP6Ve+Sn1yk+pV34q7pW8DNflp+3tepK8DNflp9qf5GV0
PUBeRtcD5GWK2P4kL8P68lPWl5/utPrkZVhffmr5CR4vY/3f42UsP8HjZczX
PF6mbqo/eryM+aPHy1i+hMfLmH95vEz+VB/3eJmPUjlZj5f5Xypv6/Eyxo16
vEzqvBnl8TL6/uRlrtrvRl7G5lmPl0mdQxt7vMw/ppe8jPHIHi9jfxceL3M8
9e/d42Xs79rjZVhfzyOxvp5HYn09j8T6eh7JuEiPl9mXyoV5vIxxkR4vMz2V
C/N4mehULszjZe6kcqAeL2McqMfLJKRyoB4vMziVA/V4mW9TOVCPl6FePY9E
vXoeiXr1PBL16nkk6tXzSNSr55E8vfY8EvXqeSTq1fNI1KvnkS6l9nmPl1ln
+4q8jOVIeLyM9ht5Gcvt8XgZ7UPyMuZrHi9TS/sTvIzlZni8TCfjO8jLUK+e
R6JePY9EvXoeiXr1PBL16nkk6tXzSNSr55GoV88jUa+eR6JePY8kPou8DNf1
PJLxsx4vw3U9j6S/F/Iyxod6vIzlz3i8zCDtW/AyrK/nkVhfzyOxvp5HYn09
jyS/Iy8jvyAvI98kL2M5uh4vI76VvIyd33q8jOX9eryM/Ii8jDhT8jLyWfIy
Ni97vIz8mrzM+dT8Io+X0fcnL7PafjfyMuJxyMt0Sc1f8niZHaaXvIydXwV8
v4z4RL5fRhwi3y9jebwB3y/D+vJT1pefsr78lPXlp5ZPGPD9Muo/fL+M+g/f
L6P+w/fL2HV1wPfLqP/w/TLqP3y/jPoP3y+zzvoP3y9juXAB3y9DvfJT6pWf
Uq/8lHrlp9QrP6Ve+amn1/yUeuWn1Cs/pV756WfGQfD9MpbbFvD9MjYXB3y/
jPYb3y/zmPVtvl/GcuQCvl/GzgECvl/G8uUCvl/GzgECvl/Gch0Dvl+GeuWn
1Cs/pV75KfXKT6lXfkq98lPqlZ9Sr/yUeuWn1Oue7zU+i++X4br81PJGvPfL
cF1+arleAd8vY/N1wPfLlLT9zPfL6DqB75dhffkp67s8fNSXn7K+/FR+R15G
fkFe5mnzTfIyynMgLyO+lbyM3a8MyMsoz4G8jPINyMuIMyUvI58lL1Pf/Jq8
jPyavMw6y3MgL2PPCwXkZZTnQF7GnlMKyMtMsDwH8jLSS15GnHjdIXt/3X+m
vjvvFbeYXOZwtbS36rvzXrv/FRT75puxiw/Vd+e9lp8ZnFqY55mpR+u7817W
13kv6+u8l/V13sv6Ou8VT51uSe1BGdo3dOe9dg4TPN2xccV5rRu6895M1n+e
X7PzwPq2Dd157zbrP0nptrz8VkxDd96r6+TqA7pfStOioTvvle83i9r05dHG
ke68V7z2xCMLWy9vH+nOe9V/BlWc+feo5pHuvFcc97JxKxYe7hnpznsttzw4
s7LzzrNdI915L/XqvJd6dd5LvTrvpV6d91KvznupV+e91KvzXurVeS/16ryX
enXeK952+868q+uvjXLnveJtS4ws/tzBpVHuvFf7Knz/otwXV0e5817lG+Qr
NXtTaH6UO++152SCm5OjK9ZeFOXOe5Vv0KPRF4VK32voznuVb5B54sfdxmVs
5M57lTdyr2aFjYPuX0frvFe8YYHfq2VfkKORO+8Vb1hr6Ph5FbI2cue91Kvz
XurVeS/16ryXenXeS70676VenfdSr857qVfnvdSr817q1XmvOKzyXaendGwX
7c57ua7zXjuXDsbkWN93/t367ryX6zrv1f78/uNx877qGu3Oe3V9Hmqb8cay
DtHuvNee3wh+zpAz9nCvaHfeq+uBv6f1/PXpHtHuvJf1dd7L+jrvZX2d97K+
znvld+Rl7HnagLxMBfNN8jLKcyAvI76VvIw4TfIyynMgL6N8IfIy4kzJy8hn
yctkML8mL6P5kbxMWKnUPAfyMuJzycvIZ8nLiJ8lL5NieQ7kZeS/5GWU50Be
RtwieRl7PjMgL2PPwwfkZVhffsr68lPWl5+yPvMcyMuo/5CX+dH6D3mZidZ/
yMvoOpm8jPINyMuI7yYvI76bvIz6D3kZ9R/yMtTLPAfyMtQrP6Ve5jmQl6Fe
+Sn1Ms+BvAz1Ms+BvIz4PvIy4m3Jy2hfkZex5zYD8jLKNyAvo35OXkb5BuRl
xNuSlxFXSF7GuJWAvAz1Ms+BvAz1yk+pl3kO5GWol3kO5GWoV35KvfJT6pWf
isMiL8N15jmQl+E68xzIy+h6gLyM8QUBeZlTtj/Jy7C+/JT15aesLz9lfflp
Z/M78jLyO/IyZ8w3yctkNC6VvIzxnpvJyzhOE7zMMeNDycso34C8jPGwHi8z
13yWvMxc82vyMvJr8jJl/5PnEOtxpuRlAvvdyMuIJyUvE/2fPId/eZkqppe8
jLhF8jJh36Vyi+RlwtKncovkZcQtkpdhffkp68tPWV9+yvryU3Fn5GXKWv8h
L1Pb+g95GeUbkJdRvgF5mcD6D3kZ9R/yMtOs/5CXCaz/kJcxbiUgL0O98lPq
dXn40Ovy8KFXfkq98lPqlZ9Sr/yUeuWn1Oue74Ve+WnIOAjyMqNtX5GXEW9L
Xsbe1xxJXkb7iryM/buR5GXCnk/lDcnL2L8bSV5G74kmL6N8A/Iy1Cs/pV75
KfXKT6lXfkq98lPqlZ9Sr/yUeuWn1Cs/pV75qe1nj5fhuvz0TuHU60nyMlyX
n2p/kpcxbjcgL6P9SV5G+5O8DOvLT1lfflrb6pOXYX356THlF4GXkV+Ql7mZ
L9U3ycuYf3m8jOURebyM8hzIy5i/e7yM/Ii8jOU1ebyM+bvHy8xV/hJ4Gfk1
eZmQ5TmQl9H3Jy9jPujxMuJnyctY/UjyMoF4WPAy4sTJy8w1bpG8jO0Hj5cR
t0hehvXlp6wvP2V9+Snry0/Vf8jLqP+Ql5GPk5exXJdI8jLqP+Rl5lr/IS+j
PBnyMso3IC+j/kNeRv2HvAz1yk+p1+U5QK/8lHqZ50Behnrlp9TLPAfyMtQr
P6Ve+al4W/Iy4m3JyyjfgLyM9UmPl9G+Ii+jfk5epoDxhuRlxBuSlxFvS15G
vC15GeqVn1Iv8xzIy1Cv/JR65afUKz+lXvkp9cpPqVd+Sr3yU3Gv5GW4Lj8t
ateT5GW4Lj/V/iQvo+sB8jLan+RltD/Jy7C+/JT15ac2L2wmL8P6zHMgLyO/
IC8TMt8kL6M8B/IyynMgL6M8BPIyynMgLyM/Ii+jPAfyMspzIC/T1/yavIz8
mryMzY8eL6PvT15mg/1u5GXEz5KXsfnX42XGmV7yMspbIC/zsHGL5GXeNG6R
vIy4RfIyrC8/ZX35KevLT1mfeQ7kZdR/yMvIx8nLKN+AvIz6D3mZKtZ/yMuI
7yYvo3wD8jLqP+Rl1H/Iy1Av8xzIy1Av8xzIy1Cv/JR6medAXoZ6medAXoZ6
medAXka8LXkZ5RuQl1FOCHkZ7SvyMurn5GWUb0BeRrwheRnxtuRlxNuSl6Fe
5jmQl6Fe+Sn1Ms+BvAz1Ms+BvAz1yk+pV35KvcxzIC/DdeY5kJfhOvMcyMvo
eoC8jPYneRntT/IyrM88B/IyX1h98jKsLz99vlTPyScOtPB4GXu/mMfLzM47
bU6zW608Xsbem+bxMkmp71/zeBl7H5nHy1xJfb+bx8vY+9E8Xuar1PfEebzM
LxPfW/Dg8+RlMo/+6uOI2JYeL9P6TK+csxu08niZVJ60hcfL6PuTlylvvxt5
GfE45GVSOdOWHi9Tw/SSlzmX+j6mYOzxSjGrSv4dKT+19zEFVU5+NvW1Mrcj
5af2Pqbg5NEF138qditSfvpU6vuYggxf9Fu2Y9KtSPmp6o+z+vJT1pefsr78
VPUzWn35adPU9zoF75VoHeRYV9D56cMFa4dnbxwbDNu05uYvXQo6P73yfv+I
JSNjgxOjDsZOXlDQ+emedWue7XApNshx752FZYsXdH46vGHvzPOLtQwKDtqW
81T9gs5Pq2aocaN5iZZBzX3pC330dwbnpwPGXc2Z9dfYoOcHdZZmnpfR+emb
2TdmGvBhbPD+o9fSzCuS0fnpsotDjoSqxQYNHhudMLh4JuenYd1CtYaliQ3K
Vyo49J+zGZ2fUq/8lHrlp9QrP6Ve+Sn1yk+pV35KvfJT6pWfSm9d0ys/pV53
/zT1PWLB//LMzH08prTzU+2rmBPfX4opXNr5qfbVyEbHps9vUPrfPHzbV7nH
fNn4wt1Szk/tPWLBtPpt73ybubTzU3tvWvDJxV4D0x8s7PzU3j8YfJv48Be1
yhdxfmrvTQu6TD7ZfcwfhZ2fTkp9b1pQLU+5HBd6FnF+Kr6j4qxr88NbF/n3
/in0yk+pV35KvS4PH3rlp9QrP6Ve+an07jK98lPp7WZ65af2nrighumVn1Kv
/FQcVrdhS1d0OFTW+SnX5afhhZfVafVIXHBl0LRnXux3O1J+qvWrti4/HWj7
88/lQ/ZdTVPO+ekbtj+/jH22zIzjZZ2fLrX9WTrr2OGti5dzfqr9OT/+0tZ+
eco5P2V9+Snry09Vv4zVl5+yvvxUfkdeRn5BXka+SV7G3jfq8TLiW8nLiG8l
L2PvY/V4GfkReRl7j7nHy8hnycvY+1g9XkZ+TV5mecNXVz74fcjL6PuTl8lu
vxt5GfE45GWmlTnX8MH3IS/zqOklL2Pv7/N4GfGJ5GW0z8nLiDckL8P64mVY
X7wM64uXYX3xMuo/5GXOW/8hL3PQ+g95GfUf8jLqP+Rl8lv/IS9j76n0eJk+
1n/Iy7xj/Ye8zGnrP+RlqFe8DPWKl6Fel4cPveJlqFe8DPWKl/H0Gi9DveJl
qFe8DPWKlxHfR15GvC15GfG25GW038jLiLclL6N9SF5GvC15Ge1P8jLiCsnL
iLclL0O94mWoV7wM9YqXoV7xMtQrXoZ6xctQr3gZ6hUvQ73iZahXvIz4LPIy
XBcvc69rqu+Ql+G6y8O3vxfyMroOIS+j/UxeRtdF5GVYX7wM64uXYX3xMqwv
XkZ+R15GfkFeRr5JXkZcKnkZ8a3kZdYap0leRnwoeRn5EXkZcabkZeSz5GXk
1+Rl5NfkZZTnQF7G8os8XkZ5DuRlLDfJ42WU50BeRnrJy4hbJC8jfoq8jL2/
3uNlxImTl2F9d/8U9TWfsr7mU9bXfKr+Q15GPk5eZqP1H/Iy06z/kJdpbP2H
vIz6D3kZ8drkZdR/yMsMtP5DXkb9h7wM9Wo+pV7Np9Sr+ZR6NZ9Sr+ZT6tV8
Sr2aT6lX8yn1aj6lXs2n4m3JyygnhLyM9hV5GfG25GXUt8nLWE6Rx8tY3pfH
yyhvhLyM5RR5vIzyDcjLUK/mU+rVfEq9mk+pV/Mp9Wo+pV7Np9Sr+ZR6NZ9S
r+ZT6tV8Ku6VvAzXNZ/Kv8jLcF3zqfYneRntT/Iy2p/kZbQ/ycuwvuZT1td8
yvqaT1lf86n8jryM8hzIy8g3ycsoz4G8jPhW8jLiW8nLKM+BvIz4UPIy4kzJ
y8hnycvIr8nLyL/IyyjPgbyMOFPyMvJZ8jLiScnLKM+BvIz8l7yM3kNNXkbv
oSYvY3lxHi8jTpy8DOvLT1lffsr68lPWl5+q/5CXUf8hL6P+Q15G/Ye8jPoP
eRnlG5CXUb4BeRnlG5CXUf8hL6P+Q16GeuWn1Ovun0KvyxuEXvkp9cpPqVd+
Sr3yU+qVn1Kv/JR65afibcnLiLclL6N9RV7GcuQ8XsZyZT1eRv2cvIzlUXu8
jHhD8jLibcnLiLclL0O98lPqlZ9Sr/yUeuWn1Cs/pV75KfXKT6lXfkq98lPq
lZ+KeyUvw3X5qeUQerwM1+Wn2p/kZWra/iQvY3mnHi+jvBHyMqwvP2V9+Snr
y09ZX35q+fMeLyO/Iy9j+fMeL2P58x4vM9f4Vu/9MuI0wctYPn/gvV9GfgRe
JsU4U/Iyls/v8TKWz+/xMvJr8jL/zXOI5fO6AXmZEfa7kZcRj0Ne5r95Dv/y
Mu+aXvIy4hbJy/xg3CJ5mfeUtwBeRtwieRnWl5+yvvyU9d3zvagvPxV3Rl5G
eTLkZTJa/yEvozwZ8jLKNyAvo3wD8jLqP+RllG9AXkZ8N3kZy9H1eBnqlZ9S
r/yUeuWn1Ms8B/Iy1Cs/pV7mOZCXoV75KfXKT+05mYC8TNgjqfuKvIzyDcjL
KCeEvIz2FXkZey4oIC9zxHhD8jL2XFBAXka8IXkZva+TvAz1yk+pl3kO5GWo
1z3fC73yU+qVn1Kv/JR65afUKz+lXvmpPV8XkJfhuvz0rF1PkpfhuvxU+5O8
jPYneRntT/Iy2p/kZVhffsr68tNhVp+8DOvLT2cqvwi8jPyCvIw9T+vxMvY8
bUBepofxreRlxLeSl7HnjQPyMvIj8jKrjDMlL2PPGwfkZTIqfwm8jMsDBC+j
PAfyMo7PBS9jz+UG5GXE45CXUZ4DeZkN4mHBy4gTH3YxZmD8pXh3/1R84ssL
yrT++UK8u38qDvGXTfF596+Nd/dPxVttDY3MsOVKvLt/yvq6f8r6un/K+rp/
yvq6f5rO+s+lL3LO+GtPgrt/qv5zZNS6d88/lujun9p7T4JMn5/+KMN7Ce7+
6STrPyeqTekzuFCiu3+qXKZxmbe+cDiU4O6fKt8gsnWoWt+TCe7+qT2HGSSO
L1R3yJQEd/9U+Qal48+X6nj/99f9U3vPS9DyUN3OF6Ym/Ps+ces/C8KyPfnW
nwnu/in16v4p9er+KfXq/in16v4p9er+KfXq/qmn1+6fUq/un1Kve5849Or+
qT1XHMS3HL1hwt1Ed/9UvG397KU+eaN5krt/as8VBz1bJG2ff//vQvdPtd+i
t6Ybl7NZkrt/qpyQCx9UnTDwYqK7f6p9OO9opYTMOZPc/VN7jjpY8/hb7XJt
TXT3T8XbvnG8ffSN2CR3/1TvT1/ZY+moN7cluvunl403TPfOiBGliia5+6fU
q/un1Kv7p9Sr+6fUq/un1Kv7p9Sr+6fUq/un1Kv7p9Sr+6fUq/un4rNaVZy3
PPtjye7+Kdd1/1S+07DvnMhLW+Pd/VOu6/6prk8+/eXigXIVkv+9f2p/F7t/
/upU/UtJ7v6p9nO+lTeHrLiS9O/9U9u32W8VmFXiryR3/5T13f1T1Nf9U9Z3
909RX/dPledAXkZ+QV7GeM+AvIzyHMjLKM+BvIz4VvIyynMgLyM/Ii+jPAfy
MspzIC9jPGxAXkZ+TV5GeQ7kZfT9ycsoz4G8jHgc8jLKcyAvozwH8jLKW5g9
Z/Ke4kOTnZ+KT1yUNGDp8sHJzk/FIT7Ud1bfRQ2SnZ+KtzrTb2eXd+/rlZ+y
vvyU9eWnrC8/ZX35qfpPnuc7Xdua0sb5qfpPWJWHLn75YRvnp+o/lXqHpz18
/7+jex7J+k+G08d3xCxs8+/zSNZ/Pvki+66lzdo4P1X/6RqWZWLD3m2cn6r/
DG3QfUrTIm2cn6r/NH+o9stP3P/95afqP/3GvvH5pqJtnJ+q/3zzSbvPOgxv
4/yUeuWn1Cs/pV73PBL0uueRoFd+Sr3yU0+v+Sn1yk+pV35KvfJT2w+bB9/b
lbvz622dn4q3fTrUN0u7H9s6PzXudfPEO3OKDbz/dyE/1X7rMSju9xP72jo/
nWt9O1fLUX80HtLW+an24bZJw1Ycmd7W+an9u5GHv9+/5mRsW+en4m2Xvbto
zo79bZ2f2r+7+YeC1w+3a9XW+an9u5vLNtpx8Prits5PqVd+Sr3yU+qVn1Kv
/JR65afUKz+lXvkp9cpPqVd+Sr0uv9f4rAG/nM9wfGHKv/m9WJefas59pti5
GaGWyc5PuS4/Vf7JwQl1qt7+NMX5qf4uLo/LFmQfmuL8VPu57lPRP44aluL8
VPu22tJuN68OT3F+yvryU9aXn7K+/JT15ac/rMo9oF5YgsfLrLrToNEjb8R7
vMzZxeVvvfBOosfL/NJueLcHnycv89bXO75Yca61x8vEdCjS4QF3Q14mz8RJ
vcesivN4mZpRz8xaUy7e42VuPvHX7lkNWnm8TKbfyg5/8HnyMsV+jUxzZmOC
x8s0ejdP1UerJ3q8TOp91QSPl2li35+8zCf2u5GXEY9DXib1ua8En5cxveRl
3unQ4okLFeM8XibDjB7hdZrFebzM4KWZmuYeE+fxMrteeGZGzQ/iPF5G9cnL
sL7Oe1lf572qT14msk/7PZ/mSfB4mdlL/96SUCvB42Xy/JF/+5zEBI+XGXNr
w5Gh4xI8XubQpjyVZ36Y4PEya4rdWth3UYLHyySfSlm975UEj5c5+mHdla92
T/B4mb7vz5i6rFKCx8s8urdB4zfzJni8DPXqvJd6dd5LvTrvpV6d91Kvznup
V+e91KvzXurVea/0kpehXp33ioMgLzPJ9hV5Ge0r8jKDbF+Rl/nW9hV5mY9+
aJYj88w4j5eJeX/J471fjPN4mR/ajCtYpFOcx8t0aXLuoSYl4zxeJuvLE1cV
zxzn8TLUq/Ne6tV5L/XqvJd6dd5LvTrvpV6d90oveRnpJS8jveRlqFfnvdWM
wyIvw3Wd98Z+kalbwSJJHi+jdfIy2p/kZbQ/yctof5KXKWT7k7wM6+u8l/V1
3qv65GVYX+e9b5rfkZdpbH5BXuaI+SZ5GXGp5GXEt5KXqWicJnmZLMaHkpeJ
Mz8iL3PEOFPyMtfNZ8nL5Da/Ji8j/yIvc3xkwzQr7/8+5GXE55KXkc+SlxGP
Q17mTHhS8wffh7yM/Je8jLhF8jLiE8nLhNs+Jy8j3pC8DOtrPmV9zaesr/mU
9TWfqv+Ql5GPk5d52PoPeZmB1n/Iy8jHycsssv5DXqap9R/yMvus/5CX6Wr9
h7yM+g95GerVfEq9mk+pV/Mp9Wo+pV7Np9Sr+dTTa/Mp9Wo+pV7Np9Sr+VS8
LXkZ7SvyMn8Zb0teRvuNvIx4W/Iy4m3Jy4i3JS+j/UleRrwheRnxhuRlqFfz
KfVqPqVezafUq/mUejWfUq/mU+rVfEq9mk+pV/Mp9Wo+fdr4LPIyXNd8qusu
8jJc13yqvxfyMvq7IC+j6wfyMtq35GVYX/Mp62s+ZX3Np6yv+VR+R15GuQTk
ZeSb5GVeNS6VvIz4VvIyuYzTJC/zp/Gh5GVqmh+RlxFnSl5GPkteRn5NXqaV
+Rd5me2W50BeRnwueRldJ5CXEU9KXmaN5TmQl5H/kpcRt1i99+SxgxLr/3v/
1PjE1kGuazNb1nd+ms84xC0rNmZ9tU8956fiuzuu7XmgWqf6zk9Z390/RX35
KevLT1lffqr+kz6xU45/egbOTzNY//nlwKI0V9I1dH76p/WffrMfSWn1W6Tz
0++t/5wLnl2f7qGGzk+HWf9pcHnL59/GBs5P1X8WDNkYdfOdwPmp+O5pvx9f
mOVypPNT8d39hucquzdTQ+eny63/jMjdNeL0tUjnp+Lpev2UPK3iqsD5KfXK
T6lXfkq98lPqlZ9Sr/yUeuWnnl7zU+qVn1Kv/JR65aeVjIPYMaBOyxrbGzk/
Vb7B3BuvNCjTOcr56SHj/m6/cKJHp1aN/r1/avttxdNRV+t0ivr3/qn17bCc
c26GLW7k/FT5Bs9Omzq60oVGzk/FD07M02pivcRGzk/F21abeanbw/f7hvxU
XOHLSyccLtumkfNT5RtUul11f5fMUc5PqVd+Sr3yU+p190+h190/hV75KfXK
T6lXfkq98lPqlZ9Sr/y0ifFZW8NH1KiVtrHzU67LT7PYdVfcgCvrzi+p5/yU
6/LTGPt7efu9/G/1KtbY+an+LjZN2vzh5CXRzk+1nxNqVNjdf2W081PlkETv
6pXvqU+inZ+yvvyU9eWnrC8/ZX35aYL5HXkZ5RKQl1GeA3kZcankZcS3kpe5
bpwmeRnxoeRl5EfkZcSZkpcJmc+Sl1GeA3mZauZf5GWWWZ4DeRlxpuRl5LPk
ZcTjkJeZbnkO5GUKmF7yMuIWuxZ4eninzxt7eQ59xxQN77ehsfPT28Yhlvts
4Jfdmjb28hxufLF7Xr37epnnoPrMc1B9+SnrM89B9Znn0Grt1e3zRsR4eQ6l
IxpsmJyvqZfn8PInM0/svP/fUX662vpPtQV3+3yUu6mX5/BGQrv+fZ6M8fIc
zh+O/3vGghjnp8qTydsmY6YlmWKcn/a2/rPxlyW/9i/U1MtzyHC+aeL7WWL+
fR7J+s+aehda7dkS4+U5SC/zHKSXeQ7SKz+lXuY5SC/zHKRXfurpNT+lXuY5
SK97Hgl6meeQ88C+tIcONnN+qn11pl2hazv7NXd++qXxtlE/vFgkrHMz56fi
ba9//dPSX55v7vxUfbvZgJofL/ismZfn8PHflWrtu9fMy3M4OPh046Pdmnl5
DiPuvV5oyeDmzk/FG36bpfSkXd2beXkOgzt9+3b6x5t7eQ7SKz+lXvkp9cpP
qVd+Sr3Mc5Be5jlIL/McpFd+Sr3Mc5Be+WkF47OyvJf7/OE8sc5Puc48hyuF
cuSa/mxjL89B68xz+N/1lUG2+37FPIcMf7XpWPPzFl6ewwdTvxqTN9TCy3MY
/0Ta79J83cLLc1B95jmoPvMcVJ95DqovP61lfkdeRn5BXqa7+SZ5mVbGpZKX
qWd8K3mZdeI0wct8YXwoeZl/5EfgZQoYZ0pe5kPzWfIy+82vycvIv8jLTPpP
nsO/vIz4XPIyysEgLyMeh7zMqP/kOcR6eQ7kZZS3sGzYzfCw72Kdn4pP3Hhq
/e+57w8q8tNjxiH2L5RlYIb2sc5PxXc3KNIt5ei+WOenrC8/ZX35KevLT1lf
fqr+MyX/uJHRE1o5P1WezAsf7H++ZtnWzk+VJ/Nt7urTe+dr5fxU/WdE+vdL
Ni/V2vmp8mT2rrlcNkffVs5P1X9q1PtjVf21rZyfiu9+csOczS0KtXJ+Gm/9
J23Q8P28939/+anyZOJaHctUu3Ar56d6P/Ld2a+m7/9jK+en1Cs/pV75KfXK
T6lXfkq98lPqlZ96es1PqVd+Sr3yU+qVn+p9zU/MrN7py4Fxzk/F2xZ88nDy
ui1xzk/nG2/bZEbGXvvu/13IT7XfiuT+rEoQinN+Kt5259nfqi54Js75qXjb
EZVOXo94M875qeNteze4F9SNc34q3rZLlex/lLrfN+Sn4g3Hrn+yxPp6cc5P
xRseO1qlWNLUOOen1Cs/pV75KfXKT6lXfkq98lPqlZ9Sr/yUeuWn1Cs/pV75
aVHjs8oPT45vMDne+SnX5ae67ooY9dGOukNjnZ9yXX4qLnVCxQXDU+bHOz/V
38VH5YeM7X2//8tPdf3w553ljx3pEe/8VPv2XMx3DRN6xjs/ZX35KevLT1lf
fsr6Lh9J+UXgZVabX5CXUZ4DeZlnjUslL/Ow8a3kZUYbp0leppHxoeRldpgf
kZc5YZwpeZk85rPkZVz+EniZu8oDBC9z1vIcyMs4Phe8jHzWe7+M8TjkZbpa
ngN5GcfDgpcRt0heRnwieZm3jEMkL1PHeCvyMqwvP2V9+Snry09ZX36q/kNe
Rj5OXmae9R/yMiOt/5CXUS4TeRn1H/IyypMhLyO+m7zMGus/5GU6Wv8hL0O9
8lPqlZ9Sr/yUeuWn1Cs/pV75qafX/JR65afUKz+lXvnpBuNtycso34C8TDbj
bcnLaL+RlxFvS15GvC15mWzGG5KXEW9IXkY8I3kZvT+avAz1yk+pV35KvfJT
6pWfUq/8lHrlp9QrP6Ve+Sn1yk+pV3561vgs8jJcl5/quou8DNflp3rPOHkZ
/V2Ql9H1A3kZ7VvyMqwvP2V9+Snry09ZX376kPkdeRnlEpCXUZ4DeZkqxqWS
l1GeA3mZ94zTJC+TRe/7Bi+jfAPyMspzIC/zq/kseRnlOZCX2Wr+RV5mjeU5
eO+Xse9PXkY+S15GPA55mUmW50BeRv5LXkbcInkZ8YnkZZKMQyQvI76bvAzr
y09ZX37K+vJT1pefqv+Ql5GPk5fJYv2HvMxW6z/kZZTLRF5G/Ye8jPhu8jI1
rf+Qlxll/Ye8jHg68jLUKz+lXvkp9cpPqVd+Sr3yU+qVn3p65afQKz+lXvkp
9cpPxduSl1FOCHmZQ8b9kZfRfiMvo3wD8jLibcnLiB8kLyPelryM8g3Iy4i3
JS9DvfJT6nX3T6FXfkq98lPqlZ9Sr/yUeuWn1Cs/pV53/xR65ac9jM8iL8N1
+amuu8jLcF1+qvwT8jL6uyAvo+sH8jLat+RlWF9+yvryU9aXn7K+/PRCq/4z
M+Rt4/Eyu2bM6rX/g2SPl0kfM7Z43UVtPV7m5o3D4x98nrzMsX++yjD/kSSP
l9nc4uKBB9wNeZnKT1x6v+W2JI+XiT/+9faX7vdr8jL5axzK/oBzIS9T8tU3
Fj74PHmZeiNml/90TxuPl+lUZUCH003berxMaq5vG4+X2WTfn7zMbvvdyMtE
GY9DXib1fmsbj5eJM73kZZbfWtJmQ8Mkj5cpXvub9umfTPJ4mXea9uj365Qk
j5f5LevWr9OsSvJ4GdUnL8P64mVYX7yM6pOXaZ/5s5ujyrXxeJnPmrY793hs
G4+XqfzG4Es9e7TxeJlZU/M/HD2vjcfL/NVxQEr3jW08XmbP5rbf1/28jcfL
9B2z/ueZ09p4vMzfUTMOth7RxuNl3q52KzQ4qo3Hy9R4ftbzieXbeLwM9YqX
oV7xMtQrXoZ6xctQr3gZ6hUvQ73iZahXvIz0kpehXvEy4iDIy2hfkZfRviIv
M8n2FXmZ07avyMt81XdxxIH76+RlulTLGFNrQpLHy1y4erbR2X5JHi8z8lSz
ijkjkjxepmyRi4cv3NdFXoZ6xctQr3gZ6hUvQ73iZahXvAz1ipeRXvIy0kte
RnrJy1CveJm1xmGRl+G6eJnu7XuMP1UtxeNltE5eRvuTvIz2J3kZ7U/yMjVt
f5KXYX3xMqwvXkb1ycuwvniZo+Z35GXkF+RlbphvkpcRl0peRnwreRlxmuRl
xIeSl5EfkZcRZ0peJp/5LHmZSubX5GXkX+RlsnT6p9yD34e8jPhc8jL63cjL
iMchL/PQ3tUDHnwf8jLiYcnLiFtMfCbqZNG3K7u8QXGLY7cljR++rLLLG3zF
uMUi6atGbO9Z2eUNiltcENp1acHQyi5vUPWTrb78lPXlp6wvP2V9+an6z5Dx
jUbunFTd+eky6z9VrnY4d2d4deenxaz/NF/YLSg/rrrzU/WfvNGJU/b0qu78
VD5+qNjcfpv6V3d+usX6z4ZRE+NmFA93ftrV+s8/+QefeLZWuPPT89Z/TnXv
Mz6iTLjz01HWfx7dMarWezHhzk/Vf9qeDe/4YRDu/JR65afUKz+lXvkp9cpP
qVd+Sr3yU+qVn1Kv/FR6C5pe+Sn1yk8bGG97+/s712vERDg/1b5aWyPfM89V
jXB+qn2173ThjVMaRTg/1b764LWsOeoVj3B+qn31ZNf258qXi3B+Kt62QajZ
tw8fruH8NMl4w1fbVen444Uazk/FG/ZcUibDol9qOD8Vbzg7U8QnYfdqOD8V
b3ikwvn9OW/UcH5KvfJT6pWfUq/8lHrlp9QrP6Ve+Sn1yk+pV35KvfJT6pWf
inv9Ok266AET6zg/5br8VNeTx6bmyLBxTWWXN9jO1k/YuvxU1wOZPzi7P3Jh
Heen2p+Xzx4fneu9Os5PtT9LtfirfJ81dZyfan926bOo9agVdZyfsr78lPXl
p6wvP2V9+an8jryM/IK8jHyTvIzyHMjLKM+BvExT4zTJyyjPweNlzI/IyyjP
gbyMfJa8jPyavIz8i7yM8hzIy4gzJS+j6wTyMuJnycsoz4G8jPyXvIy4RfIy
4sHJy4hDJC8jvpu8DOvrvJf1dd7L+jrvZX2d9yrfgLyM+g95GfUf8jLKNyAv
o/5DXkb9h7yM+G7yMr9a/yEv08/6D3kZ8XTkZahX573Uq/Ne6tV5L/XqvJd6
dd5LvTrv9fTaeS/16ryXenXeS706761qfB95GeUbkJdRvgF5Ge038jLibcnL
qJ+TlxE/SF5G+5O8jLhC8jLibcnLUK/Oe6lX573Uq/Ne6tV5L/XqvJd6dd5L
vTrvpV6d91KvznupV+e9I4zPIi/DdZ33ynfIy3Bd5726PiEvo78L8jLaz+Rl
dJ1AXob1dd7L+jrvZX2d97K+znuV50BeRnkO5GWU50BeRlwqeRnxreRlxGmS
lxEfSl5GfkReRpwpeRnlOZCXUZ4DeZnq5l/kZZTnQF5GfC55GfkseRnxpORl
lOdAXkY8LHkZceLkZcSDk5dR3gJ5GfHd5GVYn3kO5GVYn3kO5GXEU5OXkY+T
lxFnTV5G+QbkZdR/yMvI98nLKN+AvIzyDcjLdLP+Q15G/Ye8DPUyz4G8DPUy
z4G8DPUyz4G8jKcXeQ7kZaiXeQ7kZcTbkpfRviIvo3wD8jLibcnLqG+TlxFv
S15G+QbkZbQ/ycso34C8jPINyMtQL/McyMtQr/yUeuWn1Ms8B/Iy1Ms8B/Iy
1Ms8B/Iyym0gL8N15jmQl+E68xzIy+jvgryMrh/Iy+g6gbwM6zPPgbwM6zPP
gbxMH/M78jLyC/Iys8w3ycsoz4G8jPIcyMvkFKcJXkZ5DuRlasiPwMsoz4G8
zM/ms+RlMptfk5eRf5GX+W+eQ6zHmZKXUW4SeRm9X5W8zH/zHGK9PAfyMuIW
ycuIBycvo7wF8jLKWyAvw/rMcyAvw/rMcyAvo/5DXkb5BuRlxFmTl1H/IS+j
fAPyMuo/5GXEa5OXUb4BeRlx3ORl/jGejrwM9TLPgbwM9TLPgbwM9TLPgbyM
pxd5DuRlqFd+Sr3y0yeM7yMvo3wD8jLKNyAvo/1GXka8LXkZ8bbkZcQPkpdR
vgF5mYnGFZKX0fvTyctQL/McyMtQL/McyMtQr/yUepnnQF6GeuWn1Cs/pV7m
OZCX4br8VNdd5GW4zjwH8jL6uyAvo+sH8jLat+RlWJ95DuRlWJ95DuRllOdA
XkZ5DuRllOdAXuY541LJy0QY30peRnkO5GUOGh9KXkZ5DuRlPjLOlLyM8hzI
yyjPgbyM8hzIyyjPgbyMOFPyMvJZ8jLiScnLKM+BvIz8l7yMuEXyMspbIC+j
vAXyMonGG5KXYX3mOZCXYX35KevLT9V/yMvIx8nLKN+AvMyn1n/Iyzxl/Ye8
jPoPeRnlG5CXUb6B934Z6z/e+2Ws/5CXoV7mOZCXoV75KfXKT6mXeQ7kZTy9
yHPw3i8DvcxzIC8j3pa8jPINyMso34C8jPYbeRm9P528jHhb8jLiB8nLKN+A
vIzyDcjLKN+AvAz1Ms+BvAz1yk+pV35KvcxzIC9DvcxzIC9DvcxzIC+j3Aby
MlyXn+q6i7wM15nnQF5GfxfkZXT94L1fxvYteRnWl5+yPvMcvPfLoD7zHMjL
KM+BvIzyHMjLKM+BvIzyHMjLKM+BvIzyHMjLKM+BvIzyHMjLKM+BvIzyHMjL
KM+BvIzyHMjLiDMlLyOfJS8jnpS8jPIcyMvIf8nLiFskLyMenLyM8hbIyyhv
gbwM6zPPgbwM6zPPgbyM+g95Gfk4eRlx1uRllG9AXkb5BuRl1H/IyyjfgLyM
8g3Iy4jjJi8jno68DPUyz4G8DPUyz4G8DPUyz4G8jKcXeQ7kZaiXeQ7kZcTb
kpdRvgF5GeUbkJfRfiMvo3wD8jLibcnLiB8kL6N8A/IyyjcgL6N8A/Iy1Ms8
B/Iy1Ms8B/Iy1Ms8B/Iy1Ms8B/Iy1Ms8B/Iyym0gL8N15jmQl+E68xzIy+jv
gryMrh/Iy2jfkpdhfeY5kJdhfeY5kJfJeGHvth/Ktfd4md9q33lv7qp2Hi9T
9PTvLR7+vIPHy+SeUnv9g8+Tl7k9q1h4nyIpHi/z0x+xYQ+4G/IyzXe13Fzg
pxSPl+n9UvHLzRPbebxM1R9rRjzgXMjLRBb/7bsHnycv0/bRu4mjTrX3eJmh
3+97dVWnDh4vk3ru2t7jZQ7b9ycv87v9buRlnjQeh7xM6vlwe4+X6WV6yct8
MzXj6FfapHi8TP0DpV7d2z/F42WW/7Z9xpJlKR4vk2Z58Qu7t6Z4vIzqk5dh
fT3fy/p6vlf1ycsMWpK/ePMG7T1e5n+/rc/zR+f2Hi/TvNT+AjVHtvd4mQ01
BlfOvq69x8tku73v5ap72nu8zNlO6248vLe9x8u8XTRf+h4r2nu8TN4TN8MK
vdPe42UW7Wt7tmFKe4+XictyZ2rhyPYeL0O9er6XevV8L/Xq+V7q1fO91Kvn
e6lXz/dSr57vpV493yu95GWoV8/3ioMgL7Pd9hV5Ge0r8jLLbF+RlwmzfUVe
5pdsGbrO25bi8TIj9z3b96EFKR4vk3Fys95rX0/xeJlpYxYnH2mZ4vEyUV/G
pv2seorHy1Cvnu+lXj3fS716vpd69Xwv9er5XurV873SS15GesnLSC95GerV
8717jcMiL8N1Pd875ub2dR837ejxMlonL6P9SV5G+5O8jPYneZl425/kZVhf
z/eyvp7vVX3yMqyv53v/Nr8jLyO/IC+Ty3yTvIy4VPIy4lvJy4jTJC8jPpS8
jPyIvIw4U/Iy4eaz5GWamV+Tl5F/kZcpfbtT4oPfh7yM+FzyMvrdyMuIxyEv
U/j5nLMefB/yMuJhycuIWyQvI26RvMxs4xbJy4hbJC+j+uRlWF9+yvryU9aX
n6r/kJdR/yEvU8/6D3kZ9R/yMvJx8jJHrP+Qlxll/Ye8jPoPeZnp1n/Iy6j/
kJehXvkp9cpPqVd+Sr3yU+qVn1Kv/JR65afUKz+VXvIy1Cs/FQdBXkb7iryM
9hV5Ge0r8jLaV+RlxNuSlxFvSF5GvCF5GfGG5GXEG5KXoV75KfXKT6lXfkq9
8lPqlZ9Sr/yUeuWn1Cs/pV75KfXKT8W9kpfhuvx0oF1PkpfROnkZXQ+Ql8lg
+5O8jK4HyMtE2/4kL8P68lPWl5+yvvyU9eWn8jvyMvIL8jLyTfIyynMgL6M8
B/IyynMgL6M8B/IyynMgL6M8B/Iy8lnyMvJr8jLyL/IyynMgLyPOlLyMrhPI
y4ifJS+jPAfyMvJf8jLixOsO2fvr/jP1A+Y5JJc5XC3trfrOT8UtFvvmm7GL
D9UPmOdwamGeZ6YerR8wz0H1meeg+vJT1meeg+ozzyHdktqDMrRv6Px0g/Wf
pzs2rjivdUMvz+H5NTsPrG/b0MtzSEq35eW3Yho6P71q/af6gO6X0rRo6OU5
NIva9OXRxpFensPEIwtbL28f6eU5DKo48+9RzSO9PIdl41YsPNwz0stzOLOy
886zXSO9PAfplZ9SL/McpJd5DtIrP6Ve5jlIL/McpJd5DtLLPAfpZZ6D9DLP
YfvOvKvrr43y8hxKjCz+3MGlUV6eQ/j+Rbkvro7y8hzylZq9KTQ/ystzuDk5
umLtRVFenkOPRl8UKn2voZfnkHnix93GZWzk5Tncq1lh46CwRl6eQ4Hfq2Vf
kKORl+dQa+j4eRWyNvLyHKSXeQ7SyzwH6WWeg/Qyz0F6mecgvcxzkF7mOUgv
8xykl3kO0ss8h/Jdp6d0bBft5TlonXkOY3Ks7zv/bv2AeQ5aZ57D9x+Pm/dV
12gvzyHUNuONZR2ivTyHnzPkjD3cK9rLc/h7Ws9fn+4R7eU5qD7zHFSfeQ6q
zzwH1WeeA3kZ+QV5GeU5kJcRl0peRnwreRlxmuRlxIeSl5EfkZcRZ0peRnkO
5GWU50BeRv5FXkZ5DuRlxOeSl9HvRl5GPCl5GeU5kJcRD0teRtwieRnxieRl
xCGSlxHfTV6G9XX/lPV1/5T1df+U9XX/VP2HvIz6D3kZ9R/yMhOt/5CXkY+T
l1H/IS+j/kNeRnw3eRnx3eRl1H/Iy1Cv7p9Sr+6fUq/un1Kv7p9Sr+6fUq/u
n3p67f4p9bq8QejV/VPq1f1T8bbkZbSvyMuI+yMvo/1GXuaw8bbkZbQPycso
34C8jPYneRlxheRllG9AXoZ6df+UenX/lHp1/5R6df+UenX/lHp1/5R6df+U
enX/lHp1/5R6df90t/FZ5GW4rvunuu4iL8N13T91eVPgZZRzQl5G+5m8jPYt
eRnW1/1T1tf9U9Z3eYOor/un8jvyMvIL8jLyTfIyynMgL6M8B/IyMeI0wcso
z4G8jPIcyMsoz4G8TEbzWfIyRc2vycvIv8jL/DfPIdbjTMnL6HcjL6P3g5OX
+W+eQ6yX50BeRtwieRnx4ORlxCGSlxHfTV6G9ZnnQF6G9ZnnQF5G/Ye8jPoP
eRn1H/Iy6j/kZZRvQF5G/Ye8jHht8jLKNyAvo/5DXkY8HXkZ6mWeA3kZ6mWe
A3kZ6mWeA3kZTy/yHMjLUC/zHMjLKN+AvIzyDcjLKN+AvIz2G3kZ8bbkZbQP
ycuIHyQvo/1JXqaLcYXkZbIZ30FehnqZ50BehnqZ50Behnrlp9TLPAfyMtQr
P6Ve+Sn1Ms+BvAzXmedAXobrzHMgL6O/C/Iyun4gL6N9S16G9ZnnQF6G9Znn
QF5GeQ7kZZTnQF5GeQ7kZeYYl0pe5gXjW8nLKM+BvExW40PJyyjPgbzML8aZ
kpdRngN5GeU5kJdRngN5GeU5kJcRZ0peRj5LXkY8KXkZ5TmQl5H/kpcRt0he
RnkL5GWUt0BeZqzxhuRlWJ95DuRlWF9+yvryU/Uf8jLycfIy4qzJyyjfgLzM
t9Z/yMuo/5CXUb4BeRnlG5CXEcdNXkY8HXkZ6mWeA3kZ6mWeA3kZ6mWeA3kZ
Ty/yHMjLUC/zHMjLiLclL6N8A/IyyjcgL6P9Rl5muPVt8jLibcnLiB8kL6N8
A/IyyjcgL6N8A/Iy1Ms8B/Iy1Cs/pV75KfUyz4G8DPUyz4G8DPUyz4G8jHIb
yMtwnXkO5GW4zjwH8jL6uyAvo+sH8jLat+RlWJ95DuRlWJ95DuRllOdAXkZ5
DuRllOdAXkZ5DuRllOdAXkZ5DuRllOdAXkZ5DuRllOdAXkZ5DuRllOdAXkZ5
DuRllOdAXkacKXkZ+Sx5GfGk5GWU50BeRv5LXkbcInkZ8eDkZZS3QF5GeQvk
ZVifeQ7kZVifeQ7kZdR/yMvIx8nLiLMmL6N8A/IyyjcgL6P+Q15G+QbkZZRv
QF5GHDd5GfF05GWol3kO5GWol3kO5GWol3kO5GU8vchzIC9DvcxzIC8j3pa8
jPINvPfLGPdHXkb7jbyM8g3Iy4i3JS8jfpC8jPINyMso34C8jPINyMtQL/Mc
vPfLQC/zHMjLUC/zHMjLUC/zHMjLUC/zHMjLKLeBvAzXmedAXobrzHMgL6O/
C/Iyun4gL6N9S16G9ZnnQF6G9ZnnQF7m/wDFQK7H
     "], 0.67]}, 
   {RGBColor[0.878431, 0.4, 0.2], SphereBox[CompressedData["
1:eJx1mE2IjWEUx69vsVASs5B8ZEKzuEkRyunmY9Sl13VxkylGIgxSiiEpZZCE
mN3EGJSPBRGpoUFhZWcxJCtf2VgoFhYW85z37fmd51j+ypn/fd7393/OvTPa
99d2DC+VSs3DSqURJfuvemvcytnvxwr5039dvz9enSl7D3febFk/XaaM/vH1
weBEGfly27G7f6ca/mnflsGm87+W6f8f4jPlQNPnee2vmoX8ytmHE64+mKRz
BmadaftwdmWLaB5yzRPPmZ/nIdc8OqdnVd/WaRcW5nnI4zzl8HeXIk/BNU9H
mLPhy/g7R49Lnoc8zlMeGMpZQZ6Ca57rjxb+fXls0cCH5tezvi9Ykechj59X
OXyuVXheBdc8OmfrrhM99Z+r8zzk8flIOIcqzqfgmkfnfLm9eMqL3rV5HvL4
fCScW4bzKbjm6Zo8+O7PzuUDjw91vp18b12ehzw+HwnnXMP5FFzz6Jwj3ZtG
rRlTz/OQx8+rNTyXDXheBdc8OmfJkwWVk+0b8zzk8fNqDc9xE55XwfE+537g
fc655ukdei7Gd3K8z0LfyeG7OL4LfY/nzOf7LI7v4vgu9F0/P30n1zy7wxz6
Tp7uw4rThxXTh/SdPO7DX/30nZx9SN/J031I38vGd51D38k1T0eYQ9/J2Yf0
nZx9mPa9bHzvC3PoOzn7kL6Tsw/pOzn7kL6TI4/je8HRP8Z3cuRxfBfje/hc
xndy9LPjuxjfw3MxvpOzD537Xei79h59J8f7LPSdnH3o+C70fU+YQ9/JNc++
MIe+k6f7sOr0ofFdHN+Fvusc+k7OPqTv5On9sObshzXTh/SdnH2Y9r1sfNc5
9J2c+2Ha97LxPdz7xndyzfOs1j3j/MWq8Z0c+4bxnRz7mPGdPO7DVuM7ueY5
HebQd3L2Ydp3Mb6fCnPoO3m6D7nPi/Fde8/Z543vOie9z4vxXXuPvpOn+9Dc
7+Ls88Z3cu6H6X2+4OxDx3dx7ndx7ndxfBfHd6Hv6g99J2cfOr4Lfdc59J08
Pp/Mud8Lrnk638xdfKmtZnwnj88nc+73zPiuvUHfyePzyZz7PTO+94c59J2c
fUjfyTXP8zCHvpOn+7Di9GHF9CF9J2cf0ndyzaO9RN/J031ovr8b37VX6Tu5
5tkT5tB3cvahs88b3zuiXq3h9xYxvl8Lc+g7OfvQud+Fvt8Ic+g7uebZHe1p
he/k8ftTN76Ta54rO05vbzu40fhOHv++UTe+k2se7Q36Th5/v6gb38k1z5Ew
h76Tsw/T93tmfNec9J083Ye83zPju/YefSdnH6bv98z4rr1H38nTfVh1+rBq
+pC+k2ue3jCHvpOzD53f64zvfVGvFr6Tsw/pOzn70Pn+bnzX3qPv5OxD+k4e
P6+Gs883jO/3R3w7N6drs/GdPL6/Gs4+3zC+Xw69Qd/J4/ur4ezzDeO7zqHv
5OxD+k7OPqTv5Ok+rDh9WDF9SN/J2Yf0nZx9SN/J033I+z0zvmtO+k7OPkzv
85nxXXuPvpOn90Pu85nxXXuPvpOzD53f543v2nv0nZx9SN/JNc9/IKLfKw==

     "], 1.56]}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerMethod->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->Above,
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellChangeTimes->{3.7806798631999683`*^9},
 CellLabel->"Out[105]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
0CEuGtdDuc6opESnYzSK77832tF4rpF7MCk4hZ28rELmwpPN5DKZCGU618ZG
VjxySwXX45P5iRlgUpls+f0VQ1tzFpB7ZQ6eOSMmHPLijkIS65fFwJQ6pK4B
lm85ru87fcGC2fjFp2/ckO7jb/L7W8pcE1GrjSW0srj5ILKaHuDanQctBG4k
+fT9J0/qY1xcpG/nwq9wRdE42WnV0oeBmIJzyGiGvvfUmZYuwH6DByuHL16U
Z2cmfJUiS2H6y0jLLUVKxUlMz5+rPfjhB0tzyoJVq0TTypVIp5iaq7u8fX1x
/vr1F/L8L2lBUUnwznwmZm34xtJAIiVjx9Gj/LelPF+ZXVpqMO2alXRgDdpu
+M04LUipLNrNhN4JQnSs3fXchUeYhu9eYPt26ZNPlHM3blDs4Ia1u48hSP2X
FtsIyyv5ph2Z1s7JldCX/21OQ4uwuOlIrzmHkrnLGF/yh7pCUIVBJHeicptM
lKJw868cinsoKCST6SRGbTllTYicC9Ut0XQVCHk/ztKpqWlp8r+ZyDaPpbv7
TEHVog1Q13/D7T8WQ8nNbbKhgAkUN1oCuQFcILjGjQzrd+3iS1jAVfnX7t0T
o7zLELcQRreIlbIbi+RbJZzD2Fku17KuYNKd0LhMVK56Xzvz0UPLWJoD4SLu
W01KTRXMgIwbN07qEuenmEm5/eSJrMAgeddWbtsmhnnNYwmV/XqBgYEKE/UU
Ur4w1psikPSmbukqFNYuE2l1l1kCDGbbA3Z9Jwjt0j7ylRGcLcXHpEPHr1wx
60mW/N5GdeveBtOHdmZzz1cxiVXr12L//ZNo9ayVbNCy7u2Aqw++FnmV8zEp
dq1a1dBg9apJghVX91bk7DqjeZ83xJdfImLWWX3WGli4SD5Uo9FUz8sbLDed
DOkPf/6pEeayQKdJIQW0/t/hG7+O327qz3xFj0ttg6UbuuPYpWKUL9yJwq0w
L72Nzs11TBNzhD1pnIupfPfIEdl74mnqOZSjF8/dhGNnz6oV9fXmvs9XmagS
adlvYuvhAdAv70BU2S2Da7Jl0mpgWJhso+dkZ3VJoUyu8jBZs2Yx6LaomIOz
N5ZsOS+4nsrSrcr3CzAne+iCA23JSTWiVmIXbSgdPifX5i1ejNnZmQgdbY/U
iaNRPNUNOVFTOcFmuS5H8wpKxIhJldh55oHMtpjfLTM/q5o74YaoFbHVJhjH
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
zHW1Runo7vJi0X/njAIqxwN1HgaEyEScDL89vW1EUGRrnLpikN1TfIrMBitk
zTkfPSF8Pq5+8omWnhMh04vf/dkbQvRVuKHC29tbCQ8Pt3IwKYgpNuitFxlt
kRUbzuQVdmf5Y/Wsadg1J02/+fnn2kQfHy6aFN0NBglu2TYWV1nLExXChn8m
M4irN23TlYJD4tbDj8XXv/aUKfKGhgYKF0Zorw2xks9xLfux8+cxjSKhqR7j
sDnOHQHjTRWAp3au5PrIlpQAm/+5ZLcZReYWcgKtv26+WkoJCgnR+RoTj4R9
4vMff9Q37fHB5ct2soVx/fr1tC9tLVDIzdtbtevXG+WzMpDpNkQWqhyYOwM7
awu16gUL1K9/+60F3nB5DpeVJqW68nCyqZB3nTyyfv+77zRj8Er91PXretMK
Fb/8uw+Kigfz+7Tq6uqWRlm+ie46CTfXT2+fOlTWnrHr2FGcqCekpIhvWxje
brLamDsSAoOm8nh0kr1bxrv06adaUMZBfcXOk9quI3vE+RvvSjcTo3hwilOh
YJaflXXcq8hlracvJuqPBtvLyvT58+eLglAv/R6hZwp4WxrAmNOcXVKM7dv7
qN//bCrwsCYXxe4qp+agnlm9VTz98Ue1sKKttDfbt/eXxp+OkgNTSSlvPnhQ
XlpVTzFe4JBeiPXzwvYIB5kiSc7I4AtoLO1WXHu96/gGrF49THn0zNTIyH0g
JEnagrX79bDcneLJTz/JqoLbT3vKNFtq2gjmBnRagiXrmjikCzRvW8SO7o/G
0pmYGR+JiDEDhbuHh6icP9/C0pDD7YyKujpo66fItjfzbqo5xcXq7tMf6u4J
B8X1e/eUpevniOZ9pkv0Lr8/GEZye7Nnz37hJF+WtE3Hjh25ro5LTO1fVJlX
pU9mwoJsHQpJpmhUsW77dnPhmebhH4Z7X/+B6enZaFwVbO6Ls1zzS3bDSnef
HIfwiueYnLhObDt0qOUuNKY9OJHFZD0XZDAaWE+fnSMMeu/rr40WCqmfvZMs
rq5q3IVl69LZ3HEnpSlmf1leUahkLYNS/1Q0rl5vNmxoXL0aiWlp+OIf/0BO
UgxfKiQbJUhGuA3EXDeE6Ix6aLtOYM26KllzQKJgZgN4Y6w0Lnj3iNysT55l
LuX9u9S0u8+e6VybrpariA4OkHXrGTk5zPqb36wNHOEt7xyd39CAJ0/4zb3N
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
sp1TDtlLvxP7nz2jLRfDY7e65maqPTvIFm/dtm2Uw5xfXs5uPX9OC5nNT1dR
fRfYh24QUwsXyq9PIIuB/8mfRL2E5lZ2YB/QKrZvo61M8iZYlkByPaw5YI/G
5fv3ISsnh5Bfp/r7VcvWrlUj9GL9jt0Qkt7F1Gml6I/9v4aSTxRpW1s7BoKR
hRcEF32qNNEQN1RaXh7NHA9BUdUFsNHmzosXiv4mchvBbukkFC3Ywhz88oXi
mhrlDhs51hiyqnqITtXGq1SKb/zpzWNzc7EYDj379rGm9naGuH2hoQHlEemx
eLUeOHMeAuPKoa51DaoE/e3/8QWarxouTpzBfdqmnSIy8fkEhoFrUI3gG7+Z
ugiwSIxgA5wwK2tr6ofCDnM0P83d3cR3tmHPXhYQVwXppSvYvKIiBDVoyZsx
SrP65BNGJ76L/+DNpuSckaEaU9ZFDWthwZrbUmjDjbdTU5QNwAKBjakRNWDg
7SpduIC3r9JsMVTHAdyD82DFWgGlBVXvvKM1kHJG9DPeblVrr6PGiXK18j0r
IZcpehjJ6nCidy3lG+3a/fvCaKXX+f9U7w6dBrP8mnmctoe1dKWi4iQeH5k5
U62jo03u7aJFi6S02pOyPZCQxfPg8eMgFM8HRJ8VpCVAWZgnCEUFgALxn8oK
S8heZOLRSppxy1dXiuk57yEag7KBmqrCEKpJYVsPZvpq2npV2uM09Dloil7+
/DNk8xNSUZALwbNmwOqVKyDf3xnaOzulW9xFUtw0j5S9MNPCGc7cuiTllroJ
hRUaPxNPp+ZUampfWM7EOgw38lKGsHIgYEao0Hr+Tej84InEpeATJxaXlqoN
TU2Vdhkj9+Vg5pyOSVG2akszj0bfQznFt7qQkSJ9CHEjtvSeIU4XHu6rcxs1
qgMYebatXEm4J6SozUyIIQItbKAYo6ur7FtpgmU+WHoVQ1RGE2JCeGQ5Ssgs
GEyfpD0gs/kRoZ15YCTWbvmCeNKQabKyYSkRdF3jDgMmjZpaWqC6vARUk8fA
vLhIKI0LQZ5a0nwrqKsTxhqngipiKzh6p8DRS5fUqHP09rZ+j5XUfADf/Tke
FjarwNBlMbMO7EHIhch9IfXfBg0RdCYY8Yv4Ex6yDYeCwiAoqXFAWlUlxMDK
kKO7O1PP9YSW+mql5wLme9uCP9+UN58+ZSW1tYrRZgEhNkiVhBkJSMkMA+uQ
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
Qk6W7V1d8u4TJ/rU39PLOuDL289g7eZW8eXPOird7CUMksPip2PzFyutXa0m
SDxIJpauMw/7tmzrgcyYUFreGZmZUuuSJSo528oxBL66/zOs7OoSDx8erso5
86BRc+PlMPANCMFcSIhKJHF/UurLKytjTprpEOTnDe3ZApW8y8rLWUpmJpY5
+mT1R4ybwU/Ek3Dm0iVx63Z7FTXABfbFuWEQx19UcAg/MeauUPCZ/yfWt7Yy
N09P8ObJQMnMWFgc44KLCvIKClAsV0nvwTu6Gr7+/g+R5wpKxvye4MpDhmNX
90EED9hQJAQd8PpptSlQaAR1Y8TohATPtyfo+yKqvmGiiu+mdeFCOMDz9jKe
xN6+f19esW6d+IgvOTOeqUQV7ADfnCMQ38YQ51ZrNkj2Tmv5DwvI6yHFtdXb
P2eRmQvQARskHpOv3riRYAo8Cec1N8NJPv/XbNggo2/9k9evSbLdOyIfQkp3
QGzzfWFZ75N+qsyEsU00hNQwsOSBcNvaLdJYw4li2/LlcODkSdh7/Dgs5r/H
F4oc0XY+fdZv3cruPHokPtVSH+VpVhqYWbkeouqeChmzzyiXpbrwJJeFEN3E
wCs8HiX0ybsCl2YaXzMX+NmPbYzIHy4qKoK9hw+z1uXLxTtarWWUYQC3iHpI
KFstte14rQVCBmoGDNGHoKpfISi9VZ6rVcCXURYETamzCwrYldu3Sfjm8Pnz
ZDj1vM9S6J9UdPCNqYD4oia5oP2uAtjglGAz/OdAWO19Fp01V0nzNHaurrBi
/Xq4++KF7MGviKvx6v371DV3SUvPJJDVKygC/NJWs6I5vWpPCoKpzCPlKLhF
LwJhwbequDMpzeyQZSqDYjkUNVrKZs+GWw8fys+0oCo2l8tOHn4QX7YfvOIb
EAvWPtMBmiF6nuBf+gA8QtLAOeWi7J/VRc8KsSVsl0HpzQc//khcXGWHDFFu
kiehGIWi2Aze8F98/P5s0dpN8DXfUvad/lpMzS/FN4dekagwiy0ePFFLlfT0
9JiTk5NsbmWFNF56xKeuXyeri5KGtbB622ms3JNjIh4pPD2g40IZTuEmi6P0
jClmPn/7tlDdtJqSen1jYxSFweEko4kT8fKoti9b8qH4posWqxK6JN95/hxa
l2+A+SvJOIV6VpDHamxsjF9xKCVnow6SuIwK5HaI3du3418iPV788MMPpWnT
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
/t5be/J7rw7ml+PHko6+51tw6Z4VuMu1grrFlNREiAsUDGGPC25Pm/d1pZ+o
j3r3SU/95dJOVcV0IpuBNduZ1l9pag2g0LyfKKl4L1YGRFyJTHiFjl2yol/+
7COteb+zmVH8BQRH8IlKnmUvceNQ+lQPGkuq2ou3fFc+c2awFjdzHU1cSOBz
xCfiI5Ka9Rpd/8qG/qB+OJ5GQxjjBtoDYTH15E8aPHiwAo0HiBQ3NTXZPMMy
oBkzDcVQFHmUn6mPQjRI9gqMoZA5P1FyyT5AGm10ggcRjHWiBz/30sTv6UsB
XqwePHWK0dLC36qVlZWSg4ODCq6a/Px8Kb+w0IJPEPEubrZ84lp3VB2lYycd
NK+4Vr4skW0ZlyUFRrRnzjZh2eQ7P1gbV4UJvZ2HDhkaHDAwMsB6siyrYhmU
kixgqM179ijrd0WjCgjqMWVGcQMFz3oqHso+uvXokY2RCkdLr/CE91PqI5KA
Ls9NfagffPaZFin2nYiaNbEE6PJBWczLmnfLQN26uU0iEx6XsMqoz2lXvjJP
7oqvdp31dxTW1OQz5VfsBn60gKGYa7928m9/9DV+TbwVl+CizMOTUn55B4Mr
ynSPur9l3jg4ZjYuifTcHNYLKgS1dPUCfWTmJUlYBiYINE4H/njZvJTJ2rGA
p5UNit2oqPbaJ1ffMfif9JlwrnXONrNQt3vVWN5lto3bX5Z/kQnKHjFB2RAU
MPWXQ/3TZprOD6K/3OQ64QRyI34IRg47e24HQ98ZM9uGeADoDozV9ZrEEP2f
9lMHafNN843rpv8M095E3Z//menMc8iRrvrviackHfu6219eW/WxeL/P/7f3
6/SX1+KxLFzyJr9njfkj8YBs+n+//+/3//3+v9///3/f7v/8P4uUiAc=\
\>"],ExpressionUUID->"b8e43a98-7ff3-49b5-a452-cd75dd76b2e2"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 5: Simulate reciprocal space", "Subsection",
 CellChangeTimes->{{3.780662561942691*^9, 
  3.780662574462618*^9}},ExpressionUUID->"efea6bb8-2ea2-4481-a2a1-\
5ecea357b448"],

Cell[TextData[{
 "Up to this point we have only considered direct space in the shaping of our \
model. If we are interested in simulating a two-dimensional section of \
reciprocal space we can use ",
 StyleBox[ButtonBox["DISCUS",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/tproffen/DiffuseCode"], None},
  ButtonNote->"https://github.com/tproffen/DiffuseCode"],
  FontSlant->"Italic"],
 " to do so. With this program installed, the following function will \
automatically make and run a script in the background and plot the result of \
the Fourier transform."
}], "Text",
 CellChangeTimes->{{3.780678482193804*^9, 
  3.7806787173969793`*^9}},ExpressionUUID->"401304d7-7b07-4555-8d23-\
7c454ca87f76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DISCUSPlot"}]], "Input",
 CellChangeTimes->{{3.780673025128089*^9, 3.780673025982205*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"439c7e75-ee00-4ea1-a5ce-45249f5ddf78"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/DISCUSPlot",
              ButtonNote->"paclet:MaXrd/ref/DISCUSPlot"],
             "\"paclet:MaXrd/ref/DISCUSPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DISCUSPlot\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\
\\\"}]\\)\\!\\(\\*RowBox[{\\\" performs a diffraction simulation for the \
\\\", Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" structure and plots the \\\", \
Cell[BoxData[StyleBox[\\\"hkl\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
plane.\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"DISCUSPlot\\\", \\\"[\\\", StyleBox[\\\
\"file\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"h\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"performs a diffraction simulation for the structure \
stored in \\\", Cell[BoxData[StyleBox[\\\"file\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" and plots the \\\", \
Cell[BoxData[StyleBox[\\\"hkl\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
plane.\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:MaXrd/ref/DISCUSPlot", 
                    "paclet:MaXrd/ref/DISCUSPlot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DISCUSPlot", "[", 
                    RowBox[{
                    "MaXrd`Private`structureInput_", ",", 
                    "MaXrd`Private`ImagePlane_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`struct", "=", 
                    "MaXrd`Private`structureInput"}], ",", 
                    RowBox[{
                    "MaXrd`Private`imgPlane", "=", 
                    "MaXrd`Private`ImagePlane"}], ",", 
                    "MaXrd`Private`executable", ",", 
                    "MaXrd`Private`discusPath", ",", 
                    RowBox[{"MaXrd`Private`originalPATH", "=", 
                    RowBox[{"Environment", "[", "\<\"PATH\"\>", "]"}]}], ",", 
                    "MaXrd`Private`options", ",", "MaXrd`Private`tempFile"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`executable", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"$OperatingSystem", "===", "\<\"Windows\"\>"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`discusPath", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"DISCUSPathWindows\"\>", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`discusPath", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"DISCUSPathMacOS\"\>", "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    "MaXrd`Private`originalPATH", 
                    ",", "\<\"/usr/local/bin\"\>"}], "]"}]}], ",", 
                    RowBox[{"SetEnvironment", "[", 
                    RowBox[{"\<\"PATH\"\>", "\[Rule]", 
                    RowBox[{
                    "MaXrd`Private`originalPATH", 
                    "<>", "\<\":/usr/local/bin\"\>"}]}], "]"}]}], "]"}], ";", 
                    "$SystemShell"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "FileExistsQ", "[", "MaXrd`Private`discusPath", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "MissingDISCUS"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"StringQ", "[", "MaXrd`Private`struct", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "InvalidInput"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\<\"ErrorsOnly\"\>", ",", "\<\"Everything\"\>"}],
                     "}"}], ",", 
                    RowBox[{
                    "OptionValue", "[", "\<\"DISCUSPrint\"\>", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "InvalidPrint"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "MaXrd`Private`imgPlane", "]"}], 
                    ",", 
                    RowBox[{"MaXrd`Private`imgPlane", "=", 
                    RowBox[{
                    "MillerNotationToList", "[", "MaXrd`Private`imgPlane", 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", "MaXrd`Private`imgPlane", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "#1", ",", "#1"}], "}"}]}], 
                    "]"}], "&"}], ")"}], "[", 
                    RowBox[{"\<\"h\"\>", "|", "\<\"k\"\>", "|", "\<\"l\"\>"}],
                     "]"}], "\[Nand]", 
                    RowBox[{
                    "DuplicateFreeQ", "[", "MaXrd`Private`imgPlane", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "InvalidReciprocalPlane"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`options", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "#1", "]"}]}], ",", 
                    "String"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"Options", "[", "DISCUSPlot", "]"}], "]"}]}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"$CrystalData", ",", "MaXrd`Private`struct"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`tempFile", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "$TemporaryDirectory", 
                    ",", "\<\"MaXrdTempStructureFile.stru\"\>"}], "}"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`struct", "=", 
                    RowBox[{"ExportCrystalData", "[", 
                    RowBox[{
                    "MaXrd`Private`struct", ",", "MaXrd`Private`tempFile", 
                    ",", "\<\"DISCUS\"\>"}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "FileExistsQ", "[", "MaXrd`Private`struct", "]"}]}], ",", 
                    
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "MissingStructureFile"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"DISCUSPlot", "[", 
                    
                    RowBox[{"\<\"Type:File\"\>", ",", "MaXrd`Private`struct", 
                    ",", "MaXrd`Private`imgPlane", ",", 
                    "MaXrd`Private`executable", ",", 
                    "MaXrd`Private`options"}], "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"DISCUSPlot", "[", 
                    
                    RowBox[{"\<\"Type:File\"\>", ",", 
                    "MaXrd`Private`structureFile_", ",", 
                    "MaXrd`Private`ImagePlane_", ",", 
                    "MaXrd`Private`executable_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`workDir", ",", "MaXrd`Private`copyFile", 
                    ",", "MaXrd`Private`options", ",", "MaXrd`Private`ncell", 
                    ",", "MaXrd`Private`i", ",", "MaXrd`Private`stream", ",", 
                    "MaXrd`Private`line", ",", "MaXrd`Private`streamData", 
                    ",", "MaXrd`Private`allCoords", ",", 
                    "MaXrd`Private`streamLength", ",", 
                    "MaXrd`Private`latticeParameters", ",", 
                    "MaXrd`Private`crystalM", ",", 
                    "MaXrd`Private`structureSize", ",", "MaXrd`Private`sizeX",
                     ",", "MaXrd`Private`sizeY", ",", "MaXrd`Private`sizeZ", 
                    ",", "MaXrd`Private`hklMax", ",", 
                    "MaXrd`Private`abscissa", ",", "MaXrd`Private`ordinate", 
                    ",", "MaXrd`Private`M", ",", "MaXrd`Private`x", ",", 
                    "MaXrd`Private`InsertRowFromM", ",", 
                    "MaXrd`Private`DISCUSCommands", ",", 
                    RowBox[{"MaXrd`Private`DISCUSFeedback", "=", "\<\"\"\>"}],
                     ",", "MaXrd`Private`cutOffValue", ",", 
                    "MaXrd`Private`data", ",", "MaXrd`Private`dataLength", 
                    ",", "MaXrd`Private`xDataSize", ",", 
                    "MaXrd`Private`yDataSize", ",", "MaXrd`Private`xMin", ",",
                     "MaXrd`Private`xMax", ",", "MaXrd`Private`yMin", ",", 
                    "MaXrd`Private`yMax", ",", "MaXrd`Private`xStep", ",", 
                    "MaXrd`Private`yStep", ",", "MaXrd`Private`numbers", ",", 
                    "MaXrd`Private`plotData", ",", "MaXrd`Private`scaleMax", 
                    ",", "MaXrd`Private`intensities", ",", 
                    "MaXrd`Private`maxIntensity", ",", 
                    "MaXrd`Private`useRawInputQ", ",", 
                    "MaXrd`Private`imageBasis", ",", 
                    "MaXrd`Private`imageBasisPart", ",", 
                    "MaXrd`Private`plotOptions"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`workDir", "=", 
                    RowBox[{
                    "DirectoryName", "[", "MaXrd`Private`structureFile", 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`ncell", ",", "MaXrd`Private`i", ",", 
                    "MaXrd`Private`stream"}], "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"\"\>", ",", "1", ",", 
                    RowBox[{
                    "OpenRead", "[", "MaXrd`Private`structureFile", "]"}]}], 
                    "}"}]}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`ncell", "===", "\<\"\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`line", "=", 
                    RowBox[{"Read", "[", 
                    RowBox[{"MaXrd`Private`stream", ",", "String"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"MaXrd`Private`line", ",", 
                    RowBox[{"1", ";;", "4"}]}], "]"}], 
                    "===", "\<\"cell\"\>"}], ",", 
                    RowBox[{
                    "MaXrd`Private`latticeParameters", "=", 
                    "MaXrd`Private`line"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"MaXrd`Private`line", ",", 
                    RowBox[{"1", ";;", "5"}]}], "]"}], 
                    "===", "\<\"ncell\"\>"}], ",", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`ncell", "=", "MaXrd`Private`line"}], ";", 
                    RowBox[{"ReadLine", "[", "MaXrd`Private`stream", "]"}], 
                    ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{"MaXrd`Private`line", ",", 
                    RowBox[{"1", ";;", "5"}]}], "]"}], 
                    "===", "\<\"atoms\"\>"}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`i", ">", "10"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "InvalidFormat"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`i", "++"}], ";"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`streamData", "=", 
                    RowBox[{"ReadList", "[", 
                    RowBox[{"MaXrd`Private`stream", ",", "String"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`allCoords", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    RowBox[{
                    "StringSplit", "[", "MaXrd`Private`streamData", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", "4"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`streamLength", "=", 
                    RowBox[{"Length", "[", "MaXrd`Private`allCoords", "]"}]}],
                     ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`ncell", "=!=", "\<\"\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`structureSize", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    RowBox[{"StringCases", "[", 
                    RowBox[{"MaXrd`Private`ncell", ",", 
                    RowBox[{"DigitCharacter", ".."}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "4"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Times", "@@", "MaXrd`Private`structureSize"}], 
                    "\[Equal]", "MaXrd`Private`streamLength"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`sizeX", ",", "MaXrd`Private`sizeY", ",", 
                    "MaXrd`Private`sizeZ"}], "}"}], "=", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{
                    "MaXrd`Private`structureSize", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", 
                    RowBox[{"Goto", "[", "\<\"CloseStream\"\>", "]"}]}], ",", 
                    
                    RowBox[{
                    RowBox[{"Close", "[", "MaXrd`Private`stream", "]"}], ";", 
                    
                    RowBox[{"MaXrd`Private`copyFile", "=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"MaXrd`Private`structureFile", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`end", ":", 
                    RowBox[{"(", 
                    RowBox[{"WordCharacter", ".."}], ")"}]}], "~~", 
                    RowBox[{"MaXrd`Private`ext", ":", 
                    RowBox[{"(", 
                    RowBox[{"\<\".\"\>", "~~", 
                    RowBox[{"WordCharacter", ".."}]}], ")"}]}], "~~", 
                    "EndOfString"}], "\[RuleDelayed]", 
                    RowBox[{
                    "MaXrd`Private`end", "<>", "\<\"_copy\"\>", "<>", 
                    "MaXrd`Private`ext"}]}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`data", "=", 
                    RowBox[{"Import", "[", 
                    RowBox[{
                    "MaXrd`Private`structureFile", ",", "\<\"String\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`data", "=", 
                    RowBox[{"StringDelete", "[", 
                    RowBox[{"MaXrd`Private`data", ",", 
                    RowBox[{"Shortest", "[", 
                    
                    RowBox[{"\<\"ncell\"\>", "~~", "__", 
                    "~~", "\<\"\\n\"\>"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"Export", "[", 
                    RowBox[{
                    "MaXrd`Private`copyFile", ",", "MaXrd`Private`data", 
                    ",", "\<\"String\"\>"}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`options", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "#1", "]"}]}], ",", 
                    "String"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"Options", "[", "DISCUSPlot", "]"}], "]"}]}]}], 
                    ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"DISCUSPlot", "[", 
                    
                    RowBox[{"\<\"Type:File\"\>", ",", 
                    "MaXrd`Private`copyFile", ",", "MaXrd`Private`ImagePlane",
                     ",", "MaXrd`Private`executable", ",", 
                    "MaXrd`Private`options"}], "]"}], "]"}]}]}], "]"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`structureSize", "=", 
                    RowBox[{"MinMax", "[", "MaXrd`Private`allCoords", "]"}]}],
                     ";", 
                    RowBox[{"MaXrd`Private`sizeX", "=", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    "MaXrd`Private`structureSize", "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`structureSize", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"-", "0.5`"}]}], ",", 
                    RowBox[{"MaXrd`Private`sizeX", "*=", "2"}]}], "]"}], ";", 
                    
                    RowBox[{"MaXrd`Private`sizeX", "=", 
                    RowBox[{"ToString", "[", "MaXrd`Private`sizeX", "]"}]}], 
                    ";", 
                    RowBox[{"Label", "[", "\<\"CloseStream\"\>", "]"}], ";", 
                    RowBox[{"Close", "[", "MaXrd`Private`stream", "]"}], ";", 
                    
                    RowBox[{"MaXrd`Private`latticeParameters", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"StringCases", "[", 
                    RowBox[{"MaXrd`Private`latticeParameters", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DigitCharacter", ",", "\<\".\"\>"}], "}"}], 
                    ".."}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`crystalM", "=", 
                    RowBox[{"GetCrystalMetric", "[", 
                    RowBox[{"MaXrd`Private`latticeParameters", ",", 
                    
                    RowBox[{"\<\"Space\"\>", 
                    "\[Rule]", "\<\"Reciprocal\"\>"}], ",", 
                    RowBox[{"\<\"ToCartesian\"\>", "\[Rule]", "True"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`hklMax", "=", 
                    RowBox[{
                    "OptionValue", "[", "\<\"IndicesLimit\"\>", "]"}]}], ";", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NumericQ", "[", "MaXrd`Private`hklMax", "]"}], 
                    "\[Nand]", 
                    RowBox[{"Positive", "[", "MaXrd`Private`hklMax", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{
                    "DISCUSPlot", "::", "InvalidReciprocalSpaceLimit"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`hklMax", "=", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", "MaXrd`Private`hklMax", "]"}], "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`abscissa", ",", "MaXrd`Private`ordinate"}],
                     "}"}], "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"MaXrd`Private`ImagePlane", ",", "_Integer"}], 
                    "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`M", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`x", "=", 
                    RowBox[{
                    "MaXrd`Private`ImagePlane", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`M", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "MaXrd`Private`x", "]"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", "MaXrd`Private`x", "]"}], "]"}], ",", 
                    "3"}], "]"}], ",", 
                    RowBox[{
                    "MaXrd`Private`x", "===", "MaXrd`Private`abscissa"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "#1"}], ",", "#1", ",", 
                    RowBox[{"-", "#1"}]}], "}"}], ",", 
                    RowBox[{
                    "MaXrd`Private`x", "===", "MaXrd`Private`ordinate"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "#1"}], ",", 
                    RowBox[{"-", "#1"}], ",", "#1"}], "}"}]}], "]"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`i", ",", "3"}], "}"}]}], "]"}], 
                    "&"}], ")"}], "[", "MaXrd`Private`hklMax", "]"}], ";", 
                    RowBox[{"MaXrd`Private`M", "=", 
                    RowBox[{"Transpose", "[", "MaXrd`Private`M", "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`InsertRowFromM", "[", "MaXrd`Private`n_", 
                    "]"}], ":=", 
                    RowBox[{"StringDelete", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    "MaXrd`Private`M", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`n", "\[RightDoubleBracket]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"\<\"{\"\>", ",", "\<\"}\"\>"}], "}"}]}], "]"}]}],
                     ";", 
                    RowBox[{"MaXrd`Private`DISCUSCommands", "=", 
                    
                    RowBox[{"\<\"\\ndiscus\\ncd \"\>", "<>", 
                    "MaXrd`Private`workDir", 
                    "<>", "\<\"\\n############################################\
####\\n# COMBINED BUILD MACRO FOR `DISCUSPlot`       \
#\\n################################################\\n  reset\\n####### \
Load/build crystal #####################\"\>", "<>", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`ncell", "===", "\<\"\"\>"}], ",", 
                    
                    RowBox[{"\<\"\\nvariable int, sizeX\\nsizeX = \"\>", "<>",
                     "MaXrd`Private`sizeX"}], ",", 
                    
                    RowBox[{"\<\"\\nvariable int, sizeX\\nvariable int, sizeY\
\\nvariable int, sizeZ\\n#\\nsizeX = \"\>", "<>", "MaXrd`Private`sizeX", 
                    "<>", "\<\"\\nsizeY = \"\>", "<>", "MaXrd`Private`sizeY", 
                    "<>", "\<\"\\nsizeZ = \"\>", "<>", 
                    "MaXrd`Private`sizeZ"}]}], "]"}], 
                    "<>", "\<\"\\n#\\nread\\n  stru \"\>", "<>", 
                    RowBox[{
                    "FileNameTake", "[", "MaXrd`Private`structureFile", "]"}],
                     "<>", "\<\"\\n#\\nchem\\n  elem\\nexit\\n####### Fourier \
transform ######################\\nvariable real, hklMax\\nvariable int,  \
fourierWidth\\nvariable int,  fourierPoints\\n#\\nhklMax = \"\>", "<>", 
                    "MaXrd`Private`hklMax", 
                    "<>", "\<\"\\nfourierWidth = 2 * hklMax\\nfourierPoints = \
fourierWidth * sizeX + 1\\n#\\nfourier\\n  xray\\n  wvle moa1\\n#\\n  ll   \"\
\>", "<>", 
                    RowBox[{"MaXrd`Private`InsertRowFromM", "[", "1", "]"}], 
                    "<>", "\<\"\\n  lr   \"\>", "<>", 
                    RowBox[{"MaXrd`Private`InsertRowFromM", "[", "2", "]"}], 
                    "<>", "\<\"\\n  ul   \"\>", "<>", 
                    RowBox[{"MaXrd`Private`InsertRowFromM", "[", "3", "]"}], 
                    "<>", "\<\"\\n  na   fourierPoints\\n  no   fourierPoints\
\\n  abs  \"\>", "<>", "MaXrd`Private`abscissa", "<>", "\<\"\\n  ord  \"\>", "<>",
                     "MaXrd`Private`ordinate", 
                    "<>", "\<\"\\n#\\n  show\\n  run\\nexit\\n#\\n#\\n#---# \
Fourier data output #---#\\noutput\\n  value intensity\\n  format standard\\n \
 outfile fourier_data.dat\\n  \
run\\nexit\\n################################################\\nexit\\n\"\>"}]\
}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\<\"DISCUSPrint\"\>", "]"}], 
                    "===", "\<\"ErrorsOnly\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`DISCUSFeedback", "=", 
                    RowBox[{"RunProcess", "[", 
                    RowBox[{
                    "MaXrd`Private`executable", ",", "\<\"StandardError\"\>", 
                    ",", "MaXrd`Private`DISCUSCommands"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`DISCUSFeedback", 
                    "=!=", "\<\"\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`DISCUSFeedback", "=", 
                    RowBox[{"StringCases", "[", 
                    RowBox[{
                    RowBox[{"StringSplit", "[", 
                    RowBox[{
                    "MaXrd`Private`DISCUSFeedback", ",", "\<\"\\n\"\>"}], 
                    "]"}], ",", 
                    
                    RowBox[{"\<\"***\"\>", "~~", "__", "~~", "DigitCharacter",
                     "~~", "\<\" ***\"\>"}]}], "]"}]}], ";", 
                    RowBox[{"Print", "@@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    "MaXrd`Private`DISCUSFeedback", ",", "\<\"\\n\"\>"}], 
                    "]"}], "]"}]}]}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\<\"DISCUSPrint\"\>", "]"}], 
                    "===", "\<\"Everything\"\>"}], ",", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "MaXrd`Private`DISCUSCommands", "]"}], ";", 
                    
                    RowBox[{"MaXrd`Private`DISCUSFeedback", "=", 
                    RowBox[{"RunProcess", "[", 
                    RowBox[{
                    "MaXrd`Private`executable", ",", "\<\"StandardOutput\"\>",
                     ",", "MaXrd`Private`DISCUSCommands"}], "]"}]}], ";", 
                    RowBox[{
                    "Print", "[", "MaXrd`Private`DISCUSFeedback", "]"}]}], 
                    ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "InvalidPrint"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`data", "=", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"Import", "[", 
                    RowBox[{
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`workDir", 
                    ",", "\<\"fourier_data.dat\"\>"}], "}"}], "]"}], 
                    ",", "\<\"Table\"\>"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "MissingFourierData"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`dataLength", "=", 
                    RowBox[{"Length", "[", "MaXrd`Private`data", "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`i", "=", "1"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MaXrd`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"MaXrd`Private`i", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "===", "\<\"#\"\>"}], "&&", 
                    RowBox[{
                    "MaXrd`Private`i", "\[LessEqual]", 
                    "MaXrd`Private`dataLength"}]}], ",", 
                    RowBox[{"MaXrd`Private`i", "++"}]}], "]"}], ";", 
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`xDataSize", ",", 
                    "MaXrd`Private`yDataSize"}], "}"}], "=", 
                    RowBox[{
                    "MaXrd`Private`data", "\[LeftDoubleBracket]", 
                    "MaXrd`Private`i", "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`xMin", ",", "MaXrd`Private`xMax", ",", 
                    "MaXrd`Private`yMin", ",", "MaXrd`Private`yMax"}], "}"}], 
                    "=", 
                    RowBox[{"MaXrd`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"MaXrd`Private`i", "+", "1"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"MaXrd`Private`xStep", "=", 
                    FractionBox[
                    RowBox[{"MaXrd`Private`xMax", "-", "MaXrd`Private`xMin"}], 
                    RowBox[{"MaXrd`Private`xDataSize", "-", "1"}]]}], ";", 
                    RowBox[{"MaXrd`Private`yStep", "=", 
                    FractionBox[
                    RowBox[{"MaXrd`Private`yMax", "-", "MaXrd`Private`yMin"}], 
                    RowBox[{"MaXrd`Private`yDataSize", "-", "1"}]]}], ";", 
                    RowBox[{"MaXrd`Private`numbers", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MaXrd`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`i", "+", "2"}], ";;", "All"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`numbers", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    "MaXrd`Private`numbers", ",", "MaXrd`Private`xDataSize"}],
                     "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`plotData", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`xMin", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"MaXrd`Private`x", "-", "1"}], ")"}], " ", 
                    "MaXrd`Private`xStep"}]}], ",", 
                    RowBox[{"MaXrd`Private`yMin", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"MaXrd`Private`y", "-", "1"}], ")"}], " ", 
                    "MaXrd`Private`yStep"}]}], ",", 
                    RowBox[{"MaXrd`Private`numbers", "\[LeftDoubleBracket]", 
                    RowBox[{"MaXrd`Private`y", ",", "MaXrd`Private`x"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`y", ",", "MaXrd`Private`yDataSize"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`xDataSize"}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"MaXrd`Private`plotData", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MaXrd`Private`plotData", ",", "1"}], "]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`scaleMax", "=", "100.`"}], ";", 
                    RowBox[{"MaXrd`Private`intensities", "=", 
                    RowBox[{
                    "MaXrd`Private`plotData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`maxIntensity", "=", 
                    RowBox[{"Max", "[", "MaXrd`Private`intensities", "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`maxIntensity", "\[Equal]", "0"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"DISCUSPlot", "::", "ZeroIntensity"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`plotData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
                    FractionBox[
                    RowBox[{
                    "MaXrd`Private`intensities", " ", 
                    "MaXrd`Private`scaleMax"}], 
                    "MaXrd`Private`maxIntensity"]}], ";", 
                    RowBox[{"MaXrd`Private`intensities", "=", 
                    RowBox[{
                    "MaXrd`Private`plotData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"MaXrd`Private`useRawInputQ", "=", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"OptionValue", "[", "\<\"UseRawInput\"\>", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`useRawInputQ", ",", 
                    RowBox[{"MaXrd`Private`plotData", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`plotData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Length", "[", "MaXrd`Private`numbers", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`cutOffValue", "=", 
                    FractionBox["1", 
                    SuperscriptBox["10.`", "3"]]}], ";", 
                    RowBox[{"MaXrd`Private`plotData", "=", 
                    RowBox[{
                    "MaXrd`Private`plotData", "/.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x_", ",", "MaXrd`Private`y_", ",", 
                    "MaXrd`Private`i_"}], "}"}], "/;", 
                    RowBox[{
                    "MaXrd`Private`i", "<", "MaXrd`Private`cutOffValue"}]}], 
                    "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`x", ",", "MaXrd`Private`y", ",", 
                    "MaXrd`Private`cutOffValue"}], "}"}]}]}]}], ";", 
                    RowBox[{"MaXrd`Private`imageBasisPart", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MaXrd`Private`abscissa", ",", "MaXrd`Private`ordinate"}],
                     "}"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"h\"\>", "\[Rule]", "1"}], ",", 
                    RowBox[{"\<\"k\"\>", "\[Rule]", "2"}], ",", 
                    RowBox[{"\<\"l\"\>", "\[Rule]", "3"}]}], "}"}]}]}], ";", 
                    RowBox[{"MaXrd`Private`imageBasis", "=", 
                    RowBox[{
                    "MaXrd`Private`crystalM", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "MaXrd`Private`imageBasisPart", ",", 
                    "MaXrd`Private`imageBasisPart"}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MaXrd`Private`plotData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "MaXrd`Private`imageBasisPart"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MaXrd`Private`imageBasis", ".", "#1"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{
                    "MaXrd`Private`plotData", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "MaXrd`Private`imageBasisPart"}], 
                    "\[RightDoubleBracket]"}]}]}]}]}], "]"}], ";", 
                    RowBox[{"MaXrd`Private`plotOptions", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"Options", "[", "DISCUSPlot", "]"}], "]"}]}], ",", 
                    RowBox[{"Options", "[", "ListDensityPlot", "]"}]}], "]"}],
                     "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MaXrd`Private`useRawInputQ", ",", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"MaXrd`Private`plotOptions", ",", 
                    RowBox[{"DataRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`xMin", ",", "MaXrd`Private`xMax"}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MaXrd`Private`yMin", ",", "MaXrd`Private`yMax"}],
                     "}"}]}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"MaXrd`Private`plotOptions", ",", 
                    RowBox[{"AspectRatio", "\[Rule]", 
                    RowBox[{"Divide", "@@", 
                    RowBox[{
                    "Total", "[", "MaXrd`Private`imageBasis", "]"}]}]}]}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"ListDensityPlot", "[", 
                    RowBox[{"MaXrd`Private`plotData", ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{
                    "Normal", "[", "MaXrd`Private`plotOptions", "]"}]}]}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DISCUSPlot", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", 
                    RowBox[{"DISCUSPlot", ",", "ListDensityPlot"}], "}"}], 
                    "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[MaXrd`DISCUSPlot] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    OptionsPattern[{MaXrd`DISCUSPlot, ListDensityPlot}]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "1"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"BoundaryStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "\<\"Warm\"\>"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"DISCUSPathMacOS\"\>", 
                    "\[Rule]", "\<\"/usr/local/bin/discus\"\>"}]},
                    {
                    
                    RowBox[{"\<\"DISCUSPathWindows\"\>", 
                    "\[Rule]", "\<\"C:\\\\Program Files \
(x86)\\\\Discus\\\\bin\\\\discus.exe\"\>"}]},
                    {
                    
                    RowBox[{"\<\"DISCUSPrint\"\>", 
                    "\[Rule]", "\<\"ErrorsOnly\"\>"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "All"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Large"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"\<\"IndicesLimit\"\>", "\[Rule]", "10"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LightingAngle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#1", "&"}], ",", 
                    RowBox[{"#2", "&"}]}], "}"}]}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Full", ",", "Full", ",", "Automatic"}], 
                    "}"}]}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RegionFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"True", "&"}], ")"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "\<\"Log\"\>"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"\<\"UseRawInput\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"VertexColors", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","62","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","62","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MaXrd`DISCUSPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:MaXrd/ref/DISCUSPlot",
              ButtonNote->"paclet:MaXrd/ref/DISCUSPlot"],
             "\"paclet:MaXrd/ref/DISCUSPlot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DISCUSPlot\\\", \\\"[\\\", \
StyleBox[\\\"crystal\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\
\\\"}]\\)\\!\\(\\*RowBox[{\\\" performs a diffraction simulation for the \
\\\", Cell[BoxData[StyleBox[\\\"crystal\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" structure and plots the \\\", \
Cell[BoxData[StyleBox[\\\"hkl\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
plane.\\\"}]\\)\\n\\!\\(\\*RowBox[{\\\"DISCUSPlot\\\", \\\"[\\\", StyleBox[\\\
\"file\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"h\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"l\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \
\\!\\(\\*RowBox[{\\\"performs a diffraction simulation for the structure \
stored in \\\", Cell[BoxData[StyleBox[\\\"file\\\", \\\"TI\\\"]], \
\\\"InlineFormula\\\"], \\\" and plots the \\\", \
Cell[BoxData[StyleBox[\\\"hkl\\\", \\\"TI\\\"]], \\\"InlineFormula\\\"], \\\" \
plane.\\\"}]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"DISCUSPlot\", \"[\", StyleBox[\"crystal\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \
\"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" \
performs a diffraction simulation for the \", Cell[BoxData[StyleBox[\"crystal\
\", \"TI\"]], \"InlineFormula\"], \" structure and plots the \", \
Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" plane.\"}]\)\n\
\!\(\*RowBox[{\"DISCUSPlot\", \"[\", StyleBox[\"file\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \
\"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \
\!\(\*RowBox[{\"performs a diffraction simulation for the structure stored in \
\", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" and \
plots the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" \
plane.\"}]\)", "Documentation" -> 
    Association["Local" -> "paclet:MaXrd/ref/DISCUSPlot"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MaXrd`DISCUSPlot, {MaXrd`DISCUSPlot[
         Pattern[MaXrd`Private`structureInput, 
          Blank[]], 
         Pattern[MaXrd`Private`ImagePlane, 
          Blank[]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`struct = MaXrd`Private`structureInput, 
          MaXrd`Private`imgPlane = MaXrd`Private`ImagePlane, 
          MaXrd`Private`executable, MaXrd`Private`discusPath, 
          MaXrd`Private`originalPATH = Environment["PATH"], 
          MaXrd`Private`options, MaXrd`Private`tempFile}, 
         MaXrd`Private`executable = 
          If[$OperatingSystem === "Windows", MaXrd`Private`discusPath = 
            OptionValue["DISCUSPathWindows"], 
            MaXrd`Private`discusPath = OptionValue["DISCUSPathMacOS"]; If[
              Not[
               StringContainsQ[MaXrd`Private`originalPATH, "/usr/local/bin"]], 
              SetEnvironment[
              "PATH" -> StringJoin[
                MaXrd`Private`originalPATH, 
                 ":/usr/local/bin"]]]; $SystemShell]; If[
           Not[
            FileExistsQ[MaXrd`Private`discusPath]], Message[
             MessageName[MaXrd`DISCUSPlot, "MissingDISCUS"]]; Abort[]]; If[
           Not[
            StringQ[MaXrd`Private`struct]], Message[
             MessageName[MaXrd`DISCUSPlot, "InvalidInput"]]; Abort[]]; If[
           Not[
            MemberQ[{"ErrorsOnly", "Everything"}, 
             OptionValue["DISCUSPrint"]]], Message[
             MessageName[MaXrd`DISCUSPlot, "InvalidPrint"]]; Abort[]]; If[
           StringQ[MaXrd`Private`imgPlane], MaXrd`Private`imgPlane = 
           MaXrd`MillerNotationToList[MaXrd`Private`imgPlane]]; If[
           Nand[
            (MatchQ[
             Sort[MaXrd`Private`imgPlane], {
              Blank[Integer], #, #}]& )[
             Alternatives["h", "k", "l"]], 
            DuplicateFreeQ[MaXrd`Private`imgPlane]], Message[
             MessageName[MaXrd`DISCUSPlot, "InvalidReciprocalPlane"]]; 
           Abort[]]; 
         MaXrd`Private`options = Map[Thread[# -> OptionValue[#], String]& , 
            Keys[
             Options[MaXrd`DISCUSPlot]]]; If[
           KeyExistsQ[MaXrd`$CrystalData, MaXrd`Private`struct], 
           MaXrd`Private`tempFile = 
            FileNameJoin[{$TemporaryDirectory, 
               "MaXrdTempStructureFile.stru"}]; 
           MaXrd`Private`struct = 
            MaXrd`ExportCrystalData[
             MaXrd`Private`struct, MaXrd`Private`tempFile, "DISCUS"]]; If[
           Not[
            FileExistsQ[MaXrd`Private`struct]], Message[
             MessageName[MaXrd`DISCUSPlot, "MissingStructureFile"]]; Abort[]]; 
         MaXrd`DISCUSPlot[
          "Type:File", MaXrd`Private`struct, MaXrd`Private`imgPlane, 
           MaXrd`Private`executable, MaXrd`Private`options]], 
       MaXrd`DISCUSPlot["Type:File", 
         Pattern[MaXrd`Private`structureFile, 
          Blank[]], 
         Pattern[MaXrd`Private`ImagePlane, 
          Blank[]], 
         Pattern[MaXrd`Private`executable, 
          Blank[]], 
         OptionsPattern[]] :> 
       Block[{MaXrd`Private`workDir, MaXrd`Private`copyFile, 
          MaXrd`Private`options, MaXrd`Private`ncell, MaXrd`Private`i, 
          MaXrd`Private`stream, MaXrd`Private`line, MaXrd`Private`streamData, 
          MaXrd`Private`allCoords, MaXrd`Private`streamLength, 
          MaXrd`Private`latticeParameters, MaXrd`Private`crystalM, 
          MaXrd`Private`structureSize, MaXrd`Private`sizeX, 
          MaXrd`Private`sizeY, MaXrd`Private`sizeZ, MaXrd`Private`hklMax, 
          MaXrd`Private`abscissa, MaXrd`Private`ordinate, MaXrd`Private`M, 
          MaXrd`Private`x, MaXrd`Private`InsertRowFromM, 
          MaXrd`Private`DISCUSCommands, MaXrd`Private`DISCUSFeedback = "", 
          MaXrd`Private`cutOffValue, MaXrd`Private`data, 
          MaXrd`Private`dataLength, MaXrd`Private`xDataSize, 
          MaXrd`Private`yDataSize, MaXrd`Private`xMin, MaXrd`Private`xMax, 
          MaXrd`Private`yMin, MaXrd`Private`yMax, MaXrd`Private`xStep, 
          MaXrd`Private`yStep, MaXrd`Private`numbers, MaXrd`Private`plotData, 
          MaXrd`Private`scaleMax, MaXrd`Private`intensities, 
          MaXrd`Private`maxIntensity, MaXrd`Private`useRawInputQ, 
          MaXrd`Private`imageBasis, MaXrd`Private`imageBasisPart, 
          MaXrd`Private`plotOptions}, 
         MaXrd`Private`workDir = 
          DirectoryName[MaXrd`Private`structureFile]; {
           MaXrd`Private`ncell, MaXrd`Private`i, MaXrd`Private`stream} = {
           "", 1, 
            OpenRead[MaXrd`Private`structureFile]}; 
         While[MaXrd`Private`ncell === "", 
           MaXrd`Private`line = Read[MaXrd`Private`stream, String]; 
           If[StringTake[MaXrd`Private`line, 
               Span[1, 4]] === "cell", MaXrd`Private`latticeParameters = 
             MaXrd`Private`line]; If[StringTake[MaXrd`Private`line, 
               Span[1, 5]] === "ncell", 
             MaXrd`Private`ncell = MaXrd`Private`line; 
             ReadLine[MaXrd`Private`stream]; Break[]]; 
           If[StringTake[MaXrd`Private`line, 
               Span[1, 5]] === "atoms", 
             Break[]]; If[MaXrd`Private`i > 10, Message[
               MessageName[MaXrd`DISCUSPlot, "InvalidFormat"]]; Abort[]]; 
           Increment[MaXrd`Private`i]; Null]; 
         MaXrd`Private`streamData = ReadList[MaXrd`Private`stream, String]; 
         MaXrd`Private`allCoords = ToExpression[
            Part[
             StringSplit[MaXrd`Private`streamData], All, 
             Span[2, 4]]]; 
         MaXrd`Private`streamLength = Length[MaXrd`Private`allCoords]; 
         If[MaXrd`Private`ncell =!= "", 
           MaXrd`Private`structureSize = ToExpression[
              Part[
               StringCases[MaXrd`Private`ncell, 
                Repeated[DigitCharacter]], 
               Span[1, 4]]]; 
           If[
            Apply[Times, MaXrd`Private`structureSize] == 
             MaXrd`Private`streamLength, {
               MaXrd`Private`sizeX, MaXrd`Private`sizeY, MaXrd`Private`sizeZ} = 
              Map[ToString, 
                Part[MaXrd`Private`structureSize, 
                 Span[1, 3]]]; Goto["CloseStream"], 
             Close[MaXrd`Private`stream]; 
             MaXrd`Private`copyFile = 
              StringReplace[MaXrd`Private`structureFile, StringExpression[
                  Pattern[MaXrd`Private`end, 
                   Repeated[WordCharacter]], 
                  Pattern[MaXrd`Private`ext, 
                   StringExpression[".", 
                    Repeated[WordCharacter]]], EndOfString] :> 
                StringJoin[MaXrd`Private`end, "_copy", MaXrd`Private`ext]]; 
             MaXrd`Private`data = 
              Import[MaXrd`Private`structureFile, "String"]; 
             MaXrd`Private`data = StringDelete[MaXrd`Private`data, 
                Shortest[
                 StringExpression["ncell", 
                  BlankSequence[], "\n"]]]; 
             Export[MaXrd`Private`copyFile, MaXrd`Private`data, "String"]; 
             MaXrd`Private`options = 
              Map[Thread[# -> OptionValue[#], String]& , 
                Keys[
                 Options[MaXrd`DISCUSPlot]]]; Return[
               MaXrd`DISCUSPlot[
               "Type:File", MaXrd`Private`copyFile, MaXrd`Private`ImagePlane, 
                MaXrd`Private`executable, MaXrd`Private`options]]]; Null]; 
         MaXrd`Private`structureSize = MinMax[MaXrd`Private`allCoords]; 
         MaXrd`Private`sizeX = Round[
            Part[MaXrd`Private`structureSize, 2]]; 
         If[Part[MaXrd`Private`structureSize, 1] < -0.5, 
           TimesBy[MaXrd`Private`sizeX, 2]]; 
         MaXrd`Private`sizeX = ToString[MaXrd`Private`sizeX]; 
         Label["CloseStream"]; Close[MaXrd`Private`stream]; 
         MaXrd`Private`latticeParameters = ToExpression[
            StringCases[MaXrd`Private`latticeParameters, 
             Repeated[{DigitCharacter, "."}]]]; 
         MaXrd`Private`crystalM = 
          MaXrd`GetCrystalMetric[
           MaXrd`Private`latticeParameters, "Space" -> "Reciprocal", 
            "ToCartesian" -> True]; 
         MaXrd`Private`hklMax = OptionValue["IndicesLimit"]; If[
           Nand[
            NumericQ[MaXrd`Private`hklMax], 
            Positive[MaXrd`Private`hklMax]], Message[
             MessageName[MaXrd`DISCUSPlot, "InvalidReciprocalSpaceLimit"]]; 
           Abort[]]; MaXrd`Private`hklMax = ToString[
            N[MaXrd`Private`hklMax]]; {
           MaXrd`Private`abscissa, MaXrd`Private`ordinate} = 
          DeleteCases[MaXrd`Private`ImagePlane, 
            Blank[Integer]]; 
         MaXrd`Private`M = {{}, {}, {}}; (Do[
          MaXrd`Private`x = Part[MaXrd`Private`ImagePlane, MaXrd`Private`i]; 
           Part[MaXrd`Private`M, MaXrd`Private`i] = Which[
              IntegerQ[MaXrd`Private`x], 
              ConstantArray[
               ToString[
                N[MaXrd`Private`x]], 3], MaXrd`Private`x === 
              MaXrd`Private`abscissa, {-#, #, -#}, MaXrd`Private`x === 
              MaXrd`Private`ordinate, {-#, -#, #}], {MaXrd`Private`i, 3}]& )[
          MaXrd`Private`hklMax]; MaXrd`Private`M = Transpose[MaXrd`Private`M]; 
         MaXrd`Private`InsertRowFromM[
            Pattern[MaXrd`Private`n, 
             Blank[]]] := StringDelete[
            ToString[
             Part[MaXrd`Private`M, MaXrd`Private`n]], {"{", "}"}]; 
         MaXrd`Private`DISCUSCommands = 
          StringJoin[
           "\ndiscus\ncd ", MaXrd`Private`workDir, 
            "\n################################################\n# COMBINED \
BUILD MACRO FOR `DISCUSPlot`       #\n\
################################################\n  reset\n####### Load/build \
crystal #####################", 
            If[MaXrd`Private`ncell === "", 
             StringJoin[
             "\nvariable int, sizeX\nsizeX = ", MaXrd`Private`sizeX], 
             StringJoin[
             "\nvariable int, sizeX\nvariable int, sizeY\nvariable int, sizeZ\
\n#\nsizeX = ", MaXrd`Private`sizeX, "\nsizeY = ", MaXrd`Private`sizeY, 
              "\nsizeZ = ", MaXrd`Private`sizeZ]], "\n#\nread\n  stru ", 
            FileNameTake[MaXrd`Private`structureFile], 
            
            "\n#\nchem\n  elem\nexit\n####### Fourier transform \
######################\nvariable real, hklMax\nvariable int,  fourierWidth\n\
variable int,  fourierPoints\n#\nhklMax = ", MaXrd`Private`hklMax, 
            "\nfourierWidth = 2 * hklMax\nfourierPoints = fourierWidth * \
sizeX + 1\n#\nfourier\n  xray\n  wvle moa1\n#\n  ll   ", 
            MaXrd`Private`InsertRowFromM[1], "\n  lr   ", 
            MaXrd`Private`InsertRowFromM[2], "\n  ul   ", 
            MaXrd`Private`InsertRowFromM[3], 
            "\n  na   fourierPoints\n  no   fourierPoints\n  abs  ", 
            MaXrd`Private`abscissa, "\n  ord  ", MaXrd`Private`ordinate, 
            "\n#\n  show\n  run\nexit\n#\n#\n#---# Fourier data output #---#\n\
output\n  value intensity\n  format standard\n  outfile fourier_data.dat\n  \
run\nexit\n################################################\nexit\n"]; 
         Which[OptionValue["DISCUSPrint"] === "ErrorsOnly", 
           MaXrd`Private`DISCUSFeedback = 
            RunProcess[
             MaXrd`Private`executable, "StandardError", 
              MaXrd`Private`DISCUSCommands]; 
           If[MaXrd`Private`DISCUSFeedback =!= "", 
             MaXrd`Private`DISCUSFeedback = StringCases[
                StringSplit[MaXrd`Private`DISCUSFeedback, "\n"], 
                StringExpression["***", 
                 BlankSequence[], DigitCharacter, " ***"]]; Apply[Print, 
               Flatten[
                Riffle[MaXrd`Private`DISCUSFeedback, "\n"]]]], 
           OptionValue["DISCUSPrint"] === "Everything", 
           Print[MaXrd`Private`DISCUSCommands]; 
           MaXrd`Private`DISCUSFeedback = 
            RunProcess[
             MaXrd`Private`executable, "StandardOutput", 
              MaXrd`Private`DISCUSCommands]; 
           Print[MaXrd`Private`DISCUSFeedback], True, Message[
             MessageName[MaXrd`DISCUSPlot, "InvalidPrint"]]; Abort[]]; 
         MaXrd`Private`data = Check[
            Import[
             FileNameJoin[{MaXrd`Private`workDir, "fourier_data.dat"}], 
             "Table"], Message[
              MessageName[MaXrd`DISCUSPlot, "MissingFourierData"]]; Abort[]]; 
         MaXrd`Private`dataLength = Length[MaXrd`Private`data]; 
         MaXrd`Private`i = 1; While[
           And[
           Part[MaXrd`Private`data, MaXrd`Private`i, 1] === "#", 
            MaXrd`Private`i <= MaXrd`Private`dataLength], 
           Increment[MaXrd`Private`i]]; 
         Check[{MaXrd`Private`xDataSize, MaXrd`Private`yDataSize} = 
           Part[MaXrd`Private`data, MaXrd`Private`i], 
           Abort[]]; {
           MaXrd`Private`xMin, MaXrd`Private`xMax, MaXrd`Private`yMin, 
            MaXrd`Private`yMax} = 
          Part[MaXrd`Private`data, MaXrd`Private`i + 1]; 
         MaXrd`Private`xStep = (MaXrd`Private`xMax - MaXrd`Private`xMin)/(
           MaXrd`Private`xDataSize - 1); 
         MaXrd`Private`yStep = (MaXrd`Private`yMax - MaXrd`Private`yMin)/(
           MaXrd`Private`yDataSize - 1); MaXrd`Private`numbers = Flatten[
            Part[MaXrd`Private`data, 
             Span[MaXrd`Private`i + 2, All]]]; 
         MaXrd`Private`numbers = 
          Partition[MaXrd`Private`numbers, MaXrd`Private`xDataSize]; 
         MaXrd`Private`plotData = 
          Table[{MaXrd`Private`xMin + (MaXrd`Private`x - 1) 
              MaXrd`Private`xStep, 
             MaXrd`Private`yMin + (MaXrd`Private`y - 1) MaXrd`Private`yStep, 
             Part[MaXrd`Private`numbers, MaXrd`Private`y, MaXrd`Private`x]}, {
            MaXrd`Private`y, MaXrd`Private`yDataSize}, {
            MaXrd`Private`x, MaXrd`Private`xDataSize}]; 
         MaXrd`Private`plotData = Flatten[MaXrd`Private`plotData, 1]; 
         MaXrd`Private`scaleMax = 100.; 
         MaXrd`Private`intensities = Part[MaXrd`Private`plotData, All, 3]; 
         MaXrd`Private`maxIntensity = Max[MaXrd`Private`intensities]; 
         If[MaXrd`Private`maxIntensity == 0, Message[
             MessageName[MaXrd`DISCUSPlot, "ZeroIntensity"]]; Abort[]]; 
         Part[MaXrd`Private`plotData, All, 3] = 
          MaXrd`Private`intensities MaXrd`Private`scaleMax/
           MaXrd`Private`maxIntensity; 
         MaXrd`Private`intensities = Part[MaXrd`Private`plotData, All, 3]; 
         MaXrd`Private`useRawInputQ = TrueQ[
            OptionValue["UseRawInput"]]; 
         If[MaXrd`Private`useRawInputQ, MaXrd`Private`plotData = Partition[
             Part[MaXrd`Private`plotData, All, 3], 
             Length[MaXrd`Private`numbers]], 
           MaXrd`Private`cutOffValue = 10.^(-3); 
           MaXrd`Private`plotData = 
            ReplaceAll[MaXrd`Private`plotData, Condition[{
                 Pattern[MaXrd`Private`x, 
                  Blank[]], 
                 Pattern[MaXrd`Private`y, 
                  Blank[]], 
                 Pattern[MaXrd`Private`i, 
                  Blank[]]}, MaXrd`Private`i < MaXrd`Private`cutOffValue] :> {
               MaXrd`Private`x, MaXrd`Private`y, MaXrd`Private`cutOffValue}]; 
           MaXrd`Private`imageBasisPart = 
            ReplaceAll[{MaXrd`Private`abscissa, MaXrd`Private`ordinate}, {
              "h" -> 1, "k" -> 2, "l" -> 3}]; 
           MaXrd`Private`imageBasis = 
            Part[MaXrd`Private`crystalM, MaXrd`Private`imageBasisPart, 
              MaXrd`Private`imageBasisPart]; 
           Part[MaXrd`Private`plotData, All, MaXrd`Private`imageBasisPart] = 
            Map[Dot[MaXrd`Private`imageBasis, #]& , 
              Part[
              MaXrd`Private`plotData, All, MaXrd`Private`imageBasisPart]]]; 
         MaXrd`Private`plotOptions = Association[
            FilterRules[
             Map[# -> OptionValue[#]& , 
              Keys[
               Options[MaXrd`DISCUSPlot]]], 
             Options[ListDensityPlot]]]; If[MaXrd`Private`useRawInputQ, 
           AssociateTo[
           MaXrd`Private`plotOptions, 
            DataRange -> {{MaXrd`Private`xMin, MaXrd`Private`xMax}, {
              MaXrd`Private`yMin, MaXrd`Private`yMax}}], 
           AssociateTo[MaXrd`Private`plotOptions, AspectRatio -> Apply[Divide, 
              Total[MaXrd`Private`imageBasis]]]]; 
         ListDensityPlot[MaXrd`Private`plotData, 
           Apply[Sequence, 
            Normal[MaXrd`Private`plotOptions]]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, MaXrd`DISCUSPlot, {
      SyntaxInformation[MaXrd`DISCUSPlot] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           OptionsPattern[{MaXrd`DISCUSPlot, ListDensityPlot}]}}}], "NValues" -> 
    None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> 1, Axes -> False, AxesLabel -> 
      None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
      BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, 
      BoxRatios -> Automatic, ClippingStyle -> None, ColorFunction -> "Warm", 
      ColorFunctionScaling -> True, ColorOutput -> Automatic, 
      ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, 
      DataRange -> Automatic, "DISCUSPathMacOS" -> "/usr/local/bin/discus", 
      "DISCUSPathWindows" -> 
      "C:\\Program Files (x86)\\Discus\\bin\\discus.exe", "DISCUSPrint" -> 
      "ErrorsOnly", DisplayFunction :> $DisplayFunction, Epilog -> {}, 
      FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, 
      FrameStyle -> {}, FrameTicks -> All, FrameTicksStyle -> {}, GridLines -> 
      None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Large, ImageSizeRaw -> Automatic, "IndicesLimit" -> 10, 
      InterpolationOrder -> None, LabelStyle -> {}, LightingAngle -> None, 
      MaxPlotPoints -> Automatic, Mesh -> None, MeshFunctions -> {#& , #2& }, 
      MeshStyle -> Automatic, Method -> Automatic, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLegends -> 
      None, PlotRange -> {Full, Full, Automatic}, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
      PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RegionFunction -> (True& ), RotateLabel -> True, 
      ScalingFunctions -> "Log", TargetUnits -> Automatic, Ticks -> Automatic,
       TicksStyle -> {}, "UseRawInput" -> False, VertexColors -> Automatic}, 
    "Attributes" -> {}, "FullName" -> "MaXrd`DISCUSPlot"], False]]], "Output",\

 CellChangeTimes->{3.780679871505231*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"ad944c86-911a-4bf0-80d7-750c06e6d6ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DISCUSPlot", "[", 
  RowBox[{"\"\<SynthesisedStructure\>\"", ",", "\"\<hk0\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.780678430310628*^9, 3.780678438586512*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"642e4157-a297-4b50-a63c-54a9f7e23b1c"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxcvXnUpldBZxtGMZdWIc4DyDyISjc2OCAffbWZpbk0iiCO3dIqQWRQ4Noq
ILgUGQIJYRAutJZIVAiGgqRCtGKlQlWRiqnUkBoyEplUJm0F5ALp5ffuvc86
h39Ye1XV93t/zznP81btnHOeu/3cs57487c+7bTTzvuR0077t/+/9Bfu/4Yr
//Uzu29+610+9k1v+tvdF15x1bf+0qHB7/quX/1ft/+TwX/8mm++9x/9xuA3
//PuP9160uCzn/zz333d/Qf/3sWn73zBrQaf9gM/8+z7v/vT8adO+7P/97/9
5ODrPvAvv/3m0wd/8BUPf+WxCz8VX/TE3z/3q35+8Nu/8Zq3PvLOg197w7ef
96Ldn4xftOMZF+w6c/Av/9L73v9P3zT4aQ+81eXfse8T8WM++9i/+e/PG/y9
l5x7/C13G3zvl3zopmv+5h/iOz/qAX//1f9z8Glf9fz//aj7Df7Ukb/+4ouv
+fvR7413vP37f3vwB3/6yV/9zw8cfNG9/vAbv/OGvxv9/uETd3v67w8++y8e
8h1v/d7BL3r+S77nxEc+Pvr94JU/eKezBz/tNt/4yMc8fPBjDvzcE377kx+L
H/Lqdz7lkjcNvuePfv7n/uWRg+/8LT905nf9y0dHvw+98lf/xx8O/tTbT/zm
2/7L4OvOvMfvnvziR0a///DLr7nznw6+8PMXvemxTx78x391mx0vve3g1770
8e/8y7/48Oj3mDe+77M/NfiXv+bDu7/7joOfds13HfiFXX87+r35hYf/19MH
P+Tn9l576ozB97rvV3/kjL++efT71FM+9bhfHnzazh2fe9m3DP7UCz992u79
H4qv3fr+0z//q4MP3O5lZ/z7ewze3D83LffL4Ndu3x+DN/fDjcv8H7yZ7zfE
r9me39cv83nwZv5et8zXa+Nb/t2/zc/B127Px1Pj82/Pv5Mjb3u+DX7m9vw6
ET96ez4dH9d3e/4MvuWmf5sv14y87flxbJkPg1+zPf5HR972eA9+9Pb4HlnG
8/DIe8+/jd/hZbyuXsbn0PK8Gnxq+/pftTxPrhz529f3YPyl7et5Rfze7et3
YLle+5frsy8+uX09Ll/67136XhZ/cbvfnpG33efS5fPvXubDJfG7tz/frvjb
tz/PhfFZ2/k7489v510QH9r++ecvP++85c/viC/d/v1vHffz9q+fs/BLx/2w
/b+3PbQ/v/n1Lfltmz8f37T5+cuv74gv3Xy+5fefH99x+36/IH7Dpn983831
iTfP513xozbXNz6xuf7xX23GJ779dt6e+PGb8Y3P3Yx/fMNmfsT33syfePO8
3z/yNvNv5G1/H10x8jbzd+Rt5vfI28z/mPsj5v6Jb9zcX/Fttvsdju+zuT/j
x27u3/hZm/t75G3u/5G3eT6MvM3zY+Rtfx9dEz/0m3/j1Ld85DO7z//iL33p
F5/4t7sf9Bt3/+mL3j/4fjft+9snvXbwt//QM3/hH39h8De8/c6ffOXW4K/6
youeff+vH3z6iYs/8cqTn44//5bbffYDvzP4o//tCbfc8qDBR+/3B3f4vg99
Kr700x+503NeNfhd733gt/zZDwx+86//+j0//PFPxi//Tx/4zm87d/ALvuJO
D/mxHxr89Ct/4uGv/swn4iee/fZH73/L4Ic/5R+feKvHDv6uuz70ad//+X+I
v/Ujv/Pzz/3jwaf/2dW//OdPHPz5X/nWF3zklr8f/R78P158l3cOPvLFv3j5
k586+NI9Xzz7rK8Y/K7ffeRbDuz8u9Hv8a99+61/bvDLv/b683/gqwe/4NR9
dj3vko+Pfm97zp53/uLgJz79L6/46NcPfvgD7nDsrns/Nvr90xNv+PFnD/7W
i97ysdfcZfDpv/nxz3zwio/Gn/uhB33hNi8c/JGv/M3b/OC9Bx++av8df+3I
R0a/153x9ee/aPC7fuKn7vrx7xz85rudd9+7Xfvh0e9j//vfP/V3Bz//nQ/7
gbP/4+Cff+7v/fDBm/929Pu+oz9yu7MGP/yWuzz5YT84+Lsu/8Wfef7f3zz6
/f7OX3z36wef/v/c8py/++HBn/v6x/zPu//Th0a/68552U+8dfDhP7zxVec8
bvDm3wM3jX7bf/8fvPn7/uDN3+8Hb/4+f2O8+fv7DfHm7+uDf2v77+fXx5u/
j18Xb/7+Pfhrt/++fW38ye2/X5+KD2z/fXrwH2///fnkyNv++/KJ+Ce2/348
ePP34ePxGdt//71m5G3/fXfwge2/3x4bedt/nx38W9t/fz068rb/vnpk5G3/
/XTwGdt/Hz088rb//nn1yNv+++bgzd8vD8W33v775FXx+7b//vg38ebvi1fG
99r+++EV8cntvw9+MN78/e9AvPn73r74VtvP3w/E791+Xl8eb/7+tnfkbX8f
7IlPbH9//PXI2/6+uTTe/P3rL0e/7e+z98e/sP39d9H4edvfD++NH7X9ffOe
+N3b31/vHvfX9vfhn4/vg+3v1z+JN/8e+MP4bdvfr28c98v29+Wr483fZ543
/vzLtnkr3rf9++PN30/euLXkxQ/cfJ74CZvPG1+06RM/adM3vmlzPeJf2Vyv
kbe5nvFZm+s9eDMe8c2b8YrvvxnP+Dmb8Y4v3syH+Nab+RJv/j26L37tZr6N
vM18HHmb+TryNvN55G3m+8jb3A8x90vM/RT/4+Z+i79ucz/G37e5X+Of3NzP
8Ys39/vI2zwPRt7meTHyNs+Tkbd53sT6mP/5lAvPuPj04WPkHfgYWR8jvxYf
I78cHyPrY2R9jKyPkfUx8oX4GPmP8THy2fgYWR8j62NkfYz8aHyM/BB8jHwv
fIx8Bj6mfviY+uFj6oePqR8+pn74mPrhY+qHj6kfPqZ++Jj64WPqh4+pHz5G
1sfI+pj64WPqh4+pHz5GPoCPqR8+pvmEj2n+4GPqh4+pHz6mfviY+uFj6oeP
qR8+pn74mPrhY+qHj6kfPqZ++Jj64WPm+2WwPma+H26MT+Fj5PfhY/rz+Bj5
THyM/Ch8TH3xMfP8HHwKH1MePqY8fEx5+Jjy8DHz/Bm8mS/XjDx8THn4mHn8
j448fEx5+Jh5PA8v4zf4FD6mPHzMPB6Dr8PHyGfhY+brezC+BR8jvwcfIz8D
HyPfAx8jX4uPkV+Nj5EfiY8pDx8jX4CPka/Bx8iPwMfM47sr/lZ8jPwKfIz8
RXyMvB8fI78DHyP/Lj5GPoSPkX8FHyP/DD6m8dv+31kPlW/Cx8jvxsfIn8HH
yG/Ax/R58THyx/Ex8m3xMfLb8DHyA/Ax8iX4GPlx+Jh5/uyO34ePke+Aj5Gf
gI+ZP//e+CZ8jHxffEzXEx8jX4SPKQ8fUx4+pjx8THn4GPkcfEw/Hx8zPw+v
Xq7n4fF58TFdL3xMnx8fUx4+pjx8zPz9Mvi2+Jj5+hyP/wM+5tHvu839T7/s
5t33x8fI+hhZHyPrY2R9jPw5fIz8EXyMfAQfI/81PkbWx8j6GFkfIz8fHyP/
PD5G/q/4GFkfI+tjZH1M/fAx9cPH1A8fUz98jKyPqR8+pn74mPrhY2R9TP3w
MfXDx9QPH1M/fEz98DHyV+Jj6oePkT+Mj5H1MfXDx9QPH1M/fEz98DGNHz5G
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
Hz6mfviY+uFj6oePqR8+pn74GFkfUz98TP3wMfXDx9QPHyPrY2TXx9QPH1M/
fEz98DH1w8fUDx8juz5G1sc0fviY+uFj6oePqR8+pn74mPrhY2R9TP3wMfXD
x9QPHyO7PkbWx8j6GFkfI+tjZH2MrI+R3a8k3wkfUx4+pjx8jPx2fIzsfiXZ
/Uqy+5XKw8fI7leS3a8ku1+pPHxMefiY8vAx5eFjysPHlIePKQ8fI3/5+zc+
Rna/kux+Jfne+Bj5FD5GZv9I7H4l+Uv4GNn9SrL7lWT3K8kn8TGy+5XKx8f0
PMLHyL+Ej+nz42Pkx+BjZPcrdX/hY2T3K8mfwcfI7lfqfsHHNJ/xMbL7lWLW
x/Tn8THy1+BjZPcrye5Xkt2v1K/jY2T3K8nuV5LviI+R34CPkc/Bx8jX4WPk
e+Jj5DPxMfJf4WPk2+Nj5MfjY+Rz8THyDfiYZb7GzOeRh48pDx8j/wk+Rr4C
HyN/Gh8js38w5n6NfxofI/82PqY8fEx5+Jjy8DHl4WOW59HIw8eUt3mexfqY
x/3Oi9/4pqd9qPNjZH2MrI+R9TGyPkbWx8j6GFkfI5+Dj5H1MbI+RtbHyPoY
WR8je36MrI+pHz6mfviY+uFj6oePqR8+pn74mK4vPqZ++Jj64WPqh4+pHz6m
fviY+uFj6oePqR8+pn74mPrhY+qHj5H1MbLrY2R9TP3wMfXDx9QPH1M/fIys
j5FdH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPH1A8fM98PNy7zf7Dnx/Tn8THz
fB6sj5nn67Wx58fM8/HUMv9OjvsJHyPrY2R9TNcXH1MePkbWx8zzYTDnR4w8
fEx5+Jh5PA+PPHxMefiYeXwOLc+rwfqY+XpfuVzfgzH/3o31MfP9uH+5Pvti
fYysj5n7XhZv/r27J9bHzJ9/9/J5L4k9P0bWx8z3387Rb+MrYn3M/PPOiz0/
RtbHdD/jY2Z+6bgf+F9/Hh8j62Nkz4+Zf31HrI+Zf//58Wn4GFkfI+tj5vtj
V/wkfMz883eP34+PmfP2xPqY+frtjfUxsj5G1sfI+phlfsb6mGV+jzx8jKyP
kfUxsj5mnp+HY33Mcv/G+pjy8DHl4WPKw8eUh49Znj8jDx9THj6mvM3zLdbH
fNPfXnn+33/t8DGyPkbWx8j6GNnzY2R9jKyPkfUxsj5G1sfI+hj5SfgYWR8j
62NkfUz98DH1w8fUDx9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx9QPHyO7PqZ+
+Jj64WPqh4+pHz5Gdn2MrI+pHz6mfviY+uFj6oePqR8+RtbHyP8VH9P44WPq
h4+pHz6mfviY+uFj6oePkY/gY+qHj6kfPqZ++BhZHyPrY2R9jOz5MbI+RtbH
yPoY2fNjZM+PKQ8fUx4+Rn4JPkbWx8j6GNnzY8rDx8j6GFkfI3OexMjDx5SH
jykPH1MePqY8fEx5+BjZ82NkfYysj5H1MTL//o31MTLnfcSeHyPrY2R9jKyP
ka/Hx8j6mPLxMfXj/BjZ82NkfUyfFx8jX4yP6f7Cx8j6GNnzY2R9TPcLPqb5
jI9ZeKufh4/pz+NjlrxYHyPrY2R9jMx5ObE+RtbHlIeP6f7Gx8j6GFkfI+tj
ZH2MvBMfI+tjZH2MrI9Z5mOsj1nmc8x8H3n4GFkfI+tjZH3Mcj/G+pjlfo71
MeXhY8rDx5SHj1meNyMPH7M8r0YePqa8zfMudn3MR7e++QPff+VN7VeS9TGy
PkbWx8j6GNnzY2T3K8nuV5LdryTrY2R9jKyPkd2vJLtfSXa/Uv3wMfXDx9QP
H1M/fEz98DH1w8fUDx8j62Pqh4+pHz6mfvgYWR9TP3xM/fAx9cPH1A8fUz98
jOz6mPrhY2TXx8j6mPrhY+qHj6kfPqZ++JjGDx8j3xMfI+tj6oePqR8+pn74
mMYPH1M/fEz98DH1w8fM98ONy/wf7PqY/jw+Zp7Pg92vVF98zDw/B3t+THn4
mPLwMfP8OjHy8DHl4WPm+XLNyMPHlIePmcf/6DLeg92vNI/n4WX8Bnt+THn4
mHk8Di3X/6rY82Pm63twuZ5XxOwXic/Ex8zXZ1/sfiXZ82Nk9yvJ7lea59ul
sefHyO5Xmsd3V+z5MfKr8DHyl1kfM1+f82P3K8nuV5LdryR7fozsfqWuJ/uV
ZPcrye5Xkt2vJLtfSfb8GNn9SrL7lWT3K8meHyO7X0l2v9L883fHF+Nj5Fvj
Y+bn1WXxa/Ex8/1y+fJ59sXPw8fMn+/A6IePmT/vwdEXH7PM//hcfMzcZ/AN
+Ji53+H43viYue+RmPt75OFjysPHlIePKQ8fUx4+Zv6+G8zza+ThY8rbPP9i
fcx73vz0617+spvyMbLnx8juV5LdryS7X0nWx8j6GFkfI+tjZPcrye5Xkt2v
JOtjZH1M/fAx9cPH1A8fUz98TP3wMfXDx9QPH1M/fEz98DH1w8fUDx9TP3xM
/fAx9cPH1A8fUz98TP3wMbI+RtbH1A8fUz98TP3wMbLrY+qHj5FdHyPrY+qH
j6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj6oePqR8+RtbHyPoY2fUxsj5G1sfI
7leS3a9UHj5G9vyY8vAx5eFjysPHlIePKQ8fUx4+pjx8THn4mPLwMeXhY8rD
x5SHjykPH1MePqY8fIzsfiXZ/Uqy58fI7leS3a8ks38kfhQ+pjx8jOx+Jdnz
Y2T3K8nuV5LdryR7fozsfiXZ/Uqy58fIj8DHyO/Dx8iPw8fI7leS3a8ku19J
9vyY7ld8TPcTPkZ2v5LsfiXZ/Uqy+5Vkz4+R3a9UH3xM44mPkT0/Rna/UuON
j5HfgI+Rb8DHyPfGxzQe+JiuNz6m8dusp4qfgI8pDx/T9cLHdD3wMTL772Lm
e8z9EL8DHyMfxMfIn8HHyF+Lj5G/Fx+z3M8x9/vIw8eUh48pDx9THj6mPHzM
8rwaefiY8vAx5W2eh7E+5sX/esE/nfrBmzo/RtbHyPoYWR8juz5G1sfI+hhZ
HyM/Cx8j62NkfYzs+hhZHyPrY+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj
ZH1M/fAx9cPH1A8fI7s+pn74mPrhY+qHj6kfPqZ++BhZH1M/fIysj5H1MfXD
x9QPH1M/fEz98DGNHz5G1sfI+pj64WPqh4+pHz6m8cPH1A8fUz98zHw/3LjM
/8Guj+nP42O6HviYef5eF+tj6oePmefjqVgfUx4+Zp5fJ5b5dHzk4WPKw8fM
8+PYyMPHzON/dBnvo8v4Hhl5+Jh5/A4v43X1yMPHzONxaLn+V8WeHyPrY+br
ecVy/x6IOd9juT77lutx+bi/8TGyPkbWx3Q/4WPkG/Axsj5mHt9dy/1+Yez5
MbI+Zr4+58eX4GNkfYysj5E9P0bWx3Q98TGyPmb587E+RtbHzONxXqyPkfUx
jTc+Zh6vC7fmvrtifcx8fXaP34+PkfUx83y+LNbHyPoY+e74GFkfM3++A6Mf
Pmb+vAdHX3zMMv/H58HHyPqY5hs+Zu53ONbHLPdvrI9Z7v+Rh48pDx9THj5m
ns/HRx4+Znl+jTx8THn4mPI2z8dYH/MHf/7lO/3YJ25sfYz8YXyM7H4l2fUx
sj5G1sfI+hhZHyO7PkZ2v5Ls+hhZHyPrY2R9TP3wMfXDx9QPH1M/fEz98DH1
w8fUDx9TP3yMrI+pHz6mfviY+uFj6oePqR8+pn74mPrhY+qHj6kfPqZ++Jj6
4WPk38PHyPoY2fN864ePqR8+pn74mPrhY+SvxMfI+pj64WPqh4+pHz6mfviY
+uFj6oePkfUxsuf5yvoYWR8j62NkfYysjykPHyO7Pkb+I3xMefiY8vAxMv/+
id2vJLs+RnZ9THn4GNn9SrLrY2TXx5SHjykPH1MePqY8fIzsfiXZ9TGy62Pk
u+NjZPcrya6PkV0fUx77lcrDx8iuj5Hvho+R3a8kuz6mfHyM/AV8jOx+pT4/
Pqb7Bx8jX4CPkX8YHyPfEx8ju19Jdn1M9ws+Rj4NHxOzXylmfUx/Hh8ju19J
dn2M7PqY/jw+pl/Hx8iuj5FdHyPfAR8ju19Jdn2M7PuV5PviY/r5+Bj5InxM
/VkfI+P34jfhY8rDx8i+X0n2/Uqy71eSfb+S7PuV5CvxMbLvV5J9v5Ls+5Vk
368k+36l8vAx5eFjysPHlIePKQ8fUx4+pjx8THn4mPLwMeVtnpdjPPAxD376
6x/22afdmI+R9TGyPkbWx8juV5I9P0Z2v5Ls+hhZHyPrY2R9jOx+Jdn9SrLr
Y+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj6oePqR8+pn74mPrhY2R9TP3w
MfXDx9QPH1M/fIysj5FdH1M/fEz98DH1w8fUDx9TP3yM7PoYWR/T+OFj6oeP
qR8+pn74mPrhY+qHj5H1MfXDx5SHj5nn/2DXx8zz+/plPg/Wx8j6mHl+DtbH
zPPvZOz5MfP8OrHMp+PL/BnsfiXZ/UrzfBjs+TGy+5Vk9yvN43l45LFfqTx8
zDw+h0YePkZ2v9J8va9cru/B2PNjGi98zHy99i/XZ9/Iw8fM83/v0vey2PNj
ZPcrzZ9/9/J5L4k9P0Z2v9KcvzP2/Bj5KD5G3omPkc/Bx8juV+p+xsfM/NIx
Pzk/pj+Pj5HdryS7X2n+9R2x+5Xm339+7PkxsvuVZPcrzffHrtjzY+afv3v8
fnyM7Puu5cfhY+brtzfG18X4vJj1V7Hvuy4PHyP7vmvZ913Lvu9a9n3Xy/0T
+75r2fddy77vWvZ917Lvuy4PH7M8H0YePqY8fEx5+Jjy8DHl4WPKw8eUh48p
Dx9T3ub5Getjrr7rA59x7pU3tF9J1sfI+hhZHyPrY2R9jKyPkfUxsvuVZH2M
rI+R9TGyPkbWx9QPH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPHyK6PqR8+pn74
mPrhY+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFjZH2M7PoYWR9TP3xM/fAx
9cPH1A8fI+tjZNfH1A8fUz98TP3wMfXDx9QPHyPrY2TXx8j6GFkfI+tjZPcr
yfqY8vAx5eFjZPcryZ4fUx4+pjx8jMx/r471MbI+Rna/Unn4GFkfI+tjZPcr
lYePKQ8fUx4+RtbHyPoYWR8ju19J1sfI+hhZHyPz/uKRh48pDx8ju19J1sfI
+pjy8THlsV9J1sf0+fExfV58jOz5MbI+RtbHyLdlv5Ksj+l+wcc0n/Exsj4m
xsf05/Ex/To+RtbHyPoY2f1K/To+RtbHyPqY8vAxsj5G1sfI7leSfd91Px8f
0+fDx5SHj5H1MfJZ+BhZH1MePkbWx8j6mOYLPma5X2Lfdy3rY2R9jKyPkfUx
sj5meR6MPHxMefiY8vAx5eFjysPHlIePKQ8fUx4+pjx8THmb52msj3nGyf2v
f/DDbsjHyPoYWR8j62Nkz4+R9TGyPkbWx8j6GFkfI+tj5K/Fx8j6GFkfUz98
TP3wMfXDx9QPH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPH1A8fI7s+pn74mPrh
Y+qHj6kfPkZ2fYysj6kfPqZ++Jj64WPqh4+pHz5G1sfIZ+BjGj98TP3wMfXD
x9QPH1M/fEz98DHy2fiYric+Zp7/g10f0/XBx8zzebA+Zp6v1y7zc7A+Zp5/
J5f5NtjzY+b5dHyZP4P579exPkbWx3R98DHl4WNkfcw8nofH9WR9THn4mPLw
MfN4DNbHzNf7yuX6Hhz9WB8j62Pm+3H/cn32xTfgY+b5v3eZz5ct/fbE+pj5
8+9ePu8l8cX4GFkfM+fvHP04P0b2/BhZH9N8wcfIH8fHdD/jY2Z+6Zif/E/W
x8j6GFkfI3N+TayPmX//+bHnx8j6GFkfM98fu+JH4WPmn797/H58zJy3J348
Pma+fntjfYysj5H1MfN4HIj1MeXhY2R9TPMRH7PcH7E+Zrm/Yn2MrI+R9TGy
Pma5/0cePmZ5fow8fEx5+Jjy8DHl4WPKw8eUh48pDx9THj6mvM3zNXa/0u3O
/tm917zr+vYryfoYWR8j62NkfYzs+65l9yvJ7leS3a8k62NkfYysj5HdryS7
X6l++Jj64WPqh4+pHz6mfviY+uFj6oePqR8+RtbH1A8fUz98TP3wMbI+pn74
mPrhY+qHj6kfPqZ++BjZ9TH1w8fIro+R9TH1w8fUDx9TP3xM/fAxjR8+RnZ9
jKyPqR8+pn74mPrhYxo/fIysj5EP4GPkP8bHyPoYWR8juz5G1seUh4+R3a8k
u1+pPHyM7Puuy8PHlIePKQ8fUx4+pjx8THn4mPLwMeXhY8rDx5SHjykPH1Me
PkZ2v5K8Ex8ju19Jdr+S7H4lmX8fx+5XKg8fI/Pv75GHjykPHyO7X0l+NT5G
dr+S7H4l2f1K8jX4GNn9SrL7lWTfd939hI+Rv8j6mPrhY2T3K3W/4mO6n9iv
JPu+a9n9SrL7lWT3K8nuV5LdryS7X6n7HR8ju19Jdr+S7H4l+Vx8jOx+Jdn9
Sv18fIx8MT5Gxt/F+L0Y/xfjB2Pfd10ePqbrgY+pHz5G9v1Ksu9XWu632Pdd
y75fSfb9SrLvVyoPH1MePmZ5now8fEx5+Jjy8DHl4WPKw8eUh49ZnpcjDx9T
3uZ5G+tj3va4L3zm1+56fT5G9vwY2f1KsvuVZPcryfoYWR8j62NkfYzsfiXZ
/Uqy+5VkfYysj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj6oePqR8+pn74mPrh
Y+qHj6kfPqZ++Jj64WPqh4+pHz5G1sfI+pj64WPqh4+pHz5Gdn1M/fAxsutj
ZH1M/fAx9cPH1A8fUz98TP3wMfXDx3Q98TH9fHzMPN9vWOb39ct8HqyPkV0f
Uz98zDwfT8XuV+rz4mPm+XUi9vyY8vAx5eFj5vlxbOThY+bxP7qM92DPjykP
HzOP3+FlvK4eefiYeTwOLdf/qtjzY8rHx8zX84rY/Uqy58fM12ffcj0uj/n3
+NL3sqXfnmW+XRp7fozsfqV5fHfF7leSPT9Gdr/SfH3Ojz0/Rn4FPkY+gY+R
34CPkd2vVD/2K8nuV5I9P0Z2v9L883dszeNxXux+Jdn9SvP13xl7fozsfiXZ
/Urz9dkde36M7H6l+Xl12fL598b4uq15vPbF+L6teXwPxKzfin3fdXn4GNn3
XXc98DFdT3zMcn/Fvu9a9n3XXS98jOz7rufrP9j3XS/Pj5GHjykPH1MePqY8
fEx5+Jh5vgzm+Tjy8DHl4WPm+XBdrI/5gduf/W3fcNZ1nR8j62NkfYysj5Fd
HyPrY2R9jKyPkb8bHyPrY2R9jOz6GFkfI+tj6oePqR8+pn74mPrhY+qHj6kf
PqZ++Jj64WNkfUz98DH1w8fUDx8juz6mfviY+uFj6oePqR8+pn74GFkfUz98
jKyPkfUx9cPH1A8fUz98TP3wMY0fPkbWx8j6mPrhY+qHj6kfPkb+ND5Gdn2M
rI+RX4yPkfUxsutjZH2MrI8pDx8j62NkfUx5+BhZH1MePqY8fEx5+Jjy8DHl
4WPKw8eUh48pDx9THj6mPHxMefgYWR8je36MrI+R9TGyPkb2/BhZH1MePqY8
fIzMeomRh48pDx8je36MrI+R9TGyPkb2fdeyPkbWx8ieHyN7foysj6kfPkb+
DD6m+xUf0/2Ej5E9P0bWx8j6GFkf0/XHx8j6mPrgY7q++BhZHyPrYxpvfIzs
+667vvgYWR/TeOBj+nz4GFkfI+tjysPHyPoYmf11ow8+pjx8TP3wMbI+Zrmf
Yn3Mcj/G+hhZHyPrY8rDxyzPi5GHj1meNyMPH1MePqY8fEx5+JjleTjy8DHL
83Tk4WPK2zyPx8/Dxxzb/R2PufC061ofI+tjZH2MrI+RPT9G1sfI+hhZHyO7
PkbWx8j6GPnT+BhZHyPrY+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj6oeP
qR8+pn74mPrhY+qHj6kfPqZ++Jj64WPqh4+R9TGyPqZ++Jj64WPqh4+R9TH1
w8fI+hhZH1M/fEz98DH1w8fUDx9TP3xM1xMfI1+Pj5nn+w3L/L5+mc+D9THz
fL129MPHzPPx1DL/Tsb6mK4/PmaeT8djfUx5+Jh5fhxb5sNgfcw83keX8T0y
8vAx8/gdXsbr6mV8Do08fEy/Hx8je36MrI+Zr+cVy/U7EHt+zHx99i3X4/KR
h4+R2c+y9Nuz9Lk09vwYWR8j62Pm+/3C+Fx8jKyPma/P+bHnx8ieHyPrY2R9
jPxufEz98DGyPkb2/BhZHzP//B1b83ictzV/nvNjfcx8/XduzeN14dbcd1es
j5mvz+74ffgYWR8zz+fLYs+PkW/Cx8zjtS/Wx8zjeyDWx8zz4eC4XviY8vAx
XQ98zHL/jL74mOX+G9cPHzPP5yOxPma+/oP1McvzY+ThY5bnz8jDx8z344mR
h49Znn8jDx+zPD9HHj5mng/XjbzN8zl2fcyzXrj315787GvzMbI+RtbHyPoY
2f1KsufHyO5Xkl0fI+tjZH2MrI+R3a8ku19Jdn1M/fAx9cPH1A8fUz98TP3w
MfXDx9QPH1M/fEz98DH1w8fUDx9TP3yMrI+pHz6mfviY+uFj6oePkfUxsutj
6oePqR8+pn74mPrhY+qHj5FdHyPrYxo/fEz98DH1w8fUDx9TP3yM7PoYWR8j
62Nk18fI+hjZ9TGyPqY8fEx5+BhZH1MePqY8fIzsfiXZ82PKw8eUh4+R+fdX
7H4l2f1KsvuVysPHyO5Xkt2v1PXEx8juV5LdryS7X0n2/BjZ/Uqy+5Vk9yuV
x/kx5eFjysPHyPz7feThY8rDx8T4GNnzY2T3K/Xz8DF9XnyM7PkxsvuVZPcr
yZ4fI78DHyMfwsfIb8PHyO5Xilkf0/2Gj5E9P0Z2v5LsfiXZ/Ur9Oj5Gdr+S
7H4l2fNjZPcrye5Xkt2vJHt+TD8fH9Pnw8fIvl9Jfhw+pjx8THn4mMYHHyPj
F2Pfd10ePkb2/Uqy71eSfb+S7PuVlvs19n3Xsu9XKg8fUx4+pjx8THn4mPLw
MeXhY8rDx5SHjykPH1MePqY8fEx5+Jjy8DHlbZ7XY3zxMac/6Cf/6HMfOtV+
JdnzY2T3K8muj5H1MbI+RtbHyPoY2f1KsvuVZNfHyPoYWR8j62Pqh4+pHz6m
fviY+uFj6oePqR8+pn74mPrhY2R9TP3wMfXDx9QPH1M/fEz98DH1w8fUDx9T
P3xM/fAx9cPH1A8fI7s+RtbHyK6PqR8+pn74mPrhY+qHj5FdHyPrY+qHj5H1
Mf18fEzXCx8j62Pm+TxYHyO7Pmaen4P1MfP8O7nMt8H6mHk+HV/mz2DPj5nn
x7FlPgzm32Ox+5Vk9yvN43l45HF+jOx+pXl8Do3riY+R3a80P0+uXK7vwdjz
Y2T3K83Xa/9yffaNPHzMPP/3LvP5sph/z488fEx98THz570k9vwY2f1Kc/7O
Je+C2PNjZPcrzeO3I/b8GPl38THyWfiY5uf2/150SX8eHyO7X0l2v9L86zti
9yvNv//82P1KsvuVZPcrzffHrtjzY+afv3v8fnzMnLcn9vyY+frtjd2vJPu+
axnft3y+AyOP/UoyPjFm/Vfs+65l33ct+75r2fdd9zzDxyz3Z+z7rmXfd10e
PqY8fEx5+Jjy8DHl4WPKw8eUh48pDx9THj6mPHxMefiY8vAx5eFjysPHlLd5
fsf6mB2f+JerXv/EU/kY+ffwMbL7lWTXx8iuj5H1MbI+RtbHyPoY2f1Ksutj
ZNfHyPoYWR9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx9QPH1M/fEz98DH1w8fU
Dx8juz6mfviY+uFj6oePqR8+pn74GFkfUz98TP3wMfXDx8ie51s/fEz98DH1
w8c0fviY+uFj6oePqR8+RtbHyPoY2fddy/oYWR8juz5G1seUh4+ROS8h5jyF
kYePkX3ftez7rmXfdy17fkx5+Jjy8DGy77suDx9THj6mPHxMefiY8vAx5eFj
5FuxPkZ+Lz5GfiY+Rr4XPkY+iY+RX4OPkR+NjymP9TEy7zeO3a8kuz5Gdn2M
fBY+pnx8jMx5J7Hvu5ZP4GNk3v8c4y/G/YWPkX3fdXmcHyO/AR/T/YKPaX7h
Yxbekr8GHyPvx8fInFcTfw8+Rn4SPkbm/d0x/im+GR8jPwcfI3MeT/wmfIz8
OnyMzPvJY84Dip+Nj5F34WOW+RL/F3xMefiY8vAxy3yNmc8x8z3+CnyM7PuV
ZN+vJPt+Jdn3K/U8wsf0vMLHyC/Fx5SHjykPH1MePqY8fEx5+Jjy8DHl4WPK
w8eUh48pDx9THj5med6OPHxMefiY8jbP89j1MQ97+6u++JDLTrY+RtbHyPoY
WR8j62Nk33ctu19Jdn2M7PoYWR8j62NkfYzsfiXZ9TH1w8fUDx9TP3xM/fAx
9cPH1A8fUz98TP3wMbI+pn74mPrhY+qHj5H1MfXDx9QPH1M/fEz98DH1w8fI
j8bH1A8fI/u+a1kfUz98TP3wMfXDx9QPH9P44WNk33ct62PKw8f08/Ex/Tx8
zDy/r1/m82D+PbDM12tHHj5mno+nYvcr9XnxMfP8OhG7X6nri4+Z58s1se+7
Lg8fUx4+Zh7vwe5Xmsfz8DJ+g33fdXn4mHk8Di3X/6rY/Url42Pm63lFzPkd
sfuV5uuzb7lfLh95+Ji572VLvz3jfsLHyMfxMfIj8THz+O6K74KPkd2vJLs+
Zr4+58d/jo+R3a8kuz5G9n3XM7909Nv4mIfO1+OlW7L7lWTXx8iuj5F937Xs
fiXZ9TGy62Nk9yvJro+RXR8jfxgfI7tfSXZ9TM9jfIx8Lj5Gdr+S7PoY2fcr
lYePKQ8fM3+/HYzxjTE+cnwefMzcZ7DvV5r7HR6fFx8z9z0S+36luf9g3680
X4/Bvl9pvj7HRx4+Znl+jTx8zHz9Bvt+pfl6Xjvy8DHz9b1u5OFjysPHlLd5
vsf6mJM/fZ/7nXjQydbHyPoYWR8j62Nk9yvJ+hhZHyPrY2TXx8j6GFkfI7tf
SdbHyPqY+uFj6oePqR8+pn74mPrhY+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY
+uFj6oePqR8+pn74mPrhY2R9jKyPqR8+pn74mPrhY2R9TP3wMbLrY2R9TP3w
MfXDx9QPHyPrY2R9jOz6GNn9SrI+Rua/18b899yRh48pDx8juz5G1seUh4+R
3a8ku1+pPHyM7Pkx5eFjysPHlIePKQ8fUx4+pjx8THn4mPLwMbL7lWT3K8nu
V5LdryS7X0n2/BjZ/Url4WPKw8eUh48pDx9THj5GZj1G/Gp8jHwL62Nk9yvJ
nh8ju19Jdr+S7H6l7id8jOx+pfrhY2TPj5F/Bh/Tr+NjZNbTDMbHyO5Xkt2v
JHt+jOx+pfrgY7q++BjZ/Uqy+5W6/vgY2fNjZPcrye5XajzwMbLnx8juV5Ld
ryT7vuvy8DHl4WPKw8c0vvgYmfVisT5G1sfI+hhZHyPrY5b7OfZ91+XhY8rD
x5SHjykPH1MePmZ5Xo08fEx5+Jjy8DHl4WPKw8eUh49ZnscjDx9THj6mvM3z
PtbHPO+bLv3RF+w40X4lWR8j62NkfYzs+hhZHyPrY2R9jOx+JVkfI+tjZNfH
yPoYWR9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx9QPH1M/fEz98DH1w8fUDx8j
uz6mfviY+uFj6oePqR8+pn74GFkfUz98TP3wMfXDx8j6mPrhY+qHj6kfPqbx
w8fUDx8j3xof08/Hx/Tz8DHyOfgYmfXwy/y9Lna/Unn4mHk+nlrm38llvg3m
PMxlPh1f5s9g/vt1zH/fjj3Pdx7/oyMPHyNzHugynoeX8RvMf78fefiYeTwG
X4+PkV+Hj5EfjY+Z7/cr4l34GPmZ+Jj5+uxbrsflIw8fI+tjZH3MPN8ujT+E
j5k/7yXL59sVs/4jPgsfM+ddELO+JGb9yfLndyy//60x61vG/MXHlMf/ZM77
3Zr5nJjzgmPW58Ss34k/jI/pfsDHyKwPilk/FHMecsz6o5jzlONd+Jh5fu6J
eX9W/Bp8zDI/YuZPzPyK34+PWebnyMPHlIePkU/iYxpPfEz98TGyPma+nodj
fcz8fD4S62Pm6z9YH1MePqY8fEx5+Jjl+TTy8DHl4WPm8R2sj1menyMPH7M8
f0cePqY8fEx5+JjyNs//WB/zVUd+/CXf+HUn2q8k62NkfYysj5E9P0bWx8j6
GFkfI7tfSdbHyPoY+Xx8jKyPkfUx9cPH1A8fUz98TP3wMfXDx9QPH1M/fEz9
8DH1w8fUDx9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx8j6GFkfUz98TP3wMfXD
x8j6mPrhY2R9jKyPqR8+pn74GNnzY2R9jOz6GFkfI/8kPkZ2fYysjykPH1Me
PqY8fIysj5H1MeXhY2R9jKyPKQ8fI+tjysPHlIePKQ8fUx4+pjx8THn4mPLw
MbI+RtbHyL+Cj5H1MbI+Rvb8GFkfUx4+pjx8THn4mPLwMeXhY8rDx8ivx8fI
+hj5WfgY2fNjZH2MrI+R9THyA/Axsj6mfvgY2fNjul/xMbI+RtbHyOx/ivUx
sj6m64+PkfUx9cHHdH3xMfKZ+BhZH9P1x8fInh/T9cXHyPoYWR/T9cbHyPoY
WR9THj5GvgkfUx4+pjx8THn4GFkfI/N++Fgf03jiY2R9zHK/xvqY5X6PeR6M
PHxMefiY8vAxy/No5OFjlufZyMPHlIePKQ8fUx4+Znnejjx8THn4mPLwMeXh
Y8rbfB8sf/6Tu9/xin9810UvO56PkfUxsj5G1sfI7leSfd+17H4l2fUxsj5G
1sfI+hjZ/Uqy+5Vk18fUDx9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx9QPH1M/
fEz98DH1w8fI+pj64WPqh4+pHz6mfvgYWR8juz6mfviY+uFj6oePqR8+pn74
GNn1MbI+pvHDx5SHj+nn42P6efiYrg8+Zp7Pg/Uxsutj5vk5WB8juz5mnm+D
XR8zz6fj4/riY+b5cs0yP44t82Gw77uex/voMr5HxnzFx8juV5LdrzSPz6GR
h4+R3a9Uf3zMfH0Pxu5Xmq/fgeV67Y/vjo8pDx9THj5m7nvZyON91+XhY+qL
j5Efi4+R34OPke+Bj5nzd8ZfYH2M7H4l2f1KsvuV5P34GNn9SrL7lZovvO9a
5nyZLZnzZ2LW38TuV5LdryS7X0n2fdfzz98Zu19pfj7vit2vNP/83eP342Pk
2+JjZPcrzddvb+x+pfnz7IvdrzR/vgOx71cqDx9THj5mfv5cFbN+LGZ9Wez7
rmXfryT7fqXmIz5G9v1K8/N/sO9XKg8fUx4+pjx8THn4mPLwMeXhY8rDx5SH
jykPH1MePma+364befiY5fk98vAx5eFjytt8P8T6mB9+xMuv/fHPXtP5MbI+
RtbHyPoY+dvwMbI+RtbHyPoY+Sg+RtbHyPoY+S34GFkfI+tj6oePqR8+pn74
mPrhY+qHj6kfPqZ++Jj64WNkfUz98DH1w8fUDx9TP3xM/fAx9cPH1A8fUz98
jKyPkfUx9cPHyK6PkfUx9cPH1A8fI+tjZH1M/fAxsutjZH2MrI+RX4KPkV0f
I+tjZP79MPLwMeXhY2T3K8m8H3bk4WPKw8fI7lcqDx9THj6mfvgYWR9THj6m
PHxM/fAx5eFjysPHlIePkW/h/Bj5QnyM/Cx8jHwffIx8LT5GPhsfIz8WH1Me
58eUh48pDx9THj5G9vwY2fNj5NfhY+TbsV9JfiY+Rr4eHyPjJ+Kd+BgZvxHj
P2L8SPxufIzM+bwx5/eOX8fHLL9/a/l58ec3/ifGD8X4oxi/FD8eHyPjp2LW
E8Wcjxyfi49p/PExzQ98zDKeW8t4x8yHmPkSM59GHj5mmY/x/fAxy3weefiY
5X6I8Zcx681ifcxyP8b6mOV+jvUx5eFjysPHlIePKQ8fszyPRh4+pjx8THn4
mPLwMeXhY5bn6cjDxyzP45GHjykPH1MePqY8fMzyfTHmIz7mhlvufod/ffo1
+RhZHyPrY2R9jOz5MbI+RtbHyPoYWR8j62NkfYzs+65lfYysj6kfPqZ++Jj6
4WPqh4+pHz6mfviY+uFj6oePqR8+pn74mPrhY+qHj5FdH1M/fEz98DH1w8fU
Dx8juz5G1sfUDx9TP3xM/fAx9cPH1A8fI+tjZNfHyJ4f08/Hx/Tz8DH9eXyM
7Hm+8/y9bpmv1448fMw8H08t8+9krI+Z59eJZT4dX+bPYH3MPD+OLfPh2DL+
R2PPj5nH98jIw8fI/Pf5WB8j62Pm8Risj6k/Pma+vgdHHutjZH3MfL32L9dn
38jDx5SHj5n7Xrb02zPy8DH1xcfI+hj5/fgYWR/T9cDHzHkXxPoYWR8zj9+O
2Pddy/oYWR/TfOH8GNnzY2R9jKyPkdkvFetjZH3MfL9fsPz8nbE+Zr4/dsW+
73r++bvH78fHzHl7Yn3MfP32xvoY2fddy/qY+fMdGHn4GNn3XZeHj5mfP1fF
+ph5vg1mP2Csj5H1Mc1HfEzPL3zMPP8G62Oa3/iY8vAx5eFjysPHlIePKQ8f
Ux4+pjx8THn4mPLwMfP9dt3Iw8csz++Rh4+Z798bRx4+pvHafH/E+pgX7nr/
97zx+LHdT8LHyJ4fI7tfSXZ9jKyPkfUxsj5G1sfIe/AxsvuVZNfHyPoYWR8j
62Pqh4+pHz6mfviY+uFj6oePqR8+pn74mPrhY2R9TP3wMfXDx9QPH1M/fEz9
8DH1w8fUDx9TP3xM/fAx9cPH1A8fI+tjZH2M7PqY+uFj6oePqR8+RnZ9jKyP
kfUxsutjZNfHyPoYWR9THj6mPHxMefgY2fUxsj6mPHxMefgYWR9THj6mPHyM
zPtWYs+PKQ8fUx4+Rubfh7Hnx8ieHyPfhvUxsuf5yp7nK7PeIGZ/SOx5vrLn
+cqsdxh5+Jjy8DHl4WPKw8eUh4+Rz8bH1A8fIz8XHyNfi4+RH4uPkTlvJfY8
X9nzfGXOc4k57yX2PF/Z83xl9i9tyZ7nK7PeJmY9Tsz+qdjzfPvz+BiZ83Ji
z/OVPc+3z8P6GPksfIzseb6y5/l2vfAx/Xx8TJ8PH1Me62P6vPiY8vAx5eFj
ysPHyM/Bx5SHjymP82NkfUzjiY+RP4GPkb8OHyN/Hz6m5xU+pucZPqb7Ex/T
/YuPkTmPauThY8rDx5SHjykPH1MePqY8fEx5+Jjy8DHl4WOW5/HIw8eUh48p
Dx9THj5m+b6I+T6J9TFnPPdJP/t9jzqWj5E9P0Z2v5LsfiXZ/UqyPkbWx8j6
GFkfI7tfSXa/kux+JVkfI+tj6oePqR8+pn74mPrhY+qHj6kfPqZ++Jj64WPq
h4+pHz6mfviY+uFj5GfhY+qHj6kfPqZ++Jj64WPqh4+R9TH1w8fUDx9TP3yM
7PqY+uFj6oePkd2v1M/Hx3S98DGy+5Uab3zMPH+vi/Ux5eFj5vl4apl/J0ce
PmaeXyeW+XR8mT+D3a80z49j43rhY+bxP7qM92DP853H8/DIw8fI7leax+fQ
Mh6Db8DHyOznGPn4mPl+vyJ2v5LsfqX5+uwbnw8fUx4+Zu572dJvz8jDx8gn
8THz571k+Xy74vvhY+b8nUveBbH7leR342Nk9yvNv/+tsfuVZPYjjfuP/y2/
viW/Ax+z/PytJX9r+Xyx+5W6H/AxsvuV5PvjY2T3K8332yWx+5WW8dlaxm9r
Gd+Y/Wqx+5WW+RO7X2mZfyMPH7PM3/j1+Jjy8DFdD3yMrI+pLz5G3qzfOhz7
vmvZ9yvJvl+p5w0+Zv6+OBb7fqXmCz6mPHxMefiY8vAxy/Nt5OFjlufjyMPH
lIePKQ8fUx4+Znl+jzx8zPL8H3n4mP48Pkbe/Pfxwa6PeecDPvnKkxcdbX2M
rI+R9TGyPkbWx8ieHyO7X0l2fYzs+hhZHyPrY2R9jOx+Jdn1MfXDx9QPH1M/
fEz98DH1w8fUDx9TP3xM/fAxsj6mfviY+uFj6oePkfUx9cPH1A8fUz98TP3w
MfXDx8iuj6kfPkb2/BhZH1M/fEz98DH1w8fI+hhZHyN7foysj5FdHyPrY2T3
K5WHjykPH1MePqY8fEx5+Jjy8DGy+5VkfUx5+BjZ/Uqy62PKw8fInh9THj6m
PHxMefiY8vAxsvuV5F34GNnzY2T3K8nuV5LdryS7X6k8fIzsfqXy8DHl4WPK
w8eUh4+RPT9Gdr+S7H4l+UZ8jPxIfIx8IT5Gdr9S9xM+Rna/Uv3wMbL7lWTP
j5HdryS7XynGx8ie59v1wsfI+KPY/Ur1wcd0ffExsufHlIeP6frjY2T3K8nu
V5LdryS7X0n2/BjZ/Uqy+5XKw8eUh48pDx9THj6m64GPKQ8f0/MAHyPjN2PO
z45531ns+65l33ct+75r2fddL8+L2PddL8+bkYePKQ8fUx4+pjx8zPI8HHn4
mPLwMeXhY8rDx5SHjykPH7M870cePkbm/Pf4LfgY+fzN982YH/iYR330ZRe/
8H5HWx8j62NkfYysj5E9P0bWx8j6GFkfI7s+RtbHyPoY2fddy/oYWR9TP3xM
/fAx9cPH1A8fUz98TP3wMfXDx9QPH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPH
1A8fUz98jKyPkfUx9cPH1A8fUz98jKyPqR8+puuJj5F933U/Dx/Tn8fHdD3w
MfXHx8j6mHl+Dub9Icv8O7nMt8GeHzPPp+MjDx/T9cTHzPPj2DIfBnuer+x+
pXl8j8Se5zuP3+FlvK5exufQyMPH9PvxMbLnx8ie51sePma+fgdi33fd58XH
zNfj8tj3XZeHj5n77Vn6XBqzPiP2PF/5QnyMfB98jPx6fIx8C/uV5BvwMbLv
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
nh/HxvXCx8zjf3Tk4WPm8T0S62PKw8fM43X16IePkT0/Zr7+Vy3X+8rY/Urz
9bxiuX4HYs+Pke+Bj5HdrzT33xu7X0l2v9I83y6N3a8kPwIfI7PfZhmvC2P2
68Rf4vwY2f1KsvuV5DfhY+Sj+JiuJz5Gdr9S13OzX+mhy69vye5Xkt2vJLNf
amsej/Ni9yvJt8fHzJ9vZ+z5MfJOfIzsfqXl+m8t4xPfBh+zjO/WMv6x+5Vk
9yvNz/v9Iw8fUx4+pjx8THn4mPLwMV0PfMxy/8Suj5FZnxazfi3m/o25v2PO
j4rfh4/p+uJjysPHLM+fkYePWZ5fIw8fM98fg/Ux5eFjlufryMPHLM/nkYeP
KQ8fM8+fG0cePmb5/oj1Mcv3T6yPaXzxMcv3W8z3X6yPOfPk/tc/+GF/034l
WR8j62NkfYzs+TGyPkbWx8j6GNn9SrI+RtbHyL7vWtbHyPqY+uFj6oePqR8+
pn74mPrhY+qHj6kfPqZ++BhZH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPH1A8f
I+tjZH1M/fAxsutjZH2MrI+RXR8juz5G1sfIro8pDx9THj6mPHxMefiY8vAx
5eFjysPHlIePKQ8fI7s+RnZ9THn4mPLwMbLrY8rDx5SHj6kfPkb2/BjZ82Nk
z4+R74uPkfUxsuf5yuwviT0/Rvb8GNnzY2Tfdy17fozs+TGy58fIvJ855jyU
mPNSYs5TiT0/Rvb8GPn++JjuJ9bHyDvxMfLH8TGy58csvCV7fozs+THdr+xX
anzwMbLnx/R58DFL39jzfOUz8THyF3nf9XK9t5bx2FrGa2sZz61lvGPPj1nm
S+z5MeXhY8rDx5SHjykPH1MePqY83ne93C+x+5WW+y32fdfL/Rr7vmvZ913L
vu9a9n3Xsj5med6MPHzM8rwaefiY8vAx5eFjysPHLM/TkYePWZ7HIw8fUx4+
pjx8THn4mOX7ItbHLN83sT5G1sfIH8bHLN93Md+HY3zxMW973Bc+82t3vTIf
I+tjZH2MrI+R3a8k+75r2f1KsutjZH2MrI+R9TGy+5Vk9yvJro+pHz6mfviY
+uFj6oePqR8+pn74mPrhY+qHj6kfPqZ++Jj64WPqh4+R9TH1w8fUDx9TP3xM
/fAxsj5GZr35yMPH9PPxMf08fIzseb6y+5Xqj4+pLz6mPHzMPB9PLfPv5MjD
x5SHj5nn0/Fl/gz2/Jh5fhxb5sNgz/Odx/voMr5HlvE8POYnPmYer6uX8Tk0
5hs+RvZ91/P1vjLm37Ox+5Vk9yvN9+P+2PNjysPHzP33Ln0vi92vVB4+Zp4/
u2P3K8n4hBjfsNx/O2POu42vwcfMfc+L3a8kfwIfI78CHyO/AR/T+LFfSea8
3635958Tu19p/vk7Ys4b3pqvz/mx+5Xmn78z9vyYue+uGN8Vu19pnm+Xxu5X
anzwMfP13zs+Lz5mHq99sfuV5vv3wMjDx8zz4eDIw8fM1+eq2PUxy/0zfj8+
Zrn/Yt93vdy/sT5muf/H9cbHzPfLYN93Pd9fx2Pfd708v2Lfdy37vmvZ913P
9/u1Iw8fMz8frht5+Jjl+T3y8DHl4WPKw8fMz6ubYs/zXb5/YvcrLd9fMd9v
8a3xMcv3Y6yPuWb3dzzmwtMOdn6M7PkxsvuVZNfHyPoYWR8j62NkfYz8f+Nj
ZPcrya6PkfUxsj5G1sfUDx9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx8j6mPrh
Y+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj6oePkV0fI+tjZH2M7PoY2fUx
sj5G1seUh48pDx9THj6mPHxMefiY8vAx5eFjysPHlIePKQ8fI7s+RtbHlIeP
KQ8fI+tjysPHlIePkT0/Rvb8GJl/v8aeHyPfiI+RPT9G9vyY8lgfUx4+Rvb8
GNnzY2Tfd10ePkb2/BjZ82Nk/EKMf4h531DMepLY82P6fPgY+fb4GPkgPkY+
gY+R342PkT0/Rvb8GNnzY2TPj+n+xsfUBx/T9cbH1AcfI3t+TOOBj5HxW/Gr
8DFdf3xM1xcfI3t+jOz5MfXDx8ieHyP7vuvy8DHl4WPKw8eUh48pDx9THutj
ZPcrLfdTrI+R3a8k+77r5X6O9THl4WNkfYz8CXyM7Puuy8PHLM+r2Pddy77v
WvZ917Lvuy4PH1MePmZ5Ho88fEx5+Jjy8DHl4WOW74tYH7N838T6GFkfI+tj
5M/iY5bvw3E/bb4vl/n197tPf9BP/tHnPvTB3foY+UJ8jOx+Jdn1MbLrY2R9
jKyPkfUxsj5Gdr+S7PoY2fUxsj5G1sfUDx9TP3xM/fAx9cPH1A8fUz98TP3w
MfXDx9QPH1M/fEz98DH1w8fIro+pHz6mfviY+uFj6oePqR8+RnZ9TD8fHyPr
Y2TXx3Q98DH1x8fI+hjZ/Url4WPKw8eUh4+Z59eJZT4dH3n4mPLwMfP8ODby
8DHl4WPm8T66jO+RZTwPL+N3eBmvq5fxObSMx2D3K8meHzNf34PL9bwidr/S
fL32L9dn38jDx8i+71p2v9Lcb0/sfiXZ/Urz571k+Xy74rvjY+qLj6kfPkZm
v098AT5m/vM7lt//1ngHPkb+XXxM98P2/37lEtn9SjL7nWL3K8nuV5LdrzT/
/vNj9yvNf35n7Puu5/tjV+z5MfIJfMwyPlvL+G0t4xv7vmvZ/Urz83lf7H6l
8vAx5eFjysPHlIePKQ8f03jiY2T3Ky3313I9D8fuV5J9v9Jyf488fEx5+Jjm
Nz5G/vJNGx8j+77r8vAxsuf5Ls+3ZXwHe55v/fAx5eFjysPHlIePWZ7fIw8f
szz/Rx4+pj+Pj5H1Mf08fMzy/bSM12B9zDx+N8f6mJ5fm+/P2PUxD3/7q774
kMsOtD5G1sfI+hhZHyPrY2TPj5HdryS7PkZ2fYysj5H1MbI+Rna/kuz6mPrh
Y+qHj6kfPqZ++Jj64WPqh4+pHz6mfviY+uFj6oePqR8+pn74GFkfUz98TP3w
MfXDx9QPH1M/fIysj5E53zHWx8iuj5H1MTL/Poj1MTL/vXfk4WPKw8eUh48p
Dx9THj6mPHxMefiY8vAx5eFjysPHyPoYWR8juz6m64mPkfUxsufHyJ4fI3t+
jOz5MbLnx8ieHyOfi4+R9THl4WPKw8eUh48pDx9THj6mPHyMfDY+Rr4NPkZ+
Lj5GZn/O+Lz4mD4fPkb+MXyMzP6g2PN85f34GPlr9m18jOx5vrI+Rr4IHyOz
/ylmf1R8F3yM/DB8jMz+q5j9WfFxfIz8bHyMzPvDY94vHp+Fj5H1MV0vfIzM
+81HX3yMrI+R9THl4WPKw8eUh48pDx9THj6mPHyMrI9pPPExsj5G1sfInh/T
8wMfI+tjysPHlIePkfUxzSd8zPI8Gnn4GFkf0/MAHyPrY2R9jHwnfMzyvB15
+Jjy8DHl4WPKw8eUh4+Rfb+S7PuuZd+vtHwfxXxfxey/jTkvLf5KfIzMetKY
79NYH/O8b7r0R1+wY3/rY2R9jKyPkfUxsvuVZH2MrI+R9TGy62NkfYysj5Hd
ryTrY2R9TP3wMfXDx9QPH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPH1A8fUz98
jMz++9EPH1M/fEz98DH1w8eUh4/p+uFj+nn4mP48PqbrgY+pPz6mvviY8vAx
9cHHzPPv5DLfBrs+Zp5Px5f5M9j1MeXhY+b5cGwZ/6PLeB9dxvfIMp6Hl/E7
vIzX1cv4HFrGY7A+Rvb8GJl/z8b6GFkfIz8HHyN7fsx8PS6PPT+mPHzM3G9P
rI+Rb8bHzJ/3kvH78THy/fAxMj4ixlfEH8LHyJ4fM//5HTG+JPb8GPlSfEx5
/E/Wx8gvxcfI+J4YHxTji+LD+Jj5el4Qc35OfDd8jPx+fMxyfeOT+Bh5Jz6m
+YKPmefzZcvn3xv7vuv5/toX+75r2fddL/Nz5OFjysPHLPM/9n3Xsu+7ln3f
9XL/xfjScb3wMbLvV1ru/5GHjykPHyPfgo+R74GPkfUx5eFjZH3M8vyL9THN
T3yM7PuVysPHlIePKQ8fszzfRx4+pjx8TOOFj5H1Mcv3T6yP6efjY2R9zHy/
3xzfGR+zfH/GfL/G+ph3vOIf33XRy/a1X0nWx8j6GFkfI7s+RtbHyPoYWR8j
u19J1sfI+hjZ9TGyPkbWx9QPH1M/fEz98DH1w8fUDx9TP3xM/fAx9cPHyPqY
+uFj6oePqR8+pn74mPrhY+qHj6kfPqZ++BjZ/Uqy62NkfYzs+65l9yvJro+R
9THl4WPKw8eUh48pDx9THj6mPHxMefiY8vAx5eFjysPHlIePKQ8fI3uer6yP
KQ8fUx4+RtbHyO5Xkt2vJLtfSfb8GNn9SrL7lWT3K5WHjykPH1MePkb2fdey
+5Vk9yvJr8fHyO5Xkt2vJLtfSWa9SMx6kvix+Bj5AfgY+QucHyO7X0l2v5J8
CB8js15mS2Y9Tex+JfkOnB8ju19Jdr9Snwcf0/jgYxpPfIzsfiXZ91033vgY
2fNjZN6HFbtfSXa/kux+Jdn3XXf98TGNPz6m+YGPKQ8fUx4+pjx8THn4mO5P
fMxyP8X6mO5/fEzPB3zMcj/Hvu96eR6MPHzM8jyJfd+17PuuZd93XR4+Znne
jTx8zPK8HHn4mPLwMeXhY8rDxyzP85GHj1m+D2J9jOz7rpfvm1gfs3xfxfoY
WR8j62Pkb8HHLN+nMd+3sT7mxlvufod/ffoH2q8k62NkfYysj5E9P0bWx8j6
GFkfI7tfSdbHyPoY2fddy/oYWR9TP3xM/fAx9cPH1A8fUz98TP3wMfXDx9QP
HyPrY+qHj6kfPqZ++Jj64WPqh4+pHz6mfvgY2fN8+/n4mH4ePkZ2fUzXAx8j
s15+9MXHlIePKQ8fI/N+kZGHj5nn14mRh4+Z589g18fM8+PYyMPHlIePmcd7
8GPxMbLrY+bxG+z6mHl8Di3jMdjzY+brfWXs+TGy58f08/ExsufHyPfFx5SH
j5n77x15+Jjy8DFzn0tj9svET8DHyBfiY+T74GPk1+NjZPbzLPPz/Pgv8THy
/4ePkdlPFLPfKGY/0ui3/b83XCLz/qUtmfczxQfxMTL7pWL2U8Xst4r/f/Yr
zc+fnTHvn4rfg4+RfwQfI1+LjykfHzNfzz2xPkbWx8jsZ4v1MbI+Zu57YOTx
vuvy8DHl4WPKw8cs90esj6kvPkbenG90ONbHyPoY+Zn4mOX+H3n4mPLwMeXh
Y+bxOh4/Eh8z348nRh4+Zr5/B+tj5vv92lgfI/u+6/LwMcvze+ThY+bnz40j
Dx/TeOFjZN+vtHz/xPqY+Xk4WB8zP19ujvUx9cXHLN+vy3werI8547lP+tnv
e9TlnR8j62NkfYysj5HdryTrY2R9jKyPkf8vfIysj5H1MbL7lWR9jKyPqR8+
pn74mPrhY+qHj6kfPqZ++Jj64WPqh4+R9TH1w8fUDx9TP3xM/fAx9cPH1A8f
Uz98jOz6GFkfI/PfU2P3K8n6GFkfI3ueb3n4mPLwMbI+pjx8THn4mPLwMeXh
Y8rDx5SHjykPH1MePqY8fEx5+Jjy8DHl4WPKw8eUh4+RXR8j62NkfYzs+TEy
//6N9TGyPka+LT5G9vwY2fNjZM+PKQ8fI+tjZM+PkfEH8TPxMfL1+Bj5R/Ax
Mv4ifjQ+Rr4fPqb7ifUxMv4k5jyY2PNj5IfjY5bfv7X8vBj/E3OeTcx5NzHn
4cT/GR+zXI+t5XrFX2J9jIz/ivUxsj5Gvjs+pvmFj2n+4WNk18cs8yl2v5Ls
+hjZ9THLfB55+Jjy8DHL/RLrY2R9jOz6mOV+jfUxsutjZN93vTwvRh4+pjx8
jKyPkZ+Kj5F933V5+BiZ9YKx77tenqex77uWfd91efiY8vAx5eFjlu+DWB8j
62Pkd+Jjlu+jWB8j62NkfYysj5H1MfJ34mOW79uY/z4y5g8+5tEffdnFL7zf
3s6PkfUxsj5G1sfIj8XHyPoYWR8j62PkW+NjZH2MrI+Rr8DHyPoYWR9TP3xM
/fAx9cPH1A8fUz98TP3wMfXDx9QPHyPrY+qHj6kfPqZ++Jj64WPqh4+pHz6m
PHxMPx8f08/Dx8iuj+l64GNk18fUFx9THj6mPHxMefiYeb4N1seUh4+Z589g
18fM8+PYMh+OLeN/dBnvwa6Pmcfz8DJ+h5fxunoZn0PLeAx2fUy/jo+R9THy
bfExMuepxvoYWR8j34SPaXzxMfN8vizmPNiRh4+ZP//umPNm47/Cx8j3wsfI
r8PHyLdjfYx8Eh8j78LHyG/Ex8j/jI+ROY839jxfmfN8L5F/Bh+z/PnY83zl
l+NjZM4bjjmPOOa84viV+Jjl+sTvxcfI/xkfI9+Ij5H1MbI+Rn4EPmae/3tj
z4+RPT9mmV+x58d0PVkfI/u+62V+jzx8jOx+peX+Gb8fH1Me62P6vPiY5f6N
3a9UHj6m+YWPma/HYM4LX67P8dEXHyOfiY9pvuNj5vk82PddL8/PMT/wMbLv
u5Z933V5+Jjy8DHL83/k4WPm8bgp1sfM822wPmYer8H6mHn8bo71MfN4Dn4w
PmYe38GsX41dH/MbT7nwjItPvywfIz8fHyO7X0l2fYysj5E9P0Z2v5Ls+hhZ
HyO7X0l2fYysj5HdryS7PqZ++Jj64WPqh4+pHz6mfviY+uFj6oePqR8+pn74
mPrhY+qHj6kfPkbWx9QPH1M/fIysj5HdryS7PkbWx8juV5L1MbLrY8rDx5SH
jykPHyO7X6k8fEx5+Jjy8DHl4WPKw8eUh48p7//QdefRtt91mecZVGgsbUGX
C8tSJl2Csmy6lgMi+qMQZLCcKMtqkLLtbi0HcACH1tKlODYqUzAMUhSgRAp3
oWFnOJBwYWeTxCQHcCc3CRlAEmMIoDguB0AgXX3P83p++X7Xav57L8h9zmf/
9tn78s5niI9pXnxM8+Jjmhcfg/XHYD4G64/BfAzmY7B5JWxeCZtXwvbHYPNK
zYuPweaVmhcf07z4mObFxzQvPgbbH4Ptj8E/ER+D3xMfg78pPga/JT4GPz4+
Bn9xfAz+1PgYbH8Mzr2ksnklbF4JvzE+ps8nPgbbH4PNK+HcgyqbV8LmlbB5
Jfyj8THYvBI2r9TXPz4Gm1fC5pWweaXWFx+D+RhsXql58THNi49pXnxM8+Jj
pvf7mhcfg80rTb9PZT4G8zHYvBLmYzAf07z4mOnzYs2Lj2lefEzz4mMwH4N/
Pj4G8zHT52GZj8F8DOZjMB+DfyE+pnnxMdPn/ZoXHzN9X5Ttj+n3aXwMtj8G
u3eN3Veavu/K9sdM35flfJ+WH3PyfVvOvx8p59+flPXHnP/ODz7zY3+xr4/B
9sdg80pYfwzmY7D9Mdi8EtYfg/kYbF4J64/BfAw2r4T1x7S++JjWFx/T+uJj
Wl98TOuLj2l98TGtLz6m9cXHtL74mNYXH9P64mNaX3wM5mNaX3wMzr7GMh+D
8/f1sv4YzMdg/TGYj8H6Y5oXH9O8+Jjmxcdg966bFx/TvPiY5sXHNC8+pnnx
Mc2Lj2lefEzz4mOaFx/TvPiY8XldMz2fq6fnsTIfM77e71rfX/Ex4+v5jrJ5
pfH38crp9blizYuPwS+Njxnfz5dO9b19zYuPab3xMdg+X3wqPgY/PD5m/P27
YH1/xsfgO+Jj8IXxMfgl8TH4z+Nj8BviY3D6X8r2+fb5x8fgn46Pwfb5Yvt8
8R/Gx4zP99zynfEx+IXxMfgB8TE4/UXlJ8TH4BviY8b32yVl+3zxE+Njxtfj
sjIfg/kY/Mz4mObFxzQvPqZ58THNi48Z3z+HMh+D7Y+Zfr+m+k6vP298zFjv
tWU+pnnxMc2Lj5k+P9a8+Jjx9blhzYuPGV+vG9f642Omz781Lz6m3w/xMf0+
iY/BfAzmY/BZ8THT5/uaFx/TvPiY6fuj7L5S35/xMdh9pf758THT99uaFx8z
fT+u9cbH4K+Oj2n98TE4/76knH+fUuZjTu5tX9L+GMzHYD4G8zFYfwzmYzAf
g/kYrD8G8zGYj8H6YzAfg/mY1hcf0/riY1pffEzri49pffExrS8+pvXFx7S+
+JjWFx/T+uJjWl98TOuLj8H6Y1pffAzOPY2y/hjMx2A+BuuPwXwM1h+D+Zjm
xcc0Lz6mefExmI9pXnxM8+Jjmhcf07z4mObFxzQvPqZ58THNi49pXnxM8+Jj
mhcf07z4GMzHYPtjsP4YzMdgPgbbH4OfFB/TvPiY5sXH4GfHx+Avjo/BfxIf
g18SH4NfHB/TvPiY/vnxMfi2+Jj+vPEx+KL4GPyU+Bj8oPgYfPf4GPz2+Bh8
7+yPwc+Jj5l4wZfEx+DXxMfgu2VeCT8wPgY/Nj5mqmeZ6i3fFB+DfzA+pvVl
XgmfFR+D7Y/p+yM+BvMxmI/BF8THTO+XsnvXfd7xMdP7sezeNXbvGrt3Pf0+
lN27xu5dT79vZfeusXvX2L3r6fd9zYuPaV58TD8v42Omz5s1Lz6mefEx+Bfi
Y/Br42Owe9fNi4/B7itNn7dl95X6fo6Pwe4rNS8+Zvo+KPMx/b6Mj8F8TH9f
4mOwfb7T91mZj5m+D8t8DOZjMB/Tz4f4GMzHTN/n6/Mf7l3vpnvXu/oYPN67
3k33rnfTvevddO96N9273k33rnftj8HjvevddO96N9273k33rnfTvevddO96
N9273k33rnfTvevddO96N9273k33rnfTvevddO96N9273tXHtL7h3vVuune9
67wSft9w73o33bveTfeud/UxrX+4d72b7l3v2h/T5zXcu95N9653073rXftj
MB8zvn9Wvvtw73pXHzO+H1bmY8bnvTIfMz7P09PzW1l/DLbPd3weK4/3rnfT
vetdfQwe713vpnvXu+ne9c7/n17zhnvXu84rYfNKzbvgrveud51XwuaV8BOH
e9d+vovKDx3uXe/cFyrfOdy79v48t/y24d71Lv0l55RvHu5d73IP++z15xnu
Xe/4mEdj80rYvBK+crh37fU7p3zBcO9613klfM/h3vWu80rYvBI2r9T343Dv
etd5Jaw/pr/vw73rXeeVsHmlvn7Dvetd55WweaXmDfeud90fM71/17zh3vWu
80rT70fZvFLrHe5d9/evbF4Jm1fC5pXG139l80rNG+5d76Z717v8+4Qb1rzh
3vUu/do3ls8a7l3v4hdXHu9d76Z717vp3vVuune9m+5d76Z717vp3vVuune9
m+5d76Z717vp3vVuune9m+5de14rj/eud9O9634/Ts9zZT5mfL4rf1d8zPT9
Xc73e5mP+d0z95ze2nklzMdgPgbzMdi8EuZjMB+D+RhsXgnzMZiPweaVMB+D
+ZjWFx/T+uJjWl98TOuLj2l98TGtLz6m9cXHtL74GMzHtL74mNYXH9P64mNa
X3wM5mNw/n5e5mOwfb5YfwzmY7D+GMzHYP0xzYuPaV58TPPiY7B9vs2Lj2le
fEzz4mOaFx/TvPiY5sXHNC8+pnnxMc2Lj2lefAzWH4P5GKw/BvMxmI/B9sdg
80rYvBK2P6Z58THNi4/BD42PaV58TPPiY/DL42OaFx/TPz8+BueeUPnb4mNw
+knK6Tcpf3l8DP5E9sfgi+Nj8N+nP6bv//gYnH6ZBaefpvz6+Jj+eemPwdkv
XH5cfAw+Pz4Gpx+onH6h8jPiY/A/pz8GZ39y2bwSNq/U9098DE4/VDn3tsqf
zL1rzMc0Lz6mefEx0/t1zYuPaV58TPNy73r6fSnzMfgv42MwH4P5GMzH4F+I
j2lefEzz4mOaFx8zfd6sefExzYuPaV58DOZj8BXxMX1/xsdMn6dlPgbzMZiP
wXwMdu96+j4o8zGYj8F8DOZjMB+D3Veavu/KfAzmY/r7Hh+D+RjMx+DvjY+Z
vs/X+k6+78t8zGeeuX9wceeVMB+D+RjMx2DzSpiPwXwM5mOweSXMx2A+BptX
wnwM5mNaX3xM64uPaX3xMa0vPqb1xce0vviY1hcf0/riYzAf0/riY1pffEzr
i4/B+mMwH4Mvjo/pPx8fg7OfoKw/pvXGx2D9Ma0nPgbrj2lefEzz4mOaFx+D
c292zYuPGd8f16958THj879uzYuPaV58TPPiY5oXHzM+r2vWvPgYzMfgW+Jj
cO7PlL85PqbPLz5mfP2uKj8rPgY/LD4G8zHNi49pXnwM/tT4mPH9dkmZj8Hf
Hh/T/318DOZjMB+D753+mPH1Obe8i4/Br4mPaX3xMfiV8TH9eeJj8ImPedUp
/Lz4GPxr8TH4j+Jj8C/Hx+Dz42PwtfEx+GPpj8G5L1XO/anyefEx+LHxMTj3
rcoXxsfgT2Reafy8urSc+1rlm+Jj8IPiYzAfg/kYbH9M8+JjWm98zPjzH9af
Jz4G8zGYj8H2x2A+BvMxmI8Z61+Zj2lefEzzsj9m/P66Yc2Lj2lefEzz4mP6
vOJj+vrHx0yfn2tefMz4+r53fT7xMePrvTIfM77+t6x58THj59WtZT5mfD4r
8zHj81r5L+Njpu+/Mh8zPs+V+Zjx+a7Mx4zP+/YyH9P6Tr7/y/pjnn1mX/Cb
62PwY+JjsHklrD8G8zH4n+JjsHklrD8G8zHYvBLWH4P5GGxeCeuPaX3xMa0v
Pqb1xce0vviY1hcf0/riY1pffEzri49pffExrS8+pvXFx7S++BjMx2DzSjj9
7WX9MZiPwXwM1h+D+RisPwbzMc2Lj2lefEzz4mMwH9O8+Jjmxcc0Lz6mefEx
zYuPaV58TPPiY5oXH9O8+Jjmxcdg+3wxH4PNK2E+BvMx2LwSNq+E9cdg966b
Fx/TvPgYbF6pefEx2LwSNq+E3bvuzx8fg927xu5dY/eu+/PFx2D3rvEmPgZf
Fx+DXx8fg78tPqa/H/ExfT7xMdi8Un+/42NaT3xMX+/4GGxeCd8SH4PNK2Hz
Sti8Ul//+Ji+vvExWH8Mtj+m9cXH9P2Z/hhsXql58THT+3HNi49pXnzM9H5f
89Ifg80rTb9PZfNK2LzS9PtaNq+EzSs1Lz5m+rxY8+Jjmhcfg91Xal58TPPi
Y5oXH4OvjI/BH46Pwe5dNy8+Zvo8LruvhN1Xwu4rYfeV8G/Gx2D3lbB9vtP3
Udn+mOn7rGx/DP70+BjsvhK2zxfbHzN9H5fzfV3O9/laX3xM6zv5+8D0/Ozz
PZr2+R7Fv61sXgl/9rDP92ja53vUe9fYvBIe9/keTft8jzqvhMd9vkfTPt+j
zivhpw/7fI+mfb5H/r641jfs8z2a9vkeTft8j8zXr/UN+3yPpn2+R9M+36Pe
V2p9wz7fo/oYzMfgi4Z9vkf2D5THfb5H0z7fo2mf71H7Y/C4z/eo/TF43Od7
NO3zPZr2+R5N+3yPpn2+R9M+36P2xzRv2Od7NO3zPZr2+R61P6Z5wz7fo/qY
8flcveYN+3yP3PudXu93Ta/vO9fnN+zzPaqPGV+vK8tfMuzzPcr35eXlFw/7
fI+6P6Z5wz7fo8xDX1I2r4TNK+G3Dvt8j/LvX940vf4XlD/lgrvu8z3afWjY
53uU+Z3fL79s2Od7tPvrYZ/vUfzK2eWXD/t8j+JjnnsKf++wz/co81xnl989
7PM92v3msM/3aPffh32+R+lfObf8yWGf79HuBcM+X+/nN5WPhn2+R/n73Knp
59mV3zTs8z2Kr3h7+QnDPt+j7o/pzzvs8z1Kv84V5WcM+3yPOq/U1/Mz77rP
96jzSs0b9vkedV6p78dhn+9R55XGz8Nr1rwL7rrP96jzSuPn87Vl80rj+3/l
o2Gf71H3xzTvT++6z/eo80rT59OaN+zzPcr/37hper4r3zzs8z2K33pP+UuG
fb79/C3/6LDP98j+r/X9Mezz9f68pXzno+66z/eo967x64Z9vkfTPt+jaZ/v
0bTP92ja53s07fM96r3r8fN25XGf79G0z7ffz9Pzvr38nPiY8f2/cv59TZmP
+aYz+2guaH8M5mMwH4P5GKw/BvMxmI/BfAzWH4P5GMzHYP0xmI/BfEzri49p
ffExrS8+pvXFx7S++JjWFx/T+uJjWl98TOuLj2l98TGtLz4G/218DNYfg/kY
nP2QZT4Gu3eN9cdgPgbrj8F8DNYf07z4mObFxzQvPga7d928+Jjmxcc0Lz6m
efExzYuPaV58TPPiY5oXH9O8+Bj8KfEx+KL4GPys+BicezXlW+Jj8EviY3Du
4ZRzL6f8lvgYzMc0Lz6mefEx+GXxMZiPaX3xMfgn42MwH4P5GMzH4KfGx/Tn
i4/B94qPwYf4GJx7SeXcUyrzMfic+Bh8FB+D/zk+Bn9+fAz+2viY/vPxMTj3
pMrvjo/p84iPwblXVX5BfAx+YXwMzv7lcu5llZ8RH4P5GHxn+mPwE+Jjmhcf
0+cZH4P5GGx/TPPiYzAf09c/Pga7d435GMzHYPtjMB+D+Zjmxcc0Lz6mefEx
zYuPaV58zPR5tebFxzQvPqZ58TGYj8GfFR8zfd6uefExmI/BfAzmYzAfg+3z
xXzM9H1T5mOm76syH4P5GGyfL+ZjMB8zfd+W+Zjp+7rMx7S++JjWFx/T+k7+
vlDmY950Zn572/4YrD8G64/B9vniv4mPwXwM5mMwH4P1x2D9MfiX4mPwj8XH
YD4G8zGtLz6m9cXHtL74mNYXH9P64mNaX3xM64uPaX3xMa0vPqb1xcdgPgbf
Eh+D9cdgPgY/Kz4G8zE4/39hrS8+BvMxWH9Mf974mL7+8THNi49pXnzM+H55
d/l98THNi48Zn/910/NemY9pXnzM+PxWfl98TPPiY8bnsfKt8THj6/2usv6Y
Pr/4GPyW+Jg+n/iY8fW5Yn3e8TH4ZfEx4/v50jUvPqZ58TH4jviY8ec9VeZj
8JfHx4yv/wVlPgb/eXxM3//xMfjl8TH9/YmPwdv4GPzK+Bh84mOedwrzMX0/
xMfg6+JjsH2+eBMf0583Pgbb54vt88VfGB+D+RjMx2A+Bp8fH4P5GMzH4BfG
x4yfp5eX+RjMxzQvPqavZ3wM5mOw/THNi4/BfEzrj4/BN8fHNC8+BvMxzY+P
wXxM8+Jjmhcf07z4mObFxzQvPqZ58TE4PnnNi48Zn+/KfAzmY/CD42Omz981
Lz4G8zGYj8F8TN8v8THj87i1zMdM3z/r+z0+Zvr+KvMx4/O7rWyf7/T9WeZj
pu/fMh8zPu/by3zM+PxX5mNa38nfH8p8zMm807mdV8J8DOZjMB+DzSthPgbz
MZiPweaVMB+D+RhsXgnzMZiPaX3xMa0vPqb1xce0vviY1hcf0/riY1pffEzr
i4/BfEzri4/B+mMwH4P5GGxeCee+all/DOZjMB+D9cdgPgbrj8F8TPPiY5oX
H9O8+BjMxzQvPqZ58THNi49pXnxM8+Jjmhcf07z4mObFx2DzStj+GJz7wGU+
Bv9JfAzmYzAfg+8eH4Mvio/Bz4qPwemnWPPiY5oXH4NfER+DzSth80r4T+Nj
8BPjY/Cb42Pwt8XH4P81PgbfmXkl/Lb4GPzJ+Jj+PPEx+EXxMfjK+Bj8u/Ex
+J7ZH4MfEh+DvyE+Bp8XH4OfHB+Db46PwT8UH9P3S/bH4OzrKZ8VH4Nvio/B
2QdU/uH4GHxhfEzz0h+Ds49ozYuPaV58DDavhM0rYfNK0+9D2bwSNq+EzSth
80rYvBI2rzT9vq958THNi49pXnxM8+Jjmhcf07z4mH5+xsc0Lz6mefExzYuP
wfeNj8FfGR8zfR6vefEx/fyJj+nnb3wMdu8a8zHYfaXp+6bMx0zfV2U+BvMx
mI/B7itN36dlPmb6Pi7zMZiPaX3xMa0vPqb1xce0vpO/T5THeaXNNK+0aX8M
HueVNtO80maaV9rUx+BxXmkzzSttpnmlzTSvtJnmlTbTvNJmmlfaTPNKm2le
adP+mNY3zCttpnmlzTSvtJnmlTbTvNJmmlfatD8G32OYV9pM80qbaV5pUx+D
x3mlTfoh3rvWO8wrbaZ5pc00r7Rpf0yfxzCvtGl/DB7nlTbtj2neMK+0meaV
NtO80maaV9q0P6Z5w7zSpv0xzRvmlTbTvNJmmlfa1MeMr/+h/NJhXmnT/hg8
zittpnmlzTSvtKmPGV+Py9fnO8wrbaZ5pU33x4z1XFK+bZhX2mRf3anp57uo
/LBhXmmT+0gXTHnnlW8d5pU2u/0wr7TZ/c4wr7SJX3x1+TXDvNIm9yF/Zc07
858feDT+tWFeaZN5pLPL+2FeaZP/P3dO+bxhXmmzOz3MK212Hx3mlTaZl7mg
/KBhXmkzzSttMp9yqjzOK22meaXNNK+0yXzHpVP+ZeVxXmnT/TH4h4d5pU3m
ba5a84Z5pc00r7SZ5pU207zSpvtj8DivtJnmlTbTvNJmmlfaTPNKm2leadP9
Mc0b5pU207zSZppX2nR/TPOGeaXNNK/Uz7c1b5hX2uT+681r3mfcdV5ps3vI
MK+0yX7n95Z/bJhX2vTedT9vh3mlTe9d9/dhmFfa1Mfgc4Z5pX7/lI+HeaVN
fQz+q2FeaVMfg+83zCttel9p+n5d31/DvNKmPgb/yDCvtKmPGX9/Vz4nPqb1
xce0vpO/X5T5mDvO9NO8rvtjMB+D+RjMx2D7YzAfg/kYzMfg9C+X+RjMx2D3
rjEfg/mY1hcf0/riY1pffEzri49pffExrS8+pvXFx7S++BjMx2A+BvMx+PXx
MVh/DOZj8KPiYzAf07z4GKw/BvMxWH8M5mOw/pjmxcc0Lz6mefExOPdt17z4
mObFxzQvPqZ58THNi49pXnxM8+JjsP4YzMfgZ8fHYD4G64/BfAz+5vgYrD8G
8zGYj8EPi4/B9sc0Lz4G8zF9f8fH9M+Pj8F8DH5KfAzmY/C3x8fgfx0fg++X
/hh8SXwMvnv2+fb1/9UTH4OfGx+DL4uPwXxMn3f6Y/CD42Owfb54Gx/Tz4v4
GGyfL7bPF38s/TGYj8F8TP+8+Bj8oPgYzMdgPgZ/Iv0x2P6Y5sXHNC8+pnnx
MZiPwXwMtj8G8zGYj8F8DL5vfAzmYzAfg+2PaV58TPPiY5oXH9O8+Jjmxcc0
Lz6mefEx0+fdmhcf07z4mObFx2A+Bj81PqafZ/ExzYuPwXwM5mMwH4P5GOze
9fR9VOZjMB+D+RjMx2A+Brt3PX3flvkYzMdgPqb1xce0vviY1hcf0/riY1rf
yd83yuaVzj3z759+pz4G3y0+BptXwvpjMB+D3xQfg80rYfNKmI/B5pWw/hjM
x2DzSti8UuuLj2l98TGtLz6m9cXHtL74mNYXH9P64mNaX3wM5mOw+0rYvBLm
YzAfg/XHYP0x2LxS8+JjMB/Tnzc+BvMxfb3jYzAf07z4mObFxzQvPgbzMc2L
jxmf77VrXnxM8+Jjmhcf07z4mObFx2A+pv99fAx273p8Pd+xPq/4mPH1unJ9
HvEx4+tx+fT+v2x9nvExWH8Mzr7Y6effld27xu5d9/chPqbvr/gY7N41vjE+
Zny//H7ZvWv8d/Ex+IXxMfjV8TH9/cu9a/y6+Jjx9Tm7fG18DH5ufAx27xq7
d431x2D9MdPrU3bvGuuPmV7/snklrD8G64+Znn/ZvBLWH9Pf//iY5sXHNC8+
pnnxMdP7u6w/BuuPmX5/1v99fMz4+Xm6rD9m+v0t649pXnzM9Pmw5sXHjN9H
717z4mOmz6c1Lz6mefEx4+/vyu+Nj2le9sc0Lz4GPzE+Bj8zPmb6/F7z4mOm
z/+y+0rT90fZ/pjp+6f8jviY8fNwZft8x8/P28r2x0zfn2X7Y8bPq5XdVxo/
z28v2x8zff+v9cXHtL74mNYXHzN+nq6sP+bE17yiPgbbH4PNK2H9MZiPwfbH
YPNKWH8M5mOweSWsPwbzMdi8EtYf0/riY1pffEzri49pffExrS8+pvXFx7S+
+JjWFx+D+RhsfwzWH4P5GMzHYPNKOPsOyvpjmhcfg/kYrD8G8zFYfwzmY5oX
H9O8+JjmxcdgPqZ58THNi49pXnxM8+Jjmhcf07z4GMzHYD4G2+eLHxofg/XH
YD4G64/BfAzmY/CPxsdg80rYvBK2Pwa/ND4Gf1p8DP6p+Jj+/PEx+JvjY/Bb
42Pwk+Jj8MPiY/D/FB/T35f4mP786Y/Bl6Q/Bn99fEx//+Jj8HnxMfij8TH4
/vEx+MnxMfjC+Bj8+PgYfH18DP7h+Bj8ifgYbF4J/1Z8DDavhM0rYfNK+E3x
Mdi8EjavhO2PaV58TPPiY5oXH4PNK2HzSti8ErY/BptXwuaVsHklbF4Jm1dq
XnxM8+Jjmhcf07z4mObFxzQvPqZ58THNi4+ZPg/XvPiY5sXHNC8+Bj8tPgb/
fHzM9Hm+5sXH9PMrPmb6vijb5zt935Tt88XuXWP3lbB9vtP3Ydk+3+n7tGyf
L3bvGruvNH2fr/XFx7S++JjWFx/T+uJjWl98TOs7+ftI2bzS7szfb87qvBLW
H4P1x2D7fPFF8TFYfwzWH4PNK2HzSlh/DM7fB8tfEx+D9cdg80qtLz6m9cXH
tL74mNYXH9P64mNaX3xM64uPweaVsP6Y/nnxMZiPweaVsP4YzMc0Lz6m9cTH
NC8+pj9vfAzmY/p6x8f09Y2PGd8v757eH9dP74frp+d/3fS8r5ue77XT8zw9
Pb/T0/O6Zno+V0/PY2XzSlh/zPj6vrP8KfEx4+t31fp84mP6POJjsHmlPt/4
mLHeS9fnFx+DzSu13vgYzMdgPgabVxrzLyjzMfgv4mPGen+/zMfgv4+PwRfE
x+DfiY/BJz7mrFP9/Y6PwS+Oj8Gn42Pwr8fH4NfHx2A+BvMxmI/BXxAfg/kY
/Pj4GGxeCfMxmI/BfAw2r4T5GMzHYPNK2P6Y5sXHNC8+pnnxMZiP6esdH4PN
K/V/Hx/T5xcfg/kYbF4J8zHj813ZvFLz4mOaFx/TvPiY5sXHNC8+pnnxMc2L
j5k+H9e8+Jjmxcc0Lz4G8zH4RfEx0+f7mhcfg/mY8XncWtYfMz6fla+Mjxmf
18r6Y8bnd1tZf8z4PFf+qviY8fmurD9mfN63l/XHjM9/Zf0x4/th5SvjY8b3
x8r590XlT4+Ped8Z/sXdR+NjsP4YrD8Gvz0+Br8xPgbrj8H6Y/DPxMfg74+P
wfpj8GPjY/Aj4mOw/hic/YVrffExrS8+pvXFx7S++JjWFx/T+uJjWl98DLY/
BuuPwXwM5mPw/x4fg/XHYD6mefExmI9pXnwM1h+D+RisPwbzMVh/TPPiY5oX
H9O8+Bj83fExzYuPaV58TPPiY5oXH9O8+BjMx+BT8TFYfwzmY/Ct8TGYj8H6
YzAfg+2PwfpjMB+D+Rhsf0zz42MwH4P5mL6/42P688bHYD4GPz0+Bn9pfAy+
T3xMf1/iY/q/T38Mvjw+ps83Pga/Mj4Gb+Nj8EfiYzAfg786PgbzMZiPwXwM
/r74GMzH4OfHx2D7YzAfg/kYzMfg8+NjMB+D+Zjmxcdg+2OaFx/TvPiY5sXH
YD4G8zHY/hjMx2A+BvMx+GnxMZiPaV58TPPiY5oXH9O8+Jjmxcc0Lz6mefEx
zYuPaV58DI6/XvPiY5oXH9O8+BjMx+DfjY/p51N8TPPiY7D+GKw/BuuPwbv4
GHxNfAzWH4P1x2D9MVh/DNYfg5f4GPzt8TH9/YmPwfpjWl98TOuLj2l98TGt
Lz6m9cXHtL74mNZ38veVsnmlu+U/fAzWH4P1x2DzSpiPwfpjsP4YbF4J8zFY
fww2r4T5GKw/BptXan3xMa0vPqb1xce0vviY1hcf0/riY7D+GMzHYD4Gp9+9
rD8G8zGYj2lefEzz4mP688fHNC8+BvMxWH8M5mP6esbHYD6mefExzYuPaV58
DOZjmhcf07z4mObFxzQvPqZ58TF9PeJjMB+D+Zjx9XxH+eL4mPH1unJ9HvEx
4+txeZmPGeu9dKrv7ev7Iz4Gm1fCT4qPGX++i8pfGh+DXxEfM+adN/3555Yv
jY/BZ8XHjP/7V5dfGx+Dr4iPudv/z39+IT5m5LPL+fPLyS9v42Pw1fExU33T
P39B2bzS+OddVM7rW74pPgabVxrz3r7+8/ExY/5l658XH4O/OD4Gm1dqXnwM
du96/HnfuebFx4w//6FsXgmbV8Lmlcb6Tq8/b3zMWO+1688fH9O8+Jjmxcc0
Lz6mefEx4+tzw5oXHzO+XjeuefExzYuPaV58zPh6vmfNi49pXnxM8+Jj8Fnx
MfjC+Bjs3nXz4mP688bHYP0x/fnjY7D7Sq0nPgbrj+nrGR+D9ce03vgYrD+m
9cfHYPeVsP4YrD+m9cXHtL74mNYXH9P64mNaX3xM64uPaX0nf38pm1d69cnf
bxY+BuuPwfpjsHklzMdg/TFYfww2r4T5GKw/BptXwnwM1h+DzSu1vviY1hcf
0/riY1pffEzri49pffExWH8M5mMwH4Ptj8H6YzAfg/mY5sXHNC8+BuuPaV58
DOZjsP4YzMdg/TGYj2lefEzz4mOaFx+D+Zjmxcc0Lz6mefExzYuPwXwM1h+D
+RjMx+D3xcfgl8bHYP0xmI/B+mMwH4P5GGx/DDavhM0r4bvHx7Se+Bh8W3wM
Nq/Uny8+pv99fAz+ivgYfI/4GHxpfAy+d3wMvl/mlfDPxcfgt8bH4FfFx+C7
ZX8MfmB8DH5MfAx+Y3wMflJ8DDavhM0r4Y/Gx+Cz4mPwi+Jj+ufFx2D7Y7B5
JWxeCZtX6s8bH9P8+Jjmxcdg+2OaFx/TvPiY5mVeCZtXwuaVsHklbH8MNq+E
zSth80rNi49pXnxM8+Jjmhcf07z4mObFxzQvPqZ58THNi49pXnxMP2/iY5oX
H9O8+Jjmxcfg18bH4CviY6bvg7L+GKw/BuuPwfpjsHvX2L3r6fuurD8G64/B
+mP6+xUf08+H+Bjs3vX0fb7WFx/T+uJjWl98TOuLj2l98TGtLz6m9cXHtL6T
f79U5mNO+KxFfwzmYzAfg/kYrD8G8zGYj8F8DNYfg/kYzMdg/TGYj8F8TOuL
j2l98TGtLz6m9cXHtL74GMzHYD4G2x+D9cdgPgbzMfih8TFYf0zz4mOaFx/T
nzc+pnnxMX2942P6+sbHtL74mPH9cX1Zf8z4/K9b8+Jjxud7bdk+3+bFx4zP
65o1Lz5mfB4r64/BfAz+lvgYrD9mfP2uKj87PqY/b3wM1h/T5xsfg+2P6fOL
jxnruaTMx2D7Y8af76IyH4P5GHyf+Bj8Z/ExmI/B58TH4NvjY8b//uz19yc+
Bp/5P0mX/O4p/HPxMfjn42PwW+Nj8IviY/Ab42MwH4M/kv6Y8Z+/oPzA+Jjx
z7uo/Jj4GHxjfAy+ID4G2x+D+RjMx2A+Brt3jfkYzMc0L/0x2P6Y5sXHNC8+
pq9HfAzmYzAfg+2PwXzMWO+1688fHzPWvzIf07z4mOZlf0zz4mOaFx8zvl43
rnnxMc2Lj2lefEzzsj+mn3fxMc2Lj2lefMz4eq/Mx4yv/y1lPgbzMZiPGZ/P
ynzM+LxWdu96+v4r8zHj81yZjxmf78p8zPi8by/zMa0vPqb1xceM74eV+Zjx
/bHyX8bHtL74mNZ30v9bvmOcV1quG+eVlmleqT4G/9dxXmn5zXFeaZnmlepj
8HeM80rLY8d5pfoY/AXjvNLy6eO8Un0MvmOcV1quG+eVlmleqT6m9Y3zSstv
jvNKy1+P80rLNK+0TPNK9TH4P47zSss0r7RM80r1Mc0b55WW/zbOKy3TvNIy
zSst07yS/3+01jfOKy3H47zSMs0rLb84zist07zSMs0rLdO80jLNKy3H47zS
Ms0rLfcY55WWaV5pmeaVlmleqT4Gnz3OKy3/dpxXWu4+zist07zSMs0rLdO8
Un0M/q1xXmmZ5pWWaV4pn+dvXn/+cV5p+ZZxXml52zivlO/DzistXzrOKy2f
Ps4rLeeN80rL+8d5peWPx3ml5RHjvNJyyzivtJw7zist/zTOKy0PG+eV8v3S
eaX8/aLzSsvjxnml/H2780rLNK+0TPNKy/PHeaXlxeO80nLzOK+0TPNKnnd5
mldapnmlZZpXWn5rnFdapnmlZZpX8n5e88Z5peXORw3zSstrx3mlZZpXWqZ5
pWWaV/L7Wp7mlZZpXmmZ5pWWaV5pmeaVlmleyefRmjfOKy3TvNIyzSstx+O8
0jLNKy3TvJLP2zVvnFdanjPOKy3njPNKy5XjvNLy4XFeaZnmlZZpXmmZ5pWW
aV6pPgbfPs4rLf84zist07zSMs0rLdO80jLNK9XH4O8d55WWnxrnlZZpXmmZ
5pWWaV5pmeaV6mNa3zivtPxjfEzri49pfSfz2dPvf/fBLO8Y98fUx+DXjftj
6mPwL437Y+pj8H8c98fUx+CvGffH1Mfgzxn3xyz3GPfH1MfgPxn3xyzvGPfH
1Me0vnF/TH0Mvue4P2aZ9scs0/6YZdofs0z7Y5Zpf8wy7Y+pj8HvG/fHLOaV
mjfuj1mm/TH1MX19x/0xy7Q/Zpn2xyzT/phl2h+zTPtj6mPG53l6en6np+d1
zfR8rp6ex8rT/pj6GDztj6mPwXxMn8+4P2Z56Lg/Zpn2x9THjPVeuj6/cX9M
fcz483d/zDLtj1mm/THLtD9meem4P2b5tHF/zPLhcX9M6u3+mPic7o9Z/mnc
H5P/v9X9Mcvrxv0x+ffWZ9sfs/yHcX/M8sJxf8zyx+P+mOX/GffHLG8e98fE
l3R/zPLxcX/M8rxxf8wy7Y9Zpv0xy+PH/THL9eP+mOVo3B+zfHLcH7NM+2OW
aX/MMu2PWab9Mcszxv0xy7Q/Zpn2xyzT/phl2h+zvGfcH7OcNe6PWS4c98cs
0/6YZdofs0z7Y5Zpf8wy7Y9Zpv0xy9G4P2aZ9scs0/6YZdofs0z7Y5Zpf8wy
7Y9ZzCs1b9wfs0z7Y5Zpf4zP3zVv3B+zvHjcH7McjftjlpvH/THLJx817I9Z
pv0xy7Q/Zpn2x9TH9PmO+2PqY/p+OX/YH7NM+2OWaX/MMu2PqY/B3zXuj6mP
wb8w7o9Zpv0xy7Q/Zpn2x9THjL8vK/Mxre/WEx/T+uJjxt/3D5T5mBtO9ust
5pUwH4P5GMzHYPNKmI/BfAzmY7B5JczHYD4Gm1fCfAzmY1pffEzri49pffEx
rS8+BptXwnwM5mOweSWsPwbzMZiPaV58DNYf07z4mObFx2A+pnnxMVh/DOZj
Wl98DOZjsP6Y5sXHNC8+pnnxMdi8UvPiY5oXH4P1x2A+BuuPwXwMNq+E9cdg
PqZ58TGYj8H6YzAfg80rYf0xzY+PwXwMNq+E+RjMx2A+ps8jPgZ/WXxMf5/i
Y/CN8TH4g/Ex+Or4GPzw+JjWFx+D/zA+BvMx+HPjY/AT42MwH4P5mP5+x8fg
Z8bH4I/Hx+DnxcfgF8THYD4GPzg+BptXwnwM5mMwH4PNK2E+BvMxzYuPwfbH
NC8+BvMx+Ir4GMzHYD4Gm1fCfAzmYzAfg80rNS8+pnnxMc2Lj2lefEzz4mOa
Fx/TvPiY5sXHNC8+pnnxMf39iI9pXnxM8+Jjmhcfg/kY/Nz4GMzH9PchPgbz
MZiPwXwM5mPwveNjMB+D+RjMx2A+BvMx/fyJj2l98TGtLz6m9cXHtL74mNYX
H9P64mNaX3xM64uPaX3xMa3v5L5BmY+581//f75ms9gfg/kYzMdgPgbbH4P5
GMzHYD4Gf0l8DOZjMB+D3bvGfAzmY1pffEzri49pffExmI/B7l33z4uPwXwM
tj8G649pvfExzYuPaV58DNYf07z4mObFx/T1jo9pXnxMX8/4mL5+8THj++H6
6flfNz3v66bne+30PE9Pz29l967H53P19DxW1h+D+RisPwbzMfhUfAzWH4P5
mObFx/T1jo/B+mP6/OJjsP0x+M/iY/C3xsfgXXwM/l/iY1pvfAy+V3wM/qv4
GPzH8TH4lfExmI/p6x8fgzfxMfjEx7zkFP6O+Bj8Q/Ex+F3xMfjX4mP6+xcf
g/kYzMdgPgZ/fnwMviA+Bj8uPgZfFx+Dz4uPwXwM/sb4GGx/DOZjMB+D+Rjs
3jXmYzAf07z4GGx/DOZjMB+Db4qP6fOLj8F8DLY/BvMxmI/BfAx277p58THN
i49pXnxM8+Jjmhcf07z4mObFxzQvPqZ58THNi4/B7l03Lz6mefExzYuP6fsl
PmZ8HreW+RjMx2A+pu+n+BjMx/T9Eh+D7xsfg/kYzMdgPgbzMZiPwXxM64uP
aX3xMa0vPqb1xceMvy8r8zGtLz6m9cXHtL74mNZ3cn+yPN27XqZ71/7+VZ7u
XS/Tvetlune9TPeul+ne9TLdu66PwdO962W6d71M966X6d71Mt27XqZ718t0
73qZ7l0v073rZbp3vbxuvHe9TPeul+nedX0Mnu5dtz+meeO96/qY5o33rpfv
Hu9dL9O962W6d71M967bH9P6xnvXy3TvepnuXS/Tvetlune9TPeul+ne9TLd
u16me9fLdO+6/TH4oeO96/bH4JeO967rY5o33rteLh7vXbc/BvMxeLp3vUz3
rutjmjfeu+68EjavhJ883rteLh7vXS//frx3vXzleO86f9/qvevlj8Z718tn
XTHcu05/7U+sr/d473o5Gu9dL68Y713n87f3rpcHjPeul68f713n3y/23nW+
X3vverlxvHe9/MB47zrfZ713vbxovHfdeaX+eeO963y/99718szx3vUy3bvW
T1We7l0v073rZbp3vXzxeO+680rNG+9dL9O96+Wc8d71cuV473r58Hjvepnu
XS/Tvetlune9TPeul+ne9TLdu16me9fLdO96me5dL9O9a/1+a95473qZ7l0v
073r5bPHe9edV2reeO96me5dL7833rterhrvXS9/Od67ro/p+3+8d71M966X
6d71Mt27XqZ718t073qZ7l0v073rZbp3vUz3rpfp3vUy3btepnvXy3Tvepnu
XS/TvetlundtPnqtLz6m9cXHtL74mNYXH9P64mNa38Pvff0DLlt57I/ZTv0x
22W8r7RdxvtK26k/Zjv1x2yX8b7StvNKeOyP2U79MdvOK+GxP2Y79cdsl/G+
0nbqj9lO/THbZbyvtF3G+0rbzivhi4f+mO1y9tAfs536Y7b1MXjsj9ku9xj6
Y7ZTf8y2PgaP/THbzis1b+iP2U79Mdv6mL5+Q3/MduqP2U79MdupP2Y79cds
p/6Y7dQfs536Y7b1Mc0b+mO2U3/MduqP2U79MdupP2Y79cds62Pw2B+zzb/P
uXzNG/pjtlN/zHbqj9lO/THbzivhsT9m23kl/KVDf8y280rj63le+f1Df8x2
uXzoj9kuvzf0x2yXO4b+mG36Yc4uXz30x2zjY37sFP7poT9mu/zs0B/zP+oZ
+mO28RnnlM8d+mO26ac5t5x73uUXDf0x284r4TcO/THb/P/vU+Ubh/6YbeeV
8MeH/pht/v506ZR/WfmmoT9mu3zx0B+z7bwSvnDoj9l2Xgk/aeiP2XZeqXlD
f4zPq6vLR0N/zDb/vuya8ifPv2t/zLbzSs0f+mO2nVcaP/9XftPQH7PtvBI2
rzS+PjeseUN/zLbzSs0b+mO2nVdq3tAfs+28UvOG/pht55WaN/TH9PN7zRv6
Y7bpT7plzRv6Y7b1Mfi1Q39Mv3/Kx0N/zHZ579Afs13+auiP8ftwW/l+Q3/M
dvmioT+m36/lJw/9Mdvl6UN/zHb5kaE/Zrs8Z+iP2S4vHvpjtss5Q3+M74uV
j4f+mO3y3qE/Zrv81dAfs42/W/l+Q3/MNj7vA2t98TGt78z7aWU+5hvu+NWL
f+ZhF7Q/BvMxmI/BfAzWH4P5GMzHYD4G64/BfAzmY7D+GMzHYD6m9cXHtL74
GMzHYD4Gu3eN+RjMx2D7Y7D+mObFxzQvPqZ58TFYf0zz4mOaFx+D+Zjmxcdg
/TGYj2l98TGYj8H6Y5oXH9O8+Jjmxcdg+3yx/hjMx2D9MZiPwfpjMB+DvyU+
pnnxMc2Lj2lefEzz4mOaFx/TvPgY/F/iY/C94mPwj8fH4D+Lj8H/Lj6mP198
DP7O+Bj8VfEx+HPjY/CV8TGYj2l92R+DfyA+Bl8QH4N/Oz4Gfzg+Bn9hfAzm
Y/r7GR+D+RjMx/TniY/B/5T+GMzHlONj+ufFx+AHxsdgPqb1xsfgj6c/pj9v
fEzz4mOaFx/TvPiY5sXHNC8+pnnpj8H2x/R5xsf09Y+P6fONj8F8DOZjsP0x
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
SsfTfaXj6b7S8XRf6Xi6r3Q83Vc6ro9pfcN9pePpvtJxfUzri49pffEx4/tv
ZT6m9Z15P67Mx1y3+7Inv+lu7+y8EuZjMB+D+RhsXgnzMZiPwXwMNq+E+RjM
x2DzSpiPwXwMNq+E+Zjmxcc0Lz6mefExzYuPaV58TPPiY5oXH9O8+Jjmxcc0
Lz6mefExzYuPaV58TPPiY5oXH4P5GKw/BvMxWH8M5mOw/hjMx2D9MZiPaV58
TPPiY5oXH9O8+Jjmxcdg/TGYj8F8DL4tPgY/JT4G64/BfAzWH4P5GMzH4LvF
x5TjY8rxMfjK+Bj8mviYPu/4mObHx+DHxsfgbXwMfkx8DL45PgabV8IfjY/B
vx4fg80rYfNK2LwS/uH4GHxhfAz+RHwMfnx8DHbvuj9/fAw2r9R64mOweSVs
XgmbV8JXxcdg80rYvBI2r4S/Kz4Gm1dqXnwMdu+6efExzYuPaV58DDavhPXH
YD6mefEx2LwS1h+D+Zjmxcc0Lz6mefExzYuPaV58TN9f8TGYj8HmlbB5Jaw/
BruvhN1Xwu4rYfeVsPtK2H0lzMdgPgbzMa0vPqb1xcdgPga7r4T5mNYXH9P6
4mNaX3xM64uPaX3xMa0vPqb1xce0vviY1hcf0/riY1pffEzri49pffExrS8+
pvV91ff/4hf+wcp8zKvO3HN6V+eVMB+D+RjMx2DzSpiPwXwM5mOweSXMx2A+
BptXwnwM5mOaFx+D+Zjmxcc0Lz6mefExzYuPaV58TPPiY5oXH9O8+Jjmxcc0
Lz6mefExzYuPaV58TPPiY5oXHzM+j5X1x2A+BuuPwXwM1h+D+RisPwbzMc2L
j2lefEzz4mOaFx+D+RisPwbzMZiPwa+Ij8H3iY/B+mMwH4P1x2A+BvMx+JL4
mP7vM6+EzSvhX4mP6T8fH4OfEx/Tnyc+Bp+Oj8EfjY/Bz42PwQ+Oj8HmlfC/
iY/B18THYPNK2LwSNq+Ez4qPwTfFx+AHxcfgH4yPwfbHYPNK2LwSNq+EzSv1
54mPGetZ2f4YbF4Jm1fC5pWw/TFj/SubV8L2xzQvPqZ58THNi4/B5pWw/pjx
9VvZ/pi+PzOvhPXHYD6mefExzYuPaV58TPPiY5qXeaX+8/ExmI/B5pWweaXx
ea3s3nXzss8Xu3fdeuNjsHvXrT8+BvMxfT3iY/r7Gh/T+uJjWl98TF+v+Jh+
/sTHjO+PlfmY1hcf0/riY1pffEzri49pffExrS8+Znx/rczHjO+3D631xceM
77+Vr4yPGd+PK5/8/XplPuYHbrryZV/19X/c/TGYj8F8DOZjsP0xmI/BfAzm
Y/Afx8dgPgbzMfh74mMwH4P5mObFx2A+pnnxMc2Lj2lefEzz4mOaFx/TvPiY
5sXHNC8+pnnxMc2Lj2lefEzz4mOaFx/TvPiY5sXHYP0xmI/B+mMwH4P1x2A+
BuuPaV58DLbPt3nxMc2Lj2lefEzz4mOw/hjMx+D/HB/T93d8DOZj+v6Oj8F8
DNYfg/kYbH8M1h+D+ZhyfAy2PwbbH4P5mObHx+BHxMdgPgbbH4Ovjo/BfAy2
PwbzMfj58TGYj8F8DLY/BvMxmI/BfEzz4mMwH4P5mNYTH4Pdu8Z8DOZjsP0x
mI/BfAzmY7B715iPaV58TPPiY7D9Mc2Lj2lefEzz4mP6foqP6fspPgbrj2le
fAzmYzAfg/XHNC8+pnnxMc2Lj2lefEzfX/ExmI/B+mMwH4P5GKw/BvMxmI/B
fAzmYzAfg927xnwM5mNaX3xM64uPaX3xMZiPwe5dYz6m9cXHtL74mNYXH9P6
4mNaX3xM64uPaX3xMa0vPqb1xce0vviY1hcf0/riY1pffEzri49pfT/2r376
/XeuPN67Pkz3rg/+/WJ5vHd9mO5dH6Z714fp3vVhund9mO5dH+pj8NnDvevD
dO/6MN27Pkz3rg/TvevDdO/6kH7pm9a84d71Ybp3fZjuXf+PvOHe9WG6d32Y
7l0f6mOaN9y7PnReqXnDvetDfUzzhnvXh/qY8flcveYN964P9TH4JcO960N9
DL7ncO/6UB+DnzXcuz7UxzRvuHd9qI9p3nDv+pD7029f84Z714fltuHe9aE+
BptXwnwM5mPwpw33rg+5X31u+ZLh3vWhPgabV8J8TP/54d71IT7mRaeweaW+
H4Z714fluuHe9SE+5Zzy64d714f8+6lzy58Y7l0fsr/lgvK/Gu5dH/L/ly4q
m1fC1w/3rg/tj8HmlbD+GKw/Br9nuHd9iG+4ovyM4d71IfuGryqP964P073r
w3Tv+jDduz5M964P073rw3Tv+pD/P3+6PN67Pkz3rg/TvetD55WaN9y7PrQ/
pnnDvetD55WaN9y7PrQ/pnnDvetDfUzzhnvXh/qY5g33rg/1Mc0b7l0f6mOa
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
j8xj9IvyGH1lHqPvlsfoJ+Uxm5fH6FvzmM3LYzYvj9m8PEa/OI/Rzsdo52P0
X+cx+h55jHY+Rj85j9GeH6N5jOYxmsdon3eteYzmMZuXx2xeHrN5eczm5TGb
l8dsXh6zeXnM5uUxm5fHbF4es3l5jPZ513t95zH7/fIY7fkxmsdoHqN5jPZ5
15rHaB6z/fMY7fOVNI/RPGb75TGax+z1l8doHqN5jOYxe3/JYzSP2X55zPbL
YzSP2X55jOYxmsdoHrPvXx5z+vo7msdsvzxm++Ux2y+P2X55zPbLY7ZfHrP9
8pjtd+a/x4/mMU976+/c75c/+IHdV9I8RvMYzWO0+0qax2geo3mMdl9p8/KY
zctjNi+P2bw8ZvPymM3LY7ZfHrN5eczm5TGbl8dsXh6zeXnM5uUxm5fHbF4e
s3l5jOYxmsdo95X0t+Ux2vkYzWM0j9HOx2geo52P0Txm8/KYzctjtPMxmsdo
HqOdj9E8Rjsfo3mMdj5G8xjNY/Tt8xh9dh6jnY/RPGadx+z7ncdoHrPfL4/R
7ivtn+cx+uo8Rl+Qx+gv5DHafSX9kjxm++cx2zeP0T7vWruvpN1X0u4rafeV
9ufPY7T7SpuXx2xeHrN5eYz2/Bjt8661+0rafSXtvpJ2X0m7r6TdV9q8PGbz
8pjNy2M2L4/ZvDxm8/KYzctjtM+73rw8ZvPymM3LY/bzkcdo52M0j9m8PEa7
r6Sdj9E8RruvpJ2P0TxG+7xr7b6Sdj5G8xjtvtJ+fvKYvX/kMdrnK2mfr7T9
8pjtl8don6+kfb6S5jHbL4/ZfnnM9stjtl8eo3mM9vlKmsdsvzxm++Ux2y+P
2X55zPbLY7ZfHrP98pjtl8dsvzxm++Ux2y+P2X55zPbLY7ZfHrP9rvjhh774
lqN5zEe/fM+zvvjEK3dfSTsfo52P0e4rafeVtPMx2vmYzctjtPtKm5fHbF4e
s3l5zOblMZuXx2xeHrP98pjNy2M2L4/ZvDxm8/KYzctjNi+P0Txm8/KYzctj
NI/RPEafl8fos/IY/fY8RvMYzWP29c9jNI/RP5jHaB6zeXmM5jH60XmM5jGa
x+iL8hjNY/QteYzmMfqSPEbzGM1jtn/nY/RXPOaSt+/rncdoHqPfksdoHqN5
jH5PHqM/n8fo5+Qx+u55jH5DHqMfnMfoP8pj9JvyGP2lPEafm8fol+Qx+qo8
Rp+dx+zrkcdsXh6zeXmM/p48ZvPymM3LY/bP85jTfY52PkY7H6PvmcfoR+Yx
2vmY0/2PflMes3l5zOblMZuXx2xeHrN5eczm5TGnX7+jP5zHbF4es3l5zObl
Mfon8xj9S3mM/q08ZvPyGP3lPEY7H7PXdx6jeYzmMaffr6M9P2Y/f91X0s7H
aB6jeYzmMdrzfLXPu9Y+73r75THbL4/ZfnnM9stjNI/ZfnnM9stjtl8es/3y
mO2Xx2y/PEbzmO2Xx2y/PGb75THbL4/ZfnnM9stjtl8es/3ymO2Xx2y/PGb7
5THbL4/ZfnnM9stjtt+Z1/NNax7z8Ec+78Pnf/7KPT9G8xjNYzSP0Z4fo3mM
5jGbl8foP8pjNi+P2bw8ZvPymM3LYzYvj9m8PGb75TGbl8dsXh6zeXnM5uUx
m5fHbF4eo6/IYzYvj9Fn5TH68jxGPzWP0ffJY/QNeYx+RR6jz8tj9G3zGP32
PEb/TB6j753H6OvymM3LY/Sr8hj9tXmM/tk8Rn8yj9GPzmP0O/OYfT/yGP3Q
PEZ/Yx6jb8lj9uvzmHUes6//L37FY/RL8hj93DxG35jHbN88Rt8vj9FvyGP0
g/OY/TzkMfrH8xj9+TxGPyeP0c/PYzSP0Txmv38eo9+Ux+gv5TH6e/IY/YI8
ZvPymM3LY/QFeczm5TGbl8doHqPflcfs65/HaOdj9vXPY/T5eYx2Pmbz8pjN
y2M2L4/ZvDxm8/KYzctjNi+P2bw8ZvPyGM1jNi+P2bw8ZvPyGP3zeYx+TR6j
/yCP2bw8Zq/3PEa/Mo/Rr89j9vOTx2ges/erPGav5zxm74d5jL5LHrP3vzxm
P795jOYx2vkYzWO2Xx6z/fKY7ZfH6HfkMfq9eYzmMZrHaB6jeYzmMZrHaJ93
rXnM9stjNI/RPEbzGM1jtM+73n55zPbLY7ZfHrP98pjtl8dsvzxm++Ux2y+P
2X5fc4fvesy5N62dj7nkBZ99w1ue/cGdj9FvzWP0f8ljtPMx2vkY/a15jL5N
HrN5eYx2Pmbz8pjNy2M2L4/ZvDxm8/KYzctjtl8es3l5zOblMZuXx2xeHrN5
eczm5TGax2xeHqOvy2M0j9E8Rjsfo52P0RfmMZrHaB6jX5bHaB6j/1Yeo3mM
viGP0TxGX57HaB6jeYw+K4/RPEa/O4/RPEb7fKXNz2O2fx6zX999Je35Mfpp
eYzmMfpZeYzmMZrH6FvzGP28PEY7H6Mvy2P0w/MY/cd5jP7NPEb/TR6jnY/R
nh+jP5TH6HvmMdr5GO18zOblMZuXx2jnYzYvj9GeH6Odj9HOx2jPj9GeH6Od
j9HOx2xeHrN5eczp1+Non3et3VfSzsdoHqPdV9LOx2xeHrN5PT9m8/KYzctj
Ni+P2bw8ZvPymNOv/zXHvJ4fs38/j9nrO4/Z75fHaPeVtPMx2vmYzctjNI/Z
vnmM5jHa82O0+0ra+RjNY7ZfHrP98pjtl8fs/SePOX19HM1jTl8vR/OY09fP
J4798pjT19PRj81jNI/ZfnnM6evtU8d+eczp6+9oHnP6ejyax5y+Pj997JfH
nL5ej+Yxp6/fox+bx2y/PGb7nfnv86M/m8d83Z+c/wvf+A1XPeSKPEb/Wh6j
fzGP0T+Sx+jvzmP0N+Qx+rN5zOblMfrX85jNy2M2L4/ZvDxm8/KYzctjNi+P
2X55zOblMZuXx2xeHrN5eczm5TGbl8doHqNvm8fod+QxmsdoHqOvy2P0K/MY
/YN5zOblMZrH6AvzGM1j9MfyGM1j9EV5jOYx+ml5jOYxmsfoy/MYzWP0/fMY
zWP2581jNI9Z5zHafSX9zDxm++YxmsfoO+YxmsdoHqMfnsfoP85j9L/OY/Rf
5TH6eXmMfmEeoz+Qx+h75jH6SXmM/s08Rv9NHqMfmcfoF+Ux+so8ZvPymM3L
Y/Sleczm5THa83y15/nqT+cx2vkY7XyM/qE8Rj8jj9m8PGbz8ph9v/MY7fkx
2n0l7b6S5jHafSXtvtLm5TGbl8dsXh6zeXnM5uUxm5fHbF4es3l5jHY+Rjsf
o91X0u4r7fWcx2geo3mMdj5GOx+j3VfS7itpHqN5zN5P85j9/OQx2y+P2X55
zPbLY/T78hh9fR6jfd619vlK2vN8tef57v0pj9l+ecz2y2P2/prHbL88Zu/P
eczej/KYvd/mMfv+5TH7/uUx2y+P2X55zPbLY7ZfHrP98pjtl8dsvzxm++Ux
2+9h7/rHd33Z0Tzmwm+6/F887eKrdl9J8xjNYzSP0e4raR6jeczm5THafaXN
y2M2L4/ZvDxm8/KYzctjNi+P2X55zOblMZuXx2xeHrN5eczm5TGbl8do52M0
j9E8RruvpJ2P0TxGPzWP0Txm8/IY7XyM5jHa+RjNY7TzMZrHaOdjNI/R7itp
52M0j9HOx2geo52P0TxGu6+07nyM5jH6R/MYzWO08zGax2z/PEY7H6N5jOYx
2n0lfW4eo3mM5jHafSXNY7T7SvoDeYzmMZrHaB6j3VfavDxm8/IY7b6S5jGa
x2geo91X0jxG8xjNY/SL85jNy2M2L4/RzsdoHqN5jOYx2vkYzWM0j9m8zsds
Xh6zeXnM5uUxm5fHbF4es3l5zOZ1PkbzmL2+85j9fnmMdj5G8xjNY7T7SprH
bN88RvOY7Z/HaB6jeYx2X2n75THbL4/ZfnnM9stj9vXLY/SNeczeX/KY7ZfH
nL5+PnHsl8ecvp6O5jGnr6+jecz2y2O2Xx5z+vo7msecvh6PvjGP2X55zPbL
Y05fr0fzmNPX79E85vT1fNOxXx6z/c68vo/mMR/8kW+911XnXP2QX89jNI/R
PEbzGH3nPEbzGM1jNi+P0c/OYzYvj9m8PGbz8pjNy2M2L4/ZvDxm++Uxm5fH
bF4es3l5zOblMZuXx2xeHqOdj9E8RvMY/e15jHY+RvMY/ag8RvOYzctjtPMx
msdo52M0j9HOx2geo52P0TxGn5/HaOdjNI/RzsdoHqOdj9mvz2P0M/MY7XzM
/nkes85jNI/ZvnmM5jH6dXmMdj5G8xjNY/Tn8hj9/DxG8xjNY/Rd8xjNY/Sl
eYz+Yh6jeYzmMZrH6LvlMZuXx2xeHqNvzWM0j9E8RvMY/XfzGM1jNI/RPEa/
Oo/ZvDxm8/IY7XyM5jGax2geo52P0Txmr688ZvPymM3LYzYvj9m8PGbz8pjN
y2M2L4/RzsdoHqN5jOYx2udd7/0qj9E8Zu+HeYzmMZrHaB6jfd615jF7P81j
tl8eo32+0vbLY7ZfHrP98hjNY/Rf5DGax2ges/f3PGbvV3nM3s/zmO2Xx2y/
PEbzmO2Xx2ges/e/PGbvR3nMvn95zL5/ecz2y2O2Xx6z/fKY7ZfHbL88Zvvl
Mdsvj9l+ecz2e/rTv+WGTx7NYx702hd96bt+7+o9P0bzGM1jNI/Rnh+jeYzm
MZuXx+ifzmM2L4/ZvDxm8/KYzctjNi+P2bw8ZvvlMZuXx2xeHrN5eczm5TGb
l8dsXh6j3VfSPEbzGH27PEZfnsdoHqO/PY/RPGbz8hjt+TGax2jPj9E8Rnt+
jOYx+n55jOYx+vZ5jPb8GM1jtOfH7N/PY/br8xjNY9Zn/vfGt+uz8xjNY/bn
zWM0j9EX5THbP4/Rnh+j3VfSPEbzGO35MdrzYzSP0TxGPyyP0TxGe36Mvmse
o3mM5jGax+iH5zGbl8dsXh6jPT9G8xjNYzSP0Z4fo3mM5jGbl8foy/KYzctj
Ni+P0e4raR6jeYzmMdp9Jc1jNI/ZvDxm8/KYzctjNi+P2bw8ZvPymM3LY7Tn
x2geo3mM5jH7/fMYzWM0j9GeH6N5jOYx2z+P0e4raR6jecz2y2O2Xx6z/fKY
7ZfHbL88RvOYfT37fCXNY7ZfHrP98pjT19PRPOb09XX0z+Uxmsdsvzxm++Ux
2y+POX09Hs1jTl+fnz72y2O2Xx6z/fKY09fv0Tzm9PV807FfHrP98pjtd+a/
1z+z5jGvvvEv/vfLH/Whhzw7j9E8RvMYzWP0/81jNI/RPGbz8hj9+Dxm8/KY
zctjNi+P2bw8ZvPymM3LY7ZfHrN5eczm5TGbl8dsXh6zeXmMvl0eo91X0jxG
8xj9Z3mMviiP0Txm8/IYzWM2L4/R98ljNI/Rr8xjNI/Rt89jNI/RN+Yxmsfo
d+cx+oI8RvMYfXYeo3mM/tE8RvOYdR6zX5/H7J/nMfpjeYzmMfv65TGax+gH
5jHafSXNYzSP0b+Qx2jP89U8RvMY/WN5jOYx+tY8Rj8sj9m8PEbzGM1j9BPz
mM3LYzYvj9GvzmM0j9E8RvMYfU4eo3mM5jGbl8fo389jNi+P2bw8RruvpHmM
5jGax2j3lfbzkcfs5ymP2bw8ZvPymM3LYzYvj9m8PGbz8hjNY/bznsdoHqN5
jOYx+vo8RvMYzWO0+0qax2geo3mMfkIes/e3PGb75THbL4/RPu96++Ux2y+P
2X55jOYx+mvyGM1j9v6ex+z9LY/Z+3keo3nM9stjtl8es78f8pjtl8fs7588
RvMYzWP2/ctj9v3LY7ZfHrP98pjtl8dsvzxm++Ux2y+P2X55zPbLY7bfb933
m//nd39m7XzM7c75V6/5y2s/NI/R35/HaPeVtPMxmsfot+Yx2n2lzctjNI/Z
vDxm8/KYzctjNi+P2bw8ZvPymO2Xx2xeHrN5eczm5TGbl8dsXh6jnY/Rr8hj
9A/mMdp9Je18jPb8GO18zOblMdp9pc3LY7T7SvpteYx2X0mfl8do95X0ffIY
7b6Sdl9JOx+j3VfSr8pjtPtK2udda/eV9uu7r6Sdj9E+X2n75DHa513r1+cx
2n0l7b6Sdj5G3y2P0ZfmMdp9Je18jH5zHqN93rX2edfafSXtvpJ2Pkb7vOvN
y2O0+0ra+RjNYzYvj9HOx2geoz+cx2j3lbTzMZrHaJ93vXl5zOblMZrHbF4e
s3l5jOYx2udda/eVTr9+R/OYvT67r6Sdj9m8PGbz8pjNy2M2L485/fpfc8zr
vtL+/TxG8xjt8661+0qn36+jeczmdV9JOx+zffMY7fOutftK2vmY0+/3DcfP
ax6z/fKY7ZfHaJ+vtP3ymO2Xx2y/POb09XK0z7vW/zCP0T5fSXuer/b8mNPX
19HOx5y+3j61fm0es/3yGO15vtrzY7T7Sqevz08f3788ZvvlMdsvj9l+ecz2
y2NOX883HfvlMaev76Nfm8dsvzOv96Odj/mp//DOp/7Lp3x4HqMfkMdo95W0
8zGax+hfy2O0+0qbl8doHrN5eczm5TGbl8dsXh6zeXnM5uUx2y+P2bw8ZvPy
mM3LYzYvj9HuK2nnY/TP5DH63nmMdl9JOx+jPT9m8/KYzctjtPtKm5fHaPeV
9MvyGO2+kj4rj9HuK+kb8hjtvpJ2X0k7H6PdV9K3z2P2581j9Nl5jHZfSbuv
pJ2P0T5fSXue7+bnMfpBeYx2X0m7r6Sdj9FPzGP0rXmMdl9JOx+jP5TH6Hvk
Mfon8hjtvpJ2X0k7H7N5eczm5THafSXtfIzmMZuXx2jnYzSP0Z7nq91X0s7H
aB6jPc938/KYzctjNI/ZvDxm8/IYzWP2espjtPtK2vkYzWO0+0ra+ZjNy2M2
L4/ZvDxm8/KYzctjtPtK2vkYzWP285rH7PWcx+znPY/RPEa7r6Sdj9E8Zj+/
eYx2X0k7H6N5zPbLY7ZfHrP98pjtl8dsvzxm++Ux2y+P2fthHqPvksdoHrP9
8pjtl8dsvzxm++Uxmsfs74c8Zu9Hecz2y2O2Xx6z/fKY7ZfHbL88ZvvlMdsv
j9l+ecz2y2O2Xx6z/fKY7ZfHbL88ZvvlMdvv5o/f4cIXHc1j3v+73/Z9v/1V
H9n5GM1jNI/RPEY7H6N5jOYxm5fHaOdjNi+P2bw8ZvPymM3LYzYvj9m8PGb7
5TGbl8dsXh6zeXnM5uUxmsdo52O058doHqN5jHY+Rt8nj9m8PGbz8hjNYzYv
j9HuK2keo91X0jxGu6+keYx2X0nzGO18jHZfSfOYzc9jNI/Zr+++kuYx2vkY
/cY8RvMY/ao8RvMY7b6S5jHa+Rjteb6ax2geo52P0Z4fo3mM5jHafSXNY7Tz
MZuXx2xeHqN5jOYx2vkYzWM0j9HOx2geo3mM5jHa+ZjNy2M2L4/ZvDxGOx+z
eXnM5uUx2vkYzWM0j9E85vTr+eE1j9E8ZvPymM3LYzYvj9m8PGbzOh+zfz+P
0Txmv18eo3mM5jGax5x+/65b85jtm8do52M0j9E8RvMY7XzM9stjtl8es/3y
GO3zlbZfHrP98pjtl8doHnP6+vnEmsdoHqN5jOYxez/KY05fb5869stjNI/Z
fnmM5jGax+z9M4/Z9y+POX29Hs1jtl8es/3ymO2Xx2y/POb09X208zHbL4/Z
fmf++/1oHvOA2770rnd+yUd2PkbzGM1jNI/RzsdoHqN5zOblMdr5mM3LYzYv
j9m8PGbz8pjNy2M2L4/ZfnnM5uUxm5fHbF4eo3mM5jHa+Rjt+TGax2geo52P
0WflMZuXx2xeHqN5zOblMdp9Jc1jtPtKmsdo95U0j9HuK2keo52P0e4raR6z
X5/HrPMY7b6S5jHrPGZ//jxG8xh93zxG8xjtvpLmMdr5GO15vprHaB6jnY/R
nh+jeYzmMdp9Jc1jtPMxm5fHbF4eo3mM5jHa+RjNYzSP0c7HaB6jeYzmMdr5
mM3LYzYvj9m8PEY7H7N5eczm5THa+RjNYzSP0Txmr688RvMYzWM2L4/ZvDxm
8/KYzctjtPMxmsdoHqOdj9nrOY/RPGav5zxm7095jOYxmsdo52P2fpfHaB6z
97c8ZvvlMdsvj9l+ecz2y2O2Xx6z/fKY7ZfHbL88RvOYvb/nMXt/ymO2Xx6z
/fKY7ZfHbL88Zn8/5DH69XnM3v/ymO2Xx2y/PGb75THbL4/ZfnnM9stjtl8e
s/3ymO2Xx2y/PGb75THbL4/ZfnnM9stjtt+9fuWsB1x7NI/5rz9w6y1PvftH
d19J8xjNYzSP0e4raR6jeczm5THafaXNy2M2L4/ZvDxm8/KYzctjNi+P2X55
zOblMZuXx2xeHqN5jOYx2n0l7fkxmsdoHqPdV9I35DGbl8dsXh6jeczm5THa
fSXNY7T7SprHaPeVNI/R7itpHqPdV9LuK2keo91XWucx2n0lzWP2581j9NPy
mP3zPGbz8xjNY7T7SprHaPeVtM9X0jxG8xjtvpL2/BjNYzSP0e4raR6j3Vfa
vDxm8/IYzWM0j9HuK2keo3mMdl9J8xjNYzSP2bw8ZvPymM3LYzYvj9H3yGM2
L4/ZvDxGu6+keYzmMZrHaPeVNI/RPGbz8pjNy2M2L4/ZvDxGu6+kecx+vzxG
u6+keYzmMZrHaPeVNI/RPGb75zGax2geo3nM9stjtl8es/3ymO2Xx2ifr7T9
8pjtl8dsvzxmr9c8Rn9HHqN5jOYxmsdoHqN5zPbLY05ff0fzmO2Xx2ges/fP
PEbzmH3/8ph9//KY7ZfHbL88ZvvlMdsvj9l+ecz2y2NOX+9H85jtd+b1f/Oa
x9zmpY9/55Vv+OjuK2keo3mM5jHafSXNYzSP2bw8RruvtHl5zOblMZuXx2xe
HrN5eczm5THbL4/ZvDxm8/IY7b6S5jGax2j3lbTnx2geo3nM5uUx+vI8ZvPy
mM3LYzSP2bw8RruvpHmMdl9J8xjtvpLmMdp9Jc1jtPtK2n2l/fo8RruvtK9H
HqPdV9qvz2O0+0r6rDxG8xh9SR6jeYx2X0nzGO2+kvb5SprHaB6j3VfSnh+j
eYzmMdp9Jc1jtPtKm5fHbF4eo3mM5jHafSXNYzSP0e4raR6jeYzmMZuXx2xe
HrN5eczm5TH6nDxm8/KYzctjtPtKmsdoHqN5jHZfSfMYzWM2L4/ZvDxm8/IY
zWP2857HaB6jeYx2X2nvV3mM5jH7+cljtPtKmsdoHqPdV9I8Zu9vecz2y2O2
Xx6z/fKY7ZfHbL88ZvvlMdsvj9l+ecz2y2M0j9n7Qx6z9/M8ZvvlMdsvj9l+
ecz2y2M0j9nfP3mM5jHbL4/ZfnnM9stjtl8es/3ymO2Xx2y/PGb75THbL4/Z
fnnM9stjtl8es/3ymO2Xx2y/J5z35S+fc/Oax1xw9btf/p0P/tM9P0bzGM1j
NI/Rnh+jeYzmMZuXx+hr85jNy2M2L4/ZvDxm8/KYzctjNi+P2X55zOblMZuX
x+g/y2M0j9E8Rnt+jPb8GM1jNI/ZvDxGX5THbF4es3l5jOYx+sY8Rnt+jOYx
2vNjNI/Rnh+jeYy+Ko/RPEafncdoz4/RPGbd82P27+cx+rw8Zn/ePEb/uzxG
vyKP2fcnj9G35DGax+g75TGax2jPj9E+71rzGM1jtOfHaM+P0TxG8xj9Y3mM
5jHa82M2L4/ZvDxG8xjNY/RleYzmMZrHaM+P0TxG85jNy2M2L4/ZvDxm8/KY
zctj9CPymM3LYzYvj9GeH6N5jOYxmsdon3eteYzmMZuXx2xeHrN5eYzmMfo1
eYzmMZrH7PfPYzSP0TxG8xj9D/IYzWM0j9GeH6N5jOYx2y+P2X55zPbLY7Zf
HrP98hjt85W2Xx6z/fKY7ZfHaB6z128eo3mM5jGax2geo3nM9stjtl8eo3nM
9stj9v6Zx2geo3nMvn95zL5/ecz2y2O2Xx6z/fKY7ZfHbL88ZvvlMdsvj9l+
ecz2O/Pf80c7H/O+u9/3yS+74k/nMfoP8xjtvpJ2PkbzGP2APEa7r7R5eYzm
MZuXx2xeHrN5eczm5TGbl8dsXh6z/fKYzctjtPMxmsfoC/MY7b6Sdj5G+7xr
7fOVNi+P2bw8Rnue7+blMZuXx2j3lbTzMdp9pf3+eYx2X0mfl8do95X0+XmM
dl9Ju6+knY/R7ivpr8pj1t1X0q/KY7T7Stp9pc3PY/bny2P0G/MY/dA8Rl+Z
x2j3lbT7Str5GP3iPEZfncdo95W08zH6zXmM/us8Rj8ij9HuK2n3lbTzMZuX
x2xeHqPdV9LOx2geo91X0s7HaB6jfziP0e4rbV4es3l5zOblMZuXx2xeHqN5
zOblMZuXx2geoz+Tx2j3lbTzMZrHaPeVtPMxm5fHbF4eo91X0s7HaB6zn9c8
Rjsfs5/3PEb/ZR6j3VfSzsdoHrOfnzxGOx+jeYz2edfbL4/ZfnnM9stjtl8e
s/3ymO2Xx2ifr7T98pjtl8dsvzxG+7xr7fOu9/6Qx2ifr7T3hzxm7895jHZf
afvlMdsvj9F/lsdsvzxGe56v9vwY7b7Svn95zL5/ecz2y2O2Xx6z/fKY7ZfH
bL88ZvvlMdsvj9l+ecz2+9Wv/vy7nnO08zHf+cSXP/jzj7tmHqM9P0a7r6Sd
j9E8Rnt+jHZfafPyGM1jNi+P2bw8ZvPymM3LYzYvj9m8PGb75TGbl8do52M0
j9GeH6PdV9LOx2jPj9GeH7N5eczm5THa83w3L4/ZvDxGu6+knY/R7itpz4/R
7itpz4/R7itpz4/R7itp95U2P4/R7ivt1/f8GO2+kvb8GO2+knZfSTsfsz9v
HqO/kMfo5+Yx2vNjtPtK2n0l7XyMviyP0Z4fo91X0s7HaM+P0ffIY7Tnx2j3
lbT7Str5mM3LYzYvj9HuK2nnYzSP0e4raedjNI/Rnh+zeXnM5uUxm5fHbF4e
s3l5zOblMZrHbF4es3l5zL4eecxenz0/RruvpJ2P0TxGu6+knY85/fpfc8zr
+TH79/MY7XzMfr88RruvpJ2P0Txm83p+jHZfafvmMZrHaPeVtPMxp9/vG46f
1zxm++Ux2y+P2X55zPbLY7ZfHrP98pjt1+crbb88ZvvlMdsvj9n3N4/Rnuer
ecz2y2O2Xx6z/fKY7ZfH7P0qjzl9PR7NY05fn58+9stjTl+vR/OY09fv0Z7n
u/3ymO2Xx5y+vo/mMaev96N5zOnr/+Zjvzzm9OfhaB7zK6//mzs85sZrdj5G
8xjNYzSP0c7HaB6jeczm5THa+ZjNy2M2L4/ZvDxm8/KYzctjNi+P2X55jOYx
msdo52M0j9E8Rjsfoz0/ZvPymM3LYzYvj9Ge57t5eczm5TGax2jnY7T7SprH
aPeVNI/R7itpHqPdV9I8Rjsfs85jNI/R7itpHqPdV9I8Rjsfo1+fx2x+HqPf
m8doHqPdV9I8Rjsfoz+Yx2geo3mMdj5Ge36M5jGbl8do95U0j9HOx2xeHrN5
eYzmMZrHaOdjNI/RPEY7H6N5zOblMZuXx2xeHrN5eczm5TGbl8do52M2L4/Z
vDxGOx+jeYzmMZrHaOdjNI/RPGbz8hjNYzSP0TxGOx+jecx+3vOYvZ7zGM1j
NI/RPEY7H6N5jOYxe3/LY7ZfHrP98pjtl8dsvzxm++Ux2y+P2X55jPb5Stsv
j9l+ecz2y2M0j9FPyGP2/prH7P0hj9n7cx6jeczeb/OY7ZfHbL88RvOY7ZfH
aB6jecze//KYff/ymH3/8pjtl8dsvzxm++Ux2y+P2X55zPbLY7ZfHrP98pjt
d9Xbbnzh1UfzmGd+8dLPfeiffmznYzSP0TxG8xjtfIzmMZrHbF4eo52P2bw8
ZvPymM3LYzYvj9m8PGbz8pjtl8doHqN5jHY+RvMYzWO08zHa82M2L4/ZvDxm
8/IYfVYes3l5jHY+RvMY7XyMdl9J8xjtvpLmMdp9Jc1jtPtKmsdo52PW3VfS
PEa7r6R5jHZfSfOYzc9j9J/nMZrH6G/MYzSP0e4raR6jnY/Rf5XHaB6jeYx2
PkZ7fozmMZuXx2j3lTSP0c7HbF4eo3mM5jGax2jnYzSP0TxGOx+zeXnM5uUx
m5fHbF4es3l5zOblMZuXx2jnYzYvj9m8PEY7H6N5jOYxmsdo52M0j9E8ZvM6
H6N5jOYx+/3yGO18jOYxmsdo52M0j9m+eYzmMds/j9E8RvMY7XzM9stjtl8e
s/3ymO2Xx2y/PGb75THbr/Mx2y+P2X55zPbLY7ZfHqN5zL7feYzmMdsvj9l+
ecz2y2O2Xx6z10ces/f7PGbvn3nM9stjTl+vR/OY09fv0Tzm9PV807FfHrP9
8pjtl8ecvt6P5jGnr/+bj/3ymO2Xx+iv/Pf9LWsec+lFT/zI8579sd1X0jxG
8xjNY7T7SprHaB6zeXmMdl9p8/KYzctjNi+P2bw8ZvPymM3LYzSP0TxG8xjt
vpLmMZrHaPeVtOfHbF4es3l5zOblMfqGPGbz8hh9cR6jeYx2X0m7r6R5jHZf
SfMY7b6S5jHafaX9+jxGu6+k3VfaP89j1nnM/vx5zL6+eYzmMdp9Jf2gPEbz
mO2bx2geo91X0jxGu6+k757HaB6jeYx2X0l7fszm5TGbl8do95U0j9HuK21e
HqN5jOYxmsdo95U0j9E8RruvtHl5zOblMZuXx2xeHrN5eczm5TGbl8foV+cx
m5fHbF4eo91X0jxG8xjNY7T7SprHaB6j3VfSPEbzGM1jtPtKe//IY/Z6zmP2
85PHaB6jeYzmMdp9Jc1j9v6Wx2y/PGb75THbL4/ZfnnM9stjtl8es/3ymO2X
x2ifr7T98pjtl8dsvzxG8xj97/MYzWM0j9E8Zu9/eYzmMdsvj9l+eYzmMdsv
j9nfJ3nM3o/zmP19lcfs+5fH7PuXx2y/PGb75THbL4/ZfnnM9stjtl8es/3y
mO2Xx+i/87ff8pR73+mWNY/5+EPu8q4HXvGx3VfSPEbzGM1jtPtKmsdoHrN5
eYx2X2nz8pjNy2M2L4/ZvDxm8/KYzctjNI/RPEbzGO2+kuYxmsdo95W058ds
Xh6zeXnM5uUx+vI8RvMY/bg8RvMY7b6Sdl9J8xjtvpLmMdp9Jc1j9uvzGM1j
1t1X0u4raR6zP28eo3mMdl9pX688RruvpJ+Vx2geoy/JYzSP0e4raR6j3VfS
5+YxmsdoHqPdV9KeH7N5eczm5THafSXNY7T7Stp9Jc1jNI/RPEa7r6R5jOYx
m5fHbF4es3l5zOblMZuXx2xeHrN5eczm5TH6sjxm8/KYzctjtPtKmsdoHqN5
jHZfSfMYzWO0+0qax2geo3nMfv88RvMYzWO0+0qax2ges/3zGO2+kuYxmsds
vzxm++Ux2y+P2X55zPbLY7ZfHrP98pjtl8dsvzxm++Ux2y+P2X55zL7feYz2
edeax2y/PGb75THbL4/ZfnnM3u/zmL1e+rxrzWO2Xx6z/fKY09fv0Tzm9PV8
07FfHrP98pjtl8dsvzxm++Uxp6//m4/98pjTn4ejeczmn/n5OJrH3Pn6K37j
/9zx2j0/RvMYzWM0j9GeH6N5jOYxm5fH6MfnMZuXx2xeHrN5eczm5TGbl8do
z4/RPEbzGM1jtM+71jxG85jNy2O058dsXh6zeXnM5uUx+qI8RvMYfcc8RvMY
7fOutefHaB6jPT9G8xjt+TGax2ifd615zDqP2a/PY/bP8xjt+TGax+h/lMdo
HqPvn8fo9+Qxm5/HbJ88RvMY/fw8RvMY7fkx+sfzGM1jNI/Rnh+jPT9m8/KY
zctj9I/lMZrHaM+P0Z4fo3mM5jGax2ifd615jOYxm5fHbF4es3l5zOblMZuX
x2xeHrN5eczm5TH69/OYzctjNi+P0Z4fo3mM5jGax2ifd72fxzxG85i9v+Qx
msdoHqN5jPZ515rH7Ocnj9GeH6N5jOYxmsdon3e997c8ZvvlMdsvj9l+ecz2
y2O2Xx6z/fKY7ZfHbL88ZvvlMXu/zWO2Xx6z/fKY7ZfHaB6j/1Mes/frPEbz
mP19kMdoHqN5zPbLY7ZfHqN5zPbLY/b+ncfs76s8RvOYff/ymH3/8pjtl8ds
vzxm++Ux2y+P2X55zPbLY7ZfHqN5jL7za//eTS98yNHOx/zAc/7jL7/ycdfO
Y/T35zHafSXtfIzmMdrnXWv3lTYvj9E8ZvPymM3LYzYvj9m8PGbz8hjNY/TL
8hjtvpJ2PkbzGH1hHqPdV9q8PEa/Io/ZvDxm8/KYzctjtOf5audjNI/R7itp
52O0+0qnv/9vrN1X0j7vWruvpH3etXZfab+++0ra+RjtvpL2edfafSV9SR6z
P28eo91X0s7H6L+fx+zPn8fsz5fH6CvzGO2+knZfSTsfo1+cx+ir8xjtvpJ2
Pkb7vOvNy2M2L4/R7itp95W08zGax2ifd63dV9LOx2geo91X2rw8ZvPymM3L
YzYvj9m8PGbz8pjNy2M2L4/ZvDxmX/88ZvPymM3LYzSP0T7vWruvtO9XHnP6
9b9m7b7S/v08RvMY7fOutftKp9+vo3nM5nVfSTsfo78lj9E+71q7r6Sdjzn9
ft9w/LzmMdsvj9l+ecz2y2O2Xx5z+vo4msdsv+4rbb88ZvvlMdrnK22/PGb7
5TGnr6+jfz6POX29fWrt8661z1fSnuerPT9Gu6+0/Tofs/3yGO3zrrdfHqM9
z1d7fszp6/mm4/uXx5y+vo/2edfbL4/ZfnnM9stjtl8ec/rzcDSP0S/NY/b3
2Zn/3j/a+Zifu9d3/OL3XXx4jPb8GO2+knY+RvMY7fkx2n2lzctjNI/ZvDxm
8/KYzctjNi+P0c7HaB6jPT9Gu6+knY/RPEZ7fszm5TGbl8doz4/ZvDxm8/KY
zctjtOf5audjNI/R7itp52O0+0ra82O0+0ra82O0+0ra82O0+0rafSXtfIx2
X0l7fszm5zH78+Ux2n2lzc9jtPMx+t/kMfoLeYx+bh6jPT9Gu6+k3VfSzsfo
y/IY7fkx2n0l7XyM9vyYzctjNi+P0e4rafeVtPMxmsdoz4/R7itp52M0j9Hu
K21eHrN5eczm5TGbl8dsXh6zeXnM5uUxm5fHbF4eo3nM5uUxm5fHaB6z128e
o91X0s7HaB6j3VfSzsdoHrOf1zxGu6+0n/c8RvMY7b6Sdj5G85j9/OQx2n2l
/fzkMZrHbL88ZvvlMdsvj9l+ecz2y2O2Xx6z/fKY7ZfHbL88ZvvlMdsvj9l+
ecz2y2O2Xx6z94c8Zu/XeYzmMdsvj9l+ecz2y2O2Xx6jeYz2PF/NY7ZfHrP9
8pjtl8dsvzxm++Ux2y+P2X55zPbLY7ZfHrP98pjtl8dsvzxGf10eo3nM/r45
9ycv+OwFR/OY33zPJ//trZ++dudjNI/RPEbzGO18jOYxmsdsXh6jnY/ZvDxm
8/KYzctjNi+P0TxGOx+jeYzmMZrHaOdjNI/ZvDxm8/IY7fkxm5fHbF4eo52P
0Z7nq3mMdj5G8xjtfIx2X0nzGO2+kuYx2n0lzWP267uvpHmMdj5Gu6+keYx2
X2l/3jxGu6+keYx2Pka/Po/Zny+P0e/NYzSP0e4raR6jnY/RH8xjNI/RPEY7
H6M9P2bz8pjNy2O0+0qax2geo52P0TxG8xjNY7TzMZuXx2xeHrN5eczm5TGb
l8dsXh6zeXnM5uUxm5fHbF4eo52P2bw8ZvPyGO18jOYxmsdoHrPvX+dj9u/n
MZrH7PfLYzSP0TxG85jT7991ax6jeYx2PkbzGM1jNI/Rzsdsvzxm++Ux2y+P
2X55zPbLY7ZfHnP6ejmax2y/PGb75THa5yttvzxm++Ux2y+POX29fWr9mjxG
8xjNYzSP0Txm7595zPbLY7ZfHqN5zPbLYzSP0Txm77d5zOnr+2jnY7ZfHrP9
8pjtl8dsvzxm++Uxmsec/nwczWP0/zjz83I0j7n+py56zOvOuW7nYzSP0TxG
8xjtfIzmMZrHbF4eo52P2bw8ZvPymM3LYzSP0TxGOx+jeYzmMZrHaOdjNi+P
2bw8ZvPyGO35MZuXx2xeHqOdj9G3z2M0j9HOx2geo52P0e4raR6j3VfSPEa7
r7TOY7T7SprHrPMY7b7S9s1jtPtKmsdo95U0j9m+eYz+8zxG8xj9gjxG8xjt
vpLmMdr5GP1XeYzmMZrHaOdjtOfHbF4es3l5jHZfSfMYzWO08zGax2geo3mM
dj5m8/KYzctjNi+P2bw8ZvPymM3LYzYvj9m8PGbz8pjNy2O08zGbl8dsXh6j
nY/Zz2ceo3nMfh7zmL2+8hjNYzSP0c7HaB6jeYzmMdr5GM1jNI/Rzsfs/S6P
0Txm7295zPbLY7ZfHrP98pjtl8dsvzxm++Ux2y+P2X55zPbLY7ZfHrP98pjt
l8dsvzxm++Ux2y+P2ft1HrP3ozxm7395zPbLY7ZfHrP98pjtl8doHrO/T/KY
vf/mMdsvj9l+ecz2y2O2Xx6z/fKY7ZfHbL88ZvvlMdsvj9l+ecz2y2M0j9F3
ymM0j9H3+tgfXP/o/3w0j7nT15/30Mc+/brdV9I8RvMYzWO0+0qax2ges3l5
jHZfafPymM3LYzYvj9E8RvMY7b6S5jGax2geo91X2rw8ZvPymM3LY7Tnx2xe
HqN5jHZfSb87j9E8Rl+cx2geo91X0u4raR6j3VfSPEa7r7TOY7T7SprHaPeV
tPtK++d5zObnMZrHaPeVNI/ZfnmMflAes69HHqPfmMdoHqPdV9I8RruvpO+e
x2geo3mMdl9Je37M5uUxm5fH6BflMZrHaB6j3VfSPEbzGM1jtPtKm5fHbF4e
s3l5zOblMZuXx2xeHrN5eczm5TGbl8dsXh6j75HHbF4es3l5jHZfSfMYzWM0
j9HuK+3nNY/Z75fH7Oc9j9E8RvMYzWO0+0qax2geo91X0jxG8xjNY7ZfHrP9
8pjtl8dsvzxm++Ux2y+P2X55zPbLY7ZfHrP98pjtl8fs/TWP2X55zPbLY7Zf
HqN5zOnr72geo3mM5jF7/8xjNI/ZfnnM9stjNI/ZfnmM5jGax2ges+9fHnP6
ej+ax2y/PGb75THbL4/RPGbz8xj9K3mM5jH6DWf++/9oHvO9b77NvW/3e9ft
vpLmMZrHaB6j3VfSPEbzmM3LY7T7SpuXx2xeHqPdV9I8RvMY7b6S5jGax2ge
s3l5zOblMZuXx2xeHqM9P2bz8hjNY7T7SvqZeYzmMfpxeYzmMdp9Je2+kuYx
2n2l/fo8Zn+ePEbzGO2+0n59HqPdV9LuK2keo91X0jxGu6+0+XnM9slj9LPy
GM1j9PvzGM1jtPtKmsdo95X0uXmM5jGax2j3lbTnx2xeHrN5eYx+VR6jeYzm
Mdp9Jc1jNI/RPEa7r7R5eczm5TGbl8dsXh6zeXnM5uUxm5fHbF4es3l5zObl
MfqcPGbz8pjNy2O0+0qax+znMY/RPGY/73mM5jGax2j3lfb+kcdoHrOfnzxG
u6+keYzmMdp9Jc1j9v6Wx2y/PGb75THbL4/ZfnnM9stjtl8es/3ymO2Xx2y/
PGb75THbL4/ZfnnM9stjtl8es/3ymO2Xx2ges78P8hjNY7ZfHrP98pjtl8ds
vzxG8xjt867391Ues/3ymO2Xx2y/PGb75THbL4/ZfnnM9stjtl8es/3ymO2X
x2geo3nM3m/zGM1j9D95xj1/5C2/8//98zzm6T/021//tttdv+fHaB6jeYzm
MdrzYzSP0Txm8/IYfW0es3l5zOblMdrnXWseo3mM9vwYzWM0j9E8ZvPymM3L
YzYvj9m8PEZ7fozmMZrH6PfkMfr+eYzmMfqOeYzmMdrnXWvPj9E8Rnt+jOYx
654fo3mM9nnXmsdon3etPT9mX688Rnt+jOYx2z+P0TxmX788Zl/fPGZfjzxm
X788RvMY/fw8RvMY7fkx+sfzGM1jNI/Rnh+jPT9m8/KY/fM8Rl+ax2geo3mM
9vwYzWM0j9E8Rvu8683LYzYvj9m8PGbz8pjNy2M2L4/ZvDxm8/KYzctjNi+P
0Y/IYzYvj9m8PEZ7fozmMZrHaB6jfd615jGax+z3z2M0j9E8RvMY7fOuNY/R
PEZ7fozmMZrHbL88ZvvlMdsvj9l+ecz2y2O2Xx6z/fKY7ZfHbL88ZvvlMdsv
j9l+eYz2+UrbL4/ZfnnM9stjNI/Rf5DHaB6jeczeP/MYzWM0j9l+ecz2y2P2
90ces/3yGM1jNI/Z3yd5zL5/ecy+f3nM9stjtl8es/3yGM1jNj+P0Txmf548
RvMY/ZX7fkc7H/MbX3rSX//Eo66fx+g/zGO0+0ra+RjNY7TPu9buK21eHqN5
zOblMdr5GM1jtPtK2vkYzWP0y/IY7b7S5uUxm5fHbF4es3l5zOblMfoVeYz2
+UrafSXtfIz2PF/tfIzmMdp9Je18jHZfSb83j9HuK2mfd73uvpL2edfafSXt
vtLm5zH78+Ux2udda/eV9PvzGO2+knZfSTsfo1+Ux+ir8pjtn8foJ+cx2n0l
7b6Sdj5GvziP0VfnMdp9Je18jPZ515uXx+j/nsfod+Ux2n0l7XyM5jHa511r
95W08zGax2xeHrN5eczm5TGbl8dsXh6zeXnM5uUxm5fHbF4es3l5jOYxm5fH
bF4eo3mM9nnX2n0l7XyM5jHafSXtfIzmMdrnXWv3lbTzMZrH7Ocnj9HOx+zn
J4/RPu96++Ux2y+P2X55zPbLY7ZfHrP98pjtl8dsvzxm++Ux2y+P2X55zPbL
Y7ZfHqN9vtL2y2O2Xx6z/fIY/bt5jH5fHqN93vXej/IY7Xm+2vNjtPtK2y+P
2X55jPZ519svj9Ge57u/f/IY7b7Svn95zL5/ecz2y2O2Xx6z/fIY7fkx2n2l
vd/mMZrH6HPyGP2guzzjQ9/88aOdj7nuv93tE9/0ysNjtOfHaPeVtPMxmsdo
z4/R7ittXh6jeczm5THa+RjNY7T7Str5GM1jtOfHaPeVNi+P2bw8ZvPymM3L
YzYvj9GeH6M9P0a7r6Sdj9Ge56udj9E8RruvpJ2P0e4rac+P0e4r7df3/Bjt
vpL2/Jj9fnmMdl9p++Qx+/PmMdsnj9HuK2nPj9HuK+3Pl8do52P0pXmM/lIe
o78nj9GeH6PdV9LuK2nnY/RleYz2/BjtvpJ2PkZ7fox+SR6j35TH6KvyGO2+
knY+RvMY7fkx2n0l7XyM5jGbl8dsXh6zeXnM5uUxm5fHbF4es3l5zOblMZuX
x2xeHqN5zOblMZuXx5x+/a9Ze36Mdl9JOx+jeYx2X0k7H6N5zOb1/BjtvpJ2
PkbzGO2+knY+5vT7fcPx85rHbL88ZvvlMdsvj9l+ecz2y2O2Xx6z/Xp+zPbL
Y7ZfHrP98pjtl8dsvzzm9PV1tM9X2n55zPbLY7ZfHrP3qzxmr488RvOY7ZfH
bL88ZvvlMdsvj9E8Rnuer+Yx2y+P2X55zPbLY7ZfHrP98pjT1//Nx355zOnP
w9E85vTn42gec/rzcvT/ymM0j9Ff+f8DR/8/luuiEw==
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnXf8V+P7xz9nn/OukKIQlUKFVEIqIzOKjFAooYSkZO+999577733/JrZ
e2bvEIrE737+Xq/zePfH/Tj3uK7rHu/7Ouf1/OT7+3XdacoWe8YtLS1dLmxp
ScKTOs/TQ2mEcl4oVSiln+eGkoZyhu3OdDtzyUM5K5Tz7d/KpXUoF4TSNpSF
Q7kslEtDWch9y4ayXCh3h7JAKAuGcnEoRShnO26bUC50LPwusd0VobQLpX0o
F9mOGD1Cucdxz3Gs0naLhHJlKDeG0imUJf28IZQlQrk6lEVD6eDSMZRrQlks
lGvdxmepUG4KpXMoN7u9TCh3htI9lG5+3hHKXR5jr0uHclsoXb32y30utzhW
l1But103r+Uqr7uL/W4N5TqvafFQ7vWee4bySihrhzIklAdCWT6UFTzWK5T7
3He/24ytGMqDoawUSp9QHvHZc3ZdopaWvuH5qMf6hbJyKI+HMiCU1UN5NpRV
Qlk1lKdC6R/KE7brHcpDnuNJj2H7WIviEu+ZUFZzPJ5POxZ7WCeU6aE87Fis
8X+hDAxlUCivhbJuKOv5+ap9XgxljVDWdFkrlJd8Ni+7jc/6obweygahvOH2
8FDeC2VYKBv7+a7nGxzK86FsFMrboQz1Wp7zWbzpWBuG8o7tNvZaXrD/hvZ7
y78f9+76UN733Ju4bBrKB6F8HspWoWwdymahbB7Kx6FsEconbn/q9pYuI0P5
zD7bhPJFKKNC+dLtr9weHcoPoYwNZYdQvg1lu1C299i2oXzt+Wc4LuPfeGzH
UH4KZZxjfB/KGPvz/C6Uj0IZ4bXvYNsfW5TP5DXvB94/vHtOC2V8KL+EsnMo
v7o9wWWXUH4LZWIos9zmfXSG/Xknnek276Wz3G7leXg/8S7gfcb95v1ytu1+
9n52atE74xyP7eS1zGzRu40Y9fvxPMfi3XOR98O7iXcU7zHeQbyLeL+Ry7xf
6nzmybuId9ql9uGdWL8jeS9c7jbvomvszzvoWrd57/D+4V20pJ83+rw/bNEd
4n7xfuOO8c65wnF5f1znWJ3sh12XFr1jeCctbj/s2nu9+Hf2OHPzTrrNPrF/
w/DaaBkS6d20TqTfht+kU6T3Gu9F3nO8F3k/8t5c1udEu7v7sJsc6S5z/3YN
ZbdQ/mANkX43fqMFfN4X+bdcKtLvPimUPUKZ4/npWzKM7e6x2S16197uPRCb
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
EyYqPf+ZXhs2Z7mP+c63L3pjIe+dJ9oDDYUmQpet6kL9aZ8PZ3ORfaijvVp7
7MJYvzm/7wmxdFT7WFqqtec+3PUL3Iab8KUPluB7979Yeou11PqrnfvQPmgg
eIbns66jyZiH+dq5TZ1v5yDHhpHQXa/E0lxoLzgHzbao14ueQsfBZIy/ZBu+
6ehHvutoOXQcbXTI67G4BW2CboL/0BxoD/QI+gnNg/Y5xf5oOfTaEK8LrdDJ
86DDsEUjvep4xEXPEHc5+6MR0YbooPW9BnQQugmOQUuhy7q6oKHQUmg/dBVt
9Be6Ds5Cv70bi6/QMugb9AzaCI0Eg9CH3kEjfRiLkUZ4DJv3Y2nJzt4H/txt
9BHrxg+NxXzM+2YsnTXM877ttbMHdNoIzwEjrBKLB9BMnCsaCr30cSwGQ0+h
sRh/xmP004fmQrOhHX6O9R5Hk6HNYCV0FXoJ3YQ+QifBNjy/cB0Nht2K9sH3
01jaCm0IM83wkzZ6iHi1PurrvkviZs4Ri3WhKdFgaLHrnH/c62di5eAqPoNv
YnEUDPRtLH31XSj9Y/lf75wmdy7lTFwnd7jTz8fNfCB/bvW60Fz94ibnXB6L
kdCWX3ktrAlmusI25Bdab7Rtn3NMYnPv4IJutiO3ruSMXSffrouVC4u7zX2+
OpRrXOeOk3vkI6zzcqycXNuFOtxEfkyPlUvEIoeuj5UP5E3NM7Rf4w7ZppPn
YA3XxopDDFiKu8sdvjmUm2Ll41L2oX6j18X6XgzljVg5yL3mvpILTzr/OAPe
8dzrt2Lde3KPnLw1lNtcX9o2jMNGd9iXHCI3yAlY571Y+ULO3RMrr3q4TT/s
gg+5emcot3gvzHmX+5f1Wlnzg85n4tzt9X/gPZB/5NBHodwXK+/IL3Qw9477
x/3lHj8Y6+5/Fis3NrM/rPVJrHzcwv7k5P2hPGTf3vbFD2YiT7iXj4byZaw8
5I5xh7m/sNEjsfIL2wcck7WQe+Tr537ShoFGOc5LzmN8H/aaWBvM9ZjnJRfI
s69j3e8x3mvNAWPdR6H+fShPxMpBchHG2c4x8CNX6zbxXvE3B8bv4BjwzA+x
3k1ozZ38u3Lm94byo21gHTTojq6Pcz988ZPbO8ZNrnvc8eES7OCfmbHi7+wn
bLR0Iv2BvoDzYBDYbFYsRppoe7jnl7jJP796nHrNURPdh//v9oVZYAO4YHfX
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
Y8wDv7zgtbFGdNh6jo+uQFOgWdBHaCw0Elpsks8bffVXKqZijHNCT/F3ePQX
OuwXv7/R9cRAnzE2LxX/oLXQH2gm9AhaaS+Pob3QUYyh3SZ7LrQZY8yDFkQT
wmXohU0cD430Xyp2QhehifazHfZzU7EN+i3KpH3QXugftFmWiWfQTfvaNskU
g1icDfpqc/vwrDkIf3z5VvHNQjdVmc7gUJ8p+vEpz4mWQkeh6fb2muErNFKR
Scsc7D72hybCH92FH9rrxfnu4Av+TjKOlmuVibUWzMQz6Cu0FJoKDkKrsUa0
G9oKn8M8hk2bTLoT/YkmRcPRRtPBKmiPdpn0EfrpGN+P3VLxEBoKjTXWPug1
dBt6j7Uc5TFiv27bN60ZiNc2U8xJ/v3npNJ7aD1i/W39w1rQVryDeP+gn9BV
6Cn0GfqK9ttuo7/+sbaC1WAqtNNimTQMWgYdwx7YC9yya6oxtM1rqXKFnFki
E1ec7risHd2DDnzfuqhTJv25ZHgukmlO5m7xvKc4Fnn0eiifpM37tZnrH6fS
uaP9u/2dKi+412/YdwOfE+cFP9Em995MlXvkzdupcoxcgKuG+269z3oy3UPu
PP8bGv6dkn8reS9VLg637z/238t39l8/acM973iujV3wfZdz8XqGet2sHz77
wGvY1HsmNz4NJc+UU9z/z9zPvSfHyEWYh7wkT79zrjOWBr+PUuUb5/eefw/u
BXnIHW9kmg+bD71n9l7/zSTOFJfcJQdnJk3mmeH+MtPY5+7f2mtlzT9Zl6HB
rvEYufZFKF+6zu9IDpBrsM63qfJke4/xW38Vyteuc+fJTfJ0lnOI/FjIeUoe
fZcqH8gf2OXHVHnFvUT3cw/hgIUz2RznNSyQaR3fO85YF3x/sD/3+yfPydww
GzFhi6UyrY/1fxPKz7Yn335Ldf67+Deg/muqHCBf+W+CsSNHZ4byi+vYkhvk
NdxEni2eKWeYd0nnFYUcIwczr4dx7LGFV8i59pneFzWrzErFPKfbFhvG4arf
bbOr11hzGLFhlc6ZGABmWD7Uu2TqP8eFeuG15G53zTQGR8FVS2eqb5PpPY4m
QI92yzR+vu3Qqstl4g2Yhyc808Y2cEl3x6rsc4Ftlsmkcy+w7bKZ+i9yX81G
V3gvaP3Sa2StC8w35wqZbLBl7wvbp63bl7rAVgu5Tn+v4LdiJr8rXWAGGAYd
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
bo/w+LuONT7071IoBswEk3zo+geODftMLNRmbJh933VhXXAYev8TrwU2mFJo
75Q9C+0dbf+lx0f6PD6zH3wDA+1R6PmZC/Utfd5r+/eeVkhffm1fbCYVmpv9
beZ1MLZ7oTnRol95fp57FVoH7amFYtE/2utj3fDN79ZMvGP3tt03LrAMvATD
wDIw0I9+wkEwz76FbMbY7jsX+uCdA4qm34GFnjAMPAC/1Hzwi/vQ/scV4iLG
Dypk/53j7+f2jh7H5+BCdWLAJIcWYqSfPC+ccHyh2N97/fsX4iPsYRYYAT74
w4W7BeccVsgG28PtM8sFBvrd9jx3dZ04R3kPk72nYwsxTM17POfYFh6Z7b2w
h0MK9dN3dKgfU6g+x+Pjve45toFpdvGaWB+c8o/3jQZBl6BD6INnTiw0xrr2
tB1jJxRiKGzgl5PdRo+ip/r5XU4bTYo2pZxSqA9NlVhXRR7bx/VT3WaeqZ4D
poB1GJ/muP+6jzine4z2ad4DGgj9c1KhGNifYXvmh4vQS48U0h1oKXgGfZXZ
Bv2FXoPLGH/INugQdNOhPjO0FG200xOFzoDvGOfQ1/7EeaCQZkKrtPZ64STW
hM7q43Whb1p5HtaClmM/jzleP9853mf8luQlOqyNC7HJU3QV+mshF7TS0bZF
P9FGW6G1YKtnCvESOg3NNsBtNORzhZgK3YR+Ql+hQdBUg1yoP+8xdN5xnh+9
RxudNdBx0E9oHrQP8dBe6C40Ek90EmtibU+F8mIhJkGPoVnQLnAFegPNheZA
a71ciKPQVuiwxYqmxkJf3W07bBhHo+GPhkJ3wUSvFWIttA3aEf2EdkLzrOcx
tAsahjH0XAevHW2zpNeFNlzT60a7dXE81v6G1w8jodneKjSODkODPew7x31A
B6FB0ULosfcKMQ/aaqhjvFOIbdBR6DC0Vnf78ERPoaGG2/fjQtrpk1A+KsQt
aBH0O/eYO8yc6Co0FRqPuGhDOI1v9weFvt+bug/e6VWIedBg+KHD0Hgbe309
C42hzc4slGfc8XML5RJ5VLh+jvfPOVzlXCT/HuQ8C+VE4T7GrnDu0n9WoW/L
PoW+UeTNo4VyjNwiRy7wfjjvc23DONxzoW3aeE3k4nmFco+zebxQXvfyvs+3
DbGfLHSG3N+LC+UbuYYe4buMRiEvyInLCuUZOfGsffCFpci9pwvlAP7k8CWh
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
7/ph7f1CTsEr5CF7rAtlR041LesNQp3JwV4La4KxmjmHj/YY62lY9vUMFZPY
5BN3s0+oO8tdahnqnnEXNi3rywO9I6fbFp/WPmtyJCxtolB18qZfqDtPrpEP
G4TKvSxUnpFPA0PlAneTfCB34Ay07E7l2I5hjWfyULGIWf3tgnjwUxHKhrtM
ThI/DRWPuBuGWhN5G5f1JFR9tn3It/qyb/NQ9/8+75v9wznkF/nQuhxvFep8
6Fs9VG5wZuQl+QUPkSv0tyjHV/P7l9+ZvCR3utl+41A+zUOt4TSfBWcCH7V1
rp5n3y3CWj6zTpiG/MRmjXKsTah10lfpsE+C2t8yiEGOkqu0twnFS/DesFC8
RPth2/VwHe7ZKtQTm61D+cApcN36joEvrAJjbBeKbWiPCKWxYQJYoK/7n7QP
MXs51raO/aTbfWzbz3HpHx5qjFjwyKZeY0/HGhnKFmZ63veJu0QdloFp4J4B
bm/g9jNubx+qjR9cwV18yfVBnnN0WOM6ni95PbuGGt/FPi87Luvp75gVrzC2
ieONCmXHvDuHGn/J698h1Lpe9RnuFooB0PiTQ/XBLq97nOeYUOxDHd4ZG6pO
H+zzpuu8g3gXoRPgm3GhxtCqcAzcsWco3njPfdQnhBrDBz27u+d70z7Y7WGb
8Y5N31ZBLRbPrb0PtP7ennuI48JJMMsC24yw3Ud+ovk5h0mhbIbb7n0X+uCe
fcKa35RQTxiG3IBfqlz51H3DPPd7Hp8ayn6vUH3z7T/K4/jsG6rOnBND2Yy0
HfNt5N/+edsz136hnjDStFA8dkAoLpoeqh/u2T/U8wsX+Aabnd1mDI2Nvl7s
wvho1+mfGYppYIVv3VcxzZd+zvLcM0LF/dr9Y+xzsGMcFGqM+oGhbL72nirm
G+tx+mEQ2AMNf3goRoKZvnPcca7DOoeGemJzWCg76rDREW7/6AJjwBt7us3Y
Ms91TCheof2T7Y4MZcdch4Sam7GjQo2P9xq+cz++R4c1/4num+w5jgu1N7hl
Xih9jw6Bhfgbz2zXYZyptpvi9j5u/+L28aHa+ME2J/qbS53vLroDfVTxC/po
uX97zhs2Zgyb2z3vCaFiE3M/x8IPLYQmQluhsdBmJ4UaJ+a+9iEGmu3OUByy
wn7oKHQV+us/P9EeDazHOvssYCe01t2h5kFXoanQXJ08/p/70Fv8LY33ON8c
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
M4YO7hApDrlI7pAX65R9bSPFwa9jpHy72HtlzzBN50j2l4c1dlq77OsUqU48
8pIchJlGOrefsQ/508W5Rb7AE+tGyo+rvU/228vnsn0kO9bKetYq210jxbky
rHFRN78Pto00N/MxLxxT+Htwis+bHNox0nzkV/dI95d73Kus7xwp18gPcpB8
XK/s6xmpfq3HsIGN1o/kS/6QG+QUXEWukGe7leP9IuXGze5jbDP7kKe9ndOj
I/n3idRPDpIr4yLd0YqF+pbtsZHy+Q3vqeI/2vTDN7DH3pFYgvcOubaVYxKv
+hvH2+5jnJx82/YTnJ/UeXftGekJ5+wViReowwzMMTkSw0zy2Pv2G2Y79k+O
9y/HJ0bqw26DSP28A7a1X+U/3LFhlo+8pw9d3yeS7kfXHxiJZWCchX7CKJ/a
Fp6ZEmmM+ij3j3Qbu/0i+X1WlmmR+uAWmAK2WOQnbNAj0v2Za3vsppd9UyPF
Y56d3F+N47t/OX5ApFiLPcY8cNW+UW3tM6LanNjBKXAR/AID7O59Uz8oUn2s
29jNjOQ3xnZfuTC2m+uzIrW5yztFukcHR4rBPHxDD4vEMx/6d4BNYYvvbIMO
XWLbQyL1MYbPoZHqo72HRR4b7/FTy/FTImn5H9yHtj3Z/UUsxjsmEhdRjo7E
OcxZsdSRkZ7w0FGRntjAL/Dczy74w1UnROIc2OD4SGxDGy6ABw5ym/4pjjXJ
/j875rGRnhUbTXW83zxO33GRmAF2IO5Ex2J9MNPsSD7sFYbhHOAfWIb2NLf/
dMFnP9fpPynSGeK3wgXOgDfgFuY+I1KdvpnuYy1nuv/0SGOsY1/PMcOxiDvL
Pv963hMj2eBzWiS75V4vv9tZPkPO8tJIuh8+gG0auv9sPxu6wDSwDeUc9zVy
G+5BP2wY6XtMP4x1XiRGQLOiV2GXCyPxzAUea2pbNG1jxzzXcefYt4ltqJ8f
iTearuR/lGNf5n3APHDWao4H38BGsBL8Eq9kBxfALYHP4RKPUT/OfjARbewu
tx/McIX74JmKXfiW8eR7xnysC7ZKbXel13GRx+CPLKqN43uVbZj7Yo8xz2z/
3vyOMOnVUW1OtCw67oVI3IIGeyWSnhrocbTTS5HYCW2FxmrhgoZDl6FF0Whn
ehz9RRs9t6ljo0HQIugZNBV6Cr/XIvESGgyNtrHnYhytheZCW6G3YCGeb7iO
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
aV40D3oHBkJDoaXYK/oJ7cSeWS+ajHMJvR7WhTY6yPOwFnQd+rFzpnjEhaPQ
bOtm0iHoDvQH+h4tsUGm35J7hBbKbY8f2gm99oPXhYaj3SMT56C70E49MzES
3z/0HN/DPpl4AO2BlkE7wT7/cD+4G5m0ExrqZ2s54hG3heMSk+/pMmstvqtH
e57rHHP9TDoPvcfcS1bSfeg29BuabsNMTIIGWtN75ww2yqQxBmbSUX9Ym6G3
8EN/ocvQc3AaOmu2x/kmcd6LVtKUS23bL5P9L9aP7LW1z4NzIZ/Ijxal3Y9p
Ladhn1NS8Qz5dor7Tk71+6Eh0Ul8K/lb9E+ed5LjERdWIZ+4+2s4L7nbsM7P
qXKGfOGuk6ewDjatM9mRl+TXb+zXdfKF+90+q+US+QXrcF+5H6tmNc75w3OQ
3794LawJfvvTNtznv1LlEPd3zUwxid0oU0zu26+OM8VrYH5Yhxwg3wLfKXJs
lmPxu/xdlhWu81uRk+QpbER+rJMpl/Ahh/5LlZPkDRzSMFP+sb9umfL2Ko9j
1yXTHlj/8rKskinOQWmNfxpkmpO513JeMidMs3am9V/iuMSHq27xHYIJGme6
y9xpcqN7pvzkXOhfzblIHwzUNFMekCPoCN7faAJyifxqntZ0ajPnKHkEc1Dv
naldl8nmGPvhv16mvCM3YZdemer0hc7n49IaFwXOuQGZ8o09sLYmmezIr6is
5343ccfJPepZ2dc/0zlwHuQbeZeUfalzFVviE7v6W8Pt7kNHwjkbZ+IW2oPK
epxpXuJ1dD/j5CX52tfvA94Lt3uM9loex66N+wfa9gDfPd5t93jeTo69tttw
EewD18Axnd1ex+173N4sUxv7zTP1UYefBmd6wj9bZOIX6vAFfLBlJmYY6rGH
7NfNdl3dJt6QTH3YwSOwDqzU3X6Vfw/H3jTTGufZbqtM/aMyMRicAZfACE86
HswzzH/ror6++3u5vU2mJ+O97f+4/YdnasMkIzL1wS0wyzPup71dJhZ52n2P
eL3ruY1fX/cz99aZ1kqMDexHfWTZv73HKnZ6zvtCu8MFaHn4iL+/wBovur5z
Jo7ZIZMPbLOj+wba7gU/B9lnl0xP4sETMM1rLrtl4pZNMt0dzh2eecX2xCI2
/DQ6Ux9j+Oyaqf6aY45xe1OPV+vYKZMNfZvZFp4Zm4lD9sjERZTxmfaP5kfv
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
1WplvDmptBQ6qrn7z3Ef39hPrdlWzeTLWj7x9/edtJ5ba2TSRWuWz9UzMRLa
Cw6am4phuPNz3cc5oTv/v+dUuTTGsci1d1PlEjkJE73nfnKxUab+/dzG9/1U
eUtOwUm8T3hHvJUqZ1bIlJ/kCXlUcQ7tpuXYR6lydCuvg/qH9sVvsd8TzNGg
tF+UKgfHp3VG+jjVN+6hVN88xsjDT1LlHnn6g/OM3PkiVY61zJSfE3wnPuO8
XN/WNozDT1/al/wj38hTWGjFTDlITn2bKn8mu00/DIQPefiV/fBvXfp97X7y
jTzjbq6SqU2cb1Ll3kqZ8pZ7yX1u6H76YKZfU/2u/KbkRpgpr45zXJimlikH
yLWKkZaU5XvXd07rLPRDWX50fRfHJB4MVDHML2X5OVWu0Udekmex3z+8Exbb
H5ufyvKd+5k/zbSX0+yHPwxD/uSZ8rDioqVlWSuTpke7k2fkRPuy7zfbkIf4
4tfYbXLw97J0yJRL5Nenvhv85uQpefWHx7CBj8gn8oo8+itVTpKv5FbHTLm6
zPGJMds2y8vyp2PSV/2d4jwX/Fp47ewBDoOF1nQOwzUXuW8l77XaM/r/Mpeu
mfqwhZc6Z6qv6HaXTM9LXKi39W/PHYCXYZtumeLBPvz9JfDcrAXewgbuWTvT
s2a7du6vxunrnsmXdXTKNEZs2IW/UaJb+Jtvj0z2zAkbwT3XuPTM1AfP9MrU
B99c575rbRe7Tn/vTE8Yr08mDqKeeTx1u2+mJ+Pr2u5GF3gELrrZz4qT+mUa
p3+9TH3wxy3uu9n1/pnY6UbHpw8uWj8TX8ASnd3fwWMbZHrCRhtmet7uAtfA
Px3dvs3tjTK14ZyNM/XBHfPcd6ft1nCd/gGZnqxhYCYegl/u9Xgnj22S6cl6
B3nd93hu1gm/hf7N+O26eBw7eGZIpphwC/wCG3Vz+z4Xxru6Tv+mmZ7YblbW
h2aqw0zDMj0fdOG9zvsdhoFdRmSqD8/U38N2D7gQp7t9Ns80BuPAPH0ch7GK
jR75T2xstshU7+02ax/s84MFYBSYaGSmuI+7DR/1c3tdtymjsrrN6Ex9fW2H
/zpZPSeedPwxmRgGloF7tsrEG8+4UF/fttTHZqr3d3vLTGt/zDHgDzhkXCb/
/8eN9e/++bf7jI3P1A/jwEawEhyGtofTtsvENgs8hs2ETE/YaRuPU6/4B9uX
7D8xUxvWgGHgjVddn5RJT6A50Bev2Gew5xnguPRvn2nsFfvvwHcnUxxiD3E/
42gWtAuMsW2mGKxnx0y2MAycA7dMzaRdaO+ciW3ecEz4aadMbWymZOp7x75b
2G+E28x5mudFw6Bf4A50E9qLvaK3RnrPrHdTn8UumWIQe0vbveO1DPNa/nXM
UzJprre9LvgK3XVGJh5AP1xiHUZ/Y+sudNZYr2WM22dl4iW0GTqtqdsHZ9IK
aAMY85xMjITGQpOhuS7IxDloG3QUegotdbB9sEerjbMPvIQG43/XyzeZbzPx
0Fz0M07fBMdCX6GJ0EZoP2KxD7Qamo450UQred/oqx3sg86i/ZULeg5dhkZD
w8Fal2XiIjQY2gWtgmbhm4l+gh+WuA8Ng5Zr7T0zfoVtWMt2ngMttNhrR2dx
hks850WeF422iud+y78tOhp2QstdlUmPcfZoMvQXmg8Ndk0mdkJ3obHQWugy
dBdt/NBWse0q3YZmQ3+hw+A6OArddUMm7YRuQluhp3KP00aL7Wq/6+zLWmZ6
DK11SyZuIQYaCa10UyaOQrOhJdkX+0MHtffY6Zlyhvt5RyaeQYed7bjEhJ3Q
YLdl0mZoLrQXumu223dm0lTzyvJ3Kjv0Gxz0TyoWIifJnYoraJ9almmZ8ox8
m+W4fzjX/nGMP7wntN+MTLlb5TL16X6PkVczvR/2BTdxL/nt4YNZmfLgE99l
6ns43850Dn/oO75bWd/deYttM+coHMX/Jr6582Wuc++LtM4zc5y7O/sOtbA9
bNTE8xzgdZBvs32nz3d+tvY9vbAsezonid3UOX227bE9zHNz9/fKlHvc/f18
vy/NlJ/7Z+onN9p4jiOcm+TpPmV7X+cwMS72uXF+vJenOFdWdjx46ErnIfdq
10znz/kdmClnl6R15jnIeU6+Xu4nbZhp70zr/8rrw/eATPq9o+9g4LnQ1GiR
tzNpkesz5Ubm3CDv4JtDncPkJHnI/T/JeYndtc5NcumIsn6k82qp84O7f7Pz
hHyEde7JpPVho6XO16MyzUGOH+Z1sB446+hMNuTlsZnuMHeZmDc67r2OB2Mc
nikO62J+1gG7rO4chGlOdB7+7Vjky3Fl3/GZ6uQj50X+wljwEDm9unOUXF3D
c7IXeKWz63dnqldM08k+F3oPrP8Y98/zWCf73FWWWz0v81/kuJ089+3eA/uE
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
lJush3U96XnJAfKDHPo+073/OWvkJzn2pvOTPHiuKk9nyiFy8UfbTHObs3rG
8YgLe8Er5A+587zjbOQ2uQbfoJ0P9XtmjNx6oSq/Z/Kd7bWxLnhrsW2Geg+s
5ynHI+6vmf73LfjvifnvhLHjHr+Y6b895t9M+O8VyR/yAp55LVN+bZY1mOrl
qrziOjlJ/pC/cNI/mXJwT/uQe69nyiFyB+55K1OukDPcqVa59onNUrnsmJ91
/FWVNxxnRNZgpDftT0697fmY9xPfV+7bJ14f63+1Ku/Ynjv/v0w5RC6Ndv39
qiyTK2fqnCVH3q3Ke65jS16Rs984z8ib5Su/jzPlDPPXbPOR3x/5BV9gi893
/saQl01zrYO8+6AqLXLZH+Lxmv8+tM3WXh/rhOc+9X7Js5VzMQBan/wjD+f5
nDnj+u8jdR/809a5Sh2WapdLTwzL9ftBH8zTPle9ZiCYZ8VcbAPrwBDUO+Qa
R+fCTUc69gq5+o7xGDZL7NMxb/BSPc4e4JaT7c8a4TLmxQfuYaxL3mAbnie6
wEgwDnwFK9FeKdeTcVhilVwx4IhT3Rfk4pnT3VfzDfMSq1Oufvq65eK14z1+
itfb1P7YNLMf83bOZYN/V3/jl811n8JcPme4wD7wEiwGI6GfYZ44Vz+8c7b7
zrLt8q7Tn+R6trB/lutJvDzXExaCN2CcmnWKXP2U1u472zHSXFr+PMeBN+Cf
VXMxyIWORylz+bKuKNeeLrBN91z8AH/BE7DK6rk4Z7VcMWGpHrmel7jAQNh0
cJsxGOEyx5jv8Y6u098r1zxwzEL3wRMLXOfZ2/Mwb3uvif7OXm87j62Ra4x4
fXLZXO64a3oeWAaOgYPQ9rACjNA/FxfBLf1ycc41tsO/i+v4rpU3WGjtXD7o
X3Rw4Bj4wiqwDf938te7zf+9/LK+Q9yn2P3X24eY3RxrHce+3u3Itonj0j8g
1xjr6Wr/mzwO36yXq36T98l+B+WqwzKF++CWwbkYKPcYZQP3Yb9hrj4Y6WbH
RAudkStP7nCcmiVgmTt8bn1zneMQ2zHG92torjpr6G5/2j08vn6ueZhvo1zj
d/ge9cx1z9CwcBLfxTG59Af6BMaBle7zE9ZZZFs4Z3iuMeq93d/Lbew2y+UH
/2yeqw+egV/gmIf9RN+gKdAWP9geuxGVzya54jFPX/fX4/iOzMUe6LJ9co0x
D+wFa6FtDqv6N80b+0DPoc3QaE96r2gjWAg9dkAuvUZMYqO79svFP2grzucx
Pwfaf7J9iYEmQkc+4z0dkmtftNFS6CY0zFOef4u8cR4H5WIntNlUP2n387of
tt/6jvWY94HuQ2uh19Bb6BB0BHri8Fys9avXNch2030+nBPaC32FzkKDHZmL
f+72PYJx0FP8WwiaapbtsEF/oENe8zhaCh0FC/1RlaNzabwXvMZXPD7csZgT
vXZsLkZCF+1qX2KgkUZ4PzO8D/azm23xOTkXzzS1xkJrwUGve13oNTQUGg42
+9c2J+bSWGgnNBS6622fXzPn5enWTegneIMYx+eKg25CP6GjNvFZsD90TVOv
6V3HRnNt7v287ninOiZannvGHUO/odfGOPZot9Fb6CQ0ElpqnNtj3cYP/YVe
47uC1jo7FxehuVq4DlOhS8/Npa/QkmgseOHzTMxwfi4uamPtN9526L6PvRY0
VyvH+8K+xPgsU1w02wW5NNiF/K57Xaxvy1x3mTv9jO/l+Fz5wznAN6Ny3e3H
fC7kIyy1fy6bb7JGHo523hyYKw/JSXJrbNUel6tO3hyaKyd/cpsc2tq++E3x
PMy3b678I3cPzrVW1rOV85kxuGebXHHYx7a59vKc7+i8XDnGPTgp1537zXcY
btkh1/1/0T7kx3ZV3/a56i84DjHgoaNy5d0S+5BvE5035Au8MjnXHeQuor24
w81sc0wuO+ZnHUdw93LFeTlr8M+OufzJnSm55mPe2V4Ta56QK//Ig+Oq+tRc
9tzt6blyiFwib6lPcz5wBvDQCc4lcnHnXHnxptv07+lY9O+U61vEb8zGznPy
5pS8wTAzc71X3i98urTt4IxZuWze95rIx12qvtNy5WEz5zP7gc1m5LIh9upF
9XtZtefbDnsYpWfVf0musY+cF7tX9XOcey193zl/tPDyzr+zcuUruTunqu/h
HCO/WtoXPiJvLsgbnNPGObkwFwvBBns5h8m53XLFZC3Ynec8b+0nTASvwDpw
EPPhu6djoe1X8RpZKzzXzvkLo8AusAyswxNOgZGIBxdd7DHqR3seOIj2ij4/
/GCMy9wHM9Tswp54wi9X5I2+TrZb4HVf6DXBHZ3/M4795bZh7os8xjzwyyVe
G2uEpbo4PnofLoAbYBe4B37hLK702dC+yn31GKwD18BUaFG+QXyzHnMM+Iix
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
m2PPcZvfS+ZlfrQUegndhL76237oL/QajIXWuqUUF6HX0HBotn/th9ZCixW2
gbXQq7eV0mBozLn2Q/fRRlt1ty265a5SfIL2Ql+hs9BjSzsGGgf9BWOhldBe
6KU73Lea2/jVnIL+gFVgJ7TZPaW0E9rqQMdAb9FGi/Wy7X2l2AndhW5Dv6Hp
0FvNHQNt1cd2zLPIc6Fx0EAtXfBD+6Cl0FR9Xag/WEqLoq3m2Q/dRBsd19Nn
cpPfA+/j4VJsiU5Dy7V1DHgGTfV4KS3Xz3Zop0dLsRPaCr3V3gVdiObi9wLt
dozH0WK00VMDHRstg6ZBI/G7gjbB78lSvMTvJhptHc/FOBoG/YXOQm/BQjyf
dp3f3PXsT1xs0WJwFBrs2VL7Q6+yVvioaym2YS1oK7TZEaXyibxCf+FLDDQX
2gw2QretUkrHPe8+xvi2TPE3hXzr6nmOKZUz5At5RT6e7jnIryPdx9i1nG2p
fvKPOVjXSUWDi47mPEvlKXn3Z6nv624u9Tf+uFL5Rx7eWiqnSr9/cvZs5yV5
dnMpO3LweN5RqXqdm+TbiayjVL2JYxHzfOcW+XIqZ1oqz+gjn24vlZ+57925
zltsTva9JOdqLqJ9p33x+39+8t3kHZ7mucjR1u4/v1T+kHfw0BmlcpJ8JA+5
/7AMNvfajjHy78xS+UfO3V8qL8m1s6tyjuvkHznwUKl8o02OnWs//OGkuz0X
cz5QKp/7eq2s53S36YdlznMc9nGW19PcczEP/IReR8/f6Rzl/l5YlYtcJ/8e
K5UvA1yowziMkYcXl8olcvka30XuxrGlcuaJUvk5v1Quruh++m5wbpFnT1Xl
EsckrxeUyrXOHscO7ftMqfzc0HbEvNTzs45H7EPuXW477G9xnsEu7LnmpYVV
udJ1co+cIzdv+z+mzjruiqrtwoqkIBiUiiIoPtMzRyQEQVAQUREBRVJKRUAk
7O7u7m6s1+4Wu1tM7BYLxfzm+taa3+GP/Zu97/veMXNmnbOux9dX11Nb/U2C
Ps/sVV8Hu8EQ8A1cw99e3nD/9QbFYY3BnnONz7amc695DfZ90XsPca5ipK2W
WxueerNB/EP/IefhI8ZvO7eNGywD08BE2zjH+B3nYZ93HYNztnNsmGNwEH3i
i3zFk7/XIJ6h/4Tn4dMZw0EfNohxPnDdCDc4gzzcMcI5GOojz3vfaxKHYXZw
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
Ve73c7jb9Vs4z/NJHIs9vsfXQWXNNrG+hx7xukNircV3FPGtY30Onf0ZPOi6
3HOo2cjxrWLlHvT8obHOw/3AZ4XjD/qd4L2Cr7eNtRYsxHcc34N858EtcMzw
WIz0qPeEh4bFGlOzXaxYT9dX8+C67WPxDv3ejvfyGMbYIRa3wDpwA/0RsfIL
vRZrw1IjvdZTnkttxT2j4jovPeW5eBo8DF4GTnnW8+AKPMsxsdgGxnneDUbq
79p+Hu8U60p+TKwrc+ChsbH6sMS4WDHY4mXHJsZim1cdoz8hVo7agT4T++3o
OHXjY8XYd3SsWMVJr/o6yOcY4LUG+57J40POiuXj8VTHxWIn/BS+Cq+FzyL3
p2P4KjwVLISnOiFWHc8Pj4avuCCWj5/rGmrxWPgrfNY2HuP18FN4sX89Zm18
G94HD7TIjXn4LLzMiv7flZ0Uax7z9/DnxecGL+HZTou1Bh4KL4fXwHPgwc6I
xUt4KjwT3gn/hY9ijI/DZzVx3cfO480O9LPjucFOeKpzYnkS/AgeCt/UwnnG
+JfRXpezbO+z7OgcPpEzc3bW4DeR38bzYnEUvgsP1tJjPBfeCw/GP3v62X93
uiQW56xmf7eKPwsYCe90USx/hf+a4DXGe4w/w6fhSSd6TC2+bjWviw/By+BF
vnMt3goPdlksRsKftfGe+KzvXYu3wmu1daN/hb3bGp67zO/asbHmTfF+fK6/
R2ILvBJeCv7BD+GhOBeeC48Gk5G/xjX4KXwV31vwD57tulg+Cs+yu/PTPd45
lj7QCSxxY9l6JfI+zGWNq7wP+90Qi53gD86Cr/vJZ+XMsBB74deWel30Monn
E6uPhprGdY/PGL1NsSZ5LnDS8dYqmpoaq+YtN/QzLdY7wbuDp9olVvwd6wTd
nFy23a2N9x0jt1dUZ6FdY+3BXnDWbrHiaBHNoet5HrPO9DJ/aixtNrIuT4xV
18jx6m8Up1ufH1sDs8v+2bE0hV72jBX/xPXUwlLoEg3OKsd7xOqzRhNr8cxY
vzf8HY7fg+Ze8yDrBh2cH+ue0eEMvqOsz8/ceG7zrLFzre2VfYWHZsaa+6HP
x9w5ZWx+rLk8+1bWK7x0YSwNtrZ+0AUcs3cs7aG71q6Bgai52HVfWX/7WM/o
49JYukR3+5X9/WP10Rfv45XWVcU5B3ge82Gzfa1/1rg8lu7Q4sHWNu9vW8fh
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
8bseT080hpF2TxSDcT5w7H3XDXef+IxEV84wMxEbwSOLnR/h3KxEV867h8/9
sffmnPDbQH9mfH6jnKcOztkz0ZqwDewC04z2+BM38ju6T3xOoiu1c/l9TNSH
q+Ynun7hhseFeWAY2GWfRP29E8XHuu5zN9YZ4zl7Jcrho2Cenb0OuYqNvl5u
bWr2TdSf6DFnn+3nh1fCM+Gd4CX812WJxngvvBU+bLLHeChqqMWDXZGIoya5
jnNt5+8avh/waO1cg0fBQ+FZ8Fl4M/iIMV4MH8OY+FWJzjXNuf0Snf1br4EH
w4td4+85vu+q7/oXE33PD/R3/a+uxZfdmIhnOtuv4dvw3LATfuyGRJ4QL4Yn
w7/N8Bi/he/Co83ymFp8Vmevi7fBK+Fv/nQt/gt/cnMiPsTTreM98V9/uRa/
he/q6kb/VvuaLp6LL8G7HOB5c7wfnqWZ8/gmfBW8hMfCo3Eu/BfeDb4hf4dr
8FZ4LHwa/IN/uyuRH8Nn7es83osxfum+RNyCr8JHcSa8WOg1bvM+7HdPInbC
53AWvCKeEf8TO4dPa+w9OQd5/CO+LPVebf1+4uXxV/ipg33feCzGDyXiHzwY
fqzmMV4KT4XPwn/h3+C13f0Z847AQY8kYq1WiWrxY9c6RxwWwl89lsinsS5n
WSWR38Jr4a16uPaJRIwEG8FQq3ht9uYMDyTipYVlG5GKiVZLxEVXWmPtrTfi
x1h/PIvLkzojHVD2D0zU/yGus9BBPCNraYn1xZonxHWeOYxnk0iHxNDT1Yl0
iG/EM66aaD41h/CZJ9Ii+69pDV2baC7zYKnDE63PsyVPHcx0fSLd8f4fmej5
o69OjsNJaGlBIp0stc6O4rkk6v/hGvJnWH/o46ZEOXR3TNk/NlEffZGnDja6
JZGm0Nnf1scJZf/4RLoi1tU1MAXv8v8SafLERPX/el3qj/P7Tv48v9e8s/cm
dUY6qeyf7Hebd3xD6wM2ujORJgO//+jtlLKd6n4j56ip/hZxdyK9kUM3p5Xt
dPfRUuQ8nHR/Ih1lzqHXM8p2pvtNfV7OfZm/Jzjf7UmdY49wHXo7y2ux5hXW
AXo5L5HeHvT7jSbRxzllO9f9lV1DHh4633PRBRpDs3DUo4l0h44u9ru4qsfE
YSDmoKkLPI/5D5ftQsfRI9qDS3ondRa6KJEuH0+k1Z6+wka9PIZpzvb9ch/w
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
aQlNwkRdMsXR4tBM8Yc8Zm5X6xZNwUl8n/Ad0cma2yaTPtEJOqo4h/GwMtct
k0Yv8Dnob+C5zNvIa7PHkDLekEmDF6V1Rtow02/cSpl+88ihwyCT9tApnILO
0E5iLY7IpM9L/E5E5TjO1KeWGvLwU5ppLvpDb+gUFtoxkwbRVC2Tfq7xmPim
noMOs0zzmD+q7OeZ4ugNnfFujs00Zp3CGt0pk255L3mfYQrixGCmvpk+Vz5T
tDExk65e9LowzfhMGkBrFSNtXMZ6ZOrfkNZZqGcZ62Xd3ug1WQ8GqhimT5nf
JJPWiKFLdDbJ3z98J2yUaT41vct+90xx9p+S6V7e9DzmwzDoZ1omHVZctGk5
npvJ0+Pd0Rma2LWM9ctUc5vnMm9rj9Fg/zI/PZOW0Ffo72g+c3SKrgZkylED
H6EfdATHbGGt3uPYjExa3SzT+qyBJqnZvIwNzLTmXV4HXvnIc5m3vc/OPcBh
sBD6pQauWezYTr7X6p7x/5+7zcsUoxZe2jNTf0eP52S6fupGf7Q/e94BeBm2
mZ9pPdiHv79M8N6cZZRr4J69Ml3Hu26c41We2N6Z5nKO2ZlyrA274H0uyuTJ
9slUz56wEdzzrdt+mWLwzP6ZYvDN945957pJ7hM/INMVxjswEwfRn+r8FI8P
ynQlf7DrlrjBI3DRz75WnHRIpjzxQzPF4I9fHPvZ/cMysdMSr08MLjo8E1/A
Ens6Pt25IzJdYaMjM12XusE18M8Mj3/z+KhMYzjn6EwxuGOZY3+4bpb7xI/J
dOUMx2biIfjlH+dnO3dcpivnPd7n/tt7c074baI/Mz67Oc5TB8+cmGlNuAV+
gY3me/yvG/l57hM/KdOV2pPxkZn6MNOpvjZy43ud73cYBnY5w/3TM8VhoUae
s6LX2dtzTvMaMA7MA6809ryKjZostzY1Z7oP1zT1vZ3g5wcLwCgw0dlet7nH
8BFcwxjeaeHYOcvVnOvYQa5j/r5ZXRPUsP55mRgG3cA9F2TijVXc6B/us9A/
3/PgEcZn+V6aWXvwB1q80POJ8b/1P9z/m2K4Bh6Cj27My+//sq1btssz8Uxb
56i5xFd46VLn6R/rNWCj1T0HLoDxYKG2rmV8hfNwBzwDe7R37gT3r/T4Mq/P
XJgINiJ/jeeyRgf3r3aO8VWZPAo+5hzPg5Wow7+s7zx+Bda5IRPPrOU1Yabr
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
JkZ6yGsSg3mG1cRGW9eU6+7cI27kNnJ/G9fy3cB3xHo1sQbrwBt8H42oiW1g
Hbwu/e1qqnnca2/sOcM9/wmfq+b9mLN9rc5LT3guHuyymr73+Z7lN2P/mr4L
4Z9RNXEMXPOMG3G4hpo+Hu9Q05X8jjVdmQNXja6pD//sVFMMrnnBsXE18c9L
jtEfW1OO2v5eq5/Hz7tuTE0MBK+84tiAor4WV3gEZoA9di3rx9eUY97bzu1S
Ex/BNnAKLDSxpjVhnNcce9X7DHKf+M41Xbf0/Mk1XVlvitd903vBERVPTK0p
Thvq2OY+F+fbyrk3vOcE3+s2PvPbbtNqmvua959UE09xv7AM3gFfASPsVlOc
/HTXVTzznuPwCxwDE8FJu9eUow13bKE/+5G1et32noefnlWTp6I/yvGRHlM/
o6Y5cBHe6uyafBVeCE+E12L8seuZP7Om+97W94Y3Yy5r4LnwXniwC2vinNb2
aHi1Fr5/nsP5NfkovNhYzxvjMf4JH4X/GucxtfiX1l4XfaATfMnXrsVb4Wcu
romd2PNc74vP+sa1n/r+8HurWXOX2get6rnU7uw98F/UUHt5TVqtPBj+i7Pg
p9o6hwe7siZGwkPhq350w5PhrfBo7V0DF+EVr67JX+Eld/W8XTzGm3R07bU1
MQNeC7+Dr8Lz4LvwXKyB51rLdXit62viIurwW7u7drrH+KxOrsHT423+V5PX
wnPN8j4zPcYz4Z3gqZtqYiG+M/FbeC08Fx6MMWvwvbqe6/BXt9TEWngZPNZf
bszD4+Blurrm9po4B5+Jv8JnzfO8uR7jszbw2TkTZ1tQ0+czxc8d34YHw4vh
vzb0uvguvBKeCT92Z02MhLfCY63oxjy82EWuo4Y8fov5eCu8Fgx1b9nimv65
THO/g+fUxDVNa2Kb+8rr/WXbciPNYe7dPg8esAnPp6Z39VPrtKnXmG1tL3aj
Zk/vw37w0nzfM89sL+vty6LOSHOtJfQI38yrKY4GiV/g3P9RdeZxW01fG5dK
IaEkqSSlRKXnzOfciEilSKWSTEWKaDKTecqUeZ5lnud5JvOUeR4zK0lm8p7v
77rO5+79Y3/23mutvfY+wzr39X36va+vXH8zXL/UFfzE94ffs8x1Sd1c4jqh
jmCKyzzGdmCD6vQ7n4PxAV7HehjlAudnn4Ndhz/0qfPSQaVt3wZ9w7j+QxtU
fzznwxr0nA9vUK1RPzNdq9TZVX4fFjr2cMcT28ZxsNERDVpL3bV1PcNT1NK1
rtVjGlQ3v9qO7TSvof6OLOdzvJYcR7m2qbkbXZO8p7+4/o52PVN/1/u95H2G
IdrbB0ud6hr4z/VEfdzqXOSEmaixm10DFS8dX45PaND4zz51LjqxtJ3UoDH1
Rz7yntunzjOnlPOTG1Rv2G5vUG1Sa7/6u3Bsg9YTM6scH9cgO/tzLXc21OuT
tef7nJzxbNci9XR3gzT9Ew3S8ac3qO4a2U8c/MSc2pvdoDq73/Vzhu3U470N
qlNqC33Ab/IP9lFjZ3ot6+AfahVNjbbuaR9s1MN5YDIYB+7p7UYsepwx9ofL
dpbzU7//+Xtzmv1w0SMeV5wEp8S+7scaxEuBGxzDfYCLAvuYP25/5Dncw5g8
T7qHGZ5qEMPAMnDP07anboxhigaf7RqfBdbA96jt+MkB78BCz3g9NuZzPYZ/
nrUN3qnZRmP8nHt47PkGsQ/jOxwLGzF/wXb8L7rfzA3GgXlgo83sY/6S/XDO
y7bBClvYRg+P9Ftm/op7bK82iJsYwyyvebyl48kHd7xuGywEW6Dr4Qe4aCv7
YKB5joFn3rANrhlg29a2wT2Msb/pHkZ6q0Hsw/gRr4OHmL9tO/533HMWGATu
gYngjm3s43zvOgbfe7ZxPlitv58Rzw2WHWL/484H53zQIF6BX4a6YX/KMXAP
8w9tx/+Re9bATx97jGb9xDY07AjbPm8Qw8AuIzz+zD5i53p/fneG2U7cpw3i
G7hktG0VD410HljoC88rFhrlOdfLNbzfIDaBhdD/sM38BuWEhWAZfDAO8x3d
GH/lHv/XtrPuJX8f+K3ne/GNY9iH7xKMU7HOdw1iDNrrtn3r2Io9dvac3F/6
WuCO3ZyP9r3ztgr03ec7jzZFx57o2IqT4K5FDWKYBQ2ywUwL3Y93g2+IgYfG
2wcLTHCOPZ0DHmKM/ecGsQucsbdtcMNeHtMv9rqfvM9E2z/wml+dY4l9jH9x
DHN0CxoFfQIfTbIdzYMN7fJng3QDugmGIS9MwxhO+t09MX84jjEaAy5Cu3UO
pLHQWugydNcUx8Iz6KX1A2kozoS+au6153rf37w3OqdLID6Bqybbv5J953s9
+3xpP5qHM7XwXuyJbkA/oEfQUmgqdBb66gDfAzRYj0BctJrnjNFTaCw0FfoL
7XaxnyvvAMwLF/F3iY0CxaLFDvF7hB1/r0BcdJVzsT96rdJkaLQ17CcOXbRx
IEbCRz40XPdA+3OORdZh6Lc1vYb4X6yVjnJDZy127M/WXWgxdBo8FQbiJTTV
2u6Zo8HiQFyETkGvoGHQI2inm9wYp4F83GP0DmeqNGYH57rB+7FvQ6B8vy+j
u+jRXnkgXkKzUZPoLvTXn9ZixKKvaoEYCT2F9prlRiw6az3HEQOnoa82DaQP
0WtLve5f67eujiG2byCmQmuhS9An6Cy0CnNyoHfQT/e43yLQGG2Fxprtxjq0
GNyCBtsykEYjN3ughdBZ6KGugd5t3tsNHc+6/oF4CR6ChQaU7c1Aa9FQZzeI
fc5pEP/81aCao/bOtR0/dUbdrOc6pXb+5h56PM1+4uAk3rVugWoJHzX7L/fO
4xk+K2de2dfd2Nezrp/hLY6jzv5zTvLBT9QCNdM40DtNzW0QqC6pkUblePlA
44PsJw4eauJ6ozaoMWq2+vtDz0C11zzQezjTdmytvYa6alr6Nwy0lhwrBLJT
k30C1dQ1DXUWahaoRqmz3q5P5m28BzW2YmlfLtD1ch3UE+9+FCgXOeEdapR6
WcX1FwSqjRaB6hY/dmzwE3WLfeVAv018f34sW8tAeai/qpZWL22rucawJYFq
8CafhTO19xpiVi39KwU6/5F+ZllQr3PWVn/HwNbJz5baKoI6I7V23WwW1GuJ
GoRp1ggUM8vrWA9LbRIohljqkNpqW9rWcq1Sb/0C1Ri1QI1RO7AODDQkkNYn
jlprF2gParuNz8NZYKy1A8VQlx0Cva9nOh95Nw/EBtsGyr1moDyneG/OAOvA
JjDKw27U40PORU12LOfruD6pTWqXWt7I8cT29pg8A30Noa9pcCDOqRiG/jHH
whqP+ho4f/tAdmyDyvE2gcaPed+tAu39mGPgFL4jvXwOWAYG4rrR+Wj8V2yD
hYb6nnCuyHH4tgvEOMTAOcM8h3P4/qAn9vMczfys2/BANpgFhoFNnrOv8HhE
oDn7JN4D9nne/sx5n7GNPCMD+ZjvEOgaYBy4ZPtAOYgfFSj+RV8rDDPW8cx3
CsRILzmGHDsGmhMzJpDtda/d0uv6eQ6f7BaIZ2i7BuKc0YHykYd5f/s5b8Vz
OwfKQe6tHPe61/T1WXYJZJvn58gzhsVhn7e8/5vODTPBM3DNO25w0SDHVpw0
PlCPf49APWtgoD0DjdH9EwLZ4IAPbJsUiGc+so3xxEA+Yoc412DP33fcXoFY
B0b5xLaKjT5yP9Tn5Gzjyvi9A/lYB0vAEDMCMQtcBKfAOZMD5YRxPrPtU+8z
3GPs+wbqd/D6KYF68k113i+9F4xTsc60QHbaaNu297k43yj7vvCe+/hax/jM
X7lND7QWG8yzf6DxTp6j+9HwaHm++Xzvf3A7OBDDHBAoFgY6MFD/nRt8873j
6Xf1mDyHBOIJuAK2OTwQz/zk94f7vnugWH5r4J6dnfdb58B2aBlzWKDxQuea
6dwLHTPO+x8UaP34hrof/jki0LpjAjEMPHN0oOuu5jDBb44ndk/fH2KO8jrG
Ex2D78hArAIT8D2a5FzEwjP4jvc94x7CjJNtr/ysOyHQ3scGWv+7zwKPTPBe
P9t+nGM/8zu1H7+PgfLwXYQF0CfoEbQU2gtthQ6b6vkUz4lHi6HXYCv04R2B
uAjN1dVjmAqddpe1BzoL/YFWQk/BDfe4Z45+Q5MRh45b6rOgy7o5H9oKjYU2
Q8c0cm569Bi67IlA/IC2QUfdF4ij0CzoGXQ+mgnthBbbyNf+QCCthf461Pug
yZij0Xo6Ft3VzLHoLDQX9w9t9kggRkK3oFnQRWirPrajZfCt6GvgvGhI5pwF
vYbu29BnRneRA43FuTn/Y2V7yHuyN1oNrYXmQjOgF2AF9FTke4HWeioQO6Gr
iEVn8XcGdBn6DD2VOAb9tZpj0errBtLr2NBurHk2EBehtdBY6Cj01P/+ZhEo
NwyGZnsmkKZ6PhAjoV/QMW3cWIc+QsdlXofWXMX3AC22ideiwdBi6DA02KuB
OAc9hcaDp172PeBeoL3QV+gs9Fg750CnoLfau+FHv9zrvOSEZ94q2+6hYtFS
6Ch4CQ3zuvdj3xcD6Sv8Z/n60Gic9Y1AvAQnoXu2cg7i0WKduH+Baosa+7wc
fxZIM1Rsc0qgmqO2bg/qjDSL+xloTGwXx8FMpwZaS01RP9QmbETN3R2ors7w
e8j72N22i72G2jqNe+u15Dg9qNfc/YHe1Y2COhfNDlTPvL/3+v3jvYUbetgH
M13kZ8sz5j2mPh52LnJWf6N4MFDtUYfU3Nm8ix43c6N2zi3beR6v6HwVD63s
vS4s2wWBahDbo4Fqs8HXT82f6fXEnM+ztL2pr+XxoP4dYe01rjPq5klfD/V1
cdmu93vF+/V0oPri3b7EMat6HethIObU2KWBamtuoHrgO0sNnuvao7Yudwx+
GIg64p27umxXBaopbNQndfNc2S5zfnK0dsyVZbvCObG9EKjWNvU61sNGqc8P
e83xXm0dRzys9Fqg2uHdpn6oPxiG66d+bijbtYHqr539xL3iOffqukC1S03B
SVw77/NtZbvReagx6ok6QmsS/5LXVJxzU6B6gycG+EycDWa62TGdgjrXXeOc
85x3a8/Rs7AQ3wHywDUwDbb3AnHREM+xvx3Umecd+xk/5nXwzjZeA7/AdbDU
EMcyf99++AVOgBG2s+9Jjz/w/F3nZy1sAhvh/9hryTHU44/sY/5hIK6AHV7x
OniEONhhrP18g+AYvknwzXDnhIc+DTQn5jPbYIeRy6yDbb4IxBqMX7Qfthjl
Pb72OWAaeILxl45n3Sfek73m27aj5zDZCK//Kqhz0Y6O28HngsPYi+v6JpBu
hxPQxvALnPO6rxveYf59IB+8BD/94DENlsH2ndcSNyDUbzPfsf/pVK/b3T0a
ljHcsMA9nLMwEDvt6jzYKwb6yTEw0CL38A9aeJxzj/UZvrUPpoGLaD/bBv/A
L1wzXMN8LzfiYKC9HPeLe2KXlO1Xj7lnv7nfxw2WgG3gFnTlnx7/EcgOY+zj
NTDXnr4GfL87B/su9jn2ta/iof2WyQ0L/RWIgxh/YX/FSf/YN80NjoFn4J5p
9jH/1344baltMM7+ts2wDR5ijP0/97DNcqG4hvG3XodWZw4DNQ7FFcs77iA3
eAM/vMEcH8zTJJS9Uagc2GGZQ+2HGeAR9Dxz7E3DOuesEIqVGC/0OhiHebNQ
Pf7mjpvpBrOQF+6Z6RjmK4aas+9KoWzwxFG20cM1Ry8zXzlUj61FKG5ivMRn
5vrgvL/97HgWq4SKIRaOgVFgFfgHvlk9FNsc6xh8q4aaE7NaKBtMdMIy62Cb
VqE0FeO/7Id3mKNnNg3FLegntBMaqnUo/0nORW74id8eNFctlA4jFq21nu34
/7YWY+1Say9iu3o/9moZ1q8VvYRWOt0NnYWuQh+hm2AjcqDD8G0Rynav16G1
0G7oNbQcnEVd8a3gbyVosy1D8Q/6CR31gBvj/qG0Djkq7YPWwYb+Yv19zkv+
vqH86KBKg9Gjw/jt47eRvx2iw9BgaDH0F99CvonoPfQXOgzdNSgUL6Gz0GTn
u7EO/dXHcY/Yv7LXo73QYHDQtqF4D92FZkJXoaEi2/Chw1ra95jXDg6l0y72
ueATtNawUProMudDsw0NxU5oFXQKbJHYhx3dgmZB16CdRobinMw5yT0iFC+h
wdBb6C40Wuugrr/QU+iqq4O6hkO/beK8z3sfNNL1jkW7oFtgD/TP6FC50Iat
fCb8a/maVrdvTKjr4Ho281pyoN/GhmIqdBZ6C812r9+FfqGYB420SygfZ0Hf
9fN61qKv0F9orN1C8Q8shVbn/eDdganGlW1BKI13ayCNS51QUxXnMN+kjFnD
9TzL5+roPW7z2s7eF013C/czVJ2eEtQZqU0obcf5uY7NQtXmXY6j3trCeqHq
glqg1hi3dy1xL+AYanHzULWxdqganm07NliKusXeLpSO5vnzHmwVqr6oxaqW
OpW2tUKd4TT7iIGH1g0Vc67PRB12tNbYOlQ9cw1cC4y2jmuV3Ggt9Bf6jXhi
ewV1XursOqROYaZtQtUdtUI9UntdSlvXUOML7SMGBqLGhoSqK3zU0/rlvFuo
8cWOwQ8/UZfUzXahfNRl93K8Yah39HL7iYONtg9Va9QRNUlMj1Bz7HDJBqHy
XOr7OzxU7fHuUwMN5byna+NKx+DP/UyorR1C+ai7XuW4d6jx1fYTBw+NClWP
L9pHHW5c2vqEGlf1SEz1t4gdQ9UY9Uu9hOU8CHW26xyDH46hJqmhnULdC868
UTleL9Tz4plEofJQfzuHqjve5yxUDdxiH3USl7Yk1PgmxxEPD1GXu4aqB8b0
MA+1yvf8LY/xwUPwDrwBa7xt/0CPqeW3vAdnSEPxzjv27xlq7Xu2Md4jlI/5
+FD9NvZNCBX7vu8H9wVWhFvgmEmhGOl958QG8+wdio32CuUbat+Hbvi283ii
Y3n3qYGBoViDPPAGNbNfKLaBdeAIxvuEivnEubf3msle/6nPta33Y82+YZ2X
PvVa/r2x8HvIXtTpFPRWVOqqsq0Ui2PgmvlucNFox47yfFqoHv/0UD1r4KoZ
ocYwz/6hbPDCt7YdFIphvreN8YGhfMTu5FxjPP/GcQeE4iG45kfbdg7quehh
mYofjkHjhvKx7hf7jg7FNXAO+gUuOjRUTvhmoW0LvM/uHmM/LFRfcdLMUD35
jnDen70XfFFxxpGh7LQJtu3qc3G+Pe1b5D0P8bVO9Jl/cTsq1NqF3v/wUHzE
9cI7s0Npejjg2FB2/Mc5ruKf322HZeAbGAp+Oj6UjzbZNr5Rvfw9q+L29Tq0
9UmhOIjxVNuneE78CaHWnOy4f93gHVhomuf/OJ71J4a67km+NuJOCRUH+8BD
8NEZvtbGnmM/LVTPfTjdfsYH2g/vNPIaGAEWgo0aO5b5mfbDL/AMnNLUvkM8
Pstz9j011BnhINioqe3YZthGnnPsY362+4qZznUMe57nvuKiFT2Hjc63Hf65
wDY4qIVtK9sGJzHGfqF7+OeiUFzA+Bivg4mYX2w7/kvcwz+wDHwDH8ESq9oH
D13qGHyX2ba6++MdC9dUdvJcHkrfo2deDqW1YKGTvA9MxPxK2/HDQuiy50Pp
KvQVmgut1cYx6LdNHIvWejEUd6Fx0Dpt3ViH/kK/bOaYV0MxD5oTfYWGOt3r
0EfM0Vmb++ytfLYr/DxgVu47ug39hqZDu/VzXjQVmgtdhR57PRQvoZvQTx3d
WIfmut9xxOBHW7EePYUGg6feCvU3IH5H0Ez8ZvN7ze/LQPvQW/yOr+c1rH0j
lB7r7HPBJ2iq90Jprq7OhzZ7JxQ7ob+28RitheZCb6FB2/ueoZ0+CsUw6K8h
zo2GQm+hoz4IxVGVHuvufOiv7ezDhr5CZ80K9S3h+8B6bJf6m4ReQjeRG+2C
boGp0GOfhNJr2/s8fL/wX+HrQztyDZ+F4iX0GBptuHPwref72ixSz7e+eSTN
hfZCg6Gh0FqjPecsaDS0GLptpH3EzA+lwdCG6LCvQ3ERugt9hr5CZ6HPKr0G
86CXvg+lp9BV6Cu0yU5ez1nQgORFm30biqmIRRuhi9BfO9vOevZBr/Fe8j7D
EGg5YtFS1/t58lypJ+rjhVDstJB7Eyke3ZeHYqIiFBddFaoW27hRa1eXbY7H
bZ2PvHe4rtjrOu5LqHrD9lKo2qTW0Im7+n60dcw1ZfsxFO/BdlzLK2G9PlkL
o/AtKHxGapF6eq1s9/pd4p26MVTddbSfONiLObV3U6haejNU/dxsO/U4L1Sd
Uls88y/83PFRW7d4Lesecl1SQ2+Hqj/q8javJw8chp84NOK7oeqOOqq46A7u
tfN39nPi/DeU7U7H8G5TS++HqkNqgPqCde4OVXPdHYP/CdcfcR/ax/25p2wf
h6qjYb5f1Nt9ZbvfY+pqB1/3555Tbw94DWvhp8G+FniOmvs0VL1V/HZXKDs2
mOlB5+kV1hnpobI97PHG3pO9YaaKix4p26MeUxej/WzgJGrmq1A1iY86e6xs
j3tM7Y2x/2XXGXXzjX3UzhNle9Lj2H7i4Abexx9Cva8VCz1Vtqc9psZ4j6nH
112f1NIzZfvOdvxzbae+YAt0PfzAuw73jPOY/WAmeIbaxA7XwDrj3bC97Rjs
P7mHkRaFYh/G73kdPMT8Z9vxL3bPWWAQuAcmgjv2so/z/eIYfEts2833A677
0s9itGPwf+h8cM5voXgFfpnshv0Tx8A9zH+3Hf8f7lkDP/3pMWzzl23wy1Tb
/g3FMLDLVI//sY/Yz70/HLWf7cT9HYpv4JL9bat4aLrzwEJLPa9YaIbnXC/X
8GsoNoGF0P+wzXKRcsJCsAw+GIf5AW6MG0Xq8S8fyc46OIm/GVAL1FDjSDHs
w28ZjFOxTtNIjEH70bYmkWIr9jjEa8n9n68F7jjc+WgrRFp7e6jvGN8nOIjf
SlhmWqTnzW8f3NUiEsOsGCmG2JUi9Ue6wTfEwENHOgYWOMY5aPjhIcbYV4nE
LnDGCbbBDcd6TN/Se68cKe9xtv/mNas7x2qRfIxXjRTDHJaAG2As+Oh428+w
DXZoE0mvwDowDHlhGsZwUutIPTFrRIpjjLZZ0/NT3GAHuALmOcU5T/dea0di
GebwDnFtI8WxV6tIe+NbK5IfrjrJ/tO8tl1UX/+f/WgtztQ+0l5cHxof/Y6+
h43gHvinsefEwDPrRLIzhnU6RWKcc2zD1zHSmt6RtMLV9sM/60YaVzzUOVIP
D60XqT9/mVyw1Iq24YOHukSawzxdI9nOcz4YqkOk83IG2Ocix17o8fqRmIVr
vsQNLmppf8VJ3SP1+DeI1F/qe9Qj0hjO2TCSDV64wrZekdjmKtsY94zkI3Z1
n4ezr+w1xG0U6Qzs2y2SreKkq9yjvWAk9NrISPcX3YX+auP7TSz6anQkRkJP
ob2ucSMWnbWZ44iB09BXYyLpQ/Ta2l7XzvPNHUPs2EhMhdZCl6BP0FntPScH
egf99Lr7XSKN0VZorJvcWIcWg1vQYLtF0mjkZg+0EDoLPYT+QU+gJbZ2POvG
ReIldBd6i+8V363OnpNjoP3Eobv2iMQ/XZ33DjfWVXxEHDGwE1prQiR9xf6V
xkJDYRviGGInRmKhD+1Ha93r6+7k69nEz5HnuZ1jWYPmQnuhwdBK6KhPPCcH
Gg3NhW77yD5iJkfSVOgydNV+kfgHzYauQlOhrXp5TizfbvTS9Eh6Cl2FvtrB
6z7zWTZyXr73UyPpYGLRWOirUfZ94fXsg1573H60147ea77Pvnek86Of0Fvo
KbRX5DlaCc0E84T2PW7bgZHsaK6nnQONho6DvfhGwOvUGHyFZjs4Ei88F4oZ
Do3EGAucA62GTpvrHn22q9eSY/9Iub9xDNrt2VC8dHjZmsX6zrfxt57f0urv
iBUjbRypfqg7OKZPJDt1+aLfB/hpx0gxL9tHHTa45naKVIfUJHUWlvPIdUvt
7Rqp3t7wnPqKvZZ1sFQQKSc5qDPqcme4L9I7eott+GCmJFIe6pX3mfdwi0hz
4tNI7y/Pc1I53iRSHd3hXNRfXtqKSGNqkjqkfuEn6pI6G++aZA4n7RmpBt9z
Lup0U9cWtQbfMN4r0nyzSDF3+fq5D/29njyDve/ukfbe3PV8j9cw7hvpfJy/
xrco0vVSfwdFev94H/aJ9B5XtUmdbBlpjh022to1Sb1RS/tGqtWtIsU/4GfO
sx/lesU/Iqyz0IDSPjDSmNqixqjNkV5P/v5RnYsGleNtIo2pPeqN2hztdayf
4trjmcGEvNczItXnkEh1Rr1VbDM00ntPzR0Q1Rlp23K8XaTxU/YTBzNtH2nt
M75f3DfYh5o7JFJdwSrUzkLbse0W1utwWFTnt8HleHgk+7M+M+eF5xZ4/e4e
w0TkhHcWeZ+fbBvvMfaZkdgHFppgW8VG/JsJPf6jHPeLG1wD/+zl+WLPj440
hwGOiWSDCX6z7VfHTfIY+7HouUicA9vQwz+T7a946PhIfRUHu/zlGOzHReKa
KgfMcVokfQ/bnBQpHq75x7a/nWOKx9hnRerhqJMj8Q7j6fZP8/yUSD3+Ux33
n9v+3n+G5/hgG5hmdqTx6ZFi4J3lbWtk2wE+14mRrmeRn8kRzgH/nOExHMSc
v+WdE4lbznQM3HOW+6ZuMA0xMFBT+/hWN3eOZs4BAzHGfm4ktoAxWtjGd31F
j+nP87qzvc9Kth/hNRc6xwX2MT7fMczhlpU9hnkuirSuia8FXrs0Eres5hj8
cNJltq1uOzx0sW3EwzLY4J1V7ae/JJL+4DeR30bWwxYwBgzDb9lVkdiBOYyD
7/KozlSrex98V9h/jPdbxXbWXrnM+hOdDxZhj6u9F7+fc9zDPDAMPHSdx/AO
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
H9gfHYYGQ2d1ciwsdHvZamm5v2uSekODob/+KtutifgKfkIboC3QANTb37E4
qWKhPbhXicbvucaozemOI35KXOeiCWXsXonG1B71Rm3u73WsPyXReTg7upD3
era/BZMS1dlHcZ1tJvu9p+bOTOqMtDfPItGY2CaOg5n2dV1RSyv4vsE+1Ny5
rslpiWpkvu3YDo/rdbhfUue3ieV4SlKvueV93gPjOiNNdT2jVc93zxxmujCR
lqWOKkaa7jl2OImauNg1WXHR/uX4ANfnt47Bf4zrj9q6NKlz0YHl+KBEY2pr
NdcZHHW5a7WV6456PLgcH+Z6W+haIwY2omaudO1VLHSoawkbHHOIa/5H1xnv
7NWJ3nne92PK8cxEdUCdren6hpmucU1SU4tcb0eU4yMTjRe7lomBP6iN61zb
i11zR5XjoxONlzgG/+muJ2rrhqTONseV42MTnQ1bB9crPHRToppcJ6kz3uHl
eEai58UzOd61x7tLDd3i+uziuoNb/nC9nVCOT/S7/pfjiYWNqD34hnh+L7o6
RxfngIEYY78jEVvAGBvYxu/L+h7T35koJ3vAWN1sv8hr7nGOuxP5GN/lGOZw
S3ePYZ57E61bx/cEBnwgEbf0dAx+OOlB23rZDg/dZxvxsAw2eGcj++nvL9tp
ib4Py3k9bAFjwDB8lx5NxA7MYRx8DyV1purlffA9bP9l3q+H7ax9ZJn1V/s9
m+n3jr9PUIPU6+OJvokwDwwD48AxzGEZ5td5Htj/xDLxT9rGGJZ6yj3M83Qi
RmAMJ8A0zybilrn25Y6Hj4iDpRLne8ZriYNlYBo4CN7Il1l/q3PPS8QP/R33
XCL764kYAx9Mg16AZ8gHF72QiIkY3+l9KmZ60Xb86I2+HrP+ZeeDc16xDZao
mGYLz19NxBr9bKv5XLDXFl4Ho9R8pud9VnLc73WMXyvbS96/r68TxoGL0Puf
JNLxzN+wH85507YB7mEguAZ2gl+ww0xvJeKggY59LNE7GdgPE7Hm3UTrB7uh
rdFcaOvB9g10/rcTMc/7iWJgnO1s29Y22Ogdx7MW3uvve0AM8R8k4iC4CN6B
cz71dX9kO/6P3Q9zg22IgW2G2QcXwD0j3PA/65zYP0vELrDJjrbBECM9pv/c
52LfDxMxEfYXfH0Vw31pH/m+cAxzuGi0x+wx3zHwz1e2jXEPGzGGh752D/98
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
/9OtmfQX2gsNhc562mdpaR9aDM0Gi/E326cdhy5Eg6HF0F3Dc7EQ2gqNdUVW
12rotFG5uAW9hKZCW6Grcq9n7WrOy7ngJbTZDrl00Ryvq9n+nPdZw7nQMOia
zo5FR6Hp4Ap0y+65tBZ6Ab2EfmB+rRux6DU0FxoO7oKX0Gk75dJqr9q2cy5G
QmuhydBaaC60Erpqnvtdc407ZHXttqnvAfdiS+d4zXvumGvfm52v0mK32HaD
z97etnV9zVNy6Xi0//hc7ISmQmOhqdBWg2zDd6dtaCs01Z65uGg9r7nNz5vn
vl0uzUUcMbw/6CzeITReN8/RVvy9AhZb3z72QVehqdBWG3hODjQR+utDr2Ht
Xrn041t+bui3fXKx0/3OgS6DbaaV7Z9cjITW2jeXBkNbobHQbD09H+EYYolB
oz2ciYMeycRCXfJ6bW2bq5ae9Jw665qrlh7xuo28B+eizqi5wbm0Ief+2DZ8
MNP6ufJclNUZqVtp655rfIn3Y98oq3PRBqW/R64xtfG0nwucRB1SN8Ny+ai1
DcvxRrnGV9hPHJw0IletPWcf9dMTTsw1vso+YuAG3lPex9F5nYV6l+ONc42p
M95j6nETz6mjPq71kbl8Dbns1Bn1wDuPxh+T671/xT7qMShtoWv1evuIqf4u
MTZXHeKjHqJyHuca3+gY/P28D/vtkstHTSXlOM01vtnvGbUK6+yWa/ymfdRY
VtryXONbfT8q5uNZ8O9XPA/qalyud7eWq4aopQm5aud9x+CHk6hF6mmPXHHU
4ybleNNc4zvdqKPNSlvfXOO7nYuccFDFLf34RuWqLWzU1cRcdfWu99vG64nZ
3HVFDVYsxHxv8xPrYKYtc+XnPZ+c693+1PeCayz87aG+YJf+ueqCuuN7BBd8
6TWsHW4fdbg19e66pR7Js1+uXPzNgFp43HnwwUmwTcUx8z2fnoszvrKNxvfh
S4/pR2d1ltsq128hOXbyOsYz0Kn2fesGy8BCYz3HB5fBYOj5Hzw+JFfcgbni
YKSDbNvVcd+7381rDs3Vkw++gC0Wuc3MxTlofDgIDoAhFjr+e58L3joslw0f
aw7PNV7knEd4Pt5+OOOkXHmrMx2cKxZuOTIXnxybi3Nox+TSLsRMcNxRuXr4
6ehcPTHwAgzxmxvr4Z4Tc10H+56Qi3Oq+RSfizn2fX1+zruH85DzuFz9ZMf9
4rPsZT+2433WSd4b/pmVKz/6/txcPIAd7jk5Fwf969h/fJaptsE5p6BTc41h
IDQB36Jv0Ky5bBXzLOc5PAO3nJlLUzOHd+Ch0/N6HDnhJnyz7ccHKzXyGtae
scx69DksAqNwTZxzunMRWzETPmLO85jrhl9gI9iH+aGeN7X/nFxz1sE55+di
BMZwAuxyUV7nmRb2n+XrJc+FtrXwHPshPi/ctJJ9Rzvf2Y5j3wu8F+sn+p3i
OcNCF+eKh33gIWxwDLod5sEGC12ai8sYH+/YipMusx0//NPKY9Zf4XxwzpW2
wTYVx6zh+VW5GKeNbZc7R7WWdfDENblYZS335DjF6xhf7WvgfJeUbY7txMIP
8AXsUHHLDbk46VrnhIuus22249Z2wwYbdfTaM+2HfZjfaDt+eKSz94Qn1rH9
JvfreD84q53n8A7ng8Gq62P9LT437WbHYif/rbm0FjyD3kJLoCnQE+iu93Mx
DLoJPbWN18E+rLnda7vYR8y7uTQUWqqbG3oLnfVxLm5BI/E7ze/1dr7nvEdw
NvoKnYXGQueh01j/hM/EeciNJiMOrYXO6uFc5Pwwl1bs6rPhR4OhxdBfw3wO
9BC6CK5Bd6GruP4vczESWgsthg9thhZDtw33GtZ+bh+50XHoH3QQGgjthdZC
c6Gl6K/1s+W+3ZZLd32VizfQVmM8nuP1PBP0V+gc7P+pz4D2Ge2z8o7xPl2f
KxZNxjlezaVF0CToJvQTOuq7XOyEHkOHocHQYmgz5lwHmm0Xx7EGP1oMXYY+
g6lgObTWglzaCd2E5kJbjbOfOdrkNq/7wWs5C9oFH9rs51z8Qw50F/rrp1wc
hTZDi6BJ4As01B72oXPQMWiYX3P93RnthC6b4JzwDBrsF98PNBfaCy2HDtvc
9wh9hc5Ct1U6Dj22t/OikdgHnYR2IbbSY7/nYqS7nBetiMbhfFt5zjWhJbkG
ruXPXFpsstei9Sb6vH/n4smpfsZf+J3jDGi0gbk4aFAuFqIGB9l2V666of6o
S+rmPe5rrpro6uf6ba7fziGOQ+NVLHQ398hjao36ogafdG2R/868zkX3cv88
puaoMeoRbf6B15IDVvy3bCcXqkXe5U+4V7nqiHqq2OZhnnuu936HvM5ID/IM
PO5tHzEw0yNe28f3jXv2gmuF2ppftidy1UlkG76XXHPU6aN5nd/uL9tjeb2O
OS/nhucqRnq8bF/nqt+d3Bi/ktW56Mlc/+bE3y/4N94fc9XD7n4WPIfXXHPU
x/d5nZGeLtszHmd5nYXmlu1ZjwvnIuebWZ1hXijb87nqEBs1szBXfbIP+81z
HRLzXK6aob4qLmK+yGtZ9z9+yvUu8h6+6L14xyuWeDNXzfA+wzEv56oLao33
m9qEn4hZ4jh81NwruWqOmvgtVy1Sa6+V7XWPqSnq469ctcScWpvndayHoxZ7
L/b8I1et7ZvXWe4lz7HDRm84z9bOT26YhzqEX+AZmKB5IX0Ps8ArsM9Ur4GT
mPOeT7OPHgaCa/g7IPzylN8NnjM5YB98jQrFwTDwAPxScczyhey072yb7vVL
czEPPtYvVygfY9jiEOejNS60dobP85/txDQp1MNFTQuxBixyhNuKhe7BEb4X
8MEKheJhIO4LvIAP3jnc9mZF3c/fBnjnd3Ie8q9U+lcpxDDHeA05F3j/inXw
wRPHeh22lct1LQqNj/Z1VGx3tGMqLjrGNta3LDSHZ1YtZGtViItOtB0b3MMY
plmtUE/M6oXiGMNMrT0/yQ1+gXlgq5Ocs2KYtoV4gTnsQ9waheLID0OdYF+b
Qn5iYYtTbWe+ZlFfDzOh7WEFWOM07wXfMO9ciLtgGBgHjoGBGnm+nOeneb52
oTnx/HdaZnsMS/Hfb6GHNzoWYgfG8AN7rFuIYTrZd47XNXHcWoXOxl7rFLIR
166QjX1X8LpqfTPnbuxcZ/g6scFV6Hi0+8aF7gEM06UQBzGGZboWGmODfS7y
eH3HXeT7t5LX8G3iG4V+gHu6FYqBFeCbS9zwtfQY+waOW8U+2ATmWd3+ioE2
LNRf7rXdC8Wf53OsV843KuSvuOgKx1/j60Xzw0K9CvFSG9+Lq9ywreEx9t6F
+jW9vk+hnnwNhXrYBk0J11R8ExSy09rZxllae4+17LvG856F/OjTG5zvfzq1
0NrrbY8K9bBQXIh3GMM8SaExttS+m91gGzhnHc9v8jwrNIdz8kI2tPdttt3q
uHU9xl4U6mGbWiG9xLjSTOgdbJsUsjOGedBWexbyo4vQX4Ntf9e5K2ZCC+1V
iK/QL+gY9MzdXof+2tZxxMAz/O/zJxXSV+gsNBbabAPPhzqG2H0KsRaaCu2C
hkFbbeg5OYbZTxz6at9CXIF2QnNt7DOxDs01wnHEwDxo0SmFtOE9PjvPrmJZ
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
Qts86O9E9oK2Q+v08DzroMnIdbTPQ2402COh+ArN8HwoBkBXoa9gFjQVWgod
hbZivIob7wPthp7aynmeCMVI6Cj0E7+D/B6iidBPvUNpJmwn+31P8j1g/in7
sDZ7eCyUHiMXehCdtYZzoK/QZWgsNM62Xhs/9ov+g2HQTs+EikOjEYNOQktV
umlt29BHid/D/0IxFToNPdbWa6LRIs9hQ4+Ri+9uvov4GxxcgTZ7MZRmQi+h
m9DLPf0Zo7PwwRd9g18HN3QQuuflUFyEBkP/cRbOxH7RTPjd53vVN9JvZuEY
7uG9vouw0NtlG136vBmKc+AkNBq/8fy+w1HosddD6TT0FzqMPnqtcyi+2yAU
U1E/1A6sc2aoelned5e78LDn8bsrlD5E25F3RqjaXRrUuegMx1NXZ4WqyQ28
ZnPft4tD6b5+3u/Z9ufenxeqjqinxu7P9Pl5D5vYjzo5h8/EfXypK+oVHnog
VK1ROxeFqhXWr3jmQn9+1Bdssbn9YZS7Q32/dPU+qL3z7f+QY7raB+a7wD4r
e5/sEYa7xOelzq4Ndb/W8pganOV3zLuGwx4NVYPUzaX2aelGPVwW6jcYPfFH
2S63nbqibqi5J8t2Vag6WdM25m52/VGzV3gN1oKlZttOPVJ71Cx8VnHRlWV7
OlRtc2+pK2oH1sH/ccdQS8+Gut+ck/t9XdleCFWPqX2Yv931R67nQtUg7+ea
sl3v2PaOIXZeUOeWG0PVB/f9FZ+Tmp5Ttrmhaq+j98qe4Tlq6aVQtZr7CSdd
7di2Xo/YG0LdI+4TdXmT113Xa7I22pb64w7DMbeEqg3qgjtNPd5vnzfsxxx1
eGuoukVv7+g+frARzEONY4dnYA2YYyeP3wnFNf1tu805O3tMHFr+/VC8MchP
cjzmOPrvhnXeu7ls79mOL6wFO8AQ8Ays8nEoZvrAOWGhD217yn67uGGDewY7
9hnPwzuMP7GdedhlL68JQ+xu+6d+7u71YKidPYZp2B8cVZ2P+IXeN+0z+2In
/+eh+AX+gWFgBNgAPQ+TfBOKhWhfh2Ib4mAlYr50LDm+8hMftCu6dbgb8bDO
96FYBZ5ZFIphGL/mu7Gdx9j5zSEXzDTMecj5rZ8VA8EWoxw3wrHfhWKuod4T
83AMTEX7wbaffV7ODbfAL4x/sQ1WgWuYG+1Gf7Gf+P5kO3nhJO4PdcHfD4iH
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
ZoIr0EnY0C2r+KyXeL57Jh/2grZkDbTZ4d47v73TnYM1N860bmuvOdufH58t
/A0vod96ZNJmvPvF1mJoL/RYz0wchb5CP/1sLfaT9RRxa3n+Wscwj05Dx6Hn
4Cu4Dm3ZK5NeQiuhpzraPtdjdBkai7itMsWyl9+s2dBFfTKxBznQOeidbTOx
Ezqtrc/F+da1jbmOmWqG+xll4hw4qZPzkhOOQmsFmfQYeuofa60l1lcwVVK2
5+2DXptRPmGfM1LxDzVJ7VQswbh96f9zqjqj3v52XrTimY5dzmPOhH77NVXt
VrVM/xePqavffB7O1cj3ks8eJvg7VR1w5ye5/1eqels3U61Sk9zxP3iX7uNL
LVXMxP8mnvqiXpamqgPuYMUw/6a6d+i+o+yHfzOvxTpNvA/qbUmqO71hpjrk
jnNPu5Tjf+xzgNdnH51c9/i28Nrc/eUy1R53v5Fra9NM9dk4k/1w52YNeIba
pE5XKOdXzNQnR9dM7433x/cy373UCjnJB3NsnqkOuVe/+/3z/ppmqtkj3XgX
K2WqOeq1m+uWMZy0fKb9H+z9Edskk67n7t3mNVgLPYsuGZ1Jf2ydqTaoF2qj
4p7mrmFqkjrk/rfzPH5bZqpNamnVst8yU5+aoj64+71dQ9QjfJNn4qJ77Ud9
rpZpDWq8RaZ9sB94rVUmH+qydaY7zF0m5zaZ8haZ8sEeq2TKc5zXZx/wyh1+
D7BOW9fYDOeiXtYobWtm6p/m90X9wkrUM0xxl/vk2tBn4CxwzN3uZ5n6XT2e
57guPgP7Xz2TnXq/yz7EpOW4lmld1t/Y9nleM8x0Bs4Jv8BUaHl0O/oetumb
yb6p/e61X0OmMXzzgH15ouH6+ft4i0yf8UO2o+u2z9THBmfAOrAGOnaB7Ttk
ei5wXtbr5jE692GvtbnzEr9TJjttx0y+2/g8jy+zv+0y+bNu/0w8s0um89J2
zhTDfMVPAzM9yTMo0xMfOAKGeMqNeLhn90wMA+cMzsQ2zzoneQZ4Hnvg/bPv
LZ2HnLtmelZs9Lhje3ke226Z7hZ3r02m9eAgGCn0+qwD28AuME3i8fNu+Mbu
Y98r0xPfvcv+kEx9uGpopufLbmhx+AdugTNGZOoPz2TP7feSG3kyxwzLNAfv
wEv9nIe5iodes4297Zlpr6/Zf59MvDUuE0vAJjAK30OjMuV90w224Xtpe4/f
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
oWHoEdrp3TT9rzRqzjNeO3saacw9k+vtrGfdLzUqH+0z0l2utNcJjeIlmk1N
0l301/oZ86WvTmwUI9FTtNdjaXzprP3jxwen0Vdfb5Q+pNcaids44wPjw/cb
jWIqWosuoU/orGbGctA79NPHuZ7SqD5tRWM9mSaOFsMtNNg3G6XR5LYGLURn
0UMHNupsO7eHxV/ctxvFSxOEhU4ftjmbFUtD/WnjYp9nNi7+2SD1qfaejd28
OlM3+6dO1c6Gw/5Gjerfnnl+OMlZO7hRtWROzW48HDca1b8ze7XnLXLf3dzP
vnmH/4yfOmvm/MqHn9SCmuk26kyruc83qi7VSHvY7zSq/9PM88NDvdSb2lBj
anb094fDG1V7mzbqHP4idrYdEqOu+sP5wxoVK8egUXY1eVSjaur1jccstEmj
alSdHZn6NN4pa6ixzYb2VqPu132oJ2f/2EblkhPvqFH1slXq7+hG1caWjapb
8+xs+Endsm/RqN8m35+Vhv2tG5VH/Y1qabuhbdvUGNtxjarBd7MXe9ojMXy2
Gc5v3qj9P5B3dnxjXOdiR3/HYNsn71ZtfbUxZqQdUjcnNca1pAYxzY6N8nks
ceKx1Nca5cNXHaqtXYa2XVOr6u3URtWYWlBjagfrYKBzGqX1+am13Rq1htre
KfuxF4y1e6N81OWejTqvf0w+eU9uFBt8p1G5d25Unt9nbXvAOtgEo0yYph5p
F7nU5F7D/t6N6qtNtauW8dKE8T0yfXnOyD0ck3s6u1GcM2KYSTPmizUwh3uw
/z1iZztz2M5Kf5J8M77VqLUniR2n+I7QWfaBZabIfdP5ND7Nz4aFzsucfeGn
yTN3bqMYhw/OOT9jnOP7s36+QcY0M+bRLogPZsEw2GTazH01/Qsztg7Gsgb2
wUPmj09e602XPBdnzvii3APGwSXfzT75XxJ/67tXDHNF/I0vbxQjzRgfOS5r
1JjP92KbLbHfzDPDQcb45JpG8Yx2daM459LkmzFjPDFH9jviuSuTU27cMXv6
YrCVda+KzdwEecdYHPvMlfXnzNqYCc/gmnnScNGZ8R1x0vdjN399rmIw0A3p
0/03xoYDFojtB43iGRyzQPo3Z47vOVkfK80XO7+bGsU6GGWR2EZstFDynJd9
2tt1w/bDzInDEhjizkYxCy7CKTjnx43KiXGw0aJpbBfEh/0nuWIf8bcmj3y3
5bpk1sI4I9a5PXbt0tgw18LZH95YMvHW/FH2jH2WST7tjuRlwzx3pY99jOl+
Gp6Wvybf+xXTftYohrk7sRjonlyXT8M3K8TfFffoy3Nvo3gCV2Cb+xvFM6vm
/Hju18bXbw3uwVXLZw12tvuG7efpi5frF8mzSuzXZR8/zb4wzGge//wycQ83
imHwzEONuu/RGBOsE3+++GmN+DwYP31cs3qe3QONYhVM4HuEe9aO77qZ+3Xu
xzPEjDhivc/Mi3u0UWs/kr2smzEeuTH7WD32X2VusZylW4btN8nju4gF6BN6
hJaivWgrOowGM741Y/60GL2GrejD9xvFRTTXgeljKjrtw0ZpDzqL/qCV6Cnc
8HGuxvQbTcaPjjO2F7rs4OSjrWgs2oyOaSe3Kz1Gl03WLH6gbeioTxvFUTQL
PUPn00y0Ey32hdz7/xqlteiv+7IOTWZMox0eX7prk/jSWUfm+dFmEzWLkegW
moUuoq3MsdMy5jbLPdgvDWlsL/Qa3XdY9kx3yUFj2bf9TzJc43PNWtPatBqt
RXN9FL2AFegpz8CzoLWmaBY70VV86Sx/Z6DL6DN6ih8f+mvb+NLq+zZKr7PR
bmKmaRYX0Vo0Fh1FT/3/3ywalRuD0WxTNUtTTdcsRqJf6Jid0sTRR3Tc8Ymj
NbfKM6DFxIulwWgxOowGm6VZnENP0Xh4aqZmPQPPgvair+gsemy35KBT6K09
0szTL58kr5x4Zq5hu7ZZvn+MjsJLNMxszVrPujM0S1+Zfzr3R6PZ6xzN4iWc
9N/oHzn402L7eH6Nqi01tvjQf7FmaYYR2/y+UTWntv7TGDPSY55n+htnnh9m
+kNi1ZT6UZvYSM191Ki6eirn0Hk8JLYXUodq63HPNrFyPNEY19x/G3VWv9AY
c9GTjapn5/eTnD/nFjccmjnM9Ne8W+/YOVYfEzYrl5yjv1FM0KzaU4dq7k/O
YvqbpKmdZ4ftz+lvlnwjHtoiaz0/bH9pVA2yTdys2vxS7l/N/zHxfJ7zLmPv
514mbY6/I2JfT52pm8mbdT/q64Vheyvnyvmasln15Wy/GJ9tEiceAxmrsZca
VVtTN6sefGfV4LOpPbX1t/iYx0DqyJl7bdhebVRNsalPdTPtMNfLyS/HDvH5
+7C9kpxs06dWv5448djIvu0fe/0ja+0SP/5YadZm1Y6zrX7UH4Zx/+rn7WF7
o1H1t1vm+c3crLFn9WajaldN4ST37jz/e9jeSR41pp7UEa3Jf8ZmxYw4591G
1RueOD17sjfM9F589mmMue715Jy9WXlPy5iexUK+A/LgmjNjm69ZXHROxuxz
N8fMM0/m9SfJ/MQZi8EvuG7SjM/OeP5mjfELTsAI52Zu8vQXaNZ43mblE4tN
zsv8ws2KPT82/YWaNWe8YLO4AjvMHNuU8cMO+MO8bxCO8U3CNxckJx5atFlj
Pr5XbNPFfxSHbZZoFmvozxD79BlbY5lm7QPTzJQ9LdmseXGLNGtNay2VXJdl
PE32Imbp5piLLkvsRZmfNmu5r2WbpdtxAm2MX3DObJmfNeMVmjWHl/DTis3q
a3PEtnyzfPmdnt9m37H/16nN8rk2vnOmjxtWbtYV56zSLHa6OnnYRwy0arOu
GGi1Zl3xz1zxuzZ7toflmjWHaW5MWz02/LNg7nmBjG9K4zd/+uxrNuvKd61h
f+1m9T2zdfLsfpSGJbANbqEr129Wf71m2ReOn5h5s/frE7Nus+asu0az9vGT
zI146JbP5MZCGzSLg/SXiH3ESRtl7vY0HINnlsz4tow3btYYpzWaZcM4d8V2
Z/yWTp+92awrtmk1i2v0l8v8shljoG6zuKITv5+mrZD55TM2h3l6zbK3m5WD
Hcvcl3nMgEdWz5i93xxzzqBZrKS/SuZXzniTZl3Nbxq/X6StlryrZnx/xps1
a2zdzZtlwxMPxuaKax76zHiLZl3ZtmwWN+mvlT27P5y3YbPelXexVbN8+OIY
jIJV8A++2a5ZbPNIfMxt06wxn22bZVsv/qM4bLN9szSV/gaxr58xPfP1ZnEL
/UQ70VA7NGv+t8klN37y20NzndgsHcaX1to/dvMbJpdYmov24ntg1rPW1s3x
vdJLtNITaXQWXUUf0U0fJ0czc6c0y/ZJ4mgt2o1eo+VwlrryrfC3Etrsm83i
H/qJjsI4/0v/283SOnKMtA+tw3ZY4j9NXvm/0ax5OmikwVzpML99fhv97ZAO
o8FoMfprwnwT6T36iw6ju85sFi/RWTTZc2ni6K+j4sfH/BaJp71oMBz0nWbx
Ht1FM9FVNBQ9NXnm6LCtMydG7NnRaebsC5/QWuc3Sx/RSfLRbOc1i51oFTpl
pui4KWOnW2gWuoZ2urhZnEOXySn3hc3iJRqM3qK7aDR6a6S/6Cm66rXGWMPR
b19LXjmtQyO9FV/ahW7BHvTPpc3KRRtunz2Z3zX3tF3mvpf7mDmaSawc9NsV
zWIqOoveejtnzlk4tVnMQyNd1aw5e6HvaKtZE0tf0V801jXN4h8stUnOh7OD
qa4btpVbpfH+1SiNq07U1IhzjL829Nsx9fxY9rVX1vh3YuWwLk33T8+zWXX6
+8aYkXZqlrabPfdxUrNq88P4qbdd3Huz6kItqDX9PVJLngWOUYsnN6s2dm9W
DT8ZOxuWUrfsuzVLR0+bc/CtZtWXWhzV0j5D267N2sPjmeODh/Ztls+z2ZM6
3Ct1dVqz6tk9uBeMtndqVW5ai/5aPP58j2iMeWm/1Jg6xUxnNavu1Ip6VHsH
DPsHpg6fTx3xwUBq7JzU1fOpp4OG/YNT8y/Exzx+mjx1c25qU10eMuwf1qwz
6nxOkZrGRt9tVq1NlRrnc2jG7Ljk883KY97zvSD1/Hpq4EvD/uGpjb/Hx/wJ
eSdq66LUpro7Ytg/sll9tThdahcPXdKselQvr6UOvzjsH9Ws/qge+Yz+FnFZ
6vPN1Msxw/7Rzdrbm/Exj2NmTg1d3qxnYc9fGPb3b9b78k6ObVYe9Xdl6tZ5
Pj6198/MqZMvD23HNauvXmaLPx5Sl1ennufIFfOoVd/zuVK35vAQ3sEbWAPn
mD8j/esyfjd1+JVm8Q4GMn9DYuWYJ/3rM2f8/VyxjLkb4zt/nofnghVxC475
QbMYaf74sWGeHzaLjW5KLK4xt2CauXOT5+aMJ0wNnNEs1pAHb6iZW5rFNlgH
R+j/KD6LZF3MZPzj2BbN2vhsgcT/pDnmpUXj598bfRdOyFrq9NZh++Xwm/jA
sG3eLo7BNUul4aJLU9P4yPj22M3fkasYXHVn+pjnrtjwwnKx/bRZDIN1lkv/
nszxvTzr46tlYud3d7N4CNesFBsGGeVyxTIjfnh42H6WOXEYw9xDzeIanEO/
4KL7mpUT32CjldPYro0P+89zHXHSL5JHvl/munrWwhcjznggdu3G2LDXitkf
Rlk98da8N3u+OfezZtqDybtK1r2/WXzkfvHOk83S9DjgkdjN/yrXEf+smzGW
wTcYCj/9Oj4aJmL7e75Ph3/G7yeJo61/2ywO0r8tdnp7w/g/mpjfxW/jNLyD
hXDRxpnjL/43eVcY0D3w+33isA8ewkdP5V67GbM/nqvn8ETm9e9JHN5pJwYj
YCFs1I2v8R8zj1/wDE7pZ+7e9J/O2Lp/yB5xEDbqx852Z2zyPJM54z/lOmKm
Z+NjzT/nOuKizTLGRs/Fjn/+EhsO2jK2LWLDSfrsz+eKf/7aLC7QfzhxmMj4
hdjNv5gr/sEy+AYfYYltMoeHXoqPuZdj2y7XX8cX14zs8vytWfqenpmpVVoL
C/0262Ai47/Hbh4L0WXTtUpX0Vc0F621U3zot6/Fl9aaoVXcRePQOrukiaO/
6Bd+fGZpFfPQnPQVDfVE4ugjYzrr5Ox9++ztlbwPzOq50230G01Hu8knL01F
c9FV9NhsreIluol+2itNHM313/jxMU9biaenaDA8NVer/gbkd4Rm8pvt93rC
2MzRW37H90+M2Dlapcf2y77wCU01X6s014HJR5vN0yp2mjhjfVqL5qK3aNA9
8sxop4VaxTCTJqfcNBS9RUct0CqOGumxQ5Jv8tjMsdFXdNZjzfqWbJR4tpfy
TaKX6Ca5/xbdgqnosUVapdfsyX58v8y/kvujHd3DYq3iJXps6sTK4Vvv+7pJ
q66+9Zu2SnPRXjQYDUVrXZqxvdBotBjddnHm+CzVKg1GG9Jhy7SKi+gu+uyt
6Kw3P6PXMA+9tEKr9BRdRV/NnDjx9kIDykubLdcqpuL7bnTRrJm7IvHWodec
S+cZQ9ByfGmpt/I+vVf1pD6mbxU7rTJsP2+VP913QrOY6KvN4qJXm1WLO6Wp
tdeG7R/p75J88r6furLWm55Ls+qNbcZW1aZamz3P4arE83l92FZqFe9hO/cy
c2tcn2Ixim/BV7NHtaieZh36fZKz5Ey906y62yvz/LCXsdp7t1m1NGer6ue9
2NXj7K2q02/nnS/RqvduTm39M7Hi8JC6VENzt6r+1OW/Ey8PDjszfjTivK2q
O3U04qL3Pevk3y/vyf7fHrYP4uNsq6X5W1WHakB9YZ2PmlVzh8TH/GSZ57dg
q+Y8n4+HbeFW1dH5eV7q7dNh+2/66kr9uO/FWzVWb/9LjNipcg/uBc+puUVb
VW8jfvswdjbMNEGr8hzRHDPS54a2CVvV/2LWtPZ0zTEXTTScn7hVfXVxad4N
TlIzS7eqJs2ps0mG40lTn8fExzxOUmfqZtlWzamdyYb9yVvV/3Lm+eEG53HF
Vp3XEQtN4VvUqr4ac47V42wZq6WphvPLt8pufurUmPrCFnQ9fnDWcc916VsP
M+EZtcmOa66P7fvxnTt99lVbdcVIq7WKffTny/y8Ga/eqqv5NeJnLxgE92Ci
+WO7Mftbs1Vjc2u1ymaPngeuW7JV7+LS+JhfMPlwzjqt4hX88uM09kXis3DG
67bqan69Vl3F4Kf1W9XHNhu0yoZfbott41YxzB2x6W/Uqjm+iyfXYhnfGr8N
W8U3uOSu2EY8dEeuWKjRqvGIhe7M/A9yD2u3ik2wEP2PbVqtyomFls/cchnf
nabfbtXVfKdVdnE4yd8M1IIa6rbKxzp+yzDOiHX6rWIMbaXYetnTiD3uTazc
zdw37rg/+bRBq2L/06zvmO8TDvJbiWVub9X79tuHu7ZsFcNs1iofvpu36vpA
Gr7hs3rG5rAAnnsozfya6bNv1Sp2wRmPxoYbHknfdeusvUWr8v4q9nUSs11y
bNuqOf1tWuVjjCVwA8ZaN/PsT8WGHXZqlV7BOr9J3vXTx0k7tOrKZ8dW+enT
Njtn/Ps07IArNs74d9mDtXZvFcsYPx6/XVrlZ63tW7W2uV1bNb9B9vCb2MXu
1hrHNzO/Yfa0R6vWcn80Pv1O32Mj3IN/uhnzwTN7t8quj3X2aRXjPBObub1a
FXNkq7TCa5nHP/u2qj/iof1adcVD+7fq+txncmGpzWIzh4cOaNUY8xzYKtuf
kw9D7dmq/doD9vlrfJ9P/6BWMYt7fjENF22d+REnHdKqq/nPt+r6Up7Roa3q
45zDWmXDC6/EdkSr2ObV2PQPb9Uc3+2yH3vfIjH8vtCqPVj34FbZRpz0aq60
F0ai1y5u1fOlu+ivnfK8+dJXl7aKkegp2uv1NL501knx44PT6KvvtUof0mu7
J263jGmvmeN7RauYitaiS+gTOotWMZaD3qGfsJDrVenTVjTWu2niaDHcQoNd
0yqNNmvWoIXoLHqI/qEnaAmai7+461rFS3QXveV75btFPxnLQXPNHT+66/pW
8c+Byft+mrgRH80bH+xEa93YKn1l/ZHGoqHY6Kz543tzq1iI1jJPa32S+94n
90Mje4/eJ222YGJoLtqLBqOV6Ci882ly0Gg0F922UOb4/LhVmoouo6tuaRX/
0Gx0FU1FW9Fan4uvbze9dEer9BRdRV/5nVk88fZC88nre39bq3QwXxqLvrok
c0sk3jr0Gt1lnvaiuZbOmvb+w+yffqK36Cnai+4yppVoJsxzTObkY7sndppr
yuSg0ei4ZfKN2Dw1hq9otp+1ihembRUz3NcqxsA9ctBqdBpt5kqf0TVi5bgr
uZeND+02Tat46f5h26Rd33m/E77nfktHf0ccMdIXUz/qDscc1Sq7ulSHzgN+
uiw+fF9PHX4p9XB5avXN1Nkxnlmr+mrv6tTbHKlN9fXlxIrDUke3KuebqTN1
eaV7btUZdT7ZzGGm41qV592cd+fwlFaN+X8lZ937/MGwfa1VdfR+cqm/Ezz3
VvXVpDpUv6enLtXZ93M1xkk3tKoG1dT7qdOvp07UGr7Rvynjk1rl82G+J54D
9povec7Outdm7ZNbVbsfJ0b/G63an/2fOOyf2qr7VX8/zflzHn6UczyqTXXy
zYzZsdFpraoz9aaWftKqWv1Wq/z/l2+Ad39JfMxf2Byz0OnDdkb6akuNqc2L
Ey//t1tjLjpz2M5KX+2pN7V5aWpa/K15V94ZJnSu72xVfZ7TqjpTbyO2OS/n
Xs3d3Roz0neG7dz0p8g8P8z03cROlefluWEfNXdvq+oKq6gdbLNSbNd8pg7P
b4357exhuyB2dbdM9ovnVk78teljIjnxzmpZZ9Wsg5P02X/RKvbBQjfGd8RG
D8Ru/sFc10zDNfgHC62ZOeOHMo8BHo4NE6wT29qxYQV99keG7dFWcc76ueKf
HyduxEO/jn3kh102SA72X7WKa0Y5MMfjrdL32Oa3rfLHNRvFtmFsGEif/bFc
cdTvWsU7+nckDgcZ/z5283/ItZmGK6yPK5qZwzaY5sn0n8ge8U4ntnZsd+fe
fpN7XS3v4pfJgX+eSh8HGftb3jOt4pY/xgf3PJ1rPw3T8MFA/cz5Vm+aHJsk
BwbSZ3+2VWyBMbaMzXd9s/Rd/5y4P2WdzWP/ZWKeT46/ZE7/ufgY45Yt0sc8
f21VXC/3gtdeahW3bBsf8zjp5di2ix0PvRAbfyzDhne2ybzri63SH34T/TaK
xxYYA8P4LXu1VexgjHHM/a01Zqrtso65VzL/cNbbKnaxf/9M/G+SD4tY47Ws
5ffzH7liHgyDh95MH+9gGnO4xvj3Ge+c+dcTKw7nvNUqLtDHBjjm3daYVfbK
/Cet0vr0/Tux7ZV130huOXHTHpl7OvlwDb7BRG9nrT2Ti+bHCZhs9+TjJw7r
0Cq4BgO50izYRj6M9K/M6f8564z4id/7icM2H8SGH0Yc455cMczHrbHtoPh9
mP28lz1hkIM/M8//o/hY+5+Zsw6O+Xf2Zo+46NDkfzu6gzbBMhgI43gWn+bZ
GP83ttEcHsKPOArL0AS0+qrtyoGDzOEfv5lLtEsb0VKv5/f0kszTW/TVUckv
/n+t0mPmrPO5duXTfyPaSD4abKl2cRQdRB9dkRz8J2gXL9Fjy7RLB9FPtBAN
tkK7mGfm+PBdrl055PJs3om2EuNKT82eeLH0Bx1CT63SLs75fp4p3fdW1vxn
9NWM2bc94yg6Z6V2aZ1rY3N/dJ94ekwcTfafz5zBf0f7mJ87a1qbxqK1cBAd
Zl90GW11Q97TjfFZo136ip6iq9ZqFxfRh7QjTUVbfRwtyRfD0EjrtUsf0Uk0
1YKJE0/jfRidRoOt0y6W4EsP0UILZ+6HibfOp9GPJ2XvtBlf+omu67SLK+gn
eoueor0mzPhzGYujo2gojOXvYBu1i4uWzFgfU9FUjXZpKvqFjqGPaCg80WrX
1ZhmmyR+i+Y5eB5LJ498G7RrTWvTYPTXObnSYLQYzUV70WzL597uyXlzxqZo
l46ioS5sFbdsOmzPtouRaLNefOivqZNvqoz9XlzUqt+MCdtVN2pp6XadPefc
+VODM+RcrNaus8FPLU7ULq1nLWtenJxyT9wuHzU4abvO6zHJJ++SQ9ugXfz2
8/jxmST1aA+4Sf2oMxwzZXtcZyu2q76uaY3ZabLUpTqdJXHilx/aJ2+Xj+en
Jpz56dqVS+1NNexP265aOTHP3Xugh9XMyu2qPX1X/DF1u2JPaI25aJrsYdl2
7cP+7BPHTJzz4WxO3649OMM0B/1AR6gHNTTTcH71dj33UZ068zMMbTO2q/+N
zPHBRjOnVtWhGlO/uErNqaG1h/Ozt6vGvh2buYUSo75mSX2v2a74WdtlV3/O
7PrtOtPG8sw2HK/brjp1zp1RdbBcxuxYasF2PU/PdeN21dcdySkfZlIPam7D
9piX5hr2525X/8zWmIvmGdrmbVf/7OSSEyeNeGaB4fz87XFtqdFmu+rQ/fsG
zNGueD7z+ca2y3567sP9tFPf4pbJHu0Vg3XbVZvOP+1O3287tC3crno7P3N8
VshYTS7SrnOPZbDToqlVtawm+u2qK9qdRt85/uawES1NR/8iTY5V02ffLLUl
B6bCPlhojcyP2GiLdl0fTKxvyP15T/a/0HC8ZbvmR1z0UPwfzf3iFPyzdbt4
aZ08i0fS2NZOn32bdl1HPLRdu67ybd+uK2bAMHhnxD07tMuubRCbvayVNdbP
3KMZb9Wu+Y3yHB9L27FdsY/FvlO72Mdzxjj+Hcq/GWEsnLN7uzhnl3b58N01
MY+n4R0+zYzN4Rp882Sa+Xb67Hu0izPwxjOxYYQ/pu+6Z9berV15n469l5h9
kmPvds3p79UuH2NsgBEwRz/z7C/HRvMf0K5vD6Z5Nnk3Sd+3ab92Xfns3y4/
fYxzYMbPp2EZzLNFxn/JHqz1+XbxhPEL8TuoXX7W2rdda5s7uF3zm2YPz8Yu
9pD2OB6bHNqu/O7psHZdsQ0+oIVpYkzzhXbZte1j2y5jMdjm8HbZ9THTEe06
IyNWZsM5R7arP+IebHN0uxgDu+AM/S+2ax4P7Zh4uY9ql+31zPHZOTFfao/5
ZzT/9+wXe+GPt7Lmm4nZLff5lfaYi1wxEK1/fLvmjbENrvlyu/psx7Xr+m5y
7xE/v/ejv+fhhn8lnyte+Hf2IOaYdtnZvjrsn9iu/n8SY/19MmbfP3HWObY9
znuC38Z2+b2fhlNw0QEZm8N6WAin4J+T2uWDdz6K7cPEHZQ++zfadT0k8ae0
6yrfqe26YhuMgWtGfPPNdtm1w2L7KDlObhcLfZo8uAKTnNYu1jD+X3J+q12x
9Altslzm+Hy7XRplimgWeuyOdjHM6clJr+ElGuq2dukwWovmos0mig89RXtN
kmZ+xERLJ6d1aCraii8tRUdhIRrmruSyLo1oT+aPzX4xlLl7ch/uh+5ZNjno
vSWzX5rtZ+1iKrqBtqAjaC/rj5hrxfjQY/QUXXV/u9gJP9Jd9JY5XESb3dcu
/U47+H2m7egrOsv5XTXxNNUv26VlaShaiqai6VZOPnpq9fjgH1rowXbpK7qM
xjoxa9gjDWhP7kM+uozfw+3iJbqLDqKTcA6tNUvy0V9rx8/8r+JDW82e54Sj
6K5H26VPaJbTMk/HGNNUv8szoJnoJbqJtlo/Oei5NXNPv20Xh3he9kLjeR90
zYaZo4Hmypp0Fr01T5rctBjNtXHWpbVoqHPiS1cZ0010F4Z6ol28RFPRZ3Qa
bUifjfQa3dWOH331VLu4jh6hqxZKE0en0Fbd+DzTLq7AQzQVnXVB4mgvY5qI
vsJHeOnPw7Zfp8bsTyeWFlusXefduf+O59quelBjzvTi7eIeZ1w93Z45tXam
55b+JJnnh3/ubFcNLpM5tXe2Z5f+qAb5jP7mcHe76krNqpfzPL/sjW25zF+R
74oa+mn2Z5/YzDvwLv7geSaPc3tvu+rO+b+oXed6usw52+d7jumP6o4/vlFX
P29X/ayS63WpOTX0i+RSixe36/ypL+zyQPpsl8RnhqxhDxcmh1zXp67UzfeG
7bJ21dtM7TEXXdquWnqoXWf98vjPkufhufz/v2G3q36ualf9qblHhu3q2OdI
jJq4IvP8MNOv21WraurK+MyWPdg/VlsvPhjo++2qF3WjrtTjLalbtXVN7L/J
3LWxz5V7cR83t8YsdF27alTNPdau37evt+t38fftqkfv+YZ21aEaVE/q48nM
8cFMauzxnAl+6u/GYbsp/QXS1NrNw/aD9BdKPnnvSV2pmR8P24/aVW9sf2xX
baqtVtbBUgvF54ftqld1h1f0/9Qe16dY/ISpcMLLw/aTrKU2sYS5l9rFKXgG
m+AfdY1n8I7/3cxmaWy/iA/7c7mOeOj55JHvr7lulbUwzoh1Xohdezg23x38
ZA3ssVXiN8l9Yrhf5X62SXsxebfPPT6a+REbvdsuTU/jYyDsgmH+Fn9xr+Q6
YqQdMqZdsSPGGTHz9RnL8Vjmsc0/2sUYWAPfvB77rmn6f8jaf89aYuniXZLT
+LV25cAt2OmNxO8Wn1eztrk3Y8dCb8WGaXAAHngv9z3inH0y5o+N3s7Y88E1
bNhnr8y7vpP3653+pV15/5mceAb//KddzLVncu8XP9xxYHywDPu/Mrdf4v+d
GHvHdnhl/8z7LfA7cEZ8cZNcH7Qr74h/DsoY93wYO875KDbc8/nYDokNA+mz
f5wrFvqkXRyk/3Li8JHxp7Gb/2+uuAiXYBq8g4e+kDk89L/4mJugU7YjMvf3
+GKTkV2ez3VK02OMyTvFO1joH1kH7xhP1Kmr+Ynj96U0XIOpMNCX4mM8SafG
eGPSTtlwxLGxHRM/XKLPPtnQb8pOcQ5GOi57eydxGMR4ik5dj8t92NuEnXof
ePPgxGMZTKVN1SkbZsE82ATDTN2peUyDh05IY/tnfNin6dQVE4mfrlNX+abv
1NX3HbdgnBHrzNApu/ZBbCPumrZTvwdfTx58gnNm7hSznJx82oydiv1G/Gbq
FAfxxzKYcPTM8MnsnWKYWTrlwxcLnJb5WRM/4qVvxkfMbJ0aaxiI7f121cSB
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
sTm/NNIa8Xswc3yO7ZVu+2Vymnsgvo8kjh6i047uFVPtlvEbWdsejupVjtUT
f1z4hH7bL/fuGdBadBY99rVecQ5d9FhsdMn68Xs0jbZbL8/s+F49N+eh2at3
TovQT7TJXlnT2nTkuolfJ2P35Hfv8cQdkPXtg+b5XfZCd53UK0Zi2zhrYAf/
vrJGGP3u7AVf0XUn90qPfatXjHRI7OZP7RUL0VF0GK1Fc3UypunoNdr06TTz
I+aSV06ahiZ5Lr40Fn2FCemx03ql2axjvWczT3vRWTQXZjoj14mi4cROENah
C+jMTbOeHHQOTUTr0E00Fd75S/ZCI9FfdNvEmeNzTq/0le8WjXVur/iKfqNd
aBjaip4x5otb6MkLeqWhaCmaig6aIvHWOStr0Tnf7RWr0He+lfZF+0wV+8tZ
Z9vk2z73c1H4Cm/t0Kuz5yw6z87y5r064877l8JjlwzbEv16JnTfq91iote6
xTxb9Cr2wcSJxz0P5wxunfr4cq/q8Mk8b5p+q17VLd/NUv/2ckyv6u6tNH1s
JI8ce2Y9sVv2qjZfy7626dW6akB9qKGvpP5O7I3rU43tm/tXBzt6/r2qIbV4
Qq98/pWxZ7V9alJe7IVX1I/a2alXeX6XsVrDN7Sz9+s9m1NbOw/73+hVrHqx
N/vCW7v0yucPuQf72bZX+eT9eq/mnN1dexUvD27y3x77NxP/vaL6URd4Zq9e
1dfT3TFT7T607dGrvppUP+oXJ307ta1GxKi9vVNDagf37NerWlEzztSFOcd8
To+f9e3jm34LepXnme6YkfbtVbya2j81ad3Dc16ducN7tT/733PYP6BX/s78
Iak3taTm9A8e2s5OzYxqVo0cOOwf1Ks+38lTs9hoitTNecP2hV7VjPVHbHNY
3p/6whdTpqbxykSpyzNT4+ru88P++fGfOvMj/ju0Vz5yT5p94rkjenW/6uva
XjHAXKlVz/fEPGfPGEexYyAsNEPqdNTHUpf2Sk883qvfDzbMc1n6IwbCPFf2
im2wDobQ/1786VzcNGNyXx7bLLnyOTkxV/TGvDSadw+4Ze7E2yMumy1rfjNz
1/XGbDNX7l/DSBgHX2El42tiN48lvt+rHDhi3thu7BXP4Bi2Ed9YV66rYme7
oVe8Nnvm50k+vDJ/fM7JvHWvjo/463t1lr6T83RT1lwgDfvgJSyGkehnzPOD
XtnxDk5aKI3tvPiw/zBXHCT+x8kj309yxUJ4A+OMWOeW2LWLYls4sT/qlZZf
LPF4A//c3isGWTL5tFuT175uzj0tkZjbesUP+AtPYJW7e8U5dyQnlroz12XS
MBAf3LNM5jDC8smxXHJgIH32e3q1Do5ZOTY8sUL6rj9NLuviqRVjvzr3hK3M
3Zv9yvez+BjLe1/sWAbH4CDaHitghAd6xUW45Ze94pzV4yceP+mLvb83ZqFf
JIb+pYMxzxqJxSrY5pFeMYzxw73i7QVynrDD2plfPTlvSK4Hk9uc8c3xxRnr
xP5Q5uwHf4lfN+vim1+lv27u0/3+Nn0sc0ueAW55rFcMhG/Wz/yjsfH/TWwY
ab3kpIUW6FedbJw8I5ZoxOa5/TzP8fexmfP9+kP69oBTNsqYLjb/66xjvd8l
/8Y5R3f16pzRsDjJd/GFXukP+gTjYCU85Ip1MBJfnPNk5vR/mhzYx5jf04nD
P3+KDc/gFxxD27jSNzQFbXF8/Pk9M2xPJb91MNEmn5kX+2yv2IMum7hfc9bB
XliLtpl2aP/jZ+6DnqPNaLRtcq+0ERaixybvl177UnLTXZP2i39oK89nyzwn
Gk08/SVWDpqIjqSL3NPU/bovY1qKbqJhts36f+6Nn8eU/WIn2oyecjWm/zaP
jzj6Z7vsw33QfbQWvfZYdAgdQU9M3y/WopHsi7bjR1t5Pp4T7UVf0Vk02Iz9
4p9WzhnGoa38Wwh9RVvx40N/0CH0lHlaio7CQqcM28z90njWsEf6yjyNJZc1
abdZ+8VIdBHNdUpy0EjPRBfRe+7D/dBRfMXM3S+eoTdoLFoLB9Fn9kWv0VA0
3Lcyx2fOfmks2omGoruMPT/coi7n75ceoZ/whhyz9ysP3UQ/0VFPRYu5v4my
lzMyJzfNRevtk33JN2+/ctLyzpkzRr/Ray8k91+j3+gtOunlaKmXoptezFgc
/UWv+a7QWgv3i4umylgfU9Gli/ZLX9GSNBZe+GKvmGHxfnER1qH96D5+dN8X
spdpkkc+dSL2H9Fs9NqRvWKkJYfttmFbsF/7sr/ncpad6e1zLl/pVf14Dvjm
+ZztLfNc1COWmqxfPsf2xnX4117VyRT9qkM1qbZe9JzSVzfT9Ksmv5qxGno5
seLeSd1bb5J+1Z/anapfe7Wfv8RmDvf8LXncx99zLzvmjE7XrxpzDubq15lT
M84wbnm9V+d/18Soj1e9g/R3Th458NBM/aq7kxOj3t7oVQ2oF7zyds6gs0h7
OcPnxGeWfvl9PfuYYTh+M3l27435563Eq513sp51P0od2/M/elV/6mC2YZ53
4+9s/7tXNaSW9k3/X3kOngEemqNftaQW/9mrutg3Y/YJkov9vV59i/zGPNGr
2lI38/THDPNB3qv3i0/Pih/O+DA+B2dP6vE/wzZfv+rwnNyH+8Fm78fnwMzx
mTTx6uyjYbtrGLvMsC07bIv0q77Uwrl55vSvs67mFupXjarXT4bt0/QPS1NT
/x22/6V/eHLJiZXUoXrEN59L3R4Z22L9qsPvZr0pE89ngn4xCr65NHmwxiWJ
FYefVu4XX10XPzXLZ6V+cYU5HINNrkw+LLR0v9hHf+bYZ8rYs3E1P0viL0/8
cv0a443l+2XDDyOOuSrjFfrFF1fHdmn2PkPG4maL3dpL5T7kmDNx+ivmPV2e
fbhPLIORaPkN+sUGxqv0ax7DrNov2/WZwzdYBkfNHztOWq1f3HNDbL5Hvl9b
xjZfYtbsV/zNafgB8yyQ8U3x57t6vzhn7X754BSM8sM0Njy0Rr/8xc6Ve7s2
PvzX6RcTYSRcg0827Nd9r9cvu/n143dL2uJ5NotlbA4v3J4ct2V+ifTZN+qX
rqQv744NW9yRvuvG/dqXddftFwexL539jniumTn5Gv3yMV4mtjuzRitrYqF2
v2z3ZG659DFQp19XbNPtF+/or5j5FTLu9etqvh+/+9JocFp8pYzvzXjQrzG2
2aRfNkyEhVaPnW2V9HHPpv268tks/dUyXjU+fDfvl02+7fql6XEFvsEuGGaN
jB/IeMt+jfHSVv2yYZ9HYns4fmulz751v66YZ5uso79u5tfJeNt+Xc1joR36
xTb2hG/018v41xlv36/xFv3ao70tn+fu/eCXx5Lvt+nv2C++oT8fjw3D7NQv
DtLfOPaNMt65X1fzOOgP6YvfNfn8fuzWLxuGwRdPxW68e79+Z56MbZesN4oV
57dor3AFzvljcnQTp7/HcH7PfvVHftjkT7lHzwUXYhgMsF+/5vbul+9zsdNJ
WGifzD+THIP0xe/bLyZ6NjbfhrX69U1h2zS5aCWM5/tEz/wl62Aneucserhf
vs9lnubxLet95l5psHP6xUX0klg5Pu7V76PfumPix4cGo8XoMLqJnsI69rJ1
5ugv+g1/fTfz/Ogz+orOot8u6BdT0Vn01itp5mmwS/rFPLQNHUVP0VInJF4s
7SevfeFDOu2ifmkbukYczcVu3jo7JhdtQ8vsF19aiI7DEjTetdFUtBQdRVsZ
v5HGl3ajp+g5rIWRaLPLo89mie3KfnERfUWH0Vd0Fn1EP+EQ16vTp9n40YA0
3gx5FnTNbMllzcuy7nvJN9JZdNh7ue6b+6TX3Jf7u7VfbEDX01H/yfP4fr8Y
jB5jo51oKPprnsx9EBtN5R171+f2S1vRYfPm/HyUM0TL0E244Qe5GtNyB8dP
3A2Jpbn8LWX+NP2b+nUWaa6Pc6W76C96UC77ot9+1C9eor/oMHqM1qKzJuwX
w9w+bBsNincm6hfz4Cga7Cf9iqO96C7ait28PGxH5N04F3T2Af1xnU2aGjw6
a9vjYZlTfwe6x37V1OSpN3uwl4P65aOuz8/9LJx88p49bHf3SwPRXvzU3sHJ
JeexvTEvfX44PjR1q06mzPs6LrWrhs5Pbaq7wzy3fvXV4tSpXZx0Yb/qTh29
kpo93LNIXb2aGuTz1ZxZZ/PS/piFjvSsU89qbvrU7NcyVlNH5axfnLkv9cuu
5mZPDdH430sNqK83UptHD/vHpG69m5njg3vUzBWpz7fy/o4d9r/cr/478TF/
aurMelelZtXXccP+V/rVfy/fCnWLda5Jf87+uPaOH/ZP6FdfDXoenstJeRfn
5X2oq+v6VZ8n9qsW1d+N/aqN+eNj/ozUolq5vl9+6vFrw/7X+9X/IE1dnDS0
fSP1ptbmT85zemOGOXU4PqU/ri01enNqzzrWOyvxfE7OuVTHIy4y/mG/YsXh
p2/2K786+HG/zrM6+le+N1/t13dIfeGYb/er9tSYbxNGWDIxYi/InDo8bdhO
T3/C5LkluQ7pV12ogyUyh5lwzohpMIbxHf1ijqVj03wflkzf9dLemOu+1a/6
k+PyxOnf6fnNMXxGw3bIHFWfuAYXqbFFht+bhQfFMFgGk+E1Vzp/xfTv7VfM
Pf3KgZ1+Gtt9/XEcvsAWq6X9ol+co8/+y37xwW/7Yy5yxQdXZz25ccYqyemK
j1ZNrvtj+/ln5rHBY8m9QvaF4VZLDG6i/zHBOmmP9It/tIf7pWnsEe/gngf7
dV0z/vxwz2+yX/t+tF+cs378+N+UZ6D/QPywzGhv7vFniRH7k+xL/9f96mOU
9bKu8a+G7aGsYZ/0O11P52OCZ/rFCX7jfU+WHdQzwUO/6xcfbZzntFGe022x
4Z/fD9vj/eKiEfO0MsYzuOWP/eIc46f69Y3yrfKdorW7mf9DcorFTE8kZyfj
e5IbQ7VjfzJz7ufZ3FMzebBYP3u4N/eNW56Lv/GfP/MscI1ngYmM78tYji0S
ixOwy1/7Y57ZMvN/iu8g9zritqezh36eK2a0v+cTJ/4vyT8aP5R17BFnbZ73
R0M7TzT0WnmvGOmFfvnjGVyDyVzpeSyEnTDSS5nTx0HsI37i90ricM7fY8M2
I47BHa7YY+vkfTH+/F4dtpeT3zo4aKfPzIt9bdheT65dM2cd/IEZMMe/hu1v
n7kPfhgHI2EcDEPzj3jm7X7NvRFfvPRmbE/Gj80V+4h5J7Hy4RHr7pv2z36x
zb654hecsXf8/9EfP493Y9s7vu+lj812jY8xPjJPX+EZGot+oCNoCFqfTlh8
UN97331aiL6af1BsQzvRTWflOWEiuf6TnAckhvaip3yjcYtvtt9mv9H0LY1E
H9FTj+QcbJ3mHOHvs7LWvIPyo79or3OTZ8FB7dHvkrnJslf7pAtpP/ugFQ/M
3qxJj9FlSw6Ki2iq6XLvngHNRCPRSvQYveUZ0Wfi6DW6jIbDXfTaEZmnl96K
FqKV6KrL4rvooPynyvP4bp6h5/bvfukta9Jf4pYeVOwM2aO90mLHxJfGs9cv
5mw5a1ic5vIt9U2dZVBahCahn+itkZ46IbblB8VUtBlNRo/xeycazfeSFqPJ
MBWWo69WHpReopXoLFd6iW6iG+gH+n+u+IubLetcmRiahXZZdVC8RIPRaasP
imHs8V/RNhsOirVuy15WHNR+aDGa7KTc56fRSmsPipHoqPmSV078Q4+tmWdD
f4202ki7LZQ48XQRffS53I/7Wn9Q+mqCzNEx1vxv9KT7cD902rqD4qhFMv5R
9uo5fRAd9O3kcB8fRRNalxY7I+9+iUGdUXVxZr9YZ+L0Mc/7/Trjzrq6UQfz
pW6NMc9Io08+tC8wqHpRTx/3q5bUkbPpnNJYI+b5JH78J88aauuDfp3jhQZV
kwcnz0exs9HmnyaP+htxy4TDmA+TR9z/+lVfh+d+3St2mWhQ/kf1x4w0wdD2
uUH15VO3agwzqRV1s9SgYtTUxIOqB3WFYyYbVB0dm3t1z/hsmUH5XN4f89t/
h22SQeU5uj/mokmHtsUGte5FWdPauGSBnDFnzVlfblA1OcWgnr+6mmZQ59vZ
HrHN1IOqD+d6hcGYkaYc9qcaVJ+vWlIDc+acrTKoGpthUOfK+RoxzPSpG+d2
8fjznTvrWG/27ENNTjuo86tWVhv21xhU7biX6QbjWleH9Dx9v9Kg9nNtf8xI
Mw6qntTFrIOqJ2d/nUHlkhM/qbG1BvW8nHv1N/NwPNugYr+VOPG4aMQqc+a+
NhjUvc01KLt6mSP1eVruw/1gr/UGVYM/SdPHQzMNas8nZz2xsw/qHq2BezDA
ZoNiA23TQWl679e7xbt35Hkslf7GgxrjmjtjuyP9xnCuNah/M/N3CIxC/+MT
Ohu79AbVZ6PBP8l/A+C/BWDvDmpOPtwk13LJJeeKycO3PRivI6YzqP6diWtm
Xn/ZxGGk/qDuHRNsnr77Xy02vLHFoNjhgTwnz2XV+K2SMe7ZZFDX+/PevXOM
S0tiGawwGNS6P0/TXzn7WSljvnQoFtpyUHt4KOuPGGirQdlGedno1ZEOeyvx
Ww/KB6tsMygbzsMa2GyHQbHTb+ODdbYd1BVHbZd5/RFf8f1N4ncc1BinYAx8
8Pv0dxkUA2AHHPC7xGyUddZLXvadBjX3u8TvPBzvOqg8cm8cu3k5ccb+w/nt
B5XDfnYblC+2wUXYYK9BcZHxnoNinCeSE9/sPqgxnz0GZftTYvuJG3GGdfcb
1P1o+w6K8TbLfswbb5J5+23kWew9qBxyD+L3p+ylnb3sMyibuW7Wfiq5McwB
g9L39PEXh/0DB2V/Pk1/i/hvnvFBg5rDVDjm4EH1ad7R7yfGOGRQ8y/Gj1b9
wqA4Abe4Yo/t4oN1Pp9cWyXmpfgcOijN+1J8DxuU/W+xbRu/13MvNPyW2aO9
bv+ZNY8alA9f975zYnbK+NU0PLVj+uxH+k0bVNwbaTQkblEbmObYQfXZdk+O
wwe1Nvsxg5oz3iHzuyaXvHskz1tZ94hB+Yg5elB+T+XdduKLi748KK7RxzZ0
Mo2My76SuffSMA1e2jvjdzM+flDjf2W8b/ryfHVQV9xy4qD0kXeNNb42KPv7
afoHJPaEQeUSO+IeWoeOoWHoog8S53pQ5o4b1L3YG330ceJoCNqCpqBlaBra
xjztRXfRUPQV3qFFaBJaiT4xpq3EsNFH9Ahdgjdopwmjn2gWuseaE0fPTBId
RUNNGD1IFzr79BfNiQc/zV5oOBqHtloy+mrirEM30U+4xTq0FZ05e37L/a7S
CLQC7T51NA094/eTRvL3nymjc8zRP8Z0E+0xbfQH7USvGNMZdM9Id8wUm7M0
4mx6ZfrkoHdoK9xDB9FOWIZGoHewCG6iQU5JHB1ljROytr3TL7QRVrEm7SCG
DqFNaBH6gubAADQJPWKOHqJtPBe6hibCK3THHHlmtNOs2YvfHb9L/q5G69A8
GOSDnK+T8ow8b/ry64PxGfzGoHycN3ujj+bOWZ9nUDzhd5gGWzNj9jMT4yye
nPPnbOAA342j8u0YafHTcuZwwwU5L87Nqe41Z8h59TcB5xkfnJ7YCXPOnFta
2hlyxmjqs1Mjk2Z/njn96Pw5n5ckr/P/reRyHs/IORd7lrOdc+kZnRmfifOe
PePLPf9B5ZkgZ9F5xgIXDuq9T5t3r3/BsJ2X5z5lzpMzfGV/rNe/m7PlzF+b
8+oMXpQz6txcljPk7NGq34vdvqbP2b4k92//5wzbxclj/tL4zJh7s59zB3WO
nW16/4rco/NEI9FrtBwdRsfSZacM6l17b1cN6mzOnnPpbPwg55H9ykGdaef2
RznTzta1g+J055NupinpSTqX/nSlMf1tmL5xru+MHz3sTKsX2ty/KdLOG2fO
lXa+Lms5wxtlPTrdXtXO1cN2Tfr2RefSu7Sy+6YDaUb60JU2pAHV1zZ5LnQ+
HUv70ps0qedEz26W58VGn56fd+1c0Ho0Gq1Gu1uT9qazO3kG9yavedqRNqPR
aErrjzTmdrHRn+bpt4ezV3v332zR+rS676lvGp6jqehK+pBeoqv+FBudRTPS
dH5z6Tn6ypg2pKfoQTrQlR4TT8fRa7Qd7bVvctMj9NJBafQWfUJf0WL7J5d1
/M4by0EH0kY01YvJQR8Zi6PLDsye7JcWpYvoJnF+v/0W+02m8+gd3yPahL6g
M2gSYxrttfgdmWaeHqFBaBE65o2Mfdv8dtAg9I/f+hOzJpvfk+MyJ462sQYN
R4/RJ+bfzX7pOHO0CE1i3pWOcA++1TTH+/mOf5hvtppX1+r7v/m2+Y66+kb5
Vn2QGDnUrho+OU0O32/fV9/Z09LE+b75jvi2jr4r34nNuXF+cYTv5iTxs7Zv
ue+476fv6+gbyu/M5PANOjdrThg/+/okvwXnZd53yvdR7agh3zzfPt/D6XP/
F2fsGfi++e76Fl+QOd/R6WKbNuMLkk894i41qYZ8A33jfQd9I3zjfDO8WzrO
O/B9uzK+vjO+Z3NlXzMn3nflmuSYMvdwXuJmS16xvk/fH7b/AzAXjX8=
       
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
S6HJADq38i26wFkJjvuiRqeO2GBVwIyLfgeo8HxoPpThGI0KvYUZFEviPv+7
ef386HHZwWEUVGku9L/Rgiv7uRvZ7xL9SDjhP9PN09TKPD1J+BAkduXzEkPM
fX5jv9OzqffcfHJSL6B2kAL6/m1n1kmG40Fjoanu/qk3X/3dP9bVwJGGSoaM
tbJGCvz9RmIe9TPPv9Jfiq1dq+hw1uwpN3ufDpX7Dw81OV5F29NH7w7toKCc
/fmH1qt+qB8P1m27FYB7i14V8pb1IY7erXFUqxT6lrw9G7OcwSHTJ/deYxBu
IeoVPn63oZnmlxdxxZLpv7ub9q5iomQILrKncw317+CVce29rgnm89V1duuP
ha+n4OiH+1Kmu3xBE13I7/Ti77t+fa3IimUOHwXq02TMJ+Z6Q66igPfsgh+X
T7W0qNZx2igFPE8fOynohkP/g/K4rII/jt9kW248TIL9Drm3nScscSmf59Gk
SRDmVn+XSn/bhw9bZ88f/VaK130c/M/SnMAvoycmqD2EzPIZ4aSmGsiMx7no
8TGvl/5y+5g29e4w/MSEP/DeaMaZizU7uMd9YP/4ytc9q2mwoyZxrLuYhPmT
aw5wp/igdieX4A5WBpSncb3YeDcbD3RuadVfJ/L0/ls+uIR+xXMPGXovemTt
1zrAhaXdUXROEG76KhmIyzHAdlA/JnEkBxeEWMp6xJn3S+yhbXYq0oPI9LB/
UyhzG1GHnPzOfmV+f+hNPCOxtpWClI8L+xJ7Q5ETHL3/s+/Uu9/+XZ0x1G2x
K5WKL9+qVh3fHg/ZOLNgt0pfcPJv3f64thetWTZdt/KLYB2qeUqOwXy8fCKo
SbBBZwjXRP2MPUZqYCf8qq396GXQo65tW9lLwk2TvizuxxboUbzlcftyEE7v
ElrTNYeGl1ut5h7rSsRJ8ewwNhKx74lwwgkn/J/ql1Qysy6wkyB6jwXqFmKY
s4lEerXu17VHdvPE9Ia1JMz0s1b126+K88KyGxcuC8aCEx9HX1/shVVm00Wx
tkK0LjP03xLmhpva2dIucQw4frRra5yXDy2FklEPbQ88XPJhtq39AIICzm/r
lq9E65f46l3zbGDwdY7u9VwyPlB3zTT64++nNJbuUon5dXXMfpXPevFZpH0p
DUrTcj9rIQkC51857yr1wUPnlsvSjhQcv+589KZ9MITMxANzNwXgmuDCl0Iz
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
rs3ts8eLkudfFxsMo9hizC3lUS3eJqb25vJa4ryldkBvOAWz23tPLgyLR/70
1tDId3/9Pppoj5cLMjJJ8FV+H/OQ+QaeGj3selEaBKZfQuk9BjS83KKX/OxS
Frbt/8JKnvSC7rPTkAj9/X68IOTmd9IQrCXPW6mPGee1xNd/vH/nLBUJA0fy
UkxSsNkqJ8QKvrjwvmCPenw/Zies4h4dLwFni9qzNCk3DN8IGCjqJSH+4PIh
4W0WeKFwbk+dXRA0r2T9jDAfwXIjnbcqsfXwoxkLfky0QEvZiaOsFkMY/Ri/
2kOkGv7zo067StrCS+ME17wsMuKk9sZZngvFtqJp/YIuxnnOAye5XvzaSsIF
6+2yn4ZOwSsw5eLh1cEQ0h6QzvhGxhuq4OH1vRFQSuy7LbmZ8XHEiytMXuTR
4TRzkJ/nWiHUZJd2mO/0gIdE/K4uGyqmHD81REimoupxqGzdJ2LeinDC/8nO
9FNQbtSTgnk7FtdFj8fB1bDBuOK7H0itre4thiTwWXPPf6ByGam7xTOVP8+9
/D/hhM9lV2feU8Wxm4yXX69KjPzww3cjruRjrUTc/e/upE1+l1vekeGmzyHh
HRqOLe35z/QNGY+7nO2kr9OmSJjNzuZNlrBCW52k4XNd4nn7vzxZml9/pyEF
rRxQ6SyMxVrJM6bGsrdRO7P4p2oIBd/uGN0nGccjq/MHfTvND8HlLzY45PQj
8Mf1nCGzEtQvORQsx+MGksfx3Uv8qViXv+vSmeRU5JS9ctd45IMY5QVhN1ko
uF/0IqDBKhIeC1/WBrD5I6k5uVHnDg28V0zevPfNhpiIY1zPLS98dm76nPKF
hiOmdnJmjrkYHOgx6qn2xLspnGUbGoHzCbYbfA0P0EjR23eG4gThH0bnlrAP
Ylav8LG4QgWmFuyeqtjthBTZtPVkvkF4Tz1wsDGqwOLXQu9lfzrislSTbd48
Mnq/VydzSHuBX8i8QkXu78u31EzsvqXJS4USrZ1XVDAZ/Aquyt/r//r5wTMc
hXcP1Q8gaubBUw/zciTND1a+4eQMxekdfhwkKlT4CowlDdJRtsx0HxevDzzD
3n7+pU7Hk7Zqi7LQfDS+Ube5P+qBgbg2/+nfcZlrW4cTzw4LHNm/29LS7s+7
v5qCLrZbWQxghlnAYX5CGbhuR4we03dBoLr+G/WvFJDbZT/Nv5mEPRNvmR4t
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
KjjcYtlft8Ujbdv89NM2XuhS4BP/3kNBBssqOf+WWAzdy+vml/eGpIg0d7Vs
H+pnH7rOMpGP/S9n3b7f5zjtvhfhhBNOOOH/5RasBg6vnGhwLzZ/Xvg2DVnH
NJ2+FrtD8p1JoEYQFQl2Bu8sqxIhviLInaXSE6vV1z/tjetDlKWRVxl/IUyz
WDXiZ/7697zq+VeXTC2oOLDdllK7IhGaD8+0zP/iifNVS3RormQ8PCHa3P40
EDcXlj8QEfaDcONdfa9OGgpudMhc6M5AODW85vzn37fvBOGETwdPF2xQdnAn
41i3Vm0KNRC5XDsscgT9sEnI+3FiAxk65YZGbc9DUGvfN2ervy9sSp13xGT0
wtCY0rHHLA+yUZZcH7gZnzNFOOGE//89iBqj6LmKBl2edrnV1BS0h0YHUV09
YJRpen/W+l4oiy3SrV6cixR2fp+hlYzz1bcmC+gEVZBwYUnGl7f7TRBBP191
9BaRN0444YT/db82KyRcdQsJ8xYdn4zqOoReIaY1sosCIbRYLn57LBU35wwV
x7AlIdjqqN+CWGJ+889cKPewhOpVOuq99KLvytzBvfNslObbrtj8/ugF2cxe
FDekvHhjnocp7ycL7nAx7kfF7tmxYNuxHiSHDbk8fmAH14dWm9knfl6ewLMl
Ot+FuHuRetn48ZrmHEzES351P+4Cp4F+FW2FflgxtdK7HxVhzguBceaLdgyv
s9p22xraDirYH3mku7Mn4Nykl1bg2Z+XN8iZrPFlTkkPttmlW6awukCkek3q
0oB/Tr5EZnTtwCx1EqwoqUWrj2pj61MdNxG26VdPwv8zH40ffxr8hALd29VC
JQtjsZpZzNr/lDc4JVfsY0unI/x9X67UoWzcEnyrGbCN8TmSCfNPt1Wyk3+8
Fyo1Nmz3AO+7szV6q/85/3PCf673a+bOfy5AwzeLstsSrSnYLTWimeftgSVz
7ZQ1WSk4d2BOn7LFTTSkDF5rZyPmo//MXxyfv+lNHBVrg5/NeseTBHL+rI9X
ojzhuebKAqsMMtatdD9WbxKMxhJlDr1W4vcknHDC/7oLdMXdi9hORuw+vd1t
fj6QtXi4X66ccR7Ilutn9NfM7EPNjHmqTmfyEb774LJmLSd8+n6CL0ONBp96
6WX376fi/rw1z2zW/b79am4XJOnQdek/vtfiiy9LshAmZ6M02u0Kfg2PS4/v
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
6ea10fatJx6QkLGsh5K51hRHO8XWPwsOwNJ31zO7hal42KkapnsuHqxaqiTe
FC8sjNyTo3ymBzaKMxrFntljdZlt/PJBfzzMTcn31ulD2+nAkDDdAsz0UGf3
DXXE97GXEcvm06Fq+tle9X0mlD4v1SvwdcOiVy/udZiO4EFS+xbWg08gqbBB
2VyU8T4GHd2fH9bThtDTdHaiOfEeTj5rdS+1soduNz/TavkBTGmlJi71LMWT
xQUSC1Zbg+PAsyc8T8mgfn39dsHCG9Dftn6el7MvTuzbI5+eQkU/XfRQukwS
TLg7+lcE/PP3D6w/LlrzUZWOUuNdo67IAt+atec52BnP383bYLwuaZSG2wOL
g6QPZILDqTiYrdENRzXtYqsf0mD0ML3+m3UGTkiKfo0TcMeX5+EC7T/Gg08c
vy5rGvDD5nmfnDN/jAeHlpavPtfUB61L1cbdNwtx+IlmzEdlBzzR187anE6H
MWtyzbrD2bi1waNx/TZXhLuL8Cq0jWBLKbtendNTXL/yfZwnIIRhPaVkz39Z
UzSMsjD71HbVR3BqMttRv98LOz1kJkfchpAjG3xDVKAG98YEPuvaXEVZ0TXB
5O10tGjGfDjDkgWmu3skt69yQxnXuxlOq/rBGW1zQMu5CDbuYaRVL+2wUOHp
ve3dZLyqyzLPCbuBhSP28mcu+MJ2pm+93o/y2/oERKacilC3N/t81o/yf/W+
PCq8w5Z/joS6cfmsCw9P4+v7/Mlbnxmvj2vlPXesuYsMz87gPT3BNyDHW5J/
6CLj9TjxK+8tziuhoyhKoeRJejYmox/4D/Mz3h/gdzl7Zym76Ew6uCtnjyQU
Z0Jj39jhHUnEvgSEE0444T/bD/gpac96NYj2LrYErgVVSApp2uq53Gza1ZPw
n+tjEt8qchyHkcex1yOkox5F91ra3lYT615/tr/YTY0edu+BVs1qjwUDjuDt
EQyj3PMH79BlSqcyCZd3br9QKHMM0SX7ey04AmGx8IQxO4mEefm0SQ5ZcwyZ
Xnh1wjoAGRo3emenUZDrabZv5vlbSLh0p+1SnjccR01ZBaX6MCMhf+JqXz4m
lXfWdI87onOgoHdX1jD2VYZO3Gd7hINxbb2lNE98261hRI0dhezZNr33+ylw
zE9WTbDKRvqX1yc///g/jDlInXHvqkdwU2+GUZ07nsuIW8Rq9WLP/YOKyb7/
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
PojTKfBe8q3TgRGBB3Hp+Q7av+/8wu/qri0+2VeaaLgS9Ek9hiUdtc+CvPrB
fP/KOOmY2b6fKUhLXqqbXR2JYesvvbS/IU7eWuk657IWFccVTAvSKdHQ/lyb
mHli6sWNOVlpCU9nduNOY13V/pwixLjOYxe1Zb6u7KncoVmy9WTwGsa1+9hd
gW5iZ+lqD6L/9v89l54eXTt9FQM1lvYBD9XzUPSVy+XkmalXP+FXudTj1UlP
7MmYXb5NeUzLFTsn25eMPWP+/zn7dcS4y2wA73ZNZrba1yHxsfnbt6LM632F
9JkE273rRZM1m++0W9fBI+WhaafvAE+SolTiAAMX3usOzTUoQoakr0h8EfP/
uXXn9aAINQp29k2zfL4iEFv6zwWFRRDxE8IJJ/z39U1qGQrf9EfQc3HW4TQu
EqpLEuZ7TMuecu0k/K95qaVjlf8rKrpktzjo5iXieWBOmtceP3yKK2nkfzYC
3Z53bZMcdLTMtj95eFMJtvceWrg3hgaqY/msJW9TIXorr6kum9gv/p/m9160
4ZkHDXuWXHhrYJ8KNQsB7VcvfeBvfdXzttAItDdbZxh86oDEpRdzV0qmwmX3
iECSMg3eAbGC2ttSILjOKG34yNTL7yb8r/kptqJ3SkUjaLYpmPeSQUXZ4dqP
doFFU66dhP9nT/hUnV2XSUWCZtxKLuN4yDnLOn8r8YOcx5GF+X190HY5TJ1m
egMS5Xab2rbZYqGNvk5p5gi0ImdzWlylgv9RJNt3vj+uewv/hYu6fbjDtySC
pbcK36b55iWG2SFG+AzVIYIChUivL2cuh4KmbdqSMp0YB/3T3OTtqoNmusO4
t6a56llNK/SdBazZ+uKmXDsJ/7FecnVU3EhuGOpqvFGGxq2oYzmQqK5EXHfC
Cf8zvr6vcedMQTKWnWiqzOCxx7EwfQG1TczX3RU5xdQr1jDwZIKSK3anEE6n
2b7NXzD11mMQ/j9eKHpA7eEbEta59aXtd7LG+ObaY55ng+ET80HN+DgNDxsT
AgQiUnCjysW+exPzcZCCkYKqzH4Grh8O2P5pdz4CxYz0XOYS8f+/6pp2G7pY
PtIQeeHxzBxKOo42GeXS+6ZeHbz5fd4x7msYaPE8tfygYx5OpbBS5I9Nveuu
8vn0fEuxHuS2Cy6Qe1UKhti6+IfjzPPClsy/kHmHkwKNrn6Lj+e8oewZ93S2
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
5/XAk3rqrZOb2Vib19EvsDMPQT/czjw6RuSL41aXenA9LCuvD7oN/Dq6b9JB
a2uR19hBgVJB9tDslgHkSphVbb9ahHr26LUF4BzPLu+vf6TTfQjvHl4Sc5gp
h5GqkHRANed8y4R/Wv9+sGKe3ft2veRh5Luq9+3aRuKSr+/7dv2D/A/oiHqM
vXcjhJ1oP6O+5b7+gUEPjr8TViJ+rSt6GBISkpI2kTTMSl+nGSzqimEps53B
v9JxImmupnq5IyysYqR1vMMROyQjPMuXhU69LYJbmq9CK7PDcmo2MZ/6UHcK
yrdKu0XH8uV2gxRhB6iMZe92TeC8D7JEntWhVM+G8QNqD6kmH6dWaUrZtZ/D
k3CxZb7v26/Eu0d9lOlykCp9HJ7VcG6/tv1eLuTEEZAH4nJFbtXDPrBZeZ5R
AKZohrcocr1YImU4LeGSiHDHsbE9CYHQfPNV2K/H+vFIcKTFf1YO3jDy7iyl
cc6Hoz4gKmL9lA61qOJFhr3O2MW32v/CoS83Hmrbo2exMGBhDfvpbaWdl2Fe
dWTzhAfRLggnnPBP54uNlwcajvQixb6+1is3BUkGcVMxb/99+yDB6lSH1c8Z
SFe75rQ92g8kl7qugO1hcEuLpM45RkfD6fioDf4HsEyFvnjqRTieh3zNSOfv
g2/hCSd/y1R4lu5oMiv999Xb5+5q9FULrCRZmDNxtVvb9hJWNB/d4dIdDDdG
RiYPmQXR56TWsykxCH5RHftbfDB+areU+v0BG99usFsU2Z+PM+P5t1aVEd9d
/dx8okUm5aguC7nH46c71l0GlTZoL+ATDAXS1xubY1kwn9mZ9Gg4Fol+53/z
vxuEK3JkxVrnAZzIuWmbmFgIye/OLHPbzzmv2sfyr3N3ynieZmLOrq5NsbpU
kArMpJo2cN6POHq+bNMKZQY64xsXa2x3xz7aTq3l0l/uuPrv+hL7u4m+in2Y
GlvHZyx4A6IeThWlTv5oW+g+9uJGH84z/YTO1aQjYmVjk+RhCo4OPWqwvzKI
2MQQEiWiFBT5CLpcgCv8IkhDIiNMnFdyXl2jEQXPxgQLf70QxLUvdvc9w0Sv
26tOOef3/5dQEfvt2r+/f9TRmJr+oo0Jn2M7vmcqX4Tim5DTu84Q8W6EE044
4YRzt/frT5L4yEykLr2SFCsfjGLSkPP82lDINyl8bT7CQkWMgByffAIuRwvV
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
aRx0g3svpmxZmF54KDyu/Cb+C7uSRDI=
    "]],
  AspectRatio->0.7320508075688774,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  FrameTicks->{{All, All}, {All, All}},
  GridLines->{None, None},
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-1.0609870857211234`, 
   1.0609870857211234`}, {-0.6125611795478074, 0.6125611795478074}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.780679876397565*^9},
 CellLabel->"Out[107]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvXmYXcV1L7r77L3P1KO6NbSGVmseQWLGGAzEBtuxMRg8x4lz49ixk9zY
znCfutWtbklobKmlRvMsJIQmBBqYhBgEQiDEPGPANraJ42vfXPsmud/Le9/7
o179qtavqvY5h7x7/3t8Xx9ap8/Zu3atea3fWvWFP/uH73/3b/7sH/7yz/9s
wmf+7s9+9P2//PO/n/DpH/6dfiuui6Lc9VFUt39ClOjfVRTVfvlkFP3/6Y0G
8xqrU58uqxXDUjUvSqJLzGuiDl1aVO99t0E996V6tamzcJF5u1HdniRqS32s
Dg/LqSdnp+qntxTVO18qqScuyqtD+r3jw3Nqe0OsFuvPza9LVJf+Vk5169cY
v+Mq5kpj5DZ4D5+Tz5bN26la1ZyqRy8vqHc+X1Qn5uTVomIStZq/xao3l6iF
sfmJWvBeTvXl8IeeOn/9WC3I4c94b2maqPXlWB3U63uiPafOj8+pd69I1D9+
Lq9evCqvTk2I1VOjc+qEXvs2vfZ+ffEeu54cFlax9CnmtcG8h8fcqC+9rzlW
m/W2LEnsV9cUY7VXv3eX/lmrf9dXucB8rd78eXUhNrt03+hYnZ+bqJevTNUj
UxK1p0XvbGtObdKXWqQfrxPfOZsl1l1zim4pJNa6sXl15IqS+ekvpnPN28PM
rfRlzAr36JUcGxOrs1fk1f0XFdSO0ana0xSbDcEtB/Uqu+s8QfBd/e9onNwC
7+ltNj/693rZ5bun5NU9M/JqR0catclHsSl4woG8oUKTeXu0uSL2Z5kmB7YY
D6EZw6wQ7+H/XfLv9aVY7W/JqUdG5QxpXp4Vq2fmpOrw1LzarDfuoZE5dWZM
znxmSWqvA0rlDNntk2TpZd/Tf1VDxTgyhI4KaqVeYq+wCAhytC2ndjQaOkaz
AzrPl8+s0+vapXftpCbWkc5E7RieqE16d+/T3wOt9WNPwNeetjRrxMtlcv8e
/ez9hRQ/kRWnktlN7An4ZWuD5aPdrbFa02ApoEVNr1U/rV4r/i5UMf/vzXkR
GyNyg7Xi/UVWPvBskSGV5up80iqfwrdX6CcHX4A7NcEiS6VxhjL4Gwh4uwgx
dg0UwiqxC7gDPofduFuzLIQelHpyXE7d3aYJX0rMzt6j+eql8XVGsIZKVoqw
2/huf848xVRz2ybzJywLby/Xt8DHIYu4JR4GS9igl3tEX/KAJjqWrb8zS9SS
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
WZxxzUg299Tkkqd0dTc3JaZt7JEO68SwX4LzzuZF/1sqNow6ghRXLhAodhfq
P5HsCySe4wTG1cNQcHr4ioK++h0j0yzZA01rL8YJOl2Rk/r+QEP3cRKfF1rZ
bQs1Gm1BGI3eE8P/0Rb93IxYvXdFol69OFH3jNfy+/GieufmkvrVH+bV+xfF
6q1ZOfXseDtJhyjJdSWHRQmBdy6JFMZd9GwFu+eOBt8+MlFHUdcan6o+X/Jn
wRg78vCVBfOzalhqOGBTFQdYDwxq6HHJ/cP15myAEO+K5d7brtXUdB2eTY7V
fSOtR7DGatIol931MMvhKJFF3Ik30+fGBu+dkjdd7T++raQOzMxbsxN6NYvi
zPEdPki28moqKTk/44gyy1oTu302ieOIZPxT2oF57YJY/Vxr3jc/kVcf/FFZ
/dvfNaj/9vWi+vnViXpba99nJtpjS2QklZurZB+7iyzHBC69tp46OwqJ50Lf
XtBCpAn29tWpemxWqta1ZLQh874HZxXUu18uqTduKam9U/Mh4T6OF56DslTQ
LXC5ZKS9dDDbVIU5QxzVbi23OKvk8QmxCfPgHAiwQkZId0fOlt05Oa9ev6mk
3rm1pPZPzzdZElWnkGOPw8h2rxeFO5n4Dp12M9MBm9buupA4vA/GEP1BL2qv
5CcXx+rDT6Xqd/+ppP7prxvUu3ojXr4kUe9dGqvnp8Xq5Bg7D4ndmOHkMfHH
ZWypZo5JDFgxZH9iqt68KlWntE6+ozmTtOHm759RUO98qaRe12yo96Jq8yfL
I4OF4GkhhL04kBZOKEUPJqTlbi0la6TFcJuPj93pcBXVNPp80NsPXFYwP0PD
U1aIwyyCs6t11vvYZlWyq+NXTDGydJlo3oYc7JKJ3pyoaLIJDT4hh8sh3Qfu
emlSTtuvWP1UE+DXtxTU858uqmNzC+qY1nbvXp6oN+Zq7uqMHYx/p1xbjox2
rX0D1kWNWIaSxJeszNJp6whLp/0dWuHHmcYNPP5cebqhEXqDLi+YH71ZV+Dt
jZZOVzshMUb+kkAkTENd2R5wh1MXFkmID2UQ9opLzam3LgOzZei0oimtgO/W
B/5SpR+De2Kzj4vbRreWw9iIj7QEmmpuCq6+p9VyOU8nWCsZZTgceyQRAJcU
+YOXJtSZfMKP4WRcbDdwhWah3dpEPHdhon5yZaLOTLWRGwiMIjuQpjsb/WRO
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
XlgHxyltOJrp/CcK6r6ZeXNOElmC0RMk5eicgnr5i5odbtBr1fwHBcYDn12e
uVYs3h4oHiZkl7iUnlU8LBwQBYn/3yEuCqQe+XVgeX9+Y149r5XPsUmpS5qB
Dtg0YpCZ6Vyej50ipKfv01idrrFFRoG5pDVrWeuC5C/M66AU3PHgR2SOM7QS
lCLmlCOA/vBabVJvLqh//YdG9f4/NKvnbqtXpy9I1W8+m1c/1cHLy9NN4Tay
rZRlN0GLlSkW9cNZclqseNAcJQiz9E59rl69/g/D1FPfbFJ3duSNREn0Rk2y
faKO428uq3OfK6mN45wmYeUDG3y3dsGe/2xJvXRrWR3VJopQMBl8Vc02LbKj
28dq7aXZYEt7Ks0ljS4yBIWhafZOK6hdU+zxXXAY4DhsbXCmQmKx3qqmi9Hi
YYVTXehYzIv8cZ9Es/SJA4SdZE30jNb9Z2Ym6tDEVK1tTIymhRN0wI5CkVTK
lW4swZ3y0HSsmfEKD97k4PL1JT9qhevicQIcas4k+sayb8ZHAGEaFLUWeVFz
DLoAgGn+R+CHv1lSp7Vo7ZxZVEf0mt+9Lq9+9alUvT7HdizAAYPjhmfDNTZJ
LXRD2Q+KWlv01SloaaoeSh24fN/sotp/ZVntvqxs9m+PNJ7LKDLnOi1pSA3t
8NNXSC8OOHCllDjv1S7PvumaZ0almePs9d/N7i4O2OZGcb2opBcF/iCWC2V9
bwALFC8lbMnpynBHux3Gk/clS6b26a5Lx5dDvHL6E+cZcK4RloBdREiGv4Fi
3XUcGAoevdINArlXdmqxFBsJTWUc3VPni1n4HBukGOKxdrBZbBPrnPgdOuXk
SI/AOwmg0KScA0ODU964zLaUARYOO31em8tfaxf+jUsT9YSOLx6RkwLPai/p
fpmgzY4kjlNkKkjCNHeKJXN2dP7YGcoTUvF9vd/fCewZ8/lsFgWJVuS9mV1r
8alWiwg73OxzFfYIhXBgB+0Gpy1jX3iitQ0ZqpAno4MMGBthxU0xn+mP/Zgs
+qRkB05eOCxRDUglnzdhv6CuswkeO6mf7XBYNUupbImfF8nJGkBNzXVNfJzt
RsdkQznbUs3GGk58knERDgYIDQ/19Zgm8MuaMRBMAlP93kWxcXnhmW8fphlD
/5yfm6g3r9SO3IzEqA48IZj7QckIY7mcrHKgxc+AHix65uiOqELKTk752FST
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
7730DbQEdGt6ijXttWkhtm8WCIbGLZFU7mZaKzrx4VshAOsvSrsx3jNNCXYZ
pw2ZgSYFoS9kLVa165qMFpWnljY1QFRr0CtJGLzz+4d5vuNn7deOFq8w26yY
iSzoJasBVAs9zmV9R6zgXRfIhf16uEBwoRFR6v4OJERVWKLGvcncJAyO1Pnc
RbxvMPkdjRh8PqX0dSsj1i+qv8Ez4PlWqfMqQCmMLegWptKkVzuVFxYFaSVb
d43dTOpMRs8Nuhwem92tkTnYlhPgVU+lPsQip4FSIHBeOSjKmP7BETyxBUov
2M1P6bgWWPNaOrAkCqnkPg6N7x+eNWenZs1r063Ta39eUfRsuc9NypqfT0g7
khFid/lZC0cYtPNzYXB2NqEDSIwgUAPqg3f3f0cHkMnZ2RBoUNePis2esZE5
MDrQoempTX9KB3gqSP+IeJZySsB5iBnHd9ZFU71C7KNvbcqf7lNnyYJsCGPh
HHE2bYr79aBkeSAknoU2jhaSGtyPXl4wZ24smJNzYqHpXezRSQxgKbg746k1
7nl2T4jNE1fmzeFZeeJR1gBh9A7MC42s6hxIAUxbeQiQGu1ptlt+XNa8MS3r
etgPWS09MTsyv74m5wj8aATM06N9YmBjOfDKAHrTo04B9O3omLHWca+HfKrc
RYPyjHvjMMRzPY0zuaHoau/HL4oTcyV7MAW+yvSDJXz/RQXz5M0lc/+lBdOZ
lY5YdyJw2oDWZfvEfEorAfrgkVFdHTJJkgYFLsv+bqqcFCCQdOx93BH5+AWR
eevTRfPvf102r92UNw+3eb5HZFkgctTzHJK7PjKPXpY3//yNonnuhoLZMCLi
ymc1BUMYUlaJakcbNBCLD9ldTh0H1JZEw2w+uDk2//zx2Lx/Wc4NRKQpuvez
qK0MsjU+DLPL+XnDUN4mfnJ8nusHvTA2b361bP71H+rNSx8rmJ+NDJnODsQK
2SCvyKwaGpuTHy+ZP/603jx9W8msGQmURSxFDVddL9ttdHXR/O5H9VOq5FaW
xia0J3ISQIJkBKFhx5Xd3wa4yv7YpJwbsfL+N8rm6avzZu8Qv4OZUDsVagwC
gijkzJHZefPLzxbNSfuO1S0RR6deY5As6ZRKBvLsPFxe4e6lK4dGg1HH3+tW
NjTO+sObI/P6NbF5fnrOPD/Wd488ODyMfPfu4Xxk+0Robu3a1NrA9Tg0JTZv
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
pTPKj8gmYRvV+iCHF0Y04pmWPE+L0JZrQu57BchHmhSOHBWKPAXNW2d2rOC7
Gl7iJLZx/UhbbKWZCjS8Q7ECh7/DEc5WUs4WPyigi81GZXlA8OMI5hC4eISq
mHagSC1HwuBEFtzpodOtL6DRomDndIUtYd2x/WFnZ7LUewW/xKJFeGIF4fYZ
4S6R4w9PsbudckS3SgfFZkkd0+JSIaFdiffe5vgJSnt4TqIMZ/KejOoERk8a
1U3mLSb1Fioqx+IocZUnBBGKT+GhB2kyGI4HTyK8YvzBoJiaYLltp6vceNyC
QqewTUoV0kIZddvS7hf68MUvG9LtqTyqIj5sn2NCy4ULrxZ35W4JXHe1kwPl
NcBK7Jv4tlgkxtUg3V8YcTtQcwfm19yRhTXLhqfWM1aoe8PDQEUel9wsz59b
hROAcpKVim3+C3OWiFqIW0cuCwAvPFJoMF+YhRlTp5dFdsJjc/MMZEXMmt2W
NycPhw7CdCUNvN8k4B+pUO0dD1/Kkc1IXwLpsYIs7PbBnod+QuORkwwEY3My
9+C5dXd8ZeYOj0QzTp7QKVK7C7zkvEb42jJcv1xuaO/yRon/tYzEOHAIjxXm
Xg3HhM1ji2uhEvnNC2ruodE05woG8kKRFJY6AIMGYwpSqmLhWvj7A3KH4lxE
Sc1VT3uynJwKXGqfMFZiqxw9q+pOXFZ337+m7t67rBaKU2zn3dlM00kJ5Z+u
1iwUk4GtyQngk9iUqaCdyFOD6vC3PtlwT1/i/bFmiuXXlHL8e2rr8meiHlpY
AmrTkyuygJB5/zM97gWvbYcE80wTS2ltm193J3635d78o7Y7cEHPR0Va65uZ
e/LqZhBTO0rrtbS/YmKI1fxnFlTdW5fU3A9/K3PfuSJzz50d9w80EtEd0/bk
4mfqkU0v2OcPpbHfOZZnruU22cuoYL57cdX96Lfr7uefb7h/BfPQ8lh1eniO
UudKLmF1qTPxtrqkSz87krkTVzXc/9zQdKevabg9CzKWfmnGyMtEpAybwMKg
uPGq+65Xj//8y5b7yZ813ZtX1lV7N2uN3++ZS3rcB3/R6/7j7/rd8euaGKim
heTdZzfcqc+37To7/Xbd/+sLpfL/AuTG3go=\
\>"],ExpressionUUID->"0bf73651-a090-4978-88d1-18f3b8d5f266"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{854, 1314},
WindowMargins->{{Automatic, 790}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "point_space_group"->{
  Cell[7023, 195, 198, 3, 67, "Section",ExpressionUUID->"3ae03b8b-791a-4b96-b230-a7d6e1492318",
   CellTags->"point_space_group"]},
 "construct_structures"->{
  Cell[406368, 9411, 253, 5, 53, "Section",ExpressionUUID->"86329515-8aa7-4225-824c-a72bca529798",
   CellTags->"construct_structures"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"point_space_group", 2259425, 43714},
 {"construct_structures", 2259584, 43717}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 239, 8, 160, "Title",ExpressionUUID->"5c93ced9-8547-45f8-bf11-c73c3bb6a617"],
Cell[CellGroupData[{
Cell[844, 34, 497, 11, 53, "Subtitle",ExpressionUUID->"5e33d4d4-118d-40bc-8512-4a60b818bf9f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1344, 47, 494, 14, 35, "Text",ExpressionUUID->"2fd1badb-816a-40c6-8873-737c510b4ca8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1841, 63, 442, 10, 32, "Item",ExpressionUUID->"42551f7f-cf69-494d-88f0-e34bf0f697fc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2286, 75, 489, 13, 32, "Item",ExpressionUUID->"49dd628d-6cb6-4de3-9f9b-20aa4bde52af",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2778, 90, 538, 10, 32, "Item",ExpressionUUID->"5adb3a53-28c2-4e00-b578-102d79151e7e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3319, 102, 548, 10, 58, "Text",ExpressionUUID->"55458afa-17f3-4eed-842c-26d4af46f4e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3870, 114, 296, 5, 33, "Input",ExpressionUUID->"8d04d698-c886-4a11-b954-7890da6f139f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4169, 121, 264, 4, 30, "Input",ExpressionUUID->"138a2659-d35a-4350-a28e-129f70991604",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[4448, 128, 160, 2, 34, "Output",ExpressionUUID->"c17c4377-bcb3-4a04-ba7a-95849dfd425a"],
Cell[4611, 132, 278, 4, 30, "Input",ExpressionUUID->"ed93c953-a6c1-4960-88f5-25deced0fdaa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4892, 138, 165, 2, 34, "Output",ExpressionUUID->"74cdad6f-3863-4ffb-aa6c-a916b909bc76"],
Cell[5060, 142, 388, 8, 30, "Input",ExpressionUUID->"562ec71c-0aac-45a0-9491-2848c7d84846",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5451, 152, 240, 4, 36, "Output",ExpressionUUID->"4b10d269-4858-42d9-bf6b-ad75231f3d9e"],
Cell[5694, 158, 380, 8, 30, "Input",ExpressionUUID->"e32aa39c-086e-4620-ba64-3a68c6499238",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[6077, 168, 241, 4, 36, "Output",ExpressionUUID->"961c93fc-2198-4e5f-8b1b-5895f81631d2"],
Cell[CellGroupData[{
Cell[6343, 176, 166, 3, 69, "Chapter",ExpressionUUID->"bc4dc222-3789-47d3-a1ae-16d383f8c74a"],
Cell[6512, 181, 486, 10, 58, "Text",ExpressionUUID->"2e1077d7-001a-4fc2-a810-1ea1fab21269"],
Cell[CellGroupData[{
Cell[7023, 195, 198, 3, 67, "Section",ExpressionUUID->"3ae03b8b-791a-4b96-b230-a7d6e1492318",
 CellTags->"point_space_group"],
Cell[CellGroupData[{
Cell[7246, 202, 165, 3, 54, "Subsection",ExpressionUUID->"9a6a3603-0a9b-47ba-8ad5-b3ef690b8a96"],
Cell[7414, 207, 1189, 30, 60, "Text",ExpressionUUID->"dc48abd7-3565-42c2-b445-4fca996466cc"],
Cell[CellGroupData[{
Cell[8628, 241, 268, 5, 30, "Input",ExpressionUUID->"f28337b4-718e-4038-af26-19ab95d2bd8c"],
Cell[8899, 248, 196, 4, 34, "Output",ExpressionUUID->"cd8b55f1-999c-4d7e-ab96-7dd47df5e39e"]
}, Open  ]],
Cell[9110, 255, 356, 8, 35, "Text",ExpressionUUID->"3e7044e1-12f1-4551-9134-4e7d7ca0ae8e"],
Cell[CellGroupData[{
Cell[9491, 267, 275, 4, 52, "Input",ExpressionUUID->"8c2051d6-1bbb-4d50-8a03-af1c717782fa"],
Cell[9769, 273, 841, 14, 56, "Output",ExpressionUUID->"f8eafe44-775d-4e49-abaf-a95ba2c3cf4e"],
Cell[10613, 289, 5411, 80, 371, "Output",ExpressionUUID->"185b7338-0254-407e-8302-9ab83a90e2fa"]
}, Open  ]],
Cell[16039, 372, 451, 10, 58, "Text",ExpressionUUID->"91fca746-a2fb-480f-b77f-e24973ad11c5"],
Cell[CellGroupData[{
Cell[16515, 386, 245, 4, 30, "Input",ExpressionUUID->"7ffb7f83-222a-4ab2-924c-77bb4044cbbe"],
Cell[16763, 392, 36888, 760, 281, "Output",ExpressionUUID->"807f1bd2-4ab4-43a8-867b-758e094765b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53688, 1157, 247, 4, 30, "Input",ExpressionUUID->"638f4a33-d367-4a10-bd39-0055aa1daf1f"],
Cell[53938, 1163, 37632, 772, 255, "Output",ExpressionUUID->"3811745f-ae8c-46e8-9e83-c25af8489261"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[91619, 1941, 228, 4, 38, "Subsection",ExpressionUUID->"1947ef94-8016-42a6-9d1a-73889a4e18bf"],
Cell[CellGroupData[{
Cell[91872, 1949, 176, 3, 45, "Subsubsection",ExpressionUUID->"6b8eecde-80e1-4e61-b69d-e7aa034908cb"],
Cell[92051, 1954, 1049, 29, 60, "Text",ExpressionUUID->"548b5ff9-d86b-45fc-bae9-6d084dabcb1b"],
Cell[93103, 1985, 156, 3, 35, "Text",ExpressionUUID->"d196d2b0-65ca-4e2b-9bdb-2e4aad1bb9d1"],
Cell[CellGroupData[{
Cell[93284, 1992, 305, 6, 30, "Input",ExpressionUUID->"99fb1dfc-7348-4d3a-b8da-9a20653e47c2"],
Cell[93592, 2000, 36915, 760, 281, "Output",ExpressionUUID->"85ccac8b-9890-4346-99ef-16c523397a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130544, 2765, 333, 5, 30, "Input",ExpressionUUID->"416de16b-eb36-45aa-9d53-2137088eec01"],
Cell[130880, 2772, 699, 15, 60, "Output",ExpressionUUID->"15f4cc3e-9147-49b3-90ae-453e49188d48"]
}, Open  ]],
Cell[131594, 2790, 1462, 32, 58, "Text",ExpressionUUID->"30cc7961-ff50-41d0-a570-436d2ff6e395"],
Cell[CellGroupData[{
Cell[133081, 2826, 224, 3, 30, "Input",ExpressionUUID->"47fb0f93-2009-49e6-a2c1-73727f24b795"],
Cell[133308, 2831, 232, 4, 34, "Output",ExpressionUUID->"cb308b57-b5f5-4e54-ac39-167bea30c47e"]
}, Open  ]],
Cell[133555, 2838, 200, 5, 35, "Text",ExpressionUUID->"250e83a3-adc6-4fa8-ab53-64fbab970d23"]
}, Closed]],
Cell[CellGroupData[{
Cell[133792, 2848, 190, 3, 37, "Subsubsection",ExpressionUUID->"304e3a64-a99c-4e27-8d6b-d46546eb3995"],
Cell[133985, 2853, 621, 11, 58, "Text",ExpressionUUID->"1f52f3bf-2516-4ced-971f-3ff1f7dc3d9e"],
Cell[CellGroupData[{
Cell[134631, 2868, 414, 10, 34, "Item",ExpressionUUID->"63925332-0f5a-4e05-8266-089b5e77ba70"],
Cell[135048, 2880, 434, 11, 34, "Item",ExpressionUUID->"1d3ec888-0970-44f8-92e2-187dc0df96b0"],
Cell[135485, 2893, 500, 11, 34, "Item",ExpressionUUID->"39e883f1-58ee-4d96-9f5f-c69962c6a437"],
Cell[135988, 2906, 489, 11, 34, "Item",ExpressionUUID->"f3c87da7-c630-4628-ad86-96f91f624256"]
}, Open  ]],
Cell[136492, 2920, 1202, 29, 85, "Text",ExpressionUUID->"44278b1a-e295-416d-8b6f-6a2c7e73dd6d"],
Cell[CellGroupData[{
Cell[137719, 2953, 191, 2, 30, "Input",ExpressionUUID->"2c87512c-0d2a-4f4f-9230-e597b40f46cb"],
Cell[137913, 2957, 9784, 249, 140, "Output",ExpressionUUID->"27b0c7d1-62db-415d-88c6-6d504b887add"]
}, Open  ]],
Cell[147712, 3209, 652, 15, 35, "Text",ExpressionUUID->"3021a381-6900-46e7-b79a-c6e2812a1f72"],
Cell[CellGroupData[{
Cell[148389, 3228, 307, 5, 30, "Input",ExpressionUUID->"8bfcc749-1d75-4e18-b629-ca199a28ab47"],
Cell[148699, 3235, 2969, 82, 170, "Output",ExpressionUUID->"32324642-6e6f-4a34-b974-fb6cbff6a8df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151705, 3322, 277, 6, 30, "Input",ExpressionUUID->"90349d94-9d03-4499-a9ee-5b5de50dcd24"],
Cell[151985, 3330, 152, 2, 34, "Output",ExpressionUUID->"5a56eb59-c1b7-4f4b-8bb2-efbc94c1776a"]
}, Open  ]],
Cell[152152, 3335, 386, 11, 35, "Text",ExpressionUUID->"483ced79-a9ba-44f9-b062-1d5c3309b381"],
Cell[CellGroupData[{
Cell[152563, 3350, 255, 5, 33, "Input",ExpressionUUID->"2fc17864-9ba4-429f-8d03-8d0946f29683"],
Cell[152821, 3357, 869, 26, 170, "Output",ExpressionUUID->"c5e93240-ec34-4d08-8b2e-dddba0c279c4"]
}, Open  ]],
Cell[153705, 3386, 370, 7, 35, "Text",ExpressionUUID->"80be5aa3-0acc-4a8f-867d-4dc8b94b5621"],
Cell[CellGroupData[{
Cell[154100, 3397, 228, 4, 30, "Input",ExpressionUUID->"3410758d-04e0-41a1-841d-ea862e571e8d"],
Cell[154331, 3403, 20410, 465, 146, "Output",ExpressionUUID->"9c8a9706-d5e7-4970-a6a5-2185f487dcfd"]
}, Open  ]],
Cell[174756, 3871, 213, 5, 35, "Text",ExpressionUUID->"2b780b54-4336-429a-ae3e-0767a84cf5ee"],
Cell[CellGroupData[{
Cell[174994, 3880, 259, 4, 30, "Input",ExpressionUUID->"876a758f-963e-4c74-8a8d-f8ae4aaec373"],
Cell[175256, 3886, 19838, 454, 96, "Output",ExpressionUUID->"29a4051a-7cbd-47e6-aecd-242b48b5b302"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195131, 4345, 229, 3, 30, "Input",ExpressionUUID->"47202298-6440-4cfe-9542-cd8772e5e5d2"],
Cell[195363, 4350, 2793, 88, 217, "Output",ExpressionUUID->"f18d1b26-30f6-4140-b359-8fbe6a086c2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198193, 4443, 229, 4, 30, "Input",ExpressionUUID->"e2f4137d-6f83-47af-9207-6c244b23d497"],
Cell[198425, 4449, 29575, 663, 96, "Output",ExpressionUUID->"19332ba1-b4a5-45cc-9f36-ab010c7aa3d4"]
}, Open  ]],
Cell[228015, 5115, 523, 12, 58, "Text",ExpressionUUID->"72c24f82-349e-4fc7-80e6-0b3b49b169d4"],
Cell[CellGroupData[{
Cell[228563, 5131, 364, 6, 30, "Input",ExpressionUUID->"8c993c45-4705-45fb-ae24-6c0354ddc1c3"],
Cell[228930, 5139, 166, 2, 34, "Output",ExpressionUUID->"743eeb41-7ade-4fd3-8a17-b07097c15fc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229133, 5146, 272, 4, 30, "Input",ExpressionUUID->"790a301d-0441-4e62-8a43-e44006bc117a"],
Cell[229408, 5152, 152, 2, 34, "Output",ExpressionUUID->"30186716-6dbe-45b6-b438-d79f61643743"]
}, Open  ]],
Cell[229575, 5157, 500, 13, 35, "Text",ExpressionUUID->"082ce2a5-d8b4-48fe-a849-d90f424a715d"],
Cell[CellGroupData[{
Cell[230100, 5174, 313, 5, 30, "Input",ExpressionUUID->"af57cfaf-01ab-470a-bd5c-864149fecfdd"],
Cell[230416, 5181, 5152, 118, 434, "Output",ExpressionUUID->"51360212-e23d-4e5f-aedf-37978a69fc7d"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[235641, 5307, 256, 4, 53, "Section",ExpressionUUID->"9f3b2e67-1d43-46a8-b9ee-c29e09df2ba8"],
Cell[CellGroupData[{
Cell[235922, 5315, 193, 3, 54, "Subsection",ExpressionUUID->"91d4d6ac-b616-4a89-912e-2de4ecaf81e5"],
Cell[236118, 5320, 1362, 34, 81, "Text",ExpressionUUID->"52c1e5ed-aaeb-464e-81df-6ff97f9a502e"],
Cell[237483, 5356, 410, 10, 35, "Text",ExpressionUUID->"eb0cc77a-30ca-4f9a-8048-485bd8b3db5f"],
Cell[CellGroupData[{
Cell[237918, 5370, 173, 3, 45, "Subsubsection",ExpressionUUID->"bdd8de3a-4d04-4e95-812e-8c47627b1637"],
Cell[238094, 5375, 291, 7, 35, "Text",ExpressionUUID->"c4c97679-6219-4a49-b998-277f538ffb95"],
Cell[CellGroupData[{
Cell[238410, 5386, 217, 3, 30, "Input",ExpressionUUID->"db4671fc-985a-4967-b0ef-8f77b991e5a5"],
Cell[238630, 5391, 19836, 446, 169, "Output",ExpressionUUID->"c1fc6051-c93a-4069-948d-8bcaaf36de9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258503, 5842, 355, 6, 34, "Input",ExpressionUUID->"6fcd0579-823d-44e4-b490-191ac100ae18"],
Cell[258861, 5850, 2334, 76, 98, "Output",ExpressionUUID->"39941fa0-dc08-43f0-bff2-da61ced2e9fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261232, 5931, 340, 7, 30, "Input",ExpressionUUID->"0fe637fa-c0b3-4ec3-a155-8024831ec6aa"],
Cell[261575, 5940, 386, 10, 34, "Output",ExpressionUUID->"1415eec5-2f8a-4c42-98f8-17bbb79ab59d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261998, 5955, 222, 3, 30, "Input",ExpressionUUID->"2dd166c1-480c-4df8-9b42-0637aa455d40"],
Cell[262223, 5960, 19303, 441, 123, "Output",ExpressionUUID->"fbe6f47c-1303-431f-8aef-4547f56bca87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281563, 6406, 641, 17, 52, "Input",ExpressionUUID->"00640bd6-c8db-4449-9ca1-420922524054"],
Cell[282207, 6425, 450, 12, 34, "Output",ExpressionUUID->"f2099a6a-40aa-4d2e-9bc2-09676edcfc6b"]
}, Open  ]],
Cell[282672, 6440, 218, 5, 35, "Text",ExpressionUUID->"51fd31f1-d82f-49e3-802d-8c0366251bdc"],
Cell[CellGroupData[{
Cell[282915, 6449, 616, 15, 30, "Input",ExpressionUUID->"9cee2f8c-0cd4-41a8-be71-9c56556edc5c"],
Cell[283534, 6466, 312, 8, 34, "Output",ExpressionUUID->"c38f3c55-74ce-4cfb-b657-93068184a7a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283883, 6479, 215, 3, 30, "Input",ExpressionUUID->"fcc11280-4c48-41f8-94a6-26ebf7890aa2"],
Cell[284101, 6484, 43540, 910, 176, "Output",ExpressionUUID->"fa6a07a9-0f86-4c8c-b8b1-e9163f8d8253"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327678, 7399, 320, 7, 30, "Input",ExpressionUUID->"f65ecf3d-0985-4319-b349-f9909ce3f559"],
Cell[328001, 7408, 1168, 39, 87, "Output",ExpressionUUID->"c1fd0d24-4714-4131-9498-067a1e21ee26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329206, 7452, 461, 10, 30, "Input",ExpressionUUID->"63a89265-bbb7-4455-a05d-6acca60cefb5"],
Cell[329670, 7464, 456, 14, 50, "Output",ExpressionUUID->"8bc10883-e5be-420c-a2dc-0211486598ca"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[330175, 7484, 186, 3, 37, "Subsubsection",ExpressionUUID->"ed6d7dd2-f85a-41c5-a6a5-c87c7721af3c"],
Cell[330364, 7489, 483, 10, 58, "Text",ExpressionUUID->"2e952497-d9e6-4eb3-81e8-cf8ba639006d"],
Cell[CellGroupData[{
Cell[330872, 7503, 180, 3, 30, "Input",ExpressionUUID->"9d351478-aebb-48ed-acc2-6fe396f5f8e6"],
Cell[331055, 7508, 30085, 640, 180, "Output",ExpressionUUID->"997162dd-cac4-47c5-a72a-708335d5f92e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361177, 8153, 427, 10, 30, "Input",ExpressionUUID->"2a27e5bb-5f6c-4b9f-9118-9cf6df6d6e00"],
Cell[361607, 8165, 201, 4, 34, "Output",ExpressionUUID->"ace92439-f619-4428-a458-3077359f9632"]
}, Open  ]],
Cell[361823, 8172, 697, 13, 58, "Text",ExpressionUUID->"5dd16e09-8112-4c5a-85b7-7e1acb9893aa"],
Cell[CellGroupData[{
Cell[362545, 8189, 352, 6, 30, "Input",ExpressionUUID->"d7363300-5410-4fe6-8fa5-58afd927fd99"],
Cell[362900, 8197, 3555, 102, 161, "Output",ExpressionUUID->"460dc2a6-342d-4150-9ce4-a59183373e04"]
}, Open  ]],
Cell[366470, 8302, 1397, 27, 104, "Text",ExpressionUUID->"a710f6ae-ef47-4d85-94ee-6a0872d836de"],
Cell[367870, 8331, 487, 11, 58, "Text",ExpressionUUID->"1750ec7d-92ad-4187-85dd-be37277d3067"],
Cell[CellGroupData[{
Cell[368382, 8346, 296, 6, 34, "Input",ExpressionUUID->"9fe7e1af-5a14-47f4-96b7-fc939b33689f"],
Cell[368681, 8354, 206, 4, 34, "Output",ExpressionUUID->"9d7c5728-1f5b-499b-aeed-76a0c6f24bb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368924, 8363, 285, 7, 30, "Input",ExpressionUUID->"f8a383b6-1b58-4cab-b6df-60d5265d607c"],
Cell[369212, 8372, 204, 4, 34, "Output",ExpressionUUID->"ba8b82c4-532e-42f9-bc3d-4a5879f80156"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[369477, 8383, 198, 3, 38, "Subsection",ExpressionUUID->"b905e203-50cf-4c5c-b5a3-a89c77b2eff1"],
Cell[369678, 8388, 740, 16, 104, "Text",ExpressionUUID->"8b411596-f59f-433c-8fad-f9ecb25b65d9"],
Cell[370421, 8406, 357, 9, 35, "Text",ExpressionUUID->"ee4d3f7c-de22-44d1-9bc0-22d186a85272"],
Cell[CellGroupData[{
Cell[370803, 8419, 264, 4, 30, "Input",ExpressionUUID->"59f2985f-2e07-4160-9b23-975d74044a2b"],
Cell[371070, 8425, 206, 3, 34, "Output",ExpressionUUID->"abccd659-8e79-4a1e-ae44-3b81b592369b"]
}, Open  ]],
Cell[371291, 8431, 676, 18, 58, "Text",ExpressionUUID->"684a2b72-5968-4d42-b50c-91a11df29478"],
Cell[CellGroupData[{
Cell[371992, 8453, 260, 4, 30, "Input",ExpressionUUID->"ac3ddfd7-27d5-4fa3-aaab-eec572ae5869"],
Cell[372255, 8459, 2626, 73, 377, "Output",ExpressionUUID->"3a260b3a-de09-4451-8f49-0e065a405e3f"]
}, Open  ]],
Cell[374896, 8535, 715, 17, 58, "Text",ExpressionUUID->"180c1615-e194-4f90-8edb-c77b62cadc71"],
Cell[CellGroupData[{
Cell[375636, 8556, 319, 5, 30, "Input",ExpressionUUID->"6cfb0ef3-1c3c-4b1f-8178-f547d126918a"],
Cell[375958, 8563, 1808, 45, 71, "Output",ExpressionUUID->"94798027-7251-42c6-b2c7-ecb466ef9e9b"]
}, Open  ]],
Cell[377781, 8611, 263, 6, 35, "Text",ExpressionUUID->"d504a575-5383-4aae-bf86-c981627a82a4"],
Cell[CellGroupData[{
Cell[378069, 8621, 192, 3, 30, "Input",ExpressionUUID->"27a2d6ea-ea28-4af5-9727-9a087ca4b2b6"],
Cell[378264, 8626, 2483, 71, 377, "Output",ExpressionUUID->"94c121d9-2681-4e5c-8d04-b8d88b16cff9"]
}, Open  ]],
Cell[380762, 8700, 450, 11, 58, "Text",ExpressionUUID->"b0c70a21-0919-4533-bf86-2a195557e24b"],
Cell[CellGroupData[{
Cell[381237, 8715, 389, 8, 30, "Input",ExpressionUUID->"04d05c89-5979-4a4a-afef-14f95fdd724e"],
Cell[381629, 8725, 2147, 52, 99, "Output",ExpressionUUID->"8212bb7a-a79e-4611-9a95-82ea3841f022"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383813, 8782, 1213, 31, 73, "Input",ExpressionUUID->"2bf3f81e-b822-4b00-9db4-967405038a25"],
Cell[385029, 8815, 2405, 51, 189, "Output",ExpressionUUID->"8e52a4f3-0e39-472c-b9a3-65e1e5e739c8"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[387507, 8874, 277, 4, 58, "Chapter",ExpressionUUID->"3628edaf-93d5-453b-9ffc-3647ac6654a6"],
Cell[387787, 8880, 388, 10, 58, "Text",ExpressionUUID->"5d9ee696-4848-4a1d-9289-908df2af1a00"],
Cell[388178, 8892, 1116, 27, 104, "Text",ExpressionUUID->"4f7dc6e2-c31c-4f35-a265-5d29c3076360"],
Cell[CellGroupData[{
Cell[389319, 8923, 321, 7, 30, "Input",ExpressionUUID->"6f253736-8c8f-4a8a-a433-0a26b7d27f41"],
Cell[389643, 8932, 2147, 52, 99, "Output",ExpressionUUID->"e09ad54f-f70e-4295-9ffc-7768cdcb5d9f"]
}, Open  ]],
Cell[391805, 8987, 303, 7, 35, "Text",ExpressionUUID->"815cadef-e353-4a47-aad1-2ee0ade4b231"],
Cell[CellGroupData[{
Cell[392133, 8998, 234, 4, 67, "Section",ExpressionUUID->"887e3b22-9221-4d89-af8f-ea7091a6998a"],
Cell[392370, 9004, 336, 7, 58, "Text",ExpressionUUID->"bd344120-9c82-4e66-aa4b-0b473e37ad1a"],
Cell[CellGroupData[{
Cell[392731, 9015, 171, 3, 54, "Subsection",ExpressionUUID->"82e7ae51-5e91-404f-afa1-b68e37ac2468"],
Cell[392905, 9020, 936, 24, 73, "Input",ExpressionUUID->"a6017f36-19bb-429e-9a9b-34c56ab223a6"],
Cell[CellGroupData[{
Cell[393866, 9048, 368, 7, 30, "Input",ExpressionUUID->"48e90b3d-6b79-4a4b-8e2d-aa7e4177201f"],
Cell[394237, 9057, 290, 6, 36, "Output",ExpressionUUID->"b825d167-3e61-4095-96f0-10d81bd512f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394564, 9068, 268, 5, 30, "Input",ExpressionUUID->"ce7606d5-d910-4e2a-ac05-46dd62d8dcb7"],
Cell[394835, 9075, 1141, 28, 37, "Output",ExpressionUUID->"96648cf5-8439-4450-a4fe-ab7754270602"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396013, 9108, 257, 4, 30, "Input",ExpressionUUID->"aac2aa83-3945-4542-8b8e-5ef7939aba0e"],
Cell[396273, 9114, 1169, 32, 43, "Output",ExpressionUUID->"854e6183-9e10-40e3-9ff1-a1d9ee2b63ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397479, 9151, 215, 3, 30, "Input",ExpressionUUID->"1cd53263-7cdd-42cf-9fa0-d36fb3bc7e92"],
Cell[397697, 9156, 414, 9, 40, "Output",ExpressionUUID->"544adf9f-b47e-482e-954b-05a32b8f063d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398148, 9170, 215, 3, 30, "Input",ExpressionUUID->"1a75b7f6-ba1e-41bd-9f56-f5a4f8adb754"],
Cell[398366, 9175, 499, 13, 34, "Output",ExpressionUUID->"4f4f4c4f-0752-4e72-936a-890e922f16a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[398914, 9194, 246, 4, 54, "Subsection",ExpressionUUID->"535144a2-3be4-4b51-a6f9-26095fc2d5eb"],
Cell[399163, 9200, 891, 20, 58, "Text",ExpressionUUID->"7fdc4a3a-b0f5-4cd2-9862-6647dc12edfb"],
Cell[CellGroupData[{
Cell[400079, 9224, 323, 6, 30, "Input",ExpressionUUID->"b0bc712b-1155-4cff-a825-4036e234be89"],
Cell[400405, 9232, 343, 7, 37, "Output",ExpressionUUID->"ef7e015a-314d-4347-aef5-05679b174fa6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400785, 9244, 367, 8, 30, "Input",ExpressionUUID->"b32de96e-921b-488b-b5f4-24f76f44565a"],
Cell[401155, 9254, 548, 11, 37, "Output",ExpressionUUID->"8031e43a-53f8-4037-86d8-c46fa93fc2a6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[401752, 9271, 165, 3, 54, "Subsection",ExpressionUUID->"4f941761-ec72-444f-8686-19358ee89ea8"],
Cell[401920, 9276, 582, 16, 35, "Text",ExpressionUUID->"b6d287ce-6114-4cb3-bad3-822f872f48c0"],
Cell[CellGroupData[{
Cell[402527, 9296, 333, 7, 30, "Input",ExpressionUUID->"2808d5a9-cb8c-415d-a351-dbc044c9879d"],
Cell[402863, 9305, 381, 9, 37, "Output",ExpressionUUID->"4cf55945-9438-42f5-8ca0-e04e92bfe2ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403281, 9319, 378, 8, 30, "Input",ExpressionUUID->"7cf1ccf3-dda2-429b-8f31-938119e4daa9"],
Cell[403662, 9329, 360, 8, 37, "Output",ExpressionUUID->"5fbb36af-9d8a-476d-97a0-7b3a71de053c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[404071, 9343, 173, 3, 54, "Subsection",ExpressionUUID->"7a4f05cd-d09c-4e2a-b2aa-7521b7f4bfbc"],
Cell[404247, 9348, 558, 18, 35, "Text",ExpressionUUID->"191e7ee7-70e9-4b78-a005-67bb3b2ba3c8"],
Cell[CellGroupData[{
Cell[404830, 9370, 261, 4, 30, "Input",ExpressionUUID->"55af662e-a6c2-4994-967e-552b00336b26"],
Cell[405094, 9376, 313, 6, 36, "Output",ExpressionUUID->"b21004f1-c879-4a89-9723-5eb3ebaa996c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405444, 9387, 446, 8, 52, "Input",ExpressionUUID->"a6dad6e0-46ed-47fc-802d-e4819cc2d459"],
Cell[405893, 9397, 414, 7, 40, "Output",ExpressionUUID->"f2942d8d-7c33-4d40-b44a-fe31abb022da"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[406368, 9411, 253, 5, 53, "Section",ExpressionUUID->"86329515-8aa7-4225-824c-a72bca529798",
 CellTags->"construct_structures"],
Cell[406624, 9418, 1137, 22, 81, "Text",ExpressionUUID->"4d2461ed-8dbb-4175-a9c9-6fb70765f47e"],
Cell[407764, 9442, 323, 7, 58, "Text",ExpressionUUID->"123e7306-4967-4d97-80e1-02d3dfa3d2d8"],
Cell[CellGroupData[{
Cell[408112, 9453, 179, 3, 54, "Subsection",ExpressionUUID->"bb5dd0cc-ace2-4496-8e8e-4e2fb6e9ed3b"],
Cell[408294, 9458, 589, 16, 58, "Text",ExpressionUUID->"32296e41-1731-4fb7-a83a-068f82add962"],
Cell[CellGroupData[{
Cell[408908, 9478, 203, 3, 30, "Input",ExpressionUUID->"1a3ec29e-957d-4548-a358-4af2f8b42a15"],
Cell[409114, 9483, 59622, 1213, 96, "Output",ExpressionUUID->"6c128ba4-536f-4168-bdbd-8c5bf41acb43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468773, 10701, 278, 4, 30, "Input",ExpressionUUID->"ee94062e-9e4c-445f-9450-a5f8f1a57217"],
Cell[469054, 10707, 3499, 98, 377, "Output",ExpressionUUID->"88e668b1-4922-48bc-883c-5c8d05320381"]
}, Open  ]],
Cell[472568, 10808, 369, 7, 35, "Text",ExpressionUUID->"e691f63f-3225-495d-83bc-a7a82824388d"],
Cell[472940, 10817, 12464, 272, 808, "Input",ExpressionUUID->"32400666-3b46-4b7d-82db-6285caeb6ab8"],
Cell[485407, 11091, 442, 10, 58, "Text",ExpressionUUID->"9f2d187a-575d-4c32-91d1-8cad9c73ef68"],
Cell[CellGroupData[{
Cell[485874, 11105, 233, 3, 30, "Input",ExpressionUUID->"ad845e1f-01ee-412e-9e3c-7a066bb3df0b"],
Cell[486110, 11110, 4192, 111, 377, "Output",ExpressionUUID->"51f29997-484f-4b14-b391-afb74c7181ea"]
}, Open  ]],
Cell[490317, 11224, 368, 9, 58, "Text",ExpressionUUID->"d8063e49-54d9-4fcb-afca-647acb62dd6d"],
Cell[CellGroupData[{
Cell[490710, 11237, 277, 4, 30, "Input",ExpressionUUID->"af5459f8-f1bb-4b6d-9a6b-b1a70b391eea"],
Cell[490990, 11243, 3077, 89, 377, "Output",ExpressionUUID->"086e58b0-e8e7-49e6-9109-114072142ecc"]
}, Open  ]],
Cell[494082, 11335, 542, 11, 58, "Text",ExpressionUUID->"d081e75b-23e9-4342-a91f-a3cd1e75f4de"],
Cell[CellGroupData[{
Cell[494649, 11350, 225, 4, 30, "Input",ExpressionUUID->"569a542c-bfcb-4ee3-837e-7290385dde7c"],
Cell[494877, 11356, 41303, 884, 121, "Output",ExpressionUUID->"b9aab15b-3686-4438-a5ee-e709c6686a43"]
}, Open  ]],
Cell[536195, 12243, 183, 3, 35, "Text",ExpressionUUID->"7862a3bd-f28c-438b-9243-7eb1ede4ecc8"],
Cell[CellGroupData[{
Cell[536403, 12250, 327, 5, 30, "Input",ExpressionUUID->"574436ea-112f-418b-ae5c-9462b41f727e"],
Cell[536733, 12257, 174, 2, 34, "Output",ExpressionUUID->"cc87a118-575b-4b13-bd71-ab3903ee17f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536944, 12264, 334, 5, 30, "Input",ExpressionUUID->"867d88eb-4f5c-4774-86e2-dc7125cf52dd"],
Cell[537281, 12271, 5958, 141, 377, "Output",ExpressionUUID->"cecacc6c-7731-4503-92cd-d5b5aa4d6eb5"]
}, Open  ]],
Cell[543254, 12415, 261, 5, 35, "Text",ExpressionUUID->"b6c1297e-61d2-4fa1-910f-35d2400765f1"],
Cell[CellGroupData[{
Cell[543540, 12424, 314, 6, 30, "Input",ExpressionUUID->"d982e1ef-2343-46c6-9102-73dccc1481d7"],
Cell[543857, 12432, 174, 2, 34, "Output",ExpressionUUID->"4c0848ce-221b-4b24-88ce-1b1c0e7772de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544068, 12439, 236, 3, 30, "Input",ExpressionUUID->"9900ff34-043c-49b4-a45a-c374611110ad"],
Cell[544307, 12444, 20276, 375, 377, "Output",ExpressionUUID->"326310cd-bee6-44fe-b14d-8c82eb1dc1fe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[564632, 12825, 181, 3, 38, "Subsection",ExpressionUUID->"68d93dec-681d-4190-b7ba-17c90f0693b6"],
Cell[564816, 12830, 519, 9, 58, "Text",ExpressionUUID->"efafd4ea-7f1f-470d-9768-4778d5fa9116"],
Cell[CellGroupData[{
Cell[565360, 12843, 347, 8, 30, "Input",ExpressionUUID->"107a5f4d-5698-44a5-bae0-567c7d807feb"],
Cell[565710, 12853, 865, 24, 77, "Output",ExpressionUUID->"ca8ce88b-c8fa-4960-bf88-9440f216a8b6"]
}, Open  ]],
Cell[566590, 12880, 352, 7, 58, "Text",ExpressionUUID->"8a76f72e-2903-43c1-a4ec-30479549d1f7"],
Cell[CellGroupData[{
Cell[566967, 12891, 202, 3, 30, "Input",ExpressionUUID->"6d52ad6a-78e3-4fc3-9c1c-dac954fa6fa2"],
Cell[567172, 12896, 102629, 2134, 96, "Output",ExpressionUUID->"37adc125-bb84-442c-859d-a72333d8b37b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669838, 15035, 642, 12, 73, "Input",ExpressionUUID->"a507ec8f-79c5-4f08-b858-7746e7b41269"],
Cell[670483, 15049, 177, 2, 34, "Output",ExpressionUUID->"88281f45-05f0-4a10-a13e-4b0c1cb9380c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670697, 15056, 270, 4, 30, "Input",ExpressionUUID->"fd42a311-1d1f-4d51-a941-dd5012780efb"],
Cell[670970, 15062, 133207, 2228, 377, 35251, 622, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"304ef587-40cc-4249-ac56-9bcf71b60475"]
}, Open  ]],
Cell[804192, 17293, 1453, 30, 104, "Text",ExpressionUUID->"dce74319-55a6-4346-8edc-7da49b0f1b0d"],
Cell[CellGroupData[{
Cell[805670, 17327, 1541, 35, 262, "Input",ExpressionUUID->"ef48f8e3-2641-48e2-9352-05a903788633"],
Cell[807214, 17364, 42881, 747, 593, "Output",ExpressionUUID->"654e2411-63f9-41e7-b66d-4406484e907e"]
}, Open  ]],
Cell[850110, 18114, 1036, 30, 104, "Text",ExpressionUUID->"4552ca0a-76f8-4add-8029-6e45a8789107"],
Cell[851149, 18146, 302, 9, 35, "Text",ExpressionUUID->"a52cf3ea-ad47-493c-8d1e-606a20f9c417"]
}, Closed]],
Cell[CellGroupData[{
Cell[851488, 18160, 186, 3, 38, "Subsection",ExpressionUUID->"df100a3d-0df9-4f65-8770-8585821b2a60"],
Cell[851677, 18165, 812, 14, 81, "Text",ExpressionUUID->"aa1590f3-4eae-4fc6-8293-64ebe64780e5"],
Cell[852492, 18181, 180, 3, 35, "Text",ExpressionUUID->"f7c06836-1112-497c-80d6-efe8060c6f2b"],
Cell[CellGroupData[{
Cell[852697, 18188, 399, 8, 30, "Input",ExpressionUUID->"2dbe24f5-70ac-40a6-9b5f-147ff05423a3"],
Cell[853099, 18198, 3237, 84, 377, "Output",ExpressionUUID->"013d2fe7-7520-423f-b8fb-4a50f4daa543"]
}, Open  ]],
Cell[856351, 18285, 430, 9, 58, "Text",ExpressionUUID->"1bea8b21-1b27-4d1a-a374-c441d2209ad8"],
Cell[CellGroupData[{
Cell[856806, 18298, 2438, 65, 160, "Input",ExpressionUUID->"51a79649-c0ad-4890-a4fd-d4511431ab7c"],
Cell[859247, 18365, 35750, 678, 378, "Output",ExpressionUUID->"1d9c8520-9efb-4bc7-b5a0-5c07cdff1208"]
}, Open  ]],
Cell[895012, 19046, 336, 9, 35, "Text",ExpressionUUID->"9b7e5fb6-207c-407a-8753-9908f1373aec"],
Cell[895351, 19057, 1107, 36, 95, "Input",ExpressionUUID->"7e098972-c947-41a2-aaa3-491a99bf7590"],
Cell[CellGroupData[{
Cell[896483, 19097, 203, 3, 30, "Input",ExpressionUUID->"f16aef35-ced0-4535-82fa-11a13da3c72b"],
Cell[896689, 19102, 26507, 575, 120, "Output",ExpressionUUID->"080ee2be-488b-4d09-ac98-e75b46c5182e"]
}, Open  ]],
Cell[923211, 19680, 313, 9, 35, "Text",ExpressionUUID->"c6cb6858-beea-4994-9920-41f4b8682b01"],
Cell[CellGroupData[{
Cell[923549, 19693, 1484, 38, 136, "Input",ExpressionUUID->"6e96555f-d76a-4fd0-9f30-29a2af05ccfc"],
Cell[925036, 19733, 2186, 42, 471, "Output",ExpressionUUID->"37bc0d94-d0bf-488d-a8da-9854edbc53c8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[927271, 19781, 197, 3, 38, "Subsection",ExpressionUUID->"72f172fc-a3ad-42fa-8863-59ca750c0b77"],
Cell[927471, 19786, 1013, 23, 81, "Text",ExpressionUUID->"8b43d357-6600-44fe-af84-e71a3db941c6"],
Cell[CellGroupData[{
Cell[928509, 19813, 256, 4, 45, "Subsubsection",ExpressionUUID->"68ebae4d-2a58-4efc-9b56-bab2b1609e5b"],
Cell[928768, 19819, 624, 11, 81, "Text",ExpressionUUID->"a6d18c4b-b2e1-4c7d-bc38-ba2638647bc8"],
Cell[CellGroupData[{
Cell[929417, 19834, 1066, 23, 115, "Input",ExpressionUUID->"19c814d5-a499-4d15-ae28-76e99ac8aae3"],
Cell[930486, 19859, 20587, 423, 199, "Output",ExpressionUUID->"56564cd5-a61c-4109-8a0f-78398c1d2712"]
}, Open  ]],
Cell[951088, 20285, 661, 16, 58, "Text",ExpressionUUID->"c4d305ae-3745-47b2-9094-adf5c5b11f74"],
Cell[CellGroupData[{
Cell[951774, 20305, 1173, 24, 115, "Input",ExpressionUUID->"52299481-cb68-408b-91a6-be745aefa10b"],
Cell[952950, 20331, 17781, 379, 199, "Output",ExpressionUUID->"51ac2076-3444-4f24-8e63-762bb6de4000"]
}, Open  ]],
Cell[970746, 20713, 306, 6, 58, "Text",ExpressionUUID->"376ff5c1-1f61-4f1c-8b2c-3bdbb6f7b609"],
Cell[CellGroupData[{
Cell[971077, 20723, 207, 3, 30, "Input",ExpressionUUID->"4701021b-1090-4630-bca1-98822fcd195b"],
Cell[971287, 20728, 40203, 868, 98, "Output",ExpressionUUID->"0ade498c-f427-47e9-9318-828452e92879"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011527, 21601, 521, 11, 52, "Input",ExpressionUUID->"6c2acc61-29d4-4684-9c09-3b961e6556c3"],
Cell[1012051, 21614, 30988, 552, 377, "Output",ExpressionUUID->"4b63f181-a955-43ff-b3d4-d315697de276"]
}, Open  ]],
Cell[1043054, 22169, 367, 7, 58, "Text",ExpressionUUID->"c4d29e88-8b10-4e70-beba-6b178b9716c9"],
Cell[CellGroupData[{
Cell[1043446, 22180, 702, 15, 73, "Input",ExpressionUUID->"683fc8e2-7767-4132-94b6-8f2b00b9c99d"],
Cell[1044151, 22197, 154305, 2574, 377, 45486, 789, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b75a0208-7406-487f-9b39-6417c1e77a4e"]
}, Open  ]],
Cell[1198471, 24774, 301, 9, 35, "Text",ExpressionUUID->"33382da6-5de8-452e-b3b8-66487624069c"]
}, Closed]],
Cell[CellGroupData[{
Cell[1198809, 24788, 219, 4, 37, "Subsubsection",ExpressionUUID->"c84867ab-4c6f-4a28-8481-fd30ea3a13f7"],
Cell[1199031, 24794, 303, 7, 35, "Text",ExpressionUUID->"6695bfb1-ba1d-4a23-b17d-1258cd971f17"],
Cell[CellGroupData[{
Cell[1199359, 24805, 206, 3, 30, "Input",ExpressionUUID->"d5063e7f-81e7-43c2-9734-8a498489a604"],
Cell[1199568, 24810, 26786, 585, 96, "Output",ExpressionUUID->"c34d1702-96ec-4a1a-a9ab-0aceb0598cef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1226391, 25400, 200, 3, 30, "Input",ExpressionUUID->"52575b99-5bd6-46aa-9167-a324350de4e0"],
Cell[1226594, 25405, 62016, 1334, 98, "Output",ExpressionUUID->"d092f713-6ee8-4c3a-b53b-8f4d97d23f75"]
}, Open  ]],
Cell[1288625, 26742, 748, 17, 104, "Text",ExpressionUUID->"630fed73-6ee8-49f5-94e9-ddce6659c9aa"],
Cell[1289376, 26761, 426, 12, 58, "Text",ExpressionUUID->"5a3a0bc4-23fc-44ab-a334-0e92fc361d6e"],
Cell[CellGroupData[{
Cell[1289827, 26777, 485, 13, 30, "Input",ExpressionUUID->"32a77976-e5f1-4b3e-8b81-a8aedccaf257"],
Cell[1290315, 26792, 820, 17, 56, "Output",ExpressionUUID->"8c63b412-b06b-4dcf-b327-df992f6cab1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291172, 26814, 265, 5, 30, "Input",ExpressionUUID->"3d11214a-f8dd-4c55-85cf-af0bb5faa6f0"],
Cell[1291440, 26821, 7843, 153, 376, "Output",ExpressionUUID->"5edd2b48-73f8-403f-afd1-49c946686af0"]
}, Open  ]],
Cell[1299298, 26977, 317, 7, 35, "Text",ExpressionUUID->"8beb1679-3970-48f3-92ba-3f3e08c113ce"],
Cell[CellGroupData[{
Cell[1299640, 26988, 354, 9, 30, "Input",ExpressionUUID->"f87114dd-495e-48f3-af4d-1fbd1b688ac3"],
Cell[1299997, 26999, 95210, 2064, 408, "Output",ExpressionUUID->"92b58939-fc6e-41f2-b74e-7c8f5abd5d83"]
}, Open  ]],
Cell[1395222, 29066, 569, 12, 81, "Text",ExpressionUUID->"6f1bd701-bc99-4b11-85b8-b74fe7c85800"],
Cell[CellGroupData[{
Cell[1395816, 29082, 428, 10, 30, "Input",ExpressionUUID->"b855673a-e16a-4cb9-b602-e1089182316c"],
Cell[1396247, 29094, 1371, 21, 119, "Output",ExpressionUUID->"0701a5bb-a4fd-4cba-b9f7-9dd3958ba87a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397655, 29120, 459, 10, 52, "Input",ExpressionUUID->"dd1c38a8-d626-42f5-a9ca-d20b06999060"],
Cell[1398117, 29132, 239988, 3978, 377, 112017, 1880, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b8e43a98-7ff3-49b5-a452-cd75dd76b2e2"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1638166, 33117, 181, 3, 38, "Subsection",ExpressionUUID->"efea6bb8-2ea2-4481-a2a1-5ecea357b448"],
Cell[1638350, 33122, 727, 16, 104, "Text",ExpressionUUID->"401304d7-7b07-4555-8d23-7c454ca87f76"],
Cell[CellGroupData[{
Cell[1639102, 33142, 202, 4, 30, "Input",ExpressionUUID->"439c7e75-ee00-4ea1-a5ce-45249f5ddf78"],
Cell[1639307, 33148, 87020, 1792, 121, "Output",ExpressionUUID->"ad944c86-911a-4bf0-80d7-750c06e6d6ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1726364, 34945, 275, 6, 30, "Input",ExpressionUUID->"642e4157-a297-4b50-a63c-54a9f7e23b1c"],
Cell[1726642, 34953, 532422, 8744, 439, 440829, 7242, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0bf73651-a090-4978-88d1-18f3b8d5f266"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

