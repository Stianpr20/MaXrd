Notebook[{

Cell[CellGroupData[{
Cell["StianRamsnes/MaXrd", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->1106790294,ExpressionUUID->"76cdd0b4-63ee-49fb-bad1-7a102a0a7caf"],

Cell["\<\
Database and utilities related to crystallography and X-ray scattering\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->321120944,ExpressionUUID->"948078cd-54fa-438a-9046-420efc604d71"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"8065b73a-d0e5-42ff-8427-9959a6bebfe4"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{"PacletDirectoryType" -> "Notebook", "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"deaaa440-ced7-41f9-a5e3-7513576b0841"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->203178441,ExpressionUUID->"b938e5ae-28fd-42e9-aab3-e0a3b58d90a7"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"9200dc85-c320-42c1-88f7-68e2835d87a6"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->321059157,ExpressionUUID->"a1ccf59c-6b27-4cde-bbd4-07c1e473ba02"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"f151fd3d-15cc-44e3-a33d-4b01a4cd3556"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1562330435,ExpressionUUID->"8ffddcc1-5461-4fc8-ac02-9b40877cf0c3"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"fb4c69a8-5cf6-45f0-bbf9-cb2999a12692"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->805069176,ExpressionUUID->"8fe79d3a-4f56-4648-a0f5-d6801d01efac"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PackageOverview.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "PackageOverview.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "PackageOverview.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1650664932,ExpressionUUID->"71c8813d-fd8e-4114-9e3e-77b017026e69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"a28d3d53-2d1a-4a75-aa5c-55f876f657fe"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1531760178,ExpressionUUID->"b7cba9b2-209d-4c79-a42c-b16480811330"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"9cf04000-3335-46c1-8567-a8e4798edf46"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->259351410,ExpressionUUID->"1b72d7ad-0799-48db-a8e0-659886ed19d7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AttenuationCoefficient.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "AttenuationCoefficient.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "AttenuationCoefficient.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1674828107,ExpressionUUID->"fd71f5b7-03ab-4c78-ab17-c8904fd4b7db"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BraggAngle.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "BraggAngle.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "BraggAngle.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1767833120,ExpressionUUID->"f8dc46d2-4301-438f-92b3-076491e8aae1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ConstructDomains.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ConstructDomains.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ConstructDomains.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1534991595,ExpressionUUID->"c7cfa5c9-1c26-4aae-a3ed-ba1a9d161123"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalDensity.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CrystalDensity.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CrystalDensity.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->882685754,ExpressionUUID->"6790c054-efeb-4f42-9545-ccc1792feabf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalFormulaUnits.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CrystalFormulaUnits.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CrystalFormulaUnits.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->482434002,ExpressionUUID->"29797900-ca64-49ab-be96-5434b2f008be"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalPlot.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CrystalPlot.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CrystalPlot.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1517504189,ExpressionUUID->"95d62b9d-8400-4d7a-8d75-0a04c5efffe4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DarwinWidth.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "DarwinWidth.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "DarwinWidth.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1177112751,ExpressionUUID->"6b04e63c-79f8-4681-afa3-42deebf537cf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DistortStructure.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "DistortStructure.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "DistortStructure.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1114649893,ExpressionUUID->"a0f72271-f481-4441-81f9-97f4dbd2597f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DomainPlot.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "DomainPlot.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "DomainPlot.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1420898870,ExpressionUUID->"c6a353ab-348b-4f13-a004-2da8afe78005"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EmbedStructure.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "EmbedStructure.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "EmbedStructure.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1029153450,ExpressionUUID->"04feb5e0-0321-4417-9628-2e27a6bdbd7b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExpandCrystal.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ExpandCrystal.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ExpandCrystal.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1148741212,ExpressionUUID->"966a6fe6-4a01-4a2a-a90f-50ce96d95332"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExportCrystalData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ExportCrystalData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ExportCrystalData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1015563554,ExpressionUUID->"9a33bd0f-a781-4920-af4c-b03ba3d37816"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExtinctionLength.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ExtinctionLength.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ExtinctionLength.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->376625722,ExpressionUUID->"f76f26ba-b3d2-42b5-93f0-983fadc48848"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FindPixelClusters.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "FindPixelClusters.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "FindPixelClusters.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1314201945,ExpressionUUID->"59ce58ea-7a9f-4bd1-ad7e-ab0aa0373508"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetAtomCoordinates.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetAtomCoordinates.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetAtomCoordinates.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->922780220,ExpressionUUID->"da8ede86-111e-41ae-be89-2d8022e37ecf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetAtomicScatteringFactors.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetAtomicScatteringFactors.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetAtomicScatteringFactors.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->40258906,ExpressionUUID->"8b5764f7-355c-479f-b0e1-9bf26f196b13"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetCrystalMetric.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetCrystalMetric.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetCrystalMetric.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->174084337,ExpressionUUID->"96e7031d-41d1-4c4f-94ee-0e5fbb4afb4c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetElements.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetElements.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetElements.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->962724745,ExpressionUUID->"2a794b50-fc06-4bd3-90ed-a8e4356afffe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetLatticeParameters.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetLatticeParameters.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetLatticeParameters.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1372992717,ExpressionUUID->"de3fc0e9-94d4-4fab-8c83-8e688cf4bbbf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetLaueClass.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetLaueClass.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetLaueClass.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1176807604,ExpressionUUID->"a4316cf8-e397-43ca-bf70-34ca1f186fd5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetScatteringCrossSections.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetScatteringCrossSections.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetScatteringCrossSections.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->281011558,ExpressionUUID->"d6e46845-4f6d-4b57-89b6-b93b9832ba81"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetSymmetryData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetSymmetryData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetSymmetryData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->644715553,ExpressionUUID->"29e1dd37-22e8-4d6c-bf60-a5e2371b92af"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetSymmetryOperations.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "GetSymmetryOperations.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "GetSymmetryOperations.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1679300156,ExpressionUUID->"0ad25c16-bd64-4f4c-96a1-8875798de6c9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportCrystalData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ImportCrystalData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ImportCrystalData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1767633018,ExpressionUUID->"4dca8256-967c-441c-a17e-619efc5eabb0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InputCheck.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "InputCheck.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "InputCheck.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->319360928,ExpressionUUID->"3fbdbb9f-d663-4329-929f-ce690cec2efd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InterplanarSpacing.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "InterplanarSpacing.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "InterplanarSpacing.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->937483043,ExpressionUUID->"52337bb9-c359-45ce-8573-ee7fa47ec32f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MergeDomains.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "MergeDomains.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "MergeDomains.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->189985662,ExpressionUUID->"5a19e496-b838-4e7e-9d45-b18abdfbd19b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MergeSymmetryEquivalentReflections.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "MergeSymmetryEquivalentReflections.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "MergeSymmetryEquivalentReflections.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1928321792,ExpressionUUID->"8156de58-30ed-4b07-8195-2a753063c655"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MillerNotationToList.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "MillerNotationToList.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "MillerNotationToList.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1628641267,ExpressionUUID->"de25b0d3-c363-4d63-94e4-a7f7f57cceed"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MillerNotationToString.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "MillerNotationToString.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "MillerNotationToString.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->747209807,ExpressionUUID->"cabc15bc-ae04-4d30-8332-f964c924fae7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReciprocalImageCheck.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ReciprocalImageCheck.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ReciprocalImageCheck.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2018342240,ExpressionUUID->"ae69a02f-0877-439f-a4ae-d3deff02d7b6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReciprocalSpaceSimulation.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ReciprocalSpaceSimulation.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ReciprocalSpaceSimulation.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->626339668,ExpressionUUID->"9050b66f-5eeb-4422-aafa-54db5141657f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReflectionList.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ReflectionList.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ReflectionList.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2073446129,ExpressionUUID->"dd5a7d6c-0286-4bf8-a1e2-7cfbe3d45a2b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"RelatedFunctionsGraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "RelatedFunctionsGraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "RelatedFunctionsGraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1191950234,ExpressionUUID->"d68ab903-bed8-47ca-8b5a-da7f4044950e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResetCrystalData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ResetCrystalData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ResetCrystalData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1380123622,ExpressionUUID->"bbb44457-26a1-401d-9d25-b1a31b4e2bc1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResizeStructure.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ResizeStructure.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ResizeStructure.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->766843707,ExpressionUUID->"a1aa1ac0-9b12-4058-9ec4-b08ffe3405c7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SimulateDiffractionPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SimulateDiffractionPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SimulateDiffractionPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1292817902,ExpressionUUID->"a23dbd57-ec1d-4ba5-8ff5-90dd5a006623"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"StructureFactor.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "StructureFactor.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "StructureFactor.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->150938568,ExpressionUUID->"98715e16-8a55-42cd-9acc-4ea9d7ab8a4c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"StructureFactorTable.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "StructureFactorTable.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "StructureFactorTable.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->646325269,ExpressionUUID->"e3dd88fd-6751-4bbc-ba1e-b745237fa944"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryEquivalentPositions.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SymmetryEquivalentPositions.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SymmetryEquivalentPositions.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->816509557,ExpressionUUID->"bf1fe910-c366-4f46-a787-5dad1d2dc02e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryEquivalentReflections.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SymmetryEquivalentReflections.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SymmetryEquivalentReflections.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->655620169,ExpressionUUID->"1092cfa7-f332-47b4-90fe-7f3a848b013c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryEquivalentReflectionsQ.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SymmetryEquivalentReflectionsQ.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SymmetryEquivalentReflectionsQ.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->269587626,ExpressionUUID->"5550814a-2f64-4806-baf4-33559c083434"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SynthesiseStructure.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SynthesiseStructure.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SynthesiseStructure.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1916218659,ExpressionUUID->"9e4da548-f515-4815-8915-e027d8be9510"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SystematicAbsentQ.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SystematicAbsentQ.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SystematicAbsentQ.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->74747754,ExpressionUUID->"b048d3b7-bc23-4947-a64b-6d6fd6f08b65"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ToStandardSetting.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ToStandardSetting.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ToStandardSetting.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->7567983,ExpressionUUID->"fa831a54-3493-40bb-b52a-b8b02118c4a5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TransformAtomicDisplacementParameters.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "TransformAtomicDisplacementParameters.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "TransformAtomicDisplacementParameters.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->493555108,ExpressionUUID->"11f9bd8e-a29a-474f-ac34-259d58310c06"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"UnitCellTransformation.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "UnitCellTransformation.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "UnitCellTransformation.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1598855442,ExpressionUUID->"5400005a-a827-4cf8-9bbe-938eb49f0c36"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$CrystalData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$CrystalData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$CrystalData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->500538783,ExpressionUUID->"7d3e92a7-7c87-4d28-a971-cff85eb5ddc5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$GroupSymbolRedirect.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$GroupSymbolRedirect.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$GroupSymbolRedirect.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->861880582,ExpressionUUID->"93df8d0c-7a3d-4f64-a432-989fbd43686c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$LaueClasses.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$LaueClasses.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$LaueClasses.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->849742659,ExpressionUUID->"3bc3c895-da1b-40c9-aec5-65a11c7b79f4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$MaXrdPath.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$MaXrdPath.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$MaXrdPath.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->858617263,ExpressionUUID->"77811a51-f10e-4d0e-8cc2-07dced27bf4e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$MaXrdVersion.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$MaXrdVersion.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$MaXrdVersion.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1837715048,ExpressionUUID->"7207f0b8-c751-467f-8a45-acd2949d7c78"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$PeriodicTable.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$PeriodicTable.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$PeriodicTable.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1367000582,ExpressionUUID->"132c4e14-5680-4a8d-a72a-c25659d4a19b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$PointGroups.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$PointGroups.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$PointGroups.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1398726068,ExpressionUUID->"ed8ac27f-f56d-4c9d-9603-f74a4a66a616"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$SpaceGroups.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$SpaceGroups.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$SpaceGroups.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2033024814,ExpressionUUID->"c2987006-5fb4-49ba-836d-af7dbfaee3f0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$TransformationMatrices.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$TransformationMatrices.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$TransformationMatrices.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->435741481,ExpressionUUID->"d56e1929-6390-41db-b09a-fc5fbe5e4b24"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"356d4666-71a8-4514-8cad-e13b9b840dfc"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->587834897,ExpressionUUID->"e42d74f4-7d3a-4747-b96c-15959d36f631"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ApplyingCrystalData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "ApplyingCrystalData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "ApplyingCrystalData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1316337679,ExpressionUUID->"724658e9-56e0-44cb-baed-8a24927754d1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BasicComputations.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "BasicComputations.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "BasicComputations.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->310839559,ExpressionUUID->"afe6f4f9-5045-4be6-9282-bdd45451294e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ComputationsOnReflections.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "ComputationsOnReflections.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "ComputationsOnReflections.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1600238609,ExpressionUUID->"78b55649-a9fa-40b1-8251-f5ddd4e30407"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FormulasInCrystallography.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "FormulasInCrystallography.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "FormulasInCrystallography.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->125106435,ExpressionUUID->"be7af9d8-63b7-491e-b9f9-017c3b29a352"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportingCrystalData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "ImportingCrystalData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "ImportingCrystalData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->277362632,ExpressionUUID->"c05798ca-f717-4502-81b8-e836467397d9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"QuickGuideToConditions.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "QuickGuideToConditions.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "QuickGuideToConditions.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1594242034,ExpressionUUID->"ae68227c-fee4-4eb2-9de7-0dacca8e3d9f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"References.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "References.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "References.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->272401819,ExpressionUUID->"2569ee1a-5860-4610-bd36-d20b3a32b64b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryCalculations.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "SymmetryCalculations.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "SymmetryCalculations.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1969720176,ExpressionUUID->"29520925-88e0-4547-bf0f-6420ba7094d6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TheAssociationStructureOfCrystallographicData.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "TheAssociationStructureOfCrystallographicData.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "TheAssociationStructureOfCrystallographicData.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1626579527,ExpressionUUID->"a1ab7599-616e-45e1-a2d8-03637cc255c8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"UsingTheRotationOptions.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "UsingTheRotationOptions.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "UsingTheRotationOptions.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->455283979,ExpressionUUID->"187788ee-c3cb-4f34-9aa0-a1c064ea14e3"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"5dc76cd7-bcd1-4ef2-88a9-3cfaacbb9d30"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->473600792,ExpressionUUID->"60baf8f1-5b40-41f0-af53-3c079c323d94"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AutoCompletion.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "AutoCompletion.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "AutoCompletion.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->378794549,ExpressionUUID->"7b7d43c7-8129-4d06-81b3-cc452772751c"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Data\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"e1b64e2e-a64d-4ead-ae24-1c0660eec1a1"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1234115362,ExpressionUUID->"1391317c-a937-454e-a78e-3bd47c219da2"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"AtomicScatteringFactor\"\>", {"\<\"Open/Close \
Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"8431f2ea-4a95-42d4-9fd6-23f31dae3ca7"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1379826408,ExpressionUUID->"dba9f3b6-3c9e-401b-83cd-7627544c7c92"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"AnomalousCorrections\"\>", {"\<\"Open/Close \
Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"615bac45-6590-4201-b434-a4cdab0ff822"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->66535303,ExpressionUUID->"e6025980-b567-4f12-8dbc-dc99a7011a1f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BrennanCowan.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "BrennanCowan.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "BrennanCowan.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1567341081,ExpressionUUID->"882710ba-266f-4a93-a17a-9e73fbe883ab"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Chantler.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "Chantler.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "Chantler.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1267134265,ExpressionUUID->"5205d146-0f88-407e-b781-901b1f77344b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CromerLiberman.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "CromerLiberman.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "CromerLiberman.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->130264556,ExpressionUUID->"71b3ed8a-b185-470a-ab18-01cf77411a9e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EPDL97.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "EPDL97.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "EPDL97.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1070556399,ExpressionUUID->"681af9ac-8638-45c2-b8aa-99c579bcf6a9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Henke.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "Henke.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "Henke.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1223403427,ExpressionUUID->"c09c4b7a-7d6a-4850-8056-68b717955f16"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Kissel.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "Kissel.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "Kissel.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1732961211,ExpressionUUID->"f6afcf2c-309f-4a15-aff6-109c75a37ce7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sasaki.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "Sasaki.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "Sasaki.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1705852663,ExpressionUUID->"ce60012a-fb73-44c0-9931-c67bf116a457"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Windt.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "Windt.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "Windt.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1359019591,ExpressionUUID->"ad682210-5ba5-4f29-978d-302b8529e419"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"xraylib.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "AnomalousCorrections", "xraylib.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "AnomalousCorrections", "xraylib.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->406196445,ExpressionUUID->"ca6295fa-89a5-4da4-aadd-aa7b96a97aeb"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CromerMann.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "CromerMann.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "CromerMann.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->93137302,ExpressionUUID->"46848501-8581-4c04-8b82-03904483de21"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EPDL97.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "EPDL97.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "EPDL97.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1990539698,ExpressionUUID->"4bc57fef-39fb-409c-a833-3172c1a16ac0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InternationalTablesC(3rd).m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "InternationalTablesC(3rd).m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "InternationalTablesC(3rd).m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1500451320,ExpressionUUID->"bb5792bc-dee4-4695-88f4-9a7f67ed015a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Kissel.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "Kissel.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "Kissel.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->184868519,ExpressionUUID->"db2d5a96-da3d-48fa-bf53-c3e403c9a23e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Kissel(modified).m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "Kissel(modified).m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "Kissel(modified).m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1823845271,ExpressionUUID->"64b89d8f-9615-43cf-841d-df927c66622c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"WaasmaierKirfel.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "WaasmaierKirfel.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "WaasmaierKirfel.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->185892419,ExpressionUUID->"64e56497-8102-4b01-9483-2542af0aeb3c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"XOP(2.1).m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
       "XOP(2.1).m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "AtomicScatteringFactor", 
    "XOP(2.1).m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1852663395,ExpressionUUID->"1021b3dd-99a4-46ff-9ba4-6bfb5239daa2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"CrossSections\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"87305ed2-e7ca-429c-bbf5-cf5af7dbf9db"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1348281912,ExpressionUUID->"a76eb4cb-447a-4501-afff-77e04dfa13a2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Metadata.txt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", 
       "Metadata.txt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "Metadata.txt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->326651840,ExpressionUUID->"e153a899-9e5b-4bd6-baf8-cee8ab3648bc"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"xraylib\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"8225c998-31e4-40fd-9789-54cecbbf7f03"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1069273148,ExpressionUUID->"a19d7398-5700-4a36-8830-9fa24c6ef284"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ac.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ac.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ac.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1130640340,ExpressionUUID->"4d98c3aa-137e-439f-b673-8da6f797ba0b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ag.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ag.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ag.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1736885724,ExpressionUUID->"03157484-00bf-4a53-8ac1-be24d512630e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Al.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Al.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Al.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1093149597,ExpressionUUID->"15e23b44-7df1-43dd-87a1-32e44b6bb758"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Am.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Am.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Am.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->842676694,ExpressionUUID->"441f52c6-7d77-4df3-a7d4-e4f70c6ae85e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ar.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ar.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ar.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->212544093,ExpressionUUID->"55f0aac0-ab78-467d-a465-e15a5642e31b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"As.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "As.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "As.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->963266090,ExpressionUUID->"5e215942-1480-4923-b332-f884624de1f7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"At.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "At.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "At.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1881443544,ExpressionUUID->"db3e8963-9c82-42cd-a6c1-45194a448efb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Au.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Au.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Au.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1872425580,ExpressionUUID->"4a4ea4aa-0ac0-4833-a5f9-44d3dbf3c496"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ba.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ba.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ba.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->631359922,ExpressionUUID->"f4687099-2327-4ee8-ab67-9872ffd9fd17"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"B.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "B.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "B.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->549509227,ExpressionUUID->"952bd9d8-2921-4d0e-bb1a-747cc412fb1c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Be.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Be.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Be.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1421896089,ExpressionUUID->"6a11b640-23a7-421d-b9a7-4b793b7a4c46"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Bi.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Bi.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Bi.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->609544007,ExpressionUUID->"d48c9d36-eb0f-4e19-a263-adf9ac7c1f52"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Bk.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Bk.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Bk.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1109129459,ExpressionUUID->"ef4cd66f-6af6-4b4a-a889-4a7f457b013b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Br.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Br.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Br.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->980761453,ExpressionUUID->"cd1fc9f8-0557-45e2-b2e5-d49614a95cba"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ca.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ca.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ca.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1720749846,ExpressionUUID->"f2ff899b-e166-4f2a-8a23-0948cd9285f7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"C.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "C.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "C.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->480387573,ExpressionUUID->"dfe7802f-1533-4bad-9d66-2fe88ecf4305"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cd.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cd.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cd.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1482910338,ExpressionUUID->"736faad9-966a-4649-ba6f-ac932c5225cf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ce.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ce.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ce.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1726327331,ExpressionUUID->"59b37565-9e2d-475d-9904-e71a0f1a8f40"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cf.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cf.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cf.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1879381147,ExpressionUUID->"8cdc6d3b-455c-4dc9-9368-b7ad3acba51a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cl.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cl.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cl.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1569457553,ExpressionUUID->"1e7c8fcf-c7de-4e78-b27c-62f596fe27a9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cm.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cm.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cm.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->331457170,ExpressionUUID->"5d8599dd-5dfc-40e1-843e-4796afeeaa2a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Co.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Co.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Co.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->228075872,ExpressionUUID->"69399962-c295-427d-a754-2bfc186d32e7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cr.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cr.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cr.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->12870809,ExpressionUUID->"f0201119-652e-4104-ab6e-c4688c5eccb2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cs.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cs.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cs.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1571322163,ExpressionUUID->"fc43e1a3-6d54-402e-a78f-db86c1a03f45"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Cu.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Cu.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Cu.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1605186382,ExpressionUUID->"eea32a09-6d5d-4579-bfed-5ef5c9ae9497"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Dy.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Dy.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Dy.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1677948660,ExpressionUUID->"0b584e70-8838-4ca8-87e8-d0ae64371175"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Er.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Er.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Er.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->527876216,ExpressionUUID->"4e173d49-4c37-4c39-9c2b-fcb8e8433974"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Eu.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Eu.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Eu.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->760616555,ExpressionUUID->"f8160719-b6a0-45e4-ac6e-9edf82b08b86"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"F.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "F.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "F.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1859772941,ExpressionUUID->"c9ecdb6d-8584-4dae-8be2-9d8c2cb654a2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Fe.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Fe.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Fe.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->579337302,ExpressionUUID->"357d8935-2c08-4b44-920e-92974a9776a3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Fr.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Fr.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Fr.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->231179216,ExpressionUUID->"34ee2339-d5c3-4ad6-8c77-669362a5a334"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ga.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ga.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ga.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->631165889,ExpressionUUID->"9ca8df7d-7f03-4e31-83f8-435ebdeaaa86"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Gd.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Gd.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Gd.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1583363890,ExpressionUUID->"3ad278b9-3be7-472e-962d-5e7d16f1c031"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ge.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ge.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ge.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2127029253,ExpressionUUID->"2ae7622d-fd38-4844-a2e7-4faa729c84d9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"H.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "H.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "H.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1967867209,ExpressionUUID->"18861504-37db-4542-b318-cb08b494e400"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"He.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "He.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "He.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->548534216,ExpressionUUID->"0803cfef-4816-4107-99d7-af8e84bcd0b0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Hf.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Hf.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Hf.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->67271741,ExpressionUUID->"3cc464e7-3f49-4e35-aa45-83207bf851b8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Hg.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Hg.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Hg.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1059752665,ExpressionUUID->"a3d3a29a-3a35-49c7-a7f3-774a8b937880"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ho.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ho.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ho.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->33672437,ExpressionUUID->"1044d857-47c5-4fff-ab62-9f7a45b1544e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"I.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "I.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "I.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1144449498,ExpressionUUID->"6a425e96-5b2d-4e24-beb7-04c49f2dc1e0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"In.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "In.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "In.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1899170354,ExpressionUUID->"e0d920fc-38f2-4de2-a513-da667ea1efee"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ir.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ir.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ir.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1306694317,ExpressionUUID->"47723f09-8404-4390-ba97-19b5ba0e49b8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"K.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "K.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "K.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1443611597,ExpressionUUID->"2da82d2e-e9c2-49b8-9634-9e32bcb648c6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Kr.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Kr.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Kr.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->509866973,ExpressionUUID->"a4d2100f-7986-468a-b906-68fc608b92f8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"La.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "La.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "La.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->874463681,ExpressionUUID->"89734e3c-d4ee-4384-b8d0-2c6e6f0ae5a0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Li.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Li.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Li.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1880490146,ExpressionUUID->"676bb596-d56b-4b20-83e5-48c0971258c9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Lu.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Lu.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Lu.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->881050923,ExpressionUUID->"7267d48b-4d07-49e1-83cc-dd4a9b2f56e7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Mg.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Mg.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Mg.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->923116796,ExpressionUUID->"e937c397-98a3-48d2-8f96-2dd089664a1f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Mn.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Mn.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Mn.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1402124444,ExpressionUUID->"4eda7027-fb57-4bbb-ba32-cea6a74d9834"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Mo.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Mo.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Mo.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1167471777,ExpressionUUID->"16a6d3a7-792f-4d0e-a38d-16bfbfab9fba"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Na.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Na.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Na.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->140073400,ExpressionUUID->"b689f31e-29e6-4241-924e-dca75aa67e81"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Nb.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Nb.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Nb.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->571556688,ExpressionUUID->"5ee4b7a9-f87d-4d64-b5e2-15d9d9c5ba53"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"N.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "N.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "N.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->458902185,ExpressionUUID->"13627c67-e185-4a0d-ac3b-3af35dfe358b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Nd.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Nd.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Nd.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1155246918,ExpressionUUID->"47ef5c5e-6d21-4253-a7b3-7778001a85ef"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ne.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ne.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ne.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->835298299,ExpressionUUID->"e53c4563-2bb4-4eb8-b229-38fbab7a49fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ni.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ni.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ni.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->757910854,ExpressionUUID->"d44e4553-2372-478e-a058-e364e51777b2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Np.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Np.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Np.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1482212821,ExpressionUUID->"9dedde61-486a-4aac-9a5f-e5a050ce9f9e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"O.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "O.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "O.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->740577347,ExpressionUUID->"18b7736d-d71d-46d2-be44-4ea30760243d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Os.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Os.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Os.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->68253017,ExpressionUUID->"e45db082-d145-4569-b27b-760c0aeeeecf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pa.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pa.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pa.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->372189221,ExpressionUUID->"3b1e040e-4d38-417d-b460-b78d7e2c5415"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pb.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pb.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pb.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1911857283,ExpressionUUID->"e577ae09-0825-4620-bf58-a2150bd99e0b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"P.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "P.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "P.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1935028967,ExpressionUUID->"c1ce06cd-d753-4fc4-a2b3-f2cec62eddc7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pd.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pd.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pd.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->539498201,ExpressionUUID->"cb86edb7-9af5-4b9d-8b51-6609defef7b8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pm.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pm.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pm.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->670306573,ExpressionUUID->"b8b1d0fa-9262-4ebd-8bf1-91f90bf961fd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Po.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Po.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Po.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->143360249,ExpressionUUID->"541f0615-ab86-4c6b-b32e-b83e64a9cfcd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pr.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pr.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pr.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2126536656,ExpressionUUID->"d86ba4f3-d816-4f87-bb15-67abc60c9e3e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pt.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pt.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pt.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->131240371,ExpressionUUID->"48d158ac-cbce-4edf-9007-8ff886476a92"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Pu.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Pu.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Pu.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->291209928,ExpressionUUID->"3072a6e5-7159-4566-a583-462edb3af3c2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ra.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ra.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ra.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->250028383,ExpressionUUID->"fab6b475-bd42-407e-a702-52ab55d5ae1b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Rb.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Rb.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Rb.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1749019549,ExpressionUUID->"f08386f5-d9e3-400e-90b0-ebe4dbb0b29c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Re.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Re.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Re.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1015399907,ExpressionUUID->"0f548a7a-1384-484e-a611-4d748ebc7298"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Rh.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Rh.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Rh.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1921177887,ExpressionUUID->"b0ea0fb6-3480-48cf-a936-339b984dcba1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Rn.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Rn.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Rn.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1820114164,ExpressionUUID->"c1c8b0ca-517b-49f7-95c3-af03d61e8656"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ru.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ru.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ru.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1901686480,ExpressionUUID->"a15403ef-9084-4fc1-b811-21e68fa75613"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sb.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Sb.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Sb.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->645551059,ExpressionUUID->"10aa4f69-effd-47fc-8a30-dd2bb03339ff"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sc.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Sc.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Sc.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->689263969,ExpressionUUID->"a51428fc-6ea6-4b72-87b3-522736189c72"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"S.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "S.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "S.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->932735065,ExpressionUUID->"f5debfcd-6a91-4577-affc-871b7e713649"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Se.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Se.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Se.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1995098002,ExpressionUUID->"14bb704d-bdc2-4aa5-b964-79ab91d5e5c7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Si.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Si.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Si.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->802455356,ExpressionUUID->"b464ea93-ed96-4a46-a91f-555777f69ecb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sm.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Sm.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Sm.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->669865132,ExpressionUUID->"af61e34c-8ec3-473a-aca1-0edaffeb72c7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sn.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Sn.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Sn.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1313995950,ExpressionUUID->"bea12002-3f46-4b32-b82c-b9120456e3c6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sr.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Sr.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Sr.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1755589549,ExpressionUUID->"04a05266-113c-4d09-8efe-4a6a3614a0e8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ta.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ta.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ta.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1915723910,ExpressionUUID->"511676df-3fa0-45a9-872e-8301fc3871d9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Tb.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Tb.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Tb.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->349435899,ExpressionUUID->"82f77593-6d7a-40d8-9457-c3edc1175f16"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Tc.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Tc.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Tc.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1748863595,ExpressionUUID->"7834570b-35bd-4665-b631-cf545e825b00"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Te.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Te.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Te.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->541764676,ExpressionUUID->"249cfcbc-c900-438a-b047-bc28f5a6e120"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Th.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Th.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Th.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->108246252,ExpressionUUID->"bc2d529e-e504-4a23-8b93-20e712a60400"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ti.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Ti.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Ti.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->376108355,ExpressionUUID->"ec8555ea-a1a4-46b0-a2d3-01e56fb4ca84"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Tl.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Tl.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Tl.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1208749364,ExpressionUUID->"11e5423c-d6d6-4a67-b44e-22f13ed58055"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Tm.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Tm.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Tm.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->255260128,ExpressionUUID->"e18bfdc8-105a-441e-978f-7ccf5d5988bf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"U.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "U.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "U.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1632128237,ExpressionUUID->"b9539cc6-b815-4a0a-aea4-64f0096a5d18"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"V.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "V.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "V.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1370656128,ExpressionUUID->"d60d788f-1f5e-48ea-a6c1-fb005c7bbb93"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"W.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "W.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "W.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->560461927,ExpressionUUID->"38056e3d-36dc-4d07-b621-e43ea9f9b79e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Xe.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Xe.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Xe.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->820331347,ExpressionUUID->"9203e695-e62e-43c2-a043-80a4c76d2867"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Yb.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Yb.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Yb.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->463935289,ExpressionUUID->"38595987-ac41-4844-8771-0eb1f02192d2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Y.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Y.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Y.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1994763613,ExpressionUUID->"e14864e0-75f2-4179-a463-f88ccc6d86d6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Zn.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Zn.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Zn.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1624830374,ExpressionUUID->"3a1c13c7-7751-4b83-b26a-a9e7df41c991"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Zr.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
       "Zr.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrossSections", "xraylib", 
    "Zr.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1122040566,ExpressionUUID->"ac9d9c87-cc2f-4c9c-8efe-cf4bf251619b"]
}, Closed]]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalDataDemo.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "CrystalDataDemo.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "CrystalDataDemo.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1081888455,ExpressionUUID->"1a97d060-ed9f-4210-a910-e0e6cfaa378a"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ExampleFiles\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"9eecd81f-59ed-482d-b2ee-d37e702059e2"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->555224036,ExpressionUUID->"a4bc44ad-2cbc-4b97-a5ed-f681e0876741"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"CIF\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"c8fce99d-892a-485c-86f6-7eb81b420efe"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->833926837,ExpressionUUID->"e36ff895-6740-405a-9d2c-6d74aa0b7fe9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"COD_2203515.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "COD_2203515.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
    "COD_2203515.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1330069137,ExpressionUUID->"92247203-a369-42d1-bb83-bdd05599fe35"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Default\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default"}],
  
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"7b344111-dce4-48e2-b368-4fee63914a75"]], \
"FileManagerDirectory",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1314703936,ExpressionUUID->"68f22821-eb55-4b23-be5d-5db17dab69c2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Austenite.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Austenite.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Austenite.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->769808369,ExpressionUUID->"d5f21141-9334-47c5-971e-03b7ef0fdb34"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ferrite.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Ferrite.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Ferrite.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1727768255,ExpressionUUID->"512190ae-2986-49a7-84d7-32b8eede8b2a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ice.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Ice.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Ice.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->327187051,ExpressionUUID->"c64bf545-8d0b-4d57-ab35-3e3a8d9cc2a8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LaB6.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "LaB6.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "LaB6.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1474629837,ExpressionUUID->"e1bce2db-b69e-400f-ba85-95f887c3d591"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LiCoO2.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "LiCoO2.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "LiCoO2.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2142384079,ExpressionUUID->"69f6bc8a-6ec4-4226-a850-3a984bf0efcb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LiMnO4P.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "LiMnO4P.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "LiMnO4P.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->190906504,ExpressionUUID->"d3c3c90c-7545-44b0-9d7b-ef65789ffed3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Perovskite.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Perovskite.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Perovskite.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->225044110,ExpressionUUID->"6235b881-5a8a-4cf1-a0d1-37a9533a61ac"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Po.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Po.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Po.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->597654403,ExpressionUUID->"e1a8ebf7-04ea-489d-9926-f14077c06947"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PrussianBlue.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "PrussianBlue.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "PrussianBlue.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->996534202,ExpressionUUID->"a206c29a-c792-4a4a-afe9-25c2abd79839"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sodalite.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Sodalite.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Sodalite.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->525370061,ExpressionUUID->"4f43f362-4f47-45e7-a31e-39b7c13089c4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"W.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "W.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "W.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1589342410,ExpressionUUID->"03c76389-0be4-4061-a5bc-fef86f8499b6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Zn.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "Zn.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "Zn.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1676283484,ExpressionUUID->"2a883b2f-7477-4ce9-b32b-e858b6868478"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ZnS.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Default", "ZnS.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[5]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", "Default", 
    "ZnS.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{115 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 150},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->458550595,ExpressionUUID->"034bbe94-c9f6-4348-90af-e69bcdaf79a2"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Ferrocene.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Ferrocene.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
    "Ferrocene.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1688524729,ExpressionUUID->"1b7ce592-db47-4e21-8873-b36029ddd047"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"IUCr_produced_with_crystals.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "IUCr_produced_with_crystals.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
    "IUCr_produced_with_crystals.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->38725198,ExpressionUUID->"2a6f3ea0-baaa-4a7a-b1ba-15bc68c359bf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ThioureaFerrocene.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "ThioureaFerrocene.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
    "ThioureaFerrocene.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->166857745,ExpressionUUID->"d7191bff-3dd7-498a-a1ac-e09a72d0a3c5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Yoderite.cif\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
       "Yoderite.cif"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "CIF", 
    "Yoderite.cif"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1911960880,ExpressionUUID->"5a2d61d2-4b50-4d44-8c54-40969cd7b094"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"DiffractionImages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"25249e1a-9acf-417c-a3e2-d5619a5a853f"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1528700099,ExpressionUUID->"09aad584-d632-4d7a-855f-3c2b473f4471"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Hexagonal_hk0.jpg\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Hexagonal_hk0.jpg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Hexagonal_hk0.jpg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->368211185,ExpressionUUID->"7dcbe811-373e-44ad-8d6d-a4c363c348c8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Hexagonal_hk2.8_165K.jpg\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Hexagonal_hk2.8_165K.jpg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Hexagonal_hk2.8_165K.jpg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1624999288,ExpressionUUID->"8dcde4a4-a3ec-4401-952a-199cc45264a6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Laue.png\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Laue.png"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Laue.png"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPNGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1813494517,ExpressionUUID->"03490511-6c55-408c-bab9-c7e1e63214c1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Monoclinic_h0l.jpg\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Monoclinic_h0l.jpg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Monoclinic_h0l.jpg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->166945348,ExpressionUUID->"e98a91d4-4114-4edd-b126-998a1c8f3d74"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Monoclinic_hk-2.jpg\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Monoclinic_hk-2.jpg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Monoclinic_hk-2.jpg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1236820854,ExpressionUUID->"b03efbe1-92a1-458f-9b69-041466bf7d10"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Trigonal_hk0.jpg\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Trigonal_hk0.jpg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Trigonal_hk0.jpg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1753873865,ExpressionUUID->"29b25048-f2c0-4352-94d7-5f8710c569a8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Trigonal_hk1.jpg\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
       "DiffractionImages", "Trigonal_hk1.jpg"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", 
    "DiffractionImages", "Trigonal_hk1.jpg"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerJPEGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->997510333,ExpressionUUID->"decb5e41-fd6d-40d4-a5e2-b686b6c1dda3"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"DIFFUSE\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DIFFUSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"36aa37df-8a80-4d40-b13c-2af2727a033c"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1898818249,ExpressionUUID->"0b126ead-7bb9-485a-894d-38555cb734d2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"diffuse_input1_crystal.txt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DIFFUSE", 
       "diffuse_input1_crystal.txt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DIFFUSE", 
    "diffuse_input1_crystal.txt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1831316523,ExpressionUUID->"ecc15880-34e1-4033-aa83-35b4d3d5dd05"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"diffuse_input2_setup.txt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DIFFUSE", 
       "diffuse_input2_setup.txt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DIFFUSE", 
    "diffuse_input2_setup.txt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1201173257,ExpressionUUID->"6c2479d7-8edb-4609-852f-3e1fd8614286"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"DISCUS\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DISCUS"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"993200e7-754d-4b45-ab12-f31f6052124e"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1772648599,ExpressionUUID->"cc04e3d6-8488-4311-a076-00ff78de2ad0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"fourier_data.dat\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DISCUS", 
       "fourier_data.dat"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DISCUS", 
    "fourier_data.dat"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->864368562,ExpressionUUID->"871927e6-19f0-4579-8829-02d338495573"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ThioureaFerrocene_5x5x1.stru\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DISCUS", 
       "ThioureaFerrocene_5x5x1.stru"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "ExampleFiles", "DISCUS", 
    "ThioureaFerrocene_5x5x1.stru"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1863033226,ExpressionUUID->"c0378597-0647-4144-a607-3bf8d3e7a35b"]
}, Closed]]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GroupSymbolRedirect.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "GroupSymbolRedirect.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "GroupSymbolRedirect.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1687856122,ExpressionUUID->"7ce0639a-709c-4b86-bfed-480a08e18da4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PeriodicTable.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "PeriodicTable.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "PeriodicTable.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1686349231,ExpressionUUID->"29db0393-f3c9-4dbc-a8f4-67dc6452f71a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PointGroups.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "PointGroups.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "PointGroups.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2129835958,ExpressionUUID->"9323ee76-2682-4b42-a429-fc89f1e3cf39"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SpaceGroups.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "SpaceGroups.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "SpaceGroups.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1895517910,ExpressionUUID->"01cbee20-0f38-4168-9e3b-54e87fd9d1c5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TransformationMatrices.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "TransformationMatrices.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "TransformationMatrices.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->49610125,ExpressionUUID->"9ea33107-3fe4-4e51-8ac0-ae1bbae6e65e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"UsageMessages.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "UsageMessages.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "UsageMessages.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->573715839,ExpressionUUID->"9d531784-6d32-4942-97b3-e5cf7de79743"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"UserData\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "UserData"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"903ca3a4-54d3-4ceb-8ba7-2dc5f5c7fdca"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->240531043,ExpressionUUID->"32adce06-318f-46b7-a28b-6e13135d360b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalData.m\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Data", "UserData", "CrystalData.m"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Data", "UserData", "CrystalData.m"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1041016047,ExpressionUUID->"16dbf181-7df9-49f3-afeb-bf79a1685fd0"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Functions\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"872b9426-7165-4332-9af8-8cedcb9f9893"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->178554170,ExpressionUUID->"b21715a0-bac6-4b23-93b0-f84f02e1ec2b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"AttenuationCoefficient.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "AttenuationCoefficient.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "AttenuationCoefficient.wl"}],
  
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1258455335,ExpressionUUID->"979b099b-9d1e-4255-8fcd-4b82190eb065"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BraggAngle.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "BraggAngle.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "BraggAngle.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->292376042,ExpressionUUID->"852ccff0-88a7-455c-9170-2e87f76c1d3b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ConstructDomains.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ConstructDomains.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ConstructDomains.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->925280331,ExpressionUUID->"abd88e19-f345-431b-884d-3cb7e25154c5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalDensity.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "CrystalDensity.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "CrystalDensity.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->521553558,ExpressionUUID->"a4be45ca-ac7a-4d69-ba9b-e6ebcf782470"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalFormulaUnits.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "CrystalFormulaUnits.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "CrystalFormulaUnits.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1869885899,ExpressionUUID->"5d7cce4d-0a5d-4f3e-b98f-2006404cb695"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CrystalPlot.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "CrystalPlot.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "CrystalPlot.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->896614295,ExpressionUUID->"0bddead3-5f7c-4e1f-a259-1a6445bd74cd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DarwinWidth.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "DarwinWidth.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "DarwinWidth.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->503705066,ExpressionUUID->"15338a56-a8a8-4aa9-8c47-854a5687e29a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DistortStructure.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "DistortStructure.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "DistortStructure.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->390507788,ExpressionUUID->"043b6456-01a5-42db-977f-267ece2885f8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DomainPlot.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "DomainPlot.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "DomainPlot.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->554367684,ExpressionUUID->"4b1b6d34-4d75-43ea-bf3b-01b4bc75d19a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"EmbedStructure.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "EmbedStructure.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "EmbedStructure.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1473604302,ExpressionUUID->"06dc08b7-6976-4945-8d2b-6ab0b3eada60"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExpandCrystal.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ExpandCrystal.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ExpandCrystal.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2086086510,ExpressionUUID->"295a239c-2537-4c84-b2db-ea4889f71e57"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExportCrystalData.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ExportCrystalData.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ExportCrystalData.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1037952648,ExpressionUUID->"ce9a3f82-1681-47a3-99b3-8bdf29c78e29"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExtinctionLength.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ExtinctionLength.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ExtinctionLength.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->860490355,ExpressionUUID->"b658756b-697e-4802-9da9-5928760455bd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FindPixelClusters.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "FindPixelClusters.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "FindPixelClusters.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1106517587,ExpressionUUID->"2d34cb63-f85a-4f76-ac01-c26e2a7f1cf9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetAtomCoordinates.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "GetAtomCoordinates.wl"}]},
    
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetAtomCoordinates.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->32701689,ExpressionUUID->"fc97fb59-8166-4568-bfff-a21a44f948eb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetAtomicScatteringFactors.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "GetAtomicScatteringFactors.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "GetAtomicScatteringFactors.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2008957038,ExpressionUUID->"3e6fa234-ab74-4d19-89ab-ccbe9674487c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetCrystalMetric.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "GetCrystalMetric.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetCrystalMetric.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1803039532,ExpressionUUID->"1ee8dd09-cdb6-4937-b563-8070604a68c0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetElements.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "GetElements.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetElements.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->543671507,ExpressionUUID->"d7c1012a-07c3-4292-bbf5-40e8ee4a4411"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetLatticeParameters.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "GetLatticeParameters.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetLatticeParameters.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2091583811,ExpressionUUID->"50fbf83c-dc92-4197-a114-bea20b3251ed"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetLaueClass.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "GetLaueClass.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetLaueClass.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1089293734,ExpressionUUID->"16dd1a60-ba09-45ea-bcc1-f17318315c57"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetScatteringCrossSections.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "GetScatteringCrossSections.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "GetScatteringCrossSections.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->461696663,ExpressionUUID->"08c77d58-0451-41f1-9a08-36d9c46f71a4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetSymmetryData.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "GetSymmetryData.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetSymmetryData.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->877398430,ExpressionUUID->"bf9fa32d-3e71-4870-a643-199840857456"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"GetSymmetryOperations.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "GetSymmetryOperations.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "GetSymmetryOperations.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1812692708,ExpressionUUID->"3770b825-5c1e-47f1-a9e0-5bd18ebff39d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImportCrystalData.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ImportCrystalData.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ImportCrystalData.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1723327014,ExpressionUUID->"18c40590-fff7-4739-af51-f77651149b0f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InputCheck.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "InputCheck.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "InputCheck.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->845177209,ExpressionUUID->"e494ea6b-fcf1-4d0a-b526-e6f8451723d0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InterplanarSpacing.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "InterplanarSpacing.wl"}]},
    
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "InterplanarSpacing.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1436510405,ExpressionUUID->"4cf23147-e18e-426d-9735-c2e9e7b8e4fa"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MergeDomains.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "MergeDomains.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "MergeDomains.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1419217261,ExpressionUUID->"9ed38a0a-0be0-4f6a-ad40-f4a69d34b0e8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MergeSymmetryEquivalentReflections.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "MergeSymmetryEquivalentReflections.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "MergeSymmetryEquivalentReflections.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->683638398,ExpressionUUID->"744650ab-169a-4c86-bfc3-c901793654d1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MillerNotationToList.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "MillerNotationToList.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "MillerNotationToList.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->873043736,ExpressionUUID->"cbb3c1aa-1ff6-4d32-bb9b-1499879844b2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MillerNotationToString.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "MillerNotationToString.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "MillerNotationToString.wl"}],
  
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1637794648,ExpressionUUID->"35e832f7-9552-435e-82d3-38f2fcdf3753"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReciprocalImageCheck.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "ReciprocalImageCheck.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ReciprocalImageCheck.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2116745337,ExpressionUUID->"78f87d94-7850-4e43-bda9-cc04f4b779f0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReciprocalSpaceSimulation.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "ReciprocalSpaceSimulation.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "ReciprocalSpaceSimulation.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->924782757,ExpressionUUID->"5d03f3a1-fc57-4ac7-bb92-0c649577e4a8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReflectionList.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ReflectionList.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ReflectionList.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1484643560,ExpressionUUID->"2b0e08b3-cb16-4ded-9dd2-9e4937c86ce3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"RelatedFunctionsGraph.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "RelatedFunctionsGraph.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "RelatedFunctionsGraph.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->791818427,ExpressionUUID->"dd94acf7-5653-4e5d-b857-cc5989f33f07"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResetCrystalData.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ResetCrystalData.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ResetCrystalData.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->136142130,ExpressionUUID->"ba6eeecf-ac93-4308-a2d3-94c85366e14c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResizeStructure.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ResizeStructure.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ResizeStructure.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1070694855,ExpressionUUID->"ad262f92-95c7-411c-9cac-9d40c8a9dfdf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SimulateDiffractionPattern.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "SimulateDiffractionPattern.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "SimulateDiffractionPattern.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1402949772,ExpressionUUID->"21454e72-07b8-4b49-bbbb-28f79c0b1238"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"StructureFactorTable.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "StructureFactorTable.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "StructureFactorTable.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->6373944,ExpressionUUID->"0393414f-80fb-42fc-8bd4-3ddb18cdf06f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"StructureFactor.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "StructureFactor.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "StructureFactor.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1900178105,ExpressionUUID->"628f80dc-cf25-46c7-8c18-f5ff43386ef3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryEquivalentPositions.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "SymmetryEquivalentPositions.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "SymmetryEquivalentPositions.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1064096198,ExpressionUUID->"e17ff05d-43a5-4916-a028-26cb871e00bd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryEquivalentReflectionsQ.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "SymmetryEquivalentReflectionsQ.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "SymmetryEquivalentReflectionsQ.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->20987570,ExpressionUUID->"dba37cd2-ac14-4301-910d-58a998ecb8fb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SymmetryEquivalentReflections.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "SymmetryEquivalentReflections.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "SymmetryEquivalentReflections.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->550770882,ExpressionUUID->"423cab60-b5ac-42b3-889c-e68a4b1e90d0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SynthesiseStructure.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "SynthesiseStructure.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "SynthesiseStructure.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1151695204,ExpressionUUID->"df368958-3213-4334-8dae-fc88e77e71ac"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SystematicAbsentQ.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "SystematicAbsentQ.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "SystematicAbsentQ.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1271183217,ExpressionUUID->"78d43600-8abd-4d38-bcfd-5ba66208d04b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ToStandardSetting.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", "ToStandardSetting.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "ToStandardSetting.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1609007763,ExpressionUUID->"5c5de897-43e8-4339-9222-a840ebcb074f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TransformAtomicDisplacementParameters.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "TransformAtomicDisplacementParameters.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", 
    "TransformAtomicDisplacementParameters.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1479389717,ExpressionUUID->"c535dcf2-b2d1-421d-9dd5-90797d3c8ab4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"UnitCellTransformation.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Functions", 
       "UnitCellTransformation.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Functions", "UnitCellTransformation.wl"}],
  
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->537308653,ExpressionUUID->"e00e801c-a561-4be0-b670-1011d25c8739"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MaXrd.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "MaXrd.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "MaXrd.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1538315956,ExpressionUUID->"650b0351-1ae4-4e3a-8a6e-a11010553d2a"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     FileNameJoin[{
       NotebookDirectory[], "LICENSE"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "LICENSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1579806994,ExpressionUUID->"6651d911-9227-4145-94d8-0c9c0f748f87"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1296295976,ExpressionUUID->"642d789d-ab16-4bf2-80d8-0dc1edd964cd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->920646259,ExpressionUUID->"04b49d45-ae78-4b9a-9cb8-1ecff2616cf6"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->624869817,ExpressionUUID->"40737fa2-a5ce-4ed4-a2e6-a78b3b07df54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9d819eea-fd32-4325-b6e9-e665eb5dbaa6"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"0263a00e-a220-4eb5-a151-f05c80f54aba"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f38e89ea-6b37-4043-8edf-8e23e04f6d17"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"afbf6bd3-6436-486c-a01b-734b4c1f69e7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
8R7HeQ1r6an2XNMtqq8TAQAABA9ralh7kT0ix2VC3dHTQqxm3gRH757loFl5
U6lob1GTvBz97qil6+zoqKXD0ZHQzrHyY7Ry/2fUy5ug3LFbYi3d6TbvdXjM
z6m+XgQAABBg6Jof2FLDXNbUzsesqV2OX/JzPzl6IDzdkd61PDbddC4uPQQc
vAn97vGZVproHU3uPQbt2+fbGvNQcHT0u6OWrpujo5YOR0f8l33H99G8klnU
wxur3rObWkvXbI93p2EucxqWRJzBBgAAzZNwb/h/WVM6z6nw8uoJXUd3pIV/
I9z8Yly6mS5FtX83opY+yjOE0vekSS+vnkA4Omrpejk6aul6OTpq6UhLTVFZ
IU3eNV65Y/ujlq7bHu9Oj2WBqdD0c9XXkQAAAPwHrzW3pnVJqunmtTh6CPS7
29PCTrjSo85e5uWXJQQc3AdH/8B4hzYUra3h5bo6Omrpejk6aul6OTpq6YgO
4TPZhhcMUu/ZfqilOw2zNrV0B9akAwBAs8Ge1uV54eD76nbz0Kql11oz18zR
38lKoNWFK+Se7Fdz80B7uk6Ojlq6Xo6OWrpejg5PR/wZ3utd7iGX21u5Zzcl
fF66y239JgTc27c6Oq9Jd5ueUX1dCQAAoJHUWGvua9Q4ev018zoSAj5elW6Z
toq930oKffZyXWvpOjk6aul6OTpq6XB0RI8cKT9Cy/Yupl7eeOWu3aRausdx
xum2nFDt3z45OtakAwCAlvC55ta0Lgsb5uXq+t0d6eEn4zLMFxrs5iFUSx/j
GUbZezIb5eWopaOWrnMtXSdHRy0djo74P0XHCmlC8Rjlnt2keGMuxBjRp1T7
dwNq6fNxTjoAAOiBJT3sr7bUzjsa7+aBc/TaPD0mPfK7xnu5ekd/L7t3vWvM
Q8XRUUtHLV23WrpOjo5aOtLSk3okmQbmD1Dv2k1InMf+nWr39t3RLSlWI+IG
1dedAAAA6iY6NayVNbVzftPdPPD97t+fm+YPNw9+v3uPTActyp9Lu0t20d69
vq8zDwVP16mWrpOjo5aOWjpq6UhLz/Hy47TuwBrqm9tDuWs3NvEex3mNzmEr
snstrVVffwIAAKhJdGrnjrbULof96+aBqaXbfd4DLvQcPT4jmj7xjKPcPV7p
5dWjk6Ojlq6Xo6OWrpejo5aOtPTsP76PZuyeQt09LuW+3ah4Y/TZO84wH3J4
zG+qvg4FAABQCV3zA+G8PQPj5f51dFta2ImY9MgzscKhqxIwRw9Av/v7OX3o
6+ItNbw8GJ6uk6Ojlq6Xo6OWrpejo5aO6BSjNIeG5H+g3rcbmTi3/awue8fF
uM2DsG8cAACoJSGz0/+zpXSeHXg3b3q/uz09/KQr3XShupsH3tH9U0vvfkUv
uy/RqZauk6Ojlq6Xo6OWrpejw9ORQKSq571Pbjflvt2YJHicF2Lc0SdV+7cv
cXosC7BvHAAAqMGV0vF31tTOG4Pr5o2rpTvSIr6tzct1cPRxnhHk3p3js5ej
lq6vo6OWrpejo5YOR0f0yp6yPTRp13jlvt3YxLqt36r2b99i2ebIj/yj6utU
AABoSdjTOv3LltYlV42b++7oFf3sUWfrc/OgOHoD+937ZXWjNYWrGu3lqKWj
3x21dH0dHbV0ODoSuPA+7+/n9Vfu241JvNtxTod+d6fb7HV6ou9Wfb0KAAAt
AWtqp5eFmx9U6+b197tzP3tshrnWfvZQrqV3y7TRnNzpVFxS7Bc319HRUUvX
y9FRS9fL0VFLR5CTVFpeSotK5lMPb6xy525w+Kx0HfrdDfNBp2F+QfV1KwAA
NGeiUzo7bKldytQ7+dVr6Y608NON8XLVjj7UeI8ydqVRSUmJX90c/e6opevq
6Kil6+XoqKUjuqXgWD59VDhEvXM3Ilr0uxvmYw63JVr19SsAADQ7eI/2lM4D
rCnChVNUu3jdjm5LDTsRkxZ1NjataW4e7H73bhl2WpI3n3bv2S3dvHp0cXT0
u6OWrpujo5aul6PD05FApfxkOW06uIH6ePXbPy7e49Bif3fs7Q4AAP7D8cVT
/y6cfOolNw9RR7eldjnpSou6IN28Kn5w9EB7+vCcDyhrV2YNLw+0o6OWrpej
o5aul6Ojlg5HR/RLyfE9NL5otHLnbmi02d/dMM9KLA77qerrWgAA0JnorLf+
15rcaVUNNw8xT3ekdj0dm266GJtmooqYyd+e7m8v75UZQ5/lLaY9JXuu6uao
petZS9fJ0VFL18vRUUuHoyOBC9fStx3aQv1yeyr37oYm1mM7rdzB641lrc1j
+6Xq61sAANCRmJTOf7amdkqypnQ+XpHQc3RbapcTztSIs997efWErqOPdQ8j
927DZy9HLR21dNTS9a2l6+ToqKUjSEX2H99Pn+76WLlzNzTxHscZDfrdd8Zl
W/+k+joXAAB0wpbR5Tbh5J7v3bx6QsPRbalh5a60qPO1u3kdnq643713pou+
KPisUV6uq6Ojlq6Xo6OWrlctXSdHRy0d0TE7D2+nxNzeyr27IUnwOs/HuC3l
IeDhV0uuI8d8h+rrXQAA0AFbcsfHhYfvq93NQ6OWbk8NOyXc/GL9bh46jj7R
PYryduc22c3R745auq6Ojlo6aumopSM65uCJgzR192Tl3t0gR/c4L7rc1lMh
4OF1xuk277UblkdUX/cCAEAoE53auaPw76NXd3O1ji7Xmvvs5er73XtnuGht
/iras8f3deaqHR397qil6+boqKXr5eiopSM65utDW6lfXi/l7t2QxHlsIX0G
m3D0Iw6P+U3V178AABCKRKd0sthSOpf55uZq+t1j0iLONM7N1dTSRxtDyL3L
kG5elUA4Omrpejk6aul6OTpq6Xo5OjwdCWQOHN9Pk4snKPfuBjm62x7SZ7A5
DXOZw7A4VV8HAwBAyFBxtnnPhnt5EGvpKV18XGseGo7ePd0m92bn88yru7mO
jo5aul6Ojlq6Xo6OWjocHdEzvMd7n1x9zkvXYU2607Akqr4kBgAA1XRY0OFH
wq9HNs3NA+voDV9rrrbffVjO+5RVnFGrlwfD03VydNTS9XJ01NL1cnTU0uHo
SGBTUraHxhWNVO7ePju6FmvSTSMSKfGHqq+PAQBABR2MDv9mTek01T9uHph+
98avNQ9+Lb1bho2W5M2nXbt3+eTmOtbSdXJ01NL1cnTU0vVydNTSEaQifF76
ugNrqJc3Xrl/+9zvHuJr0h1uy6emFNNPVF8nAwBAMBHve/9hTe202P9u7r9a
et3nmoeeow/M7k/pxWkN8nLU0vV1dNTS9XJ01NL1cnTU0hEdU3isgIYVDFTu
3j47utt+Vr2HX63X3bwwtiT2Z6qvlwEAIBgIN/+5LbXz6sC5edMc3Zba5YQr
Lepc8Ny88f3ucekWmuH5hIp3FzXJzVFLR787aul6Ojpq6Xo5OjwdCWTKysto
2d7F1N3jUu7fviTe4zgfyvvGOQzzulgj4heqr5sBACCQRO548/9sKZ23Bt7N
G9fvLtz8ZGy66ULw3bzhjt4nM442Faz3i5ejlq5vLV0nR0ctXS9HRy0djo7o
mcwj6TQgr69y//Yp3pgLMe7ok8pdvO46+o5uhvW3qq+fAQAgEMSkdP6zNaVT
anDd3PdauiOta4D2gfN/v/tIYzC5iw3avbv2/dlD1dFRS9erlq6To6OWrpej
o5YOR0cCm4PHD9CkXePV+7dvjn4xxoj+RrWL1+noblNmbFb0daqvowEAwJ/Y
dna+yZrcyavGzet3dEdq+Lfqnbz+WnpCho2W5y6Se8Cxm1dPS3d01NL1qqXr
5Oiopevl6KilI0hFeO+4NQdWa7N3XEjvG2eYPU63+UbV19MAAOAPQsPN6/b0
mNSIM7Gpql28fkd/L6sPpRQl1fDyQDs6+t1RS0ctHbV09Lujlo7om6KyQhqS
/4Fy//Yl8R7HGeUuXmcd3ZwnPP1W1dfVAADQFCzJnW63JXcusCYLL05W7eWX
O7otpcsJV2rUOenmVVHu47VninsiFe4uvKqbo5aup6Ojlq6Xo6OWjlo6aumI
jiktL6U5e2Yo929fkuBxngvdfeMs+bFG1G2qr68BAKAxRKd2/oc1uVPhJTcP
IUcXbl4u3PzCZW4egp7eI91Oa/NX+ezlqKWj3x21dH0dHbV0vRwdtXREx3x9
aCv1ye2m3MF9cPQLMW5LuXofr9XRd9ncpn+qvs4GAICGYE0Ku1N4cHENNw8B
R7endjnpSo28GJsaVbubh4ijv5/Vh9KLUxvl5jo6Omrpejk6aul6OTpq6Xo5
OjwdCWR2lRXT0IIPlTu4D45+MVT3dnca5t0xOVH3qL7eBgAAX7Bt73SfLblT
SZ1urtDT7Slh38TyHu3SzasntBx9snssFe4uaJKbo98dtXRdHR21dL0cHbV0
ODqiX8rKj9HcPTOVO3i9CeW93Q3zHpthuk/1dTcAAFwNR+rbraxJnfZakzvW
7+ZBdnRHStjpml7ug6MH0dO7pVtpZe4yv3m5rrV0nRwdtXS9HB21dL0cHbV0
ODoS2Gw7tIV6exPUe3g9ifXYTiv38drr6Ptj3OaHVV9/AwBAbViTOj4gvHxf
hZtXj3pHd6aGf3d1N1fv6AMye1FKYRLt2rVLJhCOjlq6Xo6OWrpejo5aul6O
jlo6glSk6FghDSkI/f3d49z20Nzb3TAfsHssbVVfhwMAQHVsSW8/Kvz8YE03
b4CjB8jTnSnhZ31zc3X97hNyRlJecd4lN9fR0VFL18vRUUvXy9FRS9fL0VFL
R3RLaflRmrp7snIHry/xHsdZ5T5eu6MfdBrmR1VfjwMAAGNP7tjWlnw1N1fj
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
NqSm0vyFC0P6DDZ+Tb7b+n7Zf87OfOKy9eHtaIPNetX14cuWL6cIMUYDhg2j
KeK5rtyyhb42DMoSv0e4RvzU32+n53/1S9lz8I6YW+PE3Jp15x00O7wrLZg+
jdauXEHrk5Jovpif3nruBagI/y545757acbfbpY9JOznFa+xivFZnxBf79fo
ajJRdGysvIfB93lWbdsmX0c8RtxnYHG56NW336YObR6mZ375C3pTzC0Xz63r
r5X7HMx8uj1NHziQli+YT59/9RUtWbWK1oqPV36fHYe2Ue/cBOU+XpejO92W
EyHg5dUzlq/BVWsAACD0sOzs9H51N/fJ0wPo5bbkTidqd/MGOHqAPL1XmpO2
5m265OaBdHTU0vVydNTS9aql6+TooV5LXym8Ztj119FXd/ydCu+7p2L/LVnf
ayM9q0z8d87ixZQvnkdSXp500So/T+jenWzx8TRMePpQcf3/7K9/JfuRnTdc
Tx+KP5vz+eeXan3sEVzvyxDvNyuFq08ZP442ie/H8zmUHP1KT186dy69e+1f
aNnfb5W17dJq63k55cLXs7duoYViHKs+f8XKlTR5+nSaKVyqQ8eOFNurF300
aZIcD3arL9avpxeEP3UQ42X+/e+o14OtaeTEibREONPW7GzpXXliPvKYLRVf
g8c6VM9Knzd1KvX+y59o1t8q9iTjezy890DV+HC/QU5GhnyPnTpjBk2ZPZsW
rlhB88XzyhD/v0fv3vRW167UrX9/GvXppzRX/Nnqr7+W47AlK4ueePJJelK4
OTs63/+JFXO1v5hzk+bMkS6/Qzg592Tw3Nqek0OpqanKx6R6Rr33HiX8qWJN
ONeyC1td/hr7RsylyWPH0iwxHryeYbEIv8dVfX5BQQG9+Npr1DkqinqLrzVW
jDfX0HmtBN/r4V4U/rOnX3yR3ujUiZ697lp6utLRrX/4PXV/+in6cORIuXZg
7c6dcm2JR7wv5/LcEvPxyjnkOWpQ/9xeyn28tiR4nCHn6OLxDFbtAQCA0MK6
8+3u0Ulv1+rmKhyd3dyVEnEVN1fn6P3Tu1FqfnINN9fR0VFL18vRUUvXq5au
k6P7w9Pft9tkzXv+rX+T/bfc485roNmryoVH7L7/Xkr58AMqFD7Mvrhxxw5a
vWgRJSUnU5fISHo7PJx6DRhAoz75hIYNHkwd77yDTB1epeHCNxd9+SVtEg7G
ddCqXlxef74zN5dm9O1L8x5+SP4cG+vnwXD04cKt4/70B1njZr/iHneugfIe
9aceai3X2XuEL2WK97pln31GQ4YPl7XyNWKc+H7GMy+9RGFmM/X94AMaM2UK
zVq+nJYLPx8ydAg9wY5+4w2UIBx1vHDX5Rs2SOfi3nbeS4/HyyNek3PrqKGH
gqNPGDSI7MIDR914vew95x53HhOeO6fEHOK9AueL+fPukCE0i9eXp6TI+zXs
h/zcYrp1oxc6dKBIu536i/kzbto02ef+mRiLFZs301MvvECPP9KOnrrhenpR
+Hm4cNX+4ntOWbCAvti6VfYZsJ8XHjsmsyUzU77nqPZyzrp166hL+/aX1oRz
jwG/xopbVayf59fY0db30+fCufl1wvdluK9/a1aWXNfAXyNFjNcTzz5LL7/x
hqyT8zr9CWKuzBVu/dnGjdLTLWJ+tXn0Uenob775Jr0kXoPPi7F68647yZ6Q
QINGj5Zjz3MyWcxJHnd+PfNrcsWqVTUe956y3TSwYIByH9fG0Q1znGofAACE
Btadb0VUuHn1NNDR/ejplXXz8/W7efD73Qdl9qOcguw63TzQnq6To6OWrpej
o5aOWnpTHX3e9OlkEv4w/PrraPHtf6Otd90h68S8r5RHuOjX/7yD1vbvR24x
L9gb2R93JMTTAOHXscIr2Qm6RkdLRx82frz0dGtcnNzLih2Ca3ZJwsdzxGtL
OpmYB1zDWz5qFE0UvtEUNw9Gv/ss8Xy4bjvg2r/QrL/dLPfF5vW8vDe2V4wP
+1bSsqXSORcJj04U7jhj6VL6KilJ1jafev55ev7VVynK4ZCOzvctPp49m6aK
v8v//8VXXpHjOPrTT2nh6tW0XvgYjw87J48Xf+SvVf28tVDy9LEDB8qeiZ5/
/hNNvvlG6ehcR/fce7cco5S776KvZkynER9/LPsH1lf6edX9Gh6LR5588pJ/
9hNfj3sNuD4+ffFiiuvTh1q3aUNPPPMMvfTSS5fqyBNmzpT9BrxXGq9X5/nJ
45Upfofxvu+q3Zzznvh5vya8+c3KtQyjbrielt5+q9y3LafyNcZzacnCBfJ5
8GPn+1d8n+GzNWsufZ0nnn6aHhfP/7WOHWW/Cu9nMHLyZHkfiPvdE0wmat26
NT30yCMVjh4WRhGRkfT6W2+RyemUawf47/I9D75/wePPr0OvyHLxfWqbO/uP
76fhBYOU+3itve4ex/lQcnTh52UiXVV7AQBALZadbz8rfLy0pp+rcfTGuXlw
aumjsgZRbqHXJzfXsZauk6Ojlq6Xo6OWrpejN8TT+e/OnjuXpgoH+mzdOlq2
ZDGNt1lp0HXX0rRbbpIOsVJ41ud/v41miX9fs2yZrFPyuuAvd+yghcOH0XSL
WTrCY089JZ2A96dydu8uXbOz8AV2iMnieywVDsU1U/78VOGd7J7cuzxPuFdK
crLf/Nzfjj53/nyaOHWqPMdqGZ+N1qMHDbz9NpokHJTroHzW+woRPmt68+bN
sheb/fqdyrXmXPvdJsaLvfRh4Wjs4lxHd/XqJdej855e7KLsXOaYGPpw1Cjp
7FxD5zUBO4WPpwrv5Hon+/nWrVt9Ols9WO6ZLH6mE6dMobnLl9MXYg7NHDGC
hrR5mMbceD3NFWPCc4fHaMF999Dabdukc0+tXF8u106L9252RO4xeFz4Z7sn
nqCXhKNHWK3SyXls3hdf892hQ6lDhw70YLt21P655+j1zp0pRvws+P7PDOGm
KzZtkrVn/jo8XjzPZojxV+3m/LupZ//+NHn2bOnaC2fMoBGvvCzvg8382820
XL7GbqN5999HM8Rc455+fuzZlePC9xzSxfPirzVo8GB5j+IxMU4d3n5b3utJ
eOcd2W/AY9SnXz965s476IGHH6Y2jz0mX4+8Hv15MW4dIyLkHhH8Wp392Wey
54DnKt874tcjn+PH7we1PYfS8lKaWDxWuY9r4ehuc6nI06r9AACghugdb90t
fPtA7W5+dUcPRL+77z3twXf0j7NHU0FRQYPcHLV0PR0dtXS9HB21dHWOnp2T
Qx8KN+Tec75Or77WefXSpfRe6wfo/Wv/Ktekc0Z16igdm/c2Y3fka/xZPXvQ
RPH/h44bJ+vBXNtr//zz0gm4dvfKm29Khxo8dix9KtyDvxd7wVrhmVxP5681
SXhLjngs/vRzf3g6j+Fw4cpV56GlCI/hfmCu9yYL3x7U/km5Hn3o9dfK8Rlv
MUtHXLJ2LX08fTq5eJ9t4eQ8TrzWfH1qKnW1WKQ3Pfvyy/Rap07S09nJo10u
ubb4zS5dpG/xWE5btEh+rVXC19jLuSd5If+shNf64ufB8PR5CxbQcOHHi4V3
Vp9DWeJ33NCXXpR7rQ8R4zP8xhtomnBHXlPOLsmOyD0VVevLua+CXZ0dlmvE
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
bdeOrPfcTR8LL+M/yxee8ZZwSd7bi9fDviU8qYtwDHal+fPnU6bwkUjh9Ozw
z738coXnC2frL/yDPfhKNw+0p7Nr8p5mg4Vb8z5u7EtcF+d+Y14XvF6MH7vf
M9xrLvyYa9hjq3qON2yQvsW9ysvWr6eho0ZRD+FSr4vn3vmp9hT//PO0avly
6dtLli6VztW+8t4G+5DsXe/TRz7vK/28KkOHDqUnxVg9+dxz0td4nXqccChe
o99UN2+Mo/Oc4fsJXP/n+zhfu92yv4LXmXMtmHsl+D4F13p5PNlBeQ7xxwmf
fEIdn32GBsbHk1c4K8+V14Qbct2b+wT4HgR7epTdTivFfGuod3IPAs897nXn
r/cy3wMQc22uwn3hPvv8c7mXHa/j4HnCLs59KTy/eI199Tm0YNUq+Xtk9pw5
sgf90fbt5b2GN7p0kffB+iYmyt+J/nhc/L4aJeYfz0l+LXIfA5+T/o74Hvw+
3pivmVOaTX1zeyh38lB3dKfbPD9xQ+KPVXsEAMD/RCd3HO4fN/dPv3tMSvjZ
wLt5wzy9V5qTvs7dcpmbB9LRUUvXy9FRS9fL0VFL993Rp0ydKntU+Xqf6+DV
zxnn9cBp4r1q+uzZl/4+98u2r1wbzn3B3EM9TvgXnyXNjs8fed30VOGlvuwD
z89/gficYcOHkysujsaOGyddrLpr8/nNO4S3cfKEs1zNywPp6Pya5XPGuW+Y
14RXrZvmNeU8XtybvUi4Iq/tfUG4EvcCcx2T93rj3nSuibJ78dnTo8XzrO2s
9Kpki689fsIEihFjMko47CLxudV72usK/25JSkqSSRc/T395eWM8faR43Lwu
gT2c+/zZMbmHXa4zFz8fvrfBPsrrFnh9/KeVc4h9ffQV/eocni/zxd8ZMXIk
vfveezRZzLPdTXBQHneeW1Xh9w1Vbs73oqJjY+VY8L4BVX4uzxkXY8VzjN2c
589UkY/E3ODHz5/LP/Mx4jXc/913aZT4uKzyPo+/HyOfz1c1Vlznb+rXyyv1
UmJub+VOXsPRPY6zqr38il730ao9AgDgX6xJb/f0r5s3rd/dmdw1yG5ev6O/
kxZPKXlJtbo5aul61tJ1cnTU0vVy9OZWS7e6XNLP51SdMy6cIEfMH67ZsW/y
Ocfcf8xeXPU5fYSX83rUNzp3lk7Be5JxrzL3vPO61N7CE9gvG3qOuq/efbXw
1+F9yvl90N+ezvccuKeX+9YXVD9nvLLGyedns4P2EeNx6Tw0i+Wy89A43I+d
lpZW53np/k51r+b/3iF+zuxYV/6ZPx2d3y+7Vu5Xx3sCXjpnXPzeY+fk8coW
733cf8FnllefQ7zX2dfCRVW5srzHkZwc1LPm+H4D943Inv+qc8azsuT9Mt63
gPszeH3E+8Lf+TU2r9q+b8EO/2y/rOPM84amuKyI3s/rr9zJNXD0BNU+AQDw
D5akjq8JLy4LjJ83vJbuTFLl5nU7+oD0npRZkFGvm6OWjlq6jo6OWrpejh7s
Wjqv2e0UESF9SK4DXrdOnuW1o/LcbA7vbca9yVX1Ww73WL/VqZM8t5z32OKe
cz5zmteHc814nvCLhrp5Ux2da+4jx4+X9xLYa3gd8wrhOOwR/nL0gWKceH8y
rnFO4bX34uvLtfe5udI72dX5v6fPmkUfCB/ntcHcO111HhqPDYd7/q+2x1wg
HJ3fuybyOoZFi+Q6Bn7MfG71ss8/l3PE346eK74+r8N3dOsm91yT54xv3kyb
KtdQ83jxGWCL166V+wtwDz+PLbv6J1OmBN05+bnwz23sp5/K/eB53m/LzqZF
y5YFpa5uE/OCX0e8BwOf8179nHGey7zuhM9Nk/u0T5igxMtXrFxJw8aOlb02
vC8k/xwXi//H7wdN+bp7j5fQ4IL3lTv5lYlz20PG0YWfl8V4ot9S7RUAgKYh
fPgBa3LHw4F1c98dPSa565nYZOHIVQkBTx+Y8Q7lFGT77OY6Ojpq6XrV0nVy
dNTS9XL02jx927Ztcp90rgnzPuHcm85ryfn8Z95/isOOMFM4ytTp02t8/ugx
YyhMeBWf9RUWFSX3eua6bGPdvLGezn7w4bBhsgeAvSGzskef+6j535csX+4X
R++XmCj3smOH4p51PvtqaeW52by/Ge9DzmvLeT9r9uzF4s95fN7mNcGRkeQS
4/PVV1/5vBe8P/2833vvyTo2OzLff+F1zTw+8jxt4c7+7ndnP+ez2nk/eXlW
nPBenke8Fzmfm83jxR+5fv6WGFM+64t7+VevXq3EPblXfuDo0XI/P75HVbXO
g/vKPxc/swMBdHQeP14Twfe6+B4Fn2HG+xbw2XifV+7XyOPF6/Knz5ypZHy4
d4TXKvA5gHz/gvfyq5pDfJ+lqWvdD584TKOKhil38lrq6GdUu/klR3ebj8S4
zQ+r9gsAQOOwbH/jr8KbC4Pj5vX3uzuTu353mZuHgKMPzRhAngJPg90c/e6o
petaS9fJ0VFLD56j8x7ivH81ryXnvbr4zCqudbKncHit64iJE2VPdGPPSw+0
o/fm89nGjJFndW0QbsU9+dw/zet2+SOvE98kvLSp/e7jxo+np154QdbCee9w
Psedz79i7+Sx4pqnPONduHtjz04PhKNPEu7J/eNVbiX3aatcB14gxiNd/O5Z
v2GDXx2dfz+0r9xLjM8Z573n+Z5G1bnZ/LPi88a5HqvCN6vnc/Gz43UaVes8
qp9Zz3OI+8uXiJ9xIB8D77/G+yS+WnnOeOLgwXIfB75nxp7O84vP68tUcO4b
96bweQC8LzyfRc/3oKrvvcDzaLF4fE39PsfKj9GEotHKnbxGHd1j/061m1dz
9GJHtul61Z4BAGgY0Vve+t/onW+niATRzev2dHtS2Leu2txcoaOPyhhEuQW5
TXJzHWvpOjk6aumopaOWHvh+d37cA4Tbshewo/P5UuxRH44cKd2T84H49x7i
7/Drp6FnpQfD0/n5sDvwum6uZ3O9n3uTM8R7CK8L5zXOvCZ8yowZde4dx2eP
jRHuyHuIrxVutikjgxYIJ9r29deX/g4/jq/Enz/atq3cn53rwq6ePanfoEHy
vgbvZc89CNx/XNfaclWObrHb5X777Hvcm8y1WD6ji8eGx0juASi82RcH58cz
Zfp0+phr8cL1N4rnumrLFumvPE5Vns5zN/K116jNY4/JveTDrVZ5D4j3g+Nz
s/n8ct5bcM7cucr9/EPxM+THx4+NHZjXc2wR/sn3eXg/O/bQ5V991aivzevo
Pxo3Tno/ny0n55YYK55zVX+H5/CoxERq3aaNXDPC6wJ4HQTfU3lvxAi5PoBf
i++LxxeIfd/qC/fJ8NkKPIf4Hot8Ljt2yLMU+ax6nkPce8/XGU35PvweMmri
WOq7tTfF5tgpznBQHH8Uuaymzf8v20YJbmcQHd32rWo3/77X3ZJkKjT9XLVv
AAB8w5Ri+kn0jreXSzevHkWObk/qcprdvCp1OnoQPX1U5iDK85Obo5aup6Oj
lq6Xo6OWHhhHd4vr6dmvvUrFre6hzm0ell7A64DZO3kNMJ8Dzf7piI+X+601
5Ly2YDr6ypUr5frubv360ehPP6V5K1bI/nw++4y9nF2d+4PHCTet7fPXrl1L
A0eOlN7K7lR1Xhr3Nsuz3IWX8XvGJ507UdY9/6QZD7Wmx9u1k3X016qdMx4j
xkruHSdc3Z9u7g9P57OweO8xvofB9Wveq43XoLNT8Rjx857qg5/zYxg8bJjs
veazvnhs2fHzxVhxrZm9k99fpvXvR189+ABlP9CKXhVzi89Ee66yT4P7t/ns
cp5bvfv3D+oebHXlzc6d5boFvn/A/sn9ELwOgPcS+LpyDi1sxBluK8Rc5Do4
71WwSni6PC9NvJ9xzXmrmJ98H2exmLNLHn6QPPfdQx89/BA9LBy96rxBec54
TIx8LfK5AXxOnorx4f3y+dxz3mOCnw/32PD+iOzoXEfnOcRrArhHpbHfg9dD
9HjnHRo6bhzNXrGchmQOpXjh3wnCjTmxlU7OZ+HGi2u5biLd+d/TzRQvPD4Y
jh7rsZ1W7ebVshTnrgGgB9adHUfUcHNFjm5L6vJNdTf3ydMD7ObjMocJN8/z
u5ujlo5+d9TS9XT0llpL94jr6Y8ff4wyhW8ef/B+Km/3MM19pB291r69XDPM
Z26/LpyOa+kTJk9u8HnqwaylZ2VlybPRw6OjZS17zNSp0q+WCO/mXm6uhc79
/HMaMWZMjc/lecXew3Vl/vu8Fxf7Ofsmn5fGns714VGvv0Yb7vwHldx/H51t
8yBlPdKWXI8+Sk8++6ysDfNZ3Lz+/tMpU2qclx4Kjv7iq6/KmizfQ+Ba/6S5
c2V/OTs2jxHvOTBKeGl9fs7nvfUcMKCiT57PM6/0c+5vLhLjyWebT+rTmxbe
9jfKueduOvHQA/RNuzY0ol1beuaJJy6dM86ePmjIEPl+qdrNOTaHQ857vtfC
a6x5f37uxeBx4fHhcZo0a1aDvia7NN/n4r3W+Uw0vme0s3LdP/fM85h9sWwp
fXL7bbTlrjton5hb5yrn1tvitciO/nzlz437H7IU9LVXhc8+fPK55+Rj4Xsr
vMc+OzrX0bnXnceI5xPved/Y79Grb185P7lPgNeJrNm5g8Z4x13yc44rzURx
4lougf08tcLPOd1EEoLk6C639ZsQcPOKGKYxqr0DAHB1rElvW+t08yA7ui2p
0ylXckStbq7K0cdnjaB84ea8j1BVWrqjo5aul6Ojlq6Xo4dyLX10zx4079Zb
pJ+XCj+/IPycHm1L3z7WjpKEHyxq+zBtFf7FfpolXidzlyyRr8FQdfROXbrI
dfRcm+W9yLgfeNy0adIj2SO493zuvHmXfQ4/Pq4L2uLjafjEidIvuKYsz5cT
rzWuB3Otk/c5nxXWRfr5rlb30rcPtyZ6pA1dEGO1R4zZcuGfK8T3WLt9uzxv
/Mo166FQS39POKdcwyDGiWux3MfNe4TzWmIeI+474D3BrzyHbdXq1TRZjONM
MXaLli6lKJtN7o3HZ5Uv+vJLuda/6nw5Hi929S/E32U/57l1tPX9dL7tQ3Ju
nRLjtU7MrfF9+4SMl1eFzw7nPnz24QjxHLmvnPcz4Ocp9xOYMYOGjxp12efw
GPFeiNPEGE6fM4fmLFx42ZlwE8ScYt9/58MP6WPh9ryPIPcp8FoCnlc8XrzG
fcajj8i5xX0spyvn1lkxVm4xViOdDnmtwnNe5fgsX76cHmzXjp545hl6Q8wh
dnRex8G9BhMq51Bt+wiki+fL4zNVPP85CxbQ1q1ba+2X4LPf+X4g389g9/9U
/F2+r7Y5O4vG5U645OdxWVZxPRdxWf28KnEZlqD1ugtHP6XczS/1uptNqv0D
AFA70dvfekz4d2m9fh4ET7cldzoZkxx+scLPq9JAR/ezp0+oxc0D6ejod0ct
XTdHRy1dL0dvqqcn3HsPTbnlJtp21x3CC+6lkw89ID3qovD0c+LjwQdaUfro
UbKGzHU+3st607ChtFNcX4dKLb26a/Oe6O0ef1zWQLknmPvNud+da6Hs62Md
dkp+5SVaFR9HGcKpeO3vMOFf7E5do6NpgPBV7vuW58uJP+e9qdk7eY02n0H2
SaeO9Pnfb5P97Ydat6LvHn5Q3tO4IMaKa8RZ7w2Q9zK+FH7Gc6m2veVUOjr/
rmvz6KNyDcOrb70lHZTPZOdaeB8xRqPFuKS8/CJ9+f/ZewvouM5sz/e9NTP3
zcxba+bNvY1hZradxMyMMcqyLRnFYFmyjDIzyZYZJaPMMjPILMkMkuxQ304a
bqe7A073Tfp2J/vt33aVruIYBFV1VMn51vpWGaSqU/t851T9vv/e/z0oSS4W
FNjnwpSZM80nkD2L8/r75BV08/S7x+cc33UYivwCdGHixSP1/yvfeM004Q+U
Ob/wrC3i9XX9OlKYNsJ63jnN5KUnnwFdu3e3nvXk4d++hkaNHi0H+/aW/WNG
ywf6PonpfOVv+N2b52912Hof3awsy/rE6x+WTRo+3PaHVuXk3Oovp8yK3znx
or5gla7N7S+/IJeqvyG/r/WW7f8QK2J2rEd3x2PjnX3697f6eBgdDzty3VlD
eMaN0nlYr5H9aSPlQ/3+w88v19iYv8COHeZ3wF4E+zjb9u2ze0Lp5165apXl
ofTS18B3cfayZSX95Y5fuSzzri+0XHfq0PlOeScNPeXCgIDx+eDrid8mFkZX
CUZPKIr8szJ6C6c5xB3ucMd3R/TJns8qc39UZjb3I6PH5Pe8A5vfm9H9raUv
vTLXvEfvxOaulh6cjO5q6cHF6K6WXvUYvf8Tj8tUnTkvvSAF1V4zjoLJ0dJ5
LKxRTU7PnGEaHxOfrINHjsiF9m0rpKMHQkvPzs6Wlm3aWF04DNqjb1+JGDBA
1iqX32xY3zRcadJQft2mlYxKS5Nl+vOwFzm7cAaaO17Zm5Ud4QJq1qmv3abM
PrVTR1n+3DNy6NWX5arG5uOab8ofa9fU+bbFrmD0qFtau/Lputnpd/V/d1JL
p29Zpy5dTEeHhWDHsIgISe8eIn8if6JRfYvP79q0lJGpqVYHXLomnzwK9GXi
mqq86u0vRy07udv46u07fVrWbN4s0194Tra8+LzkKae/99attfUnXVvkcJ+N
i5H1fvZCr8hkXXcNCbFaefLwqVmAF0eF9ZL3mjSyvStp0kD+3KKZzB47xmo/
lq5fb2uF816s55+8dXwLNimLRyq/Ei80dPZAqKGg7oJ88H1nztj6wl8vvW8f
Wfbs03JA1xY5Bx/p2vqTrqtPdO4J6ep4XLyT+3h/XS91Gza0XHfq0UP79JHY
fv3keOuWJXkSv+nQVlYvWWL+AuSlbNizx3oessdH3QgxytF1Vfq5ZyvHUyuC
/wX19tS443EAo7MHtC/vjMy5NFeSrsZKon6f9GroKR4dnZl8PoB8bnp+wreJ
RdFfOs3nHkb/zcB3Y553mkfc4Q533Br9Tnf5Z2Xti+Vmcz8wekxBr5t3Z3Nn
GH351fllYnNXS3fz3V0tPTgZ3dXSK8boycppCQ89IHOeelI2K0flvvaKnK32
ulys/obx+t5XXpJ9GXNM4zOdr7BQdhw9Kud6hsrm9PQK8XkgtHTuYUuUDRLx
t6tVU7YrS8M7f6tf5xafN20kuzu+I0PGjpUl69bJnKVLjQtgzmRldmqzyWWm
Xnjt9u3W/4sc8EHNmsqYxx6VTGX0PRqb02+8Khc0Vheqv265yfsmjDetHT+x
3frnq5cvV0lG556xYsUKSVH+7lOntix5+y0pfqu6/KXurbxqadpQbrRsbnnG
eKxbr7GzZ20NsP8AP1mddnT0rf5yyvCL1qyRlVu3GktlKa9P1DgOfOhBma1r
izz3o6XWFnE7OG6sbHaox/n9Jtf+Kj3/8bGx0rN2LZn9Vg05T55+nZoePm8o
XzRtLAOUSUv3GsPrvbSv4PFLl2TCpEnSuEUL83nDi93bX26prjvWFT3mlmZn
S3y1N2xtrbC19aLG6DWLFTFbpezudExKT+vVp9dMaM+eEqLX16iab8tRPdbf
1KJ2vm7JHlhUaKjVjVAjwJ7E/jNnLGcA/RxvvKv6OXv8xImS5z116pTUbdRI
mum1iNcjv0v+PD4A+Omv0edYtS1HhqyJlgT9LulldHT0ZM9MuhARUD736Ojf
JBZF3XSazz3zSvyFPj91mkvc4Y4f++iyscs/ReeH7tNZMTb3IafHFPT8Qtn8
m3uzeWDz3bOuLpb33i87mwcjo7taenAxuqulBxej/5C19L27dknHn/5E4h98
QCY+8ZgsfvZpWfvCc7JBeYrHha++Ijn6nRj92HS+48dNK83t2kXWDhlSKT4P
hJa+ir5wjz8mu15+UYrerCaf1vHUQSuDTu7SWRL1PfDdH/6En2B0PMtiU1JM
U6cGFraYNGeOpE2eLF2ef076/OLnMvzRh2XO00/Kyueftfr9bJ3LXn5J9h44
YLHKOXRItg4dIif18X691J3Md9+sTD3i0UfsPZxTDkTfZg/j20b1ZHmb1hIe
GWl8BD9uV/5k3+Hsu+/KrEWLjKNgdHz+8fOiRoAefMSLuIU3byZdf/ZTSVRG
n6Rra4murXWsrReelyx93L5pk2Tp5N7lNG/eba5auFAGP/yQLH/2GTnuqQH5
S73axugFzZoYQ1LHT946nE3+ALnq1JajE+NnvnTFCmnQuLE0bNbM1pi3vxxx
Je+bvaBk5fb2P/kX6f/LX8hIPR/etcV1uEbjtUaf3+lYlJ5cW/RziG7ZwvZg
MvR4973ykhTfdo2Fde16q/Zerx3q0/HZI8cdLwfiQ677Br2feJ+XmnQ8JGo3
aCBNW7e23AX2NMjTwF+PWE3UtdVZr8P+IxuUMDrfJ5O8rH41NvB8fktH/yah
KOqLKsDn+MXtoY+T03ziDnf8mIdycfotNvdOhxg9v8cXCQV9/lF2Nve/lg6b
l5fLg5nTXS3dzXd3tfTgYnSntXRef1jEAOmsXNBP5yBlkVGPPSLjH39UxihP
zRw71nQrdD70L2qz6e19uHZNWT54cKX53N+MnqnHmqLvKes5+OoVefet6lY3
Ti10Wts20lvZAU5C/0Qvb9GundXVdure3bgzUtmAXvDxOteuWye7NAYdHnxA
ev38ZxKnj8OU08dprMY9/ZTMHzf2lr63das9V2aPUDleBj53UkvfiEas72Oe
Hj98Rc7+b2u9JZ/XqSVTmzW1+mL2MMj5J5eAHP8D+flWmx+TlGR12q06dDBO
hcOoScczbKTyVF9lqxbK5910Rj7wC+Nc9OEJTz0hC4YNs7r1mcrzXh86p5nz
TjOxc2c99l9aDchWqwF53bwBqf842qCeeRGyh4EmTg06/QHYw4JBrR+88nq2
Xj8rV660fPlGzZtbrjs9xKn9Rx8mZu/oumv5wAPSQRmd/R/2NOD08U88JjN1
HR6vRL8yf8zNytTURPRt0tj2FLhnrHn+WdvD4BojJ/+mXmNdPF7v8bom2OPi
/gGjo6OT63747FlZq/Ep/dz0cGyscTIfOk+uO/UFEZ5rMSoxUdrq+WjzL/8s
/Yc3lPizff+T0wPoDXenmVwc/4+qwugJxZHTneYTd7jjxzpi8nt2/y6b+4jT
K8DnCWf7/Ef52dx/jJ55dVGFdPNgZ3RXSw8uLT2YGN3V0oOL0cvD6Vv1O3JM
q5YyoNob0lMZqteLL0g/ZdSUUaNkzLRpMkk5iu/X+H1PHNBf1imrrFywQI4c
PWqxrqqcvkG5u7fyDvsN8MPh116W89Vfl8I3q8ngBvWt/ho+4n3BV3iZw+WN
Pf3lYIP+yp3blLu9mvz+PXukR61a0kl5M0w5od+rr0iSxgR9Dz10Ynq6jFY+
XdSiufVUp59zWRjdCS19vXJjj5//TIY98rAsffZpy9nPr/aacXpWrZpWX0zO
P17tMDq1AOjE1BLzSP57C2WoFvpz7TWW9A+forFkTR85ckTqv/22NH/yCems
cQrXx9jatSVNGYs40YN9hnLtCY/XYFVk9JCmTSTkZz8t0Yhh9JPKoNSH71BO
h7dZQ+zj0NOP2nL2HbJ37bIY4WOAtzvPdUDXQs/wcPudNtS1K7cOHjZMWut1
Z/sc+u9tX3pRujz7jIRprOLraKw0vujF+Bg6HYvSM1l5mz2ZrnXqSJef/kSi
H/ilTNFzTH7EkddesXoPrrGWjRpJy3btrD4dfzzOO3th7PURH2ohsjVGtz8/
10xUTIw0atbMGL19ly4WZ56LHIReus46v1lDur38ogwY30zi+d7nkG5+B0b/
D6fZvNQMc5pT3OGOH9uIKehRQ1n6D3fn88Bp6fEF4X+rOJtXIt/9Lmy+5EqG
z9jc9Y5ztfRg1dKDidFdLd15Rmdyflcop+LvjX813mH0E4dhY5KTJT6sl8x+
+y3ZPjfDapHxi9udmyt79++vkozOvbCzsg65AaMfe0QWPvOU5XLjhzdXuZpe
WvhbRcTHWx31BGXrGQsW2H4E+xITp0618317H7fr169LB+X3Jsrg8AIMO0Cf
A69v9L3R73SQI4cOWZ5zXnGxrNuyxd5fVdPSue46Pf2U5QMMVUaHQdnHgEOz
lRWb1Ktn7M37Q0eHQafOnWt+X+RR4O3Odea95/J8pXuzzcnIuOUjpozVSeNs
OQkaH9bS+BkzJPf0KVtD+/GV03hVNS29U8d3pOVP/sUYPUkZffqTj1suBl4N
rKFmdetavwDbx4mLk9QxYyy3nzVEzvsU/TNx9j4f59f7WcK1xr+tWrFC6tSu
bWsRbqe/WG+NE9cc/gjUFFCzvWn79ioTm1a6Lrg/dNNJfDopo8c++IBMePwx
2+fZ6IlPt5o17fx7GR0dnVz3KZ41NFmvNz7/7vY6xIhYxXbtInWrVzPfePbO
4HWer39srEQnJsi43PEyqDDefN2d5nPmoKK4v1UBNv88vjDyDwnF0dWc5hV3
uOPHMvrndf95TF5o8b3ZPDCMHlcQ/pVv2Nw3NemLLs+Wd999t1x+cE4zupvv
7mrpwaalBxOju1p6+b3jTp85I9H63bejsif9pt5RbghTFhkX2l22KSfQG7xY
Y4AHMz5PMOjuvXt9wui+5vTjubnSWRk0zJM3nPboI1YPPUFZK0IZm7xjWIPv
+zA2DEE9NfW13O9uZ3Pv5HNm/MSJ0k6fo73G550OHaSncsjYyEjZf/Kk1dbi
eU+Mbujjhm3b7FxUNUbPWrxI2iqfh3py9kc8+rDV7E967llJUeakzhy+Jte9
t7439iBg9cTUVMnPz7fnKM3kt8/1GzZYT67mzZtLe2X90PBwyzE4VFBgbP6u
xoQYUY986PDhKsXo1EI3festY1Dy9KMe+KXtY4zX+Ex85ilJG5QkdRo0sNpy
87T3riGNDb7lJ0+dKtPrZK9eLR1btpSGyrKtW7Wy/nXshZAfj98c1xj9Dbfu
2mVrz+m4dGnS5NZ71uumQ40a0uKf/490VkYfQB3DIw9Zzcekmm/J8aNHpZ1e
GzA6tSPkDFAHQV4/8Tl85EiZXo/reHRiorR+s4bUq11bWmisunhqL9bv3i1X
Pv5IVvzrylu90asIoycVxXzlOJ8Xmaf79cGFMb9wmlvc4Y4f+sDzQbl5b9nY
3L+MHlsQ9lffsnnl8t3nXZ4hN969YWzunf5gdFdLDy5Gd7V0V0t3tfSKe7xz
/azKzJSUlBSrH/X2kaLH8/sebrimawxPNO4NVZXR49q3k25PPH4rJ/2VlyVB
2Yvac/Rc+NObO0tt8NARI0wjvxub3z6LCgslWbksbfx48y6nbxZ7GHidEx/4
Ci19o/5fWXPdA5XvzmdE/169pLkyZ1edfZ59RmLJrR4+3PII6DnXpnUr68cG
g4YoO6bqvxGf0s9zL0Znkk/Qt1dPmTB9utXp4zdIDgb7PMQIz/PtBw/amiv9
e04x6OXLl2XYqFFWB920Zk1p+/zzEvL0U9L/hRcksX49Ga3xGT1pktUw9NCY
WE2Esiha+kC9Vk6U8iUv6xw8cKBE9e8n0xcssBx56rNL7/MU6b1xz209yQI5
uYeQ55A8oL/UrlNH6jdubGuiM3kkzz8nPXRGvPySJLVsIfuUm/kd1km8XmPw
PIxOnnpcUlKZ2bz0LCgokFB9vYH6+/RGp+/f0fPn7dq6/skfZMmvlpuO7jSb
e+fAopi/Os3nHkbf36Wwyz85zS/ucMcPeUTlhc4uH5v7h9NjC3r9JbGgrx/Y
vGJa+rxL0+Xd977L5sHI6K6WHlyM7mrpwcXorpZeMUafmZ4ug5RZ52dlyVbl
EbyvYKurulZhc74fm7+7fif3FZ/7ktH5HJiekWH15eTu09cajRItjxrqiLg4
SapbWzLSRtq9vaxcXnqGDxggQ+m1tWaN5Bw+bP3CYaurGh9iBK9nrltXLj73
t5bO+Zq7fLnVAcNZMCb8RD47+drkWEf37CmH9+83zmLyeXK3evZ78fmatWsl
PCLCdGHzgz96VI4rA1/QGBEf1tKJK1fk2rVr3/vdQDIon8GzdK3gi4iPGb70
MDp5/uQQ8B7MNzA5Wc4rG3p/jzVG3TST+FbktXuRs61xpzaf19+Zm2sx4foi
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
E+YfhS7J93k03LXKYJw37rf4Xe3Zu9euu7LyOX51faKjTQfH85sacriBnFty
b+EqeHRJZmYJa+/X7/FhyuYdunSRrj16yICoKNm4ceN9/eV8yeXEc+rMmeax
Rc0uvmPsJRCXk8qG1PDejb+5Jqmt36yxg0/ux+lRcXHW2x2/ffp04V1P/yli
c8XjdUbvrtHKp+907my9vULDw2XCpEn2Wrf3Svcnp+MdN45eb8qi1HhzjDd0
TTM3K3fdjenvxujEgfW0Vd/3SX3fd/IWZ+3RSxsfBfZ56AG/T88J+dveGKEV
p02cKJGxsdaPLtBsPnr8eDt/5JDjU0ftxru6hvL0PJ7QNe+r1+G+jEfB9p07
7c/ef4+Oj7f9LOrf8YCkTgLvhjO6/tjr4Xg4rkDGhHyd1LQ0u7ew70RfPu9+
wbZ9++w6u9vvfvDp+zLqxlDH2Zx5q+9a1M0qwOiHuhR2+Senuccd7giGEZPf
Y+od2TyAnK7H8F2vdgcZPeVclBwrPvIdNvc3p7taenBxuqulu/nurpZedRid
e2jqqFH/yaH6dzj0Q+UmctBhZ3R1r66Ln/rhggJZvWGDnUcYnNjnKlNvmT5N
ts+YLjuVU67qz/J/9EyDrfCEmrN8uXlWURuLNzvPh57O3xfoa1Smd7qvOX1d
drZpkewpUDMPI6NnExce9ytLct2V5m3O6xJ9j4vXrDHGJi+AeG3cvt1Yxftz
F8+dk03Tp8uOGTNk16yZkhwSYvnrw5Tx5mZmGluxV4JPOzEiVtkezbGs0x+M
zvpKSE6WibNnGyPTuws+hreIS5GuA7ixrHxOPcGMjIySPmDk8e8/fdr2gLyc
9r7Gb8mgQbKsSWNZ3aWzLB2Sah77+BEQ41xPjPCFY48n0FzOPHDggOV34PsP
n3t7saPrk1t+RI+NtVGZ1/hY11q6xgqvAWogTuh7Zp9rk64t1iF7WN06dZKp
Hd+RnJ49JHdwiuQumC/7iJEeDzHa5cd+53eacR6/PK57erFzDOylkBPC3LRt
2z1/v/hPhTLi+mDH+dwY/XpClfB0TyiMmOA097jDHVV9ROd373BfNg8AoycU
4NXet2Js7kNOH3R2gBws3HdXNne1dFdLd7X04NTSg4nRXS29fIy+ZOlSywte
tHq17MjNNY0LvY3+2vAlvdm8nmXfybnW87dev19zHpfGxsj56q/Lp3VqyjcN
68m3jerL500aypaxYyRLOX5CerrEKNeNmDjRtD184uAY6tHpgYzv2/xFi3zG
575g9NjEROPlpevXG9fAQjAX9by8d7Tbffv3lzA3sZwwZYq9vxzlTq9W+J4n
//ro2bPG6MtGjpADNarJxzXflL/Vr2Ox+kpjtiE8TIaOHi2j9Dno0ZW1ZYvF
hhjBonP0ecvbm83XfI4OHB4RYb3Y6Ye+58SJEg8y4kK+xUbl9rKwOVo5dfRL
1q2zvYg8ZXPiyp4QnJ+jz7N61izZqLEqerOa3KxbS77VOP1D41XQr4/1Fl+1
dats3LfPYoQfHPnlTvA5a4U6DMsR0fPGvgH18Zx/4sJ1gxd/RZ+f+3qqXqPU
1JNfgXe/N5+Da3Gvrs/B4eGy6OUXJe+N1+Tfar8tf29Q19bW73qHyXaNDT3H
yTEPVEyO6zF1Cwszr0dvXgj7f+TnsE6Iy/4y5BVc/tMlGXY92XE+Z1YFT/eE
wsjP4osj2zrNP+5wR1UdEae6PRmTF/pxmfncT4weXxD+9S02905nGD3pXH/Z
Xbj9vmwejIzuaunBxeiulu5q6a6WXnZOz5g7V6ISEmRmRoasgy30ezU6F1om
ucRogtSNkxsLZ7zr0ZBhTnLUl04YLzuVC957q4b8e73aIsoE0rSRiPL5143q
SdHuXZYvf1o5Dq5LGTXKvNl5bvJe4X88rejf7Us+ryyn94uMtPpujm8dbHHs
mJxSvi7QuMCS9KtC81+RlWX90Obq+2GfY77+nfpo+BxuJU7Ei3r7XcqcmS+9
IGervS5/VIZiL4M4ES/+XLxmtXE5vadgMbzKiRF+Z3OUcSrSP92XfD5Dzxu5
EJZDrcfFvg0+ZCd1vRRcuyZ5V67Ilr17SxicfQv6sKFrr9qwwWr36QPHv6Ot
kp+wzLP/Aedf03uM1xMPXX55+3ay/9WX5YO3PWurcYNba0sfd0dFWL9xYsSe
CJo+a94JPu/Ws6flllMfj8cfe08H8vJsT6dAefSkXjur16yx66103TUxJR62
15CdbfHZoTElPqWff4GurZhBg+z90s8AziWfn30Mrz/eLvbRXnjO9sm+u7Ya
SlG/PhanebqOAhUT8k/waw+LiLB9Oa4L7iPkorDvR1yOnDsnl3TtcL1570d3
qks//YeTklo80HE+ZyYVxX5dBRj91wOLox5zmoPc4Y6qNnof7f3fo/N6HC8X
m/uB02Pze/31u2zuI06vAJ9vura2zGzu5ru7WnqwMrqrpQcXo7ta+r0ZnddM
Txooh99+U/6g3+n/qgz0Sfs2kpc+yzTuAXFx1luaXGZ4A2a/4tEEYW40vM1z
ZhufF79ZXT73aJzGUTr/0bCufBjW0/jU6raVWUcnJkj/2FiJT001nh04bJjM
TE+/q++bU4zeIzzccs6n9+8nuQ0byG9rvSV/0fj8sUd3Ob1ooXmj4SmPxs3e
Bbo3/c9gRfgMfie33asV8kjd+so3XpMzOn9T8y35un6dW/sZTRrY4+819mjI
+MTRU43nI0bJGiPq2CvC577kdDzIWnXoIL0jI2XkpEnGomuGD5NjLZrJr2u+
KV/q+f9V105yQt8/a2/S9OnG33vxElcew+eOuVB/D4879iHIVUf/Jpef9cT/
ezXnjfq+d+naQj//jNyMBnVL1tYfG9aXJGV81g8xoveaE2zO7BwSYn6G9B2n
HzssSh3HtoMHZeOI4XKwbm3bYyAH4IrG55heT6zLSdOmGTd7c7/Jz4C59xw9
ap9h3uenZ1s/vWbY3yLfgD7vx3XNsT/GdcjvnNL1tqbaG3LqjVctN+OrUmvr
q8YNZdzglErn2Jdn4iHRtFUreUdjg7cCe3ALV62yPZ0d+v7Yk1mTkyNLx46R
zfXqyA3uH3qOCzt1kHz9/9ufb9/vdjvO5t5ZRTzdT475Ve//7jQPucMdVWlE
n+mRUWE29xGjx+T1+DKxoM+3d+fzwGnpK64srBCbB6OWHkyM7mrpwcXorpYe
XIz+Q9DSV0yeJIdefdlY8e9e9mnSUH7XvKkkKj/DUGic9GXaoqxxqKCgpKYa
/Q6mWK3MsPaF5yyvFkaDQf5ev649HzxbpBxVpD9LXjw13NTEDunQ3nqywx2z
MzIslqU95aoCow9T5ouqVVN2KB++/1YN+UoZwhufv+jjSOXCedQCK0sQE3gV
Phs/a5bl68NQ6IPowmf184i9DbTDxU0ay75XXpJrNarJJ7Xf1uetLf/QWMHq
H+mfr+nnDL9Hr/GQ8HAZnpZmnmyVYXNfMTqf1/RDb9upk+2xjOkRKhteesHe
C+f9Fg82lH9v1ljGDh4s42fOtLxmasNL1+/DZvQKp2ab/R/6gVFbAaOTm0C8
iOmGpUtk7fPPyWldW796+035wtZWHVtbf1aWGzckVaLi42XnHXppB3JO1HNP
D3S89fHVZy2wdzOlS2dZ+fyzcq7a6/Kn2jVLNO2vmzaSmfFx5skwj3wLXSvs
XXl76jFzPDX4nHvizXogb2HWokUWU2LIvhD54lyPxG6JXne7X3lRrtR4Q/6t
1n+uLfbdtui6DGRMinTd12/cWBq3bGnnGv1/9JQplo/CnkS6Pk7VeC199mk5
8fqr8ttS96C/a3xOlvIg8M6NH2c7zuY2ryd+m1AY5byne2HkTKd5yB3uqCoj
Ni+0faXZvJKMjh+csvk392bzwDD67IuT5fqN65Xic1dLDz5Gd7X04GJ0V0sP
LkYPhJZ+5tQpSX/xhVvfjWu9ZUx9K3+4oSwK7W4s0EG/P8cqQ5FXuyw727Ri
uABfaPyzyeOePXKEzHrqCdmunFZQ7TXLc+f5fq/zw7drSO6b1aVAuRQ9FFbd
vXGjbOsZanow1/zdfN+d1tL37dkjE558XPYqS79fOndf+epg+7aSMGSI6dzs
W8BJKcrR3Xr1kkHDh1s++gp9n+ii1FaTe0BNMrr66JdelKznnpXDr74sV5Vr
f63cSaw+Vj45p38+r7x19Px5WbV8uX3W+ILLfcnpY8eNk7qNGkn7tm1klJ73
TS8+b+8DfftbD3/+tkVT6RcVZZppprI3nv3UY5O/Th4Fexqt33lHevbvbznh
MBt121sPHbI4ES/WWcbo0ba2cnRtsf/z7lvVbW39TmeRrqvMZctsrTjJ5kz6
zbVs00YaNG0q7bt2tRr9qD59ZPhjj8pKPdf5el38vtbbJfz5pfJnRFiYJA0b
ZvkWXFd4ALKHQe4A+epo6fQ+4DOhrcaKXPF+MTHG/vgTwOhwPfUF5LuTgzBB
12nmc8/YnttlZfR/9awt9jZ26VoNdFyG6vurVb++NG7RQjqGhEjf6Gjj9FQ9
rxPTRkrqIw/JomeekqOvvaLHWMP2E7x7YB90aCd/0FiUfr6bX96UFf+6xHk+
LzZP92+qgl9cfHFkR6e5yB3ucHpEnQ57MPpM93+NzuvuGz6vIKcn5If/vWxs
7t9898kXRkrRjUKfsLmrpbv57q6WHpyM7mrpwcXoXk7PnDtXpj7xuGm5N5R7
PqtTy7Q2GCu2Rw/T9lq2b2/1xuRZUzNOPjPaML5c8BS9qIdGR8nAhx6UOU89
KRuV1WCDk8pOue+0l0MRA2Rb0kDT9vCQhr1WrVolR5VVuHbK0p/NKUZfMnOG
pD32iGzW93Sp+huW/29+bhqfNcrnEfHxMkVjSD0w/EmudvO2bS3nIGXkSNvT
IHcbHzXiBa+jGw5QZhv3+KOyQjmK3O1jr78qJxrUk4P9+sgOjSU9y+Cu+foc
d+uX7iSj87swesdq1YyvsvR9nH7jVcudQKdFI97YsoXpvXAYOQbUHZN7gTZO
XTnrAL0ZXRhmI3bozXgUoqUTL/K4k9q3k0EP69p6+knZ4FlbJ5RBD3XtIrv7
95OstWvs+nOaz0t07g4dpGHz5sbofZRJuS7mPf2UHNTjvnWN1bRr7JPGDaVT
9+5Ww4CnHGuD/AFy1umfwF4W9QBeH/vwvn1LGDdSf4d6bvwblqxda9chc/q0
aTLggV/IWM/aoubk+OuvyNFmTWRvn96SrbGF9wMZE9buiLQ0O9fkunfS+wk1
I9QjJOq1EvfgAzLtycdtb+/2a4zHK+fPf/85b34qcz+c5TifM5OL4v/uNJ9T
i+72RXfHj3mMOdrgvypL77/F5t4ZeEb/vh9cgBj9Nk4ffT5FLl2/6FM2D0ZG
d7X04GJ0V0sPLkZ3tXT/Mfq01FTjq9XPP2saOvxATiwM0bvjO1Yzig7YSHmD
/FTyduEtamBhCngdLS9Rv293/ulP7Lv2eGWDuQ0byLKFC03/JEeZGlnylanH
hrsWTJggG5RHObdl7aHuhJY+behQidf3tPCZp+SAR+umDgCP+kXNm1nuOdov
vaOoz8c/HP20hXIHbIpv9TDl2HEzZli8eEwdPFja/fxn0veXP5ehjzwsM557
VuYMSrJe4uSAw2QX9J7KXsbi6dPv2Cu9qnD6PD33kQ/8UqYrX23zeN6h05LH
vaJRQ+mgjAp/kuMOa8PoaL3oxMy+MTFSr1EjY/SwAQNsD2ikcic/T7yGjh4l
bR9+SEJ+9lNJeOgBmfD4YzJbWXPevLklOQvn9fP32IULslVjf69e2oGa7Htt
17UQ0rOndG/cSPr98hcy5rFHZd0Lz9k1hv4Pg75Xr7bV8bNOyLuAtenjR980
1gH7WeQQ5Oj74nnJ36/ToIFdi14dGsbF84DrkJj10lh2+Mm/SH99zeGPPizT
X3tF5sTGWN4LORx2Lep3iy36XFevXQtoXMiVoU9ESJPG0kVjY/eW2rWl9y9+
LkP0HkSO+0HPNUZ+BNcYuv+d+Jz5yRd/kKnvT3Ccz5lVwS8uvjByb5eNXf6L
05zkDnc4MWLyu4/4LpsHntHv7QcXOEYfdi5eCorzLKeL6Q9Gd/PdXS092Bjd
1dKDi9F/7Fr6tk2b7Psx3LNWGR1tskAZi7zYaOUrmJwc7s6hocYFaIJ4VJNj
G5WUZN+xpypD8p4n6c91UkaPeO1Vmaps5fVMI0eXfGY8pvGxgtnndusqi5MH
lZnNndDSWXNLFy6U6GpvGOssU36grhdfN3S+mbVrGV/BSfQIQxcnrwCuhNGb
t2lj+miv/v2t71a0xiteeZ2a3IXKUu2Uo8IeelCSlUupPybf+5TyE/XH5DbT
Y8zq1s+erbKMvmT+fImsXs004rlPPylbldGPK4Ne0Phse6uGNPHUHeMDCEMu
WLnS9mfoFYdHGDnaIfr/9Zs0sVx38jTwnWMfKD4lRSI0tg1ee01aaaxg9Ig6
dWTUpEmmNaO/s5eBLxq12njjb9DndprPvbNtx47So0N7ia5bR2IffUSmPvm4
eatT08A+Ru6b1UreN++Z/AH6JCxVlmavhzoINPHjytXe55w7b57U9uSKk+se
qmzPtcjaCgkLk3b6fC31Guyos/cTj0uisrnX25G9Mav/1zgRr9xz5+wzINBx
af/887Yfg4ber1NHiaxTWyIee8T2MND8qSXJ81xjx99+U24o19/tuT7+/CMZ
++4Ix/mcWRX84uKKolKd5iR3uCPQIza/e01l8T/fmc8Dw+kx+T1v3t8Pzv+c
nlwQKceLckvYvPQMFkZ3891dLT3YGN3V0oOL0YNBS+e9d3/9NemjjJ6mDDFP
GQstfb1yRPrLL0mjZs3Mwy3aw+LwZqv27U0X7RMVJZOnTrVjQjPk+Q4dOCDR
+u9eP+rS/djgczgdf+6FcbFSeO1ahfjc31o6Oh992Fcr68E0p/U4D+zfL7Pb
t5N0jQ+53MRn+YvPSyNlJS9foWVSa02fZx579Otn/wdHRShDLVq82GLl5ez5
c+ZI+8aNrIaAGgH43Pqx6XUOnxMv6pA3enpt3T6dYnRee9369bIwM9P2Wk5c
viyHjhyRRRqDqU89YfsYcCh68Ts1axpLetfQ8PHjrWcctfnEabyuH+Kerv/W
SddU6w4dJEQZfdzEiabvcs/rrvzeQLm8dY0a0rd/f/NGh8/Rg8946tm9fmpo
w9evX3eUy4nRxk2bZIa+P/IF0MHprbZm4gSZ9sbrlouBlyIx6larluUPtFGW
J08lafhwy00hNsRo0syZ1qOu9PNv1XXZX3+2eevW0r5zZ0kcNEhC9RFuZz+k
vV6f79StI131z3jvUX9hfcfz8r7Tj41rcZP+e6Dj0/SpJ83nftTkybb/QN38
8YsXZfeWzTL5zeqSodfYKs89aElU5H2f78afr8uI64Md5/Mq4hf3p9jCiLec
5iV3uCNQI/pE6P9R/i68N5v7l9HL5wfnP0ZPKhggB67tvSObu1q6m+/uaunB
yeiulh5cjO5LTr+k341DX3tVev78Z5afTs716McelRFPP2W1otSNwuPUVJOr
HDd4sPUEH5Sa+j0v+CPKafwMdcTrPP3Y8ASjBzhcQN8sGGGl8lVF2dyfjM69
e6QyJDo43EAdsNerCw5cqvw05NFb8Rn9yssyeOBA00C9Nfpe7yvrGzdkiN23
vXr8nRg7MjZWBg4dav3NN+zda/sBxOeqXufFGi8eD587J+d0BorR78XpxGi6
p289XmQnrly5tZ+g5x5f9jXKzoMfe0RGoYe+/qqkJibe8u9WRsfXnDVk2riu
H/rF8X3B2yf9bpN7XoLGuVW7dpaLQL3AglWrvtOPjXPD+qKOYq2eOyf5fK6u
/TEaB3oTsobOllpDx44dk6HPP2d7YePq1JYN69dLa31f9TRG7OV0CwuznH/q
IpJ1rV0rYw46nzfhXbpIw4YNpUmrVsa/7KXRSwDeR5PHx5H9MvYwrMed3kcP
6vUZ6JqAAR3fsb0scieoUbA1pMfPGiq4cF7SlNFH6DU2qUN7+Y2e+7I85/k/
npUh15McZ/Qq4hd3Jf69+P/lNDe5wx2BGMrdK8rG5v5j9Ir5wfme0TdfWXdP
Nne19ODU0oOJ0V0tPbgY3dXSqz6joznOnTJFUrp1lT7Vq0unGjUkJCTE+mf1
6NPH2KGlRzcPDw+XBcpn3Ddu53N0UBiMmtjFa9aYhk4/sVPKGfSAwhsMX/IV
yiXcIyvL6L7m9Dlz55o+Sx3wAT1u2O+6nj/0RvgK1opr1FB6NagvkVFR5r1N
fnHrZs2kvcYILuoTEWGMRnxuz5m/na/7RUZaf3lyv+kRnnPokHnDUSdM7vbp
oiLznTt2/Pgd+TzQWvrevXsl0bOfsLU0W6H363GQmz8pPl4ila3Yn0hWDtu2
bZsM1j930NiwjvoMGGD99Ljn3o/NS8+MefO+14+NnAPq2KkDIF4cT+batY6x
OdcRnoFez/p9np7vxaU06+Xp6RLbqZPMnDnTfod7zlBl8Xb6by2U1ck1GDZy
pFy9erXcr09OSkFBgSxcuNA0eWpR6MHAfgr+BjuPHTNfA/bMrNef/mwgve/5
7Arv39/q7VlD5BdwPOTYvOepgdmv6yonO/t7eQP3mwd/v89xPmcmF8f/h9N5
7jpXOs1N7nCHv0fMmdDe5WNz33N6XH7YV/5j87Iz+uJLc8rM5q6W7mrprpYe
nFp6MDG6q6X7viad++tI/f7cok0by83Gyymke3cJr1FdJg8cKNeUG+7UR525
T79vw/D0Y5s0Z455glFHuzM3V/Yqq8Cam8kVV37g2H3B575idNZSRGys+WKj
N8IyJ5V3YAf4Cn0WPR1PdvYqOmpM6KUW3ryZzBk3zu5zxI7zfC/PudJc3bN3
b9PdyWsm5wDdHmYhbxy245Hc5Fw9lnvxeaC09OTUVMsPIPd63c6dtvcCf8Ll
aMSwOrnnrJkIZcNDylre3yW+fB6yxsrD5d65ZMkSy39n/8fbjw0G3uLpX0c9
OhrxQuU+p/h80pQplqc+fMIE86HPOXzY/NjR9Vk/+C+QI7E8M9PWXOnf5Xrg
M5h7ZWWPg2vRW6OOHo/nHjxM7T/967gOiRceAIHkc/PNCwuz+8NUT98DjoP9
FfIwWEN4+/PdsSLPv+HjtY7zOXNQcexXTjN6YnF0qNP85A53+GtEn+z5rHL2
7yvO55Vn9Ni8nn9JzOsjA/P9zef35vQZF8bL9RvF5ebzYGN0V0sPLkZ3tfTg
0tKDidF/rFp66XlYeee0cuIJ5cO7MXnpyb2ulUcDJMcbv3K4YKlyOvm+8Cd5
rROnTvUZm/uK0/lMIScYPzzYD08t2OH45cum/TPNUz0rSy7q42Zlw6tXrpS5
l/qdOH3EyJHmI0etOjm/eMvRvw4tnXixvzE1I8Pun/fj80AwelxiovEntcPk
R8DG9EwzvV/jxyM5y3zul6WWvTx8fkrPBbny6MJ4H9BHgNpq+texruhhx5/3
7tvnGJ8PUu5kb4L8/Wnz5lkehlezRq9mDbGn4W9fNuJF3jyejtQVoOmzZzB9
/nzzOmAPhZjN1mMMZHyGDBt2KwdH1xCeivgisn9HHQDeC+z18Lhxy5YKPf/n
Nz+XBR9mOM7nzMTC6L84yecJhZG/SyiKfNppjnKHO3w94ve0/H+iz4SerByb
V47RY/J6fJGQ1/tbY3PvdIDRx5xLlSvXL1eIzd18d1dLD1ZGd7X04NLSg4nR
g0VL986ysLl3Tps+3bigU2io5W6TX5umPEfOL7WwQ5SrYC1/8HlZGJ3PjUOH
D8uqtWvlsD7yd2/tOfnXvQYMMHbIUE5es22b9SFHbzTtX3l0rrJ7RZn89kk+
dIvWrY3R6dWGBx/cSY792BkzjIOzlDnLwub+4HTign88fnBbNRZ4kdHbi/po
fN5K8iOUQdnLoH/3gszMcvnBl5XPObfUoXv91Hr272+57tSjs65YX6MmTrTX
Lm9utK9mSmqq1XyzL0X+CHtTeKBRC+BdQ+Qd+JvPmYt1ndaqX9/8I2D03lFR
5nVAfgixYo2x/gMZn9kak2a61sk9IQ+DGC3fuNFyasgV8eZA4LdQ0df45ItP
ZMr74x3n85TihG+dr0WPyu1S2OWfnOYpd7jDlyMmL2Scb9i84pyekBf+9++w
uQOMPuRsrOQXnak0mwejlh5MjO5q6cHF6K6WHlxaejAxur84vTyMPmz4cGN0
6rG7K3eid9JjLFLncuXe0j8bSEZfvWaNLFy1qqQXNP2mqIfftHWr/T/9vGB0
asrxGiePG70RrRFNG+1/qU5f8Tlz9+7dVksAo8O+1ncqNtbiRT+t8rK5rxj9
vMZlqjL4Ok9vLrRfNHJiQV3zd/IjsrNNkyVWaLLl7dNWVkbnM6m7tx9bhw6m
VdM3HSZO0uPh/0v/fKC4k2sZz/8MjYXltF++bLUQ1MMv0jW3wKPxs4bS58+3
9+zvY+IcTpw0qcSfr12XLrYH1EfXeGRCgmz39FUP5MzNzZU6DRtKZz2Hoz0e
ejA5PgvECz/JeXp9cc+tzOvQd230jWFVgdH/7nSeu86RTvOUO9zhqxF7JuSt
+/dS8y+jx+eHf31HNg8gpw8q6C9HCg/4jM1dLT04Gd3V0oOL0V0t3dXSndbS
+bnjx4/f0hMjI+1xurIc3lV3+nnO2TblhW3KgtSontHv6b7mdDzb6C9tvuPK
T9RK49dFXy5qX/H9Rk9s0rx5SZ0z+ix9qfG7Yw4ZNcqO1Zd8zuReQB/5gYMG
SVRMjIxIS7McA28ePOdz565dsn3nTnvM8/hu+4vTL126ZDo+NdRo49QH45GO
DxwxQ+Okbh4uJi+f+ubRGh/2NNA+K9JLvayczntinyUxKcn2U1KHDpUVmZly
8uRJ2aGx2bVnjxw4eNDOeSAYnddI0zXCXoW3X9hZ/T6CZwFrCw9+/NlYP8Tp
tP5/IJn4xIkTtq7CdT2TzzJMj3Xt+vXfq38P1Ozdv7/5LXAtrt+9W47oeqE+
H///93V9bdY17ovzVvjnazLserLjjJ5UFPu1o3xeGPlpfFH0205zlTvcUdkR
cS7if8acCT0ffcYfbF42Ro/L7/WX+7J5ABh965X1ln/nDz53tXQ3393V0oOP
0V0tPbgYvSpo6febu5Sp5i1bVtLPGj8265O1aZOtN18wOjna1JWjf+OPBZ9f
1usZ1sR3nP7saJ383EFlu5Zt25qXNjn6cDr6f0xiorFn6V7pvp534mu826fP
mSMb9+61Omb6YxGjjTt22LXjD0ZPVuYdpqxN/jp8Tq7BVT0X8BMe2/TnomYB
/7HuvXtb//eYgQMlv6CgwmxekZp0Jtf5tFmzTL/HU486b+KzjxwJZWF/a+lb
tm61noLjZ840T3n0YI6B/mXECkbHk5/cEXIlAs3DXK9TZ8y4tfZ1baPtX9Tr
63B+vq2tQB4L96PwAQMsz57cFDweqMf39qAjXtf1Z06cPOmT1zvxb7mO8zlz
YFGM07XoF1Mup/y/TvOVO9xRmRF9unu6sXnpGUhGP9PjZmJ+n2/LzOd+YvQV
lxYam5eeP3ZGd7X04GJ0V0sPLkZ3tfTgYnRfcDpaML3F0NFgT5j5PS8D6rmD
0X2ho5MnHpOcbDomr0VfKbyorM+4xh1tGI14TXa2sTf3JOp3Z+qx0TMOvZb1
eXu+vD8YvTSncxzo2IvXrrX9C3LMS/fq2rpnj12Pvsx553OOHHt6YM3NzJRN
+/ebxglDESevT/umvXtlZnq69UpbtXq1XWuVZfPycjqvOWzUKJmq55fzSj90
2PxdT6+uU1evWnz8yeh4nlHbPXLSJMtlp0cea5naCdYw54s+fVtycgLO5swR
Gh90ezwaqfGmx2GRZ+8Ar3RfsXBZJjn15F1EJibafgY5/3gWsF/GseBxT8w2
+DBWmz5e7zifU4ueWBR101FGL4qa6jRfucMdFR0xeaENY06HfvY9Pg+glp6Q
1/sf5WJzP3D6jAvjpKi46Ht8HmxaejAxuqulBxeju1p6cDG6q6VXTUaPV2bG
5xqPMdjKeivpc8IOPKLb4iFfWT7Hsw6GwheLWumtnj7jMDm5yOid/H3RsmUV
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
651NTvT6NWvsWvAln/uC07n3d+za1Ri9Y/fuxqDxyunUhROjHWG95G/6vv7S
oqnkjh1jzMR9zcvi9IPDk37Dpk2yUVnzwoUL1msLnRltGa8wPOyv6OfB1Dde
ly0vPi/XalSTz5Whvm1YT/7cpKEsbtJIwpXv+oSHy1hlOc5Zefu1+ZPR4+Lj
pW6jRrbP411DgzxraObAgfKZnvM/N2sse2ZMt5/nPO/es0fWa0w2bd0qh5Qr
uQd4n4/e7yPGjbNc8NK93/GEz9M/z5ozRwa/8LwsffZpOfH6q/Ibz9oSfZ0D
urZimjaVHl06W218jq4tJ7i89KQHQW3PvlQn7xpSDmYvY/rgFPlj00byhc6d
M2fI2nXrZIOuEzwHi4qL7/qcrANyTqh3oAalQL9P4b2Op2POzp1y5MgRiUtO
tjqSITXflplPPiE7Xn7R+Ny7tj7WWI1t3Ei667XfLyJCFixcKL/Wzzl/x+OL
m1/Iwg8zHGf0pOLYf3e4Fn2N0/zlDnfcbUSdCg2pFJtXktNjzoR+mZjX+w5s
HjhOL6sfnNOcHkyM7mrprpbuauluvrurpZeN0clzD+3VS5q1aWO6dkhYmIzo
2kVONG1cwj3StKF826i+fDRyuPUqv6jXbHbmCltj+/fvl5kLFpi/FPnqXvZc
kJIis556Qg69+rK8/1Z1+dLDBfZ8+lx/rVdbrq9YbkyBz/b68eNK+qVXJUbn
8y9ZmZzcfLRZavYjdW5q3dLeA+/F4qPv66OMObLr6FGLy+y5cy2XGe873h+e
cps1VuQSz8/KMk926o/xCNu8aKGMfPQRyX7hOTlX/XX5fa23jPvtufV5/9Gg
rtyYOlnWKv+Xl839raVz7VqeQfPm0lJZDwbtpWtoYft28m/6Hr5tpOe8SUN7
HzkTJ8g4XSPU0NN3G3899if25ObavdU854YNk+HKn95+ZGeUU729zPFV69W2
rSQ99KDMffpJOaBr611dW1/o2vrGs7ZYp/uSBznO5aUnPQKbaHxYQ9azXq+3
KZ06ynt6Xr/RafHReXbqFKvdx18PH8It27d/77k2Kb/T7528/UwPn3v7/n2o
MeL67NWhg+2TpA4cKNEPPiDjH39MNrz4vBRUe11+q2vr61Jr63K3zgGPB35x
k94b6zijJxZFf+lonvu1AZ2c5jB3uOP2EZsf9i/K1e/7jM/LyejUnCfm9/7m
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
37+hY8fK9PnzZfHatcbp9ICv16iRNH7pJWn5z/+nREcf8/RTMjkhXhavWWN6
O/USsO0ljdm2nTsd5/MO+p7wuO+vjB7buJEMqlHd9OwVysp7XnlJTr1x6xo7
rI+ryKs4elQOnz1rcaG+vDSfJ+m6+k6/9wkT7NpjzwMtff7ixVL/1VfNVx9G
f6dhA2mhser4k5/IAF1b7A2Mb9lCps2cad6M5HcU6Hc5ag126jot1NgFMjaf
3fxMZn0wzek8928Ti6JuOsjo1yM+iPjfTvOZO37cI+Z0yNzvsnlgGf37vdQC
y+ip+dFSUJh3VzYPRi09mBjd1dKDi9FdLT24GN3V0oOL0Zl4PacvXGgaJX7i
6JjHzpyWBcpaM555ynyyVz7/rLHEvDatLZcd5qT/WoYydTflBHqP4RVNfjs+
1fQjI0d5iPJozwb1pYtyQUyP0BLvuBP6Ovilkb9L7THe02uV13if9+rd5gSj
c2+bNnu2rN2+3ZiJPOsC/YxemTZSJisXksu9UmOTqXNBp47GSROUQfGRow83
jA43kiOAJzl9usk/RiP+Tl9z5aV2NWpIu5/+RMJefEGGKr/DpSUeaXptUavN
zL1wwb4nVAVGZw3N8rxHeqHBxuy9bF64QCbq+5inMSI25FbP6dVT+kRHS/KI
EcboxIpcd+rRYct169dLQmKi1G3YUNooo7OPQb3+yIkTrZc5M0nXGv/f5NVX
pPXPfybdH/ilRGus+T8YHg3Z6gn0WmRtkT/vJKPj4z8oIcEY2vZa9NzBw4cO
HJCZzZpK+lNPmKbNNTY1pJvlrC/NzpZ1nrgs1jVTWteG1Rs2bSr1S/V7Txo2
TEZNnmz7ZOOmT5eBYWFSu1YtixP5CO3r1ZNWGidy3Xu//bb563M89FnAH8Hy
6fU8Eq+9x47ZdRjIGP3ms49l1I2hTjO60z3XZjrNZ+748Y7o/JC6Mae7f3Zn
Pvc/p9+9l1qAOD2vr+y9uvO+bO5q6cHJ6K6WHlyM7mrpwcXorpbue0Y/deqU
jFc2zN61y7gBzZE+VjAgWm3m1Cky6OEHTXNLfrOGDFUmpQaYOSQ5WcY2bSyN
mzWzvHZqq8nb7uDpR8aj9TiPjZXe/ftJQmqqMT26O7nx6OZeJuARBj2gzHIv
Pg+0ls41MnzsWONq2BMfdvYSiM91PR+bly+T5Cces/gMaVBfRunP4pfXR7mp
UfPm0lW5ER19xIQJ1hecvH/61+F13rxNm1te59Qlx8XZz61atUqiIiIkpFs3
GaaMD5+jpZ68ds30Te+5gdUr4+XuS04fhR4+d66xHt7jnFeOk72XEwUFkqz8
OfTxx2R4i+bSV9m8WevWlmNBnzpqAMizIC7ktnPv4F7Xp1+/Ev2XfQ5yuQfE
x8tEXXcc5+o1a6Rpy5bSVNdeh7Zt7f+8fubUFrCW8MWnrp3jII++dA13IOcY
jQ/7C0s8fvR5emxFei/jPF7U701ptWpK6qMPS9Trr0kvvV4Shw41L4cpGlP2
MOYqr9/+nOypsc/j7fdOzwX2PWKTkmT79u22dieOGC5tdJ3B8cSxo67Jjq1a
Wey5Fqfpc7NntN+jn3uPiWtxh57LQMfp/CdnJbV4oKOM7mTPNeXzz+KLB9R3
mtPc8eMbSae7/I/o090vRt2Tzf3H6DFnevggr71yjJ51aXG52NzV0t18d1dL
D05Gd7X04GL0H6uWnkStuH5P37h3r+VQe9nqw88+s+/pp65ckUj9bt+mbl1j
Sby1yTvui14ZGyOX9XfS09Mtrx1OQBPG/wwGeEf5vO+AAdbjPI4+TzrRBtEF
0ThhKPYDYE20dHzispSD78fngdTSJysnkWMNW+32sFWhh2Pw1yZeI6KjJKRd
O8sd6KesTY0A98BQjREc3kFZm7jREysmOVlSlc+pi56lcRugsewfGWmvQ19z
tNaioiLz/0LjpN4aDfWgcm6+JweZePG62w4d8jmfl5fR9+i6idX3BF+zx3P4
Ni0W7Tpj2jTzKZugLL5t2zZppEwJo+MDB3fj+R+fkiJ5yoneHugcxw5dJynK
kX31Z4YMGyZbc3LsHHl/hs8v9nN66ZoL058hD2HBqlXm+Y4mjIbOHhO908l5
2LtvX8CZ89ixY3a9kIPu3Wvx9tTz5kKs138PCwmxHvL0p2NPh98h/4S9D67T
Oz03eeiTNKbhyvQRyuZLda3wuVP6Z7hXnNNYzMnIkMysLOvzhm8c+xn0T2dd
kzfDtU+9O8dFzDZq7J3Yy9jy8UZna9GvJzqd535+zK96/3enec0dP64Rdbr7
ZNjcOwPN6Alnwv8xMM8fbF42Rp98bqQUFhdWiM+DjdFdLT24GN3V0oOL0V0t
PbgYvapq6XyuoLmRl04dKszs7dONRsx3dXKVl2Zmys6dO2XFihWSqX/O1Efu
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
30T2bEo7c+aMqBuHrgDWDLCuAn16nDN4nEG7IE26fizRH9RyQa8QunTIM4AG
PmpusI6BdQPZdw2eCU3dR/bHR1WLofs99FLPE/2Ri73afGjd1NskP7WHjefz
5jO6e8Xinw2yuZlj6UKv/c3bgpHVYHTsNzg4uN7n+GXLlokc2paoHYe89EPb
oyl9xVS6bN+Tqhb3otvM5Q+W9RVc/sEqTZz8M7eB9JXHQPqWufwHicl/Xa3h
cXD4M79h9Nx/GFEAt7XDa9o6ReP/Pw8YTs/4dff9p1NOfARdq6xo8Yz+r5rv
jtfmnODvy7Sl5HC1Oy2515GWvsVc/mEXcv6Uufwr5vLvupPnTz3I+1cNl/v+
2ZPWPAOT17D4OmZxtEDqS0HcghVtvc7/8Zq1Pwyi8GJ3Kjpb2GJj6XI8HbHy
+q7tdfwsjP21NEa3xtJbD6Pj+J34OwL8KdfGIo8bDIPndXAn9KoxHxvD5+aO
paPmGbyDfNjAsDCKZd5Bn8GFyI2Fv9Xde/eM1oKvj8/zCwqElhX4E3XM0KhG
3H437wdjBM247bw/fe+1ZCwd3xXgZGjgrfTwoOCICFFzjfGApznyqrHOYojv
m8rn6M/ylSvFvsGf3nxfAu/Bgw05Gdh/7K5dYv6ags8by+iIX4D95jCLQv8O
axfbk5PFWhTGBfMdY6frw2bKhnxy6MFjzoI/4asOz7oEybMO8esDqakW43Oc
75nMwuOY0TGvUb+xiec1ztleyUMP+SeW6g+uQfQHunTQp4MmBrTrkGsA7z9x
nXHfmpNv/82TbyjqnVDVGN3ngdvPqvD5A5dHvh/7/t9qc6J1U2dzLVP6qVmO
0d0q7H9gpn7WIJ+bidFL7pwUjCw3czB6fZyOmHh9z+8ODg5UXl7e4nzYjufl
UPLqpVRk25tKbXtQ5aKeVL2kN91f2oceL+9L763qp42Xf+k+kL5hLv/eC1w+
WMPliI/7DRWsrWVyweEjiAK5BaGNJArW0/D7IM3rfgkYSadCnOlUQW6L5/TW
FEuvj8urb1VTdOoGciwYQvZVHcjhTkdyetSJlr/fhVb9syu5fNGN3L7tRh5P
pHj5bz1p9R/M5U+VXC4zeR8tk6+nfrRBahtF608hetpG6TV4T9Dd6ZRSsEPM
25bI6LhOXfg5pb5rfDc/b1u141omo7eWfPeSkhIN182fL3TOPfz8hDcUuDeA
f+7WyW1H/lEyc0UKMwXyTQ9nZYk4vKk5Hdqmu/mZ/ABzVPqxY5TO+4J+Gf6G
e+JCOzvhoWbPTIi1BWhdoc+o8T3KfWqMV1tDnB7JTCe8pJjxEJ9GDu7akBDh
z+a/fr2Yl/A1282sfpDZJp33X3jihDh+czE65m06c8tuPhepPDYZ2dkUl5BA
YyZOFD5fi5kDEfNHLDJw82YK5J/4/m0oT74pjA6PufGTJ2vi6IsWCT09n8BA
4ZmFvHKwVRqPCebKY54/luL0K1eu0B4+J8iXBgNvYxYHo4vzx/ME8+UwM7oh
r3RTtvU8P2VGlz3rwOkYn5DISDHPLMXDaNByw7oFctzBwYjnIw8FPBwSESG+
gyzZn5PFxUL/fpTkU4e6G5wrXNe4zo5IuvHNabe+qlaNzwMe+zxTyxPd86Gr
r9qcaN0svy27svBvruU2H7uWN4fPm8bpnhVLfjOKzc2Q77775rZabG5uTtfl
68rKSpG3Xt+ze1FRUYvyYSvMOUbJznPp1PxudN6mO12176GImdfksteKmUt5
7D+LHPahEpsPo6fM5c9lLtdl8vVoo4g2KNpGRZN/h9fg9fz+G2vn0oljR1o0
o7fmWDq4PHT/GrI93ZVsK9rTopsdaMn9TtqYuTaXXcTMuyti5szlz2py2A1x
ObhbZvBN3EJFG6BtYVKT/79Jei3eG/jNMEooCBNztKVx+o0bN2j27NkGr/E5
c+bQrVu3WqzGe2ti9L9yLB3zbBmzOXLd4Q+OOKiLpydl5+TUYm3wTtzu3SKX
XNZkg54UPKuQX20qRk9NTxexReRHK/dzkfsJLXm8BvdZb+Zy+KUh/g+NMlfu
c66Ree2NZfQ9zHYYHzTEHKHFtoHZCmsTEVu2iBgf8qWrJO049PkIMxDOlalj
6Tj20KgowVSoW9bukxvqdu0dHIQvGM4ldLrhCYb3GKs11xRGR/0cdLzBn7MW
LhQMijg+YrLw7YJGHM5hBT8jwe/b3Iwez0yO3A9on6EWXt4/6uHB59C6P8Vz
1tD7zcHoyPsYN3myWFeS13q27NwpNOryuS+4Fi3Fw7jnBzD77ti7l7JLSoSe
/W3+rsYY5fCzoyX7gvwC+CUiN2XxsmVijQk+dfC1g557XjPy2nVbxkepqjH6
mkeev6lUh/5P17uuf1ebF62bZTfm5O2CzeVmIUYXmnCNZXMTxdKDqzzo1v1q
g3xuiVg6crbqY/OgoCBVvdKVnF7Kz1iJrjZ0fF5XKlnQjS4ym5fZ96TrDr3o
jpOhfPaaGvNfpFz2P/yG0lP/YfQsYLjE5nK8XMHltXh8NFGI1DbpafLfNmpY
/Tl/xoUNTlR64fxfjtHNxenob+yhUFp4ogvZXG5HdpUdaHF1R3J8sxMte9tA
PvtvPWi1ks2f1+Syy2yO3HX9XF7D4ptFG0jhetpm0WRm17w/+MNxlHZ8b4tj
dGi313etx8bGmoTPW1ssvTUxemuJpYOxbt68KZgT80HJ2Phb4KZNgv+gr1XN
1ze8rd9nNsPPS/wevKa5jI449MbISEplzj7LXCf2w+/HfuD7do73De8q+fX4
voWOFRrmRXPYvCFOhz6EvC/kEeB3cfHxQjMdnuPQ+4KXGPqJ/sIb6mhOjsnz
3YM2bhQxz0zJR63WPnleZDC334VXHjfc25vipd7UfHeMC/L2oJmOOgPUNAtP
M4UnHdZcMJamYnRdTscajvfatRSXnCxqvC9Lnmra/fOcuX//foPxd1PzeXJK
iugXzp2Y3zyXsa4i+9Bl8xyyFBN7rVkjYveoe0ANPjQh1egLviOx1oUcD9So
oM4cngzQXYQHQDU/Q5jSG/7LH76gsLfXq5fnrpJWnM9Dly1q86J1s9zmcnlR
R9cy269q8blJOL2ZmnBmZvSTdwrqZXNzMzraImie1PPMDt/XxmrAm5rPMQbJ
UZvoyNweVMRsfgZsblvD5vXFzb9TxM3B5k+ZzTU15nJtuS6by1yuy+RjiEIV
LUzRlL/Ha/Fe/oyfg8ZQbux60f+WyumtgdGPnyogx0Ojaf65N8jmSnuyu8Zs
fkvD5ktlNlfGzX/sLtjc509m86f62Fx/zFwfl8scHqFokaINklrN78MlVsdn
CNYvt6Er5aUthtGrmFHqu9ahJddcrThrLL31Mrq5tON0+Xo7M0UQP0ODz6GX
Du1r8CeYB3x+k+9Lh9LTm12X7uPvTyFbtgh+Efvhe6jsgfwOMyg8vQ/yfhry
YDMXoysbcoPgEw0+h3cXeAueWY/4nGBc4NmM9QQct6nq0qGXvlLyC8OaANYw
bkr7xBjhXCDPoDHxclNz+h7mYuRvg8+h1QddcKyzYDze5eOHX9YxE+nF6WN0
Hz8/oRWwNSmJjhYVCb837f55jDCfsH9ja9hNweYYlyXLl5NnQIDIs4dGnexR
/5jnB+ZLFT834VnM3EyM9QvoK0KrLl7yxINOOvqCtTCMEfryFs8hc/cljuex
si8iln/rllhzwlzGulMOzyFT7vPalxWq8bnfI68/VIqhf+V137m92txo3Syz
uZbbHdHL5maOpRulCWemfPeEm1FGsbk5Of306dMNPq9jbbgpPm2mYvPz0LR1
mEi5szpT0dyauLmc0y702Zf2obdW1K03l3XgfvbR6LILDTh9bF4nZq6HywWL
j9W0zfU0/F1w+hjNZzDvP1o3g04V5LVYRm+pnI6ciU17/WjOifYaNr/cXhs3
l3Pal3+gp978V4nNn/ekNVQ3pz1YT9xcyebKeHkNk2t4PKqBhtfIrI7P2/jr
IIov2GRyrfemMvrKlSvrveZRQ2xKPrfG0v/a+e76OH0Vc6hvUJCIt+WdOye8
icGiiEsiPxd+Y8kHDzZbOw75rYjrQVus4Px5EftEbrKcMw7v6gOZmUZ7pZuT
0VFnhrx6ZX9Lpf5iXJAvDJ8q5O+aSjsOPmrQCYDOGfTNoM9+5c4dwZ8YI+wX
/0etvin4vCmMHhkdLfq4QepjodxHaVwwPof496bmc5nRbZcsoRXu7hS2davQ
AIf+N3zUwJ8YI7DfkcLCRunMNZfPodMLH7rlfB2hX6hNkPuFc4dxgTcg1mPN
zcRh4eG0cPFiodsQFR9Ph3JyRMwa17A8Rljzuc3nzNx92bBxo6gXQa051pwO
6vQF41LI14+p93vgw72qMfrqh+4/qcPorqlqc6N1M//mUm4/tF42NyOjG60J
Z2JGD6hyoRv3qxrN56Zm9OTk5Hqf1VfzPbepPurNZXS8f+/WSDo0szvlMJsf
n9uFTs/vRheYza/Y9aBrizVacPeYzR8t70vvruwn/Mz/6TqAPpe805RacPBI
ewp9dq0OXANxc7C5MlauZPBwtHGaFiG1cEXTsrrE6fyZvwWNptxdMSbzZPtX
Z/RzF87S4r2jaHZRW5p39g1aWNqO7OR683uSFtx7nWnlR13I5fOu5PYNs/kP
3cnz5x7k/XsP4Z0mfNO0fmm1683rY3NlzFyXy6O1bTBtUbRobavN6ZvlGvWr
dnTnzm3VGT0yMrLeax5akabm89bG6NZYunkZ3WnFClrGbAEfNrBFPrMoYrfg
UbD6ycuXKd4EPmzwiUbNKTS9EENHDTryxsExaGfgbX7ggNFe6ebkdPA5dPXA
FlEJCSK3AJ50iBdjXQHx0dwzZ4Sflan03YPXrxdjhDxpeFAhbg8PM8Q/wTTI
C4bv2+mSEpPxeWM5fXNEhKh99/T3F15i4jwyo6MOHPMF47MvNVW81hyMPmfB
ArFugpgsctyRZ4D5KY8R+nBARxfO3Ix+nY95quTxvTooSHvu4K2GNRzMF2gJ
YF3F3Ey8KTRU6KQjbg2dPMStkecALsa1jDGylP95YHCwVg8OupTwRsD5whzG
9YNzlWnC+nO5ffb9p7ThrXWq8Ln/I+9nqvD5A5fvfN5cNVBtfrRuZtzo3/4P
t3LbM0bxuYnz3T0qHH41KZs3gtFzbmc2ic1Nzemb+H5a37M6nuWbw+dN5XQc
X5z3csqY1pGyZ3amwjldqHheVzq7sJvQaa9Y1JNuLKmv5lwTOzeY167UgqvF
5qP0sLkeLo9QtEidVovXpfeFSrF03kfJplUtOt+9JWjHZeam0eyMTjT7RFua
W/IGLbjYjmzL2mt02m93JMcHnWjZO3r04JDXLnmba/PaFf5pdbXgajTg9MXN
63J5bSaPMdBkXpc5HZ+Hz9/w4Tg6c/GUqnXp+/j5qSGvNbzOHIze2jjdGks3
D6dHREWJ+B/yhhHnQrz4EHMX6nvhAY44ZQIzNVgUNeSYN3iffJwNMbrc9wXM
dWAr6DYjPxmfixpmrAcgbp/Oz+qx8fGN8ks3F6Oj/3N5TKBZDr1y5HPDnwqa
ZPCRR65uSmamGAO8Hv2CV93xEyfEPUD+TJm95b4bYnO8PovHA9pv8OkCW4E/
sS6AHGXE77EeAO8wY7TazcXo6bz/idOm1fL7Rhwd9fIZBQV0hH8mpaSIMZDf
A67GTzx7QMsb97P6+B19kb3mlL/He6DtD/6E/x5qMqBRhxgx5irGCGMFrf3G
8nlzOR39ks+d7PGNtS7MFTTM9XyeO1fLysTrdZkSv8P3MrQYoRGBvhjDonid
PD74f1pamtCpw/WMWgnkOUCPMTUvT/iNY4zS+N+YQ+bm8xQ+D8L7nBkdennQ
1MecxligBgD1Cbv4/1hvOsvXv3wMpmjnPzurWgzd96H7r2owutdD13NgOLUx
0rqZZ3O9aje3UWxuoli65Kf23Cx83gCnR1wPFDnjzeVzUzC6j49Pvc/q0Jk1
BZ83htGh/7vVaSalTe1IWTM7Ud7sznRCymu/oJPXLvuoIXb+D+f+9InrAPpC
ETv/URE7h7c56Yudy3ntMpuH6OS0G2JzwePja1qUoonfKVldkffO+7kebENV
1ypbtMa7WrH0+IMxNP1IW5pV2Ibmnmor8toXXtbEzmvltb/fhVZ+XDt27oXY
OXzU6vibNy52rhs312VzmcNjRRtSp+njdDmWvvHHoZR1Mk01RoeeRH3XPPLf
la//qzO6NZZuekbHfcBuxgyKnTiBzk2fSjfmz6UK39V0mVkBeblgaMRJoWGO
GByerfemp4s42PELFzT+aFVVWi5H7Uj+wYOUl7iLDgcHUVFCPJ2rrBTxX/AT
csZ91q0TucDwqIbvE+J8iN/jWd1Yr3Rzc3oSMxa815Cj6+vqQqkLF9BlHpsH
jg70YFMIVfNYnLpyhVK4/9v5OKDFhfpaaKRlHT8u/BdQD7xT0jI7XVFBR/Lz
6RT/G+cRDIo5kpaURGk83qUR4VSZeoguXrsm9LTgYYYxQdwRYwS2id62rV6v
dHMzOurybezttZ7oiKOvj4ykaGblrKVOVMVj867zSqoOXEf5zM2YX5d5nmxN
SBAeX6jjL+dnpYKzZ8WzhZK/8bwBb+69GRkiPzyPx+kIfwbGCLX5sdu30yGe
SyVRkXRtexzlb9pEkTExYk0JnI4xitm1S3xOU/m8qYwOLh4xZoxgdMSuMb+h
tYA5jrl9hNuJFcvp5vKldJnH6RSf8y8+1+ioI1cjhs8z1jlwTeE6OXnpEp1l
ljbEn7jOEnnObec5iuuzmN93lOdWAn8uxiKbr7NT/P+TPKeyvDwpZ20A7eG/
gdW38bkwN5ujYa7MnjePRo4bJ7wR4PcG37kwHpcIZnWR856dLe4rZwsLqYDn
Td6ypXRm5Qoq5r99ztdIU/f95McnFP/eVnUY/bHPc7X81nweuc5QmyOtm+m3
hdkL/y+3ctvbTeLzZjK6V6XD72ZlcwOMvvracrp876JJ2NwUjL506dJ6n9UP
8jOPqfjcGE4v5/tmrP0EOjilAx2Z3knktRuKnd9VxM6hCfeRywBN3bmH4brz
53Ldud7YuU5ee5gidl6HzfUwuaGG18nxdDmWzvt6N3C6yfTd/1Vi6RF71tO0
w6/TzLw2mrz2M5rYuc3V9lqPc93YuQti5992J48fFXXnzzS57frrzg3HznXr
zQ2xuS6Xb9Vp+jm9JpYe8scASi7YanJGN4bTG9KcgNei7ntaUyy9NTH6XzWW
XsV8kDF6JD0ePIB+GjWcno8bLdp382ZTCj/roy4d3IDcZbAiYsjIkUXN8QMe
swfgJ2YK+IKfZ74+wIx/b2A/+nbEUPpzzEj6g9vnq1YIf2xoVMEzLIl5bpmr
q4jZ45l9dWCgiLc1xqvNEowewey5cPgwSu/ele7yMX0/Yhg9GztKjM9Ps6Yz
VxSIfH3ESC/J2ld8jNAr28W8CFZCDgKYC7X80C+D3vlh5hLce5NsFlJ53970
ybDB9NvoEWK8vlvqSI9v3xa8jzpir7VraQ2PkT83XKfKuLs5GL0hTkc+t42d
nYijIx9/jaMjHezZna7370NfDh9CT/kYMD4/zp9DyUmJFMwsBo865FhjvQdz
BtpgqEFGPBlsfuHCBdrAYw1GxevglYZaaYxXCb9mMzPdzpkz6FSv7vTO4IH0
48hhYqy+mDmdwlxcBA9jjPbxmDeHzZvD6WE8p8dOnCh86FADDq/4jdHRFOvl
RQf69KKr0nn+g88zxueBrQ1d5Lmxmvu+VeJseQ5BVw7HXsjzSpc9cc1u4H1h
3uFahMcd9CIwrqjpPnHxIh1wcaZjPGdvDehLX/E5wTX444SxtIc5/bNmcG9j
G55Z5i5YQKPHjxdx9EU2NuQ1dSr5BASI3AtcN4c2h9GeLp3ofO+e9MGQgfSr
dA96a8E8eovnS1P3/fibR7T20WpVGN3vkdfv6sTQXW4433T+P9XmSetm2s2t
zHZlk9m8GZzuVm73o3eFI2maZRk95eZOk7J5czm9Ie32jIwMk/O5IUYvLy+j
mHnDaP/k9iKv/djMTpQ/u4tWE07Unduj7rxXrbrzd5R15wo/NcTOZT+1P/0U
unDa3HZDdef6Yud64uZKBo+W2wRFk36n5XTp/XJdOu/rw6BpVHbl8l+S0XU5
ff2u1TQ5/TWanv06zTretk7sXFt3/rim7tz5s67k+jXz+fcKPzWhC4e6czm3
vY/e3Pb6Y+e1+dwQm+ty+TYDrK5k9CiJ0Tc9H0ApBTsszujnz5+v95pHQxxC
33tbC6Nb891bbiwd95PoIYPEs/HHQwfRn8zpNIHvhxPH0T1mn3XMVsjTRYwL
WuaCNyXPJnhyQ5sa3l/gCdQg75gxnS4yi3zEnwUOofH8WcwF+PmF0xKtZ1sl
82fWHI2Pt4ePDx3lfTTWS90S+e44b6G9e9Nx5s+3Bw+gX5gdiNkB4/Pl5Ank
xX3fxmwlvL7u3NF6fSGXOFDiUqxtVEpcCg8wNLwuyduLspmh3hzYn35g3gST
iLHi9oPNAnqTr/vN27bR0lWrKDomRlxHhvLjLc3ouP5S09LIhnlrQ/t2lNWt
C90Z2I++GzGUno8dpT2OgGXLBHfv4/NbfPUqVT1+LHziMAbQEj/FY4Nca1ce
x3A+VuRhl1RWCv+tRzw/3+N9YTxPZh+jfZ07ahh36GDB5vLc+opbyNq1QqfN
VGzeVEZHXXcMXye2s2eL9adA7tf6zp3oEPPntX596DPmc6xfyOMTY28n6ieQ
RyL4vLq6lqfeDejj8DWq5E543qPOXdaKx1qZ0GeXPBHv83187+hRVMRz9uGg
AfREMbe+nzqJHlhAG07ZcA0dSk2lAB4Lp25dyc7Wljz8/Ch6507ayWO1rm0b
Su7UgS7xfeNDvhf9Jt83+Bq77OXRrLz37I+Pqpbn7vPQ7UdVatEfOTupzZPW
zXTb0ktL/53Z+qFJ+LyRjO5VseRpDZ9bjtMDqzyo+t5Nkdtuqvz25jI6vuvq
e04/cuSIeJ25Gb2yooKi5gyj5Int6dDUDpQpxc4L5nShk1Ls/JJtDypfVOOn
ptRsbyi33aAunG5uey29dj2xc1021+XyLTpNyeq1Yuk1jP4gaLZJc91bY777
hp2+NOngqzTtiCJ2jrrzCzWx88W3FX5qSs32WrntPZqR21637lwZO6/Jaa/L
5tsMtNqcXhNLj1LE0TOO77MooyP3syE+h4ahofdbY+nWfPfmcHpeZiZtafcG
nWE+f2/IQPpZil3h+TjW1kbUQe/l16DBPwq5uqiDBovKsWLh/cU/4Zd22MmR
Svk5+x9DFc/ZgkXG0C/8/7eYW8FdiKFfDA6iCma2xnioWzqWnsVcsYn5Ib9H
N7rPHA3+RPwcx1U6Yxo5e3vTFuYM4TWGOCaPATgcYyVrv0M/DbpcYPK3ua8Y
L+QcFB/JpFzm83v8ud/Knytx21P+9+OMdMrnsa6vbl3tWLrT1CkU+PprlN61
s4iffzZsiJad3500gRyWLxfjsDs9XdQ+y3kEyC/Amg7ivqHMmys8PMT6D2qT
ET+vQPycr22wOdot/l5KnzCeLveV5pa8TiLWfkbTyfXBdbzS1WJ0NGdHR5Hn
7jprJvm99qqWP9/na0y7xsNjtGyRvUZrPSFBaMoJHbnHj+lNPnbwNn5m5+Vp
eRPPE4uWLRN5J4ifo+YfXoVY98C8e1fyRCyK20YFPGeR8/GNzty65O1lUT6X
G+bxog7txZoctO6R/+83exatfvUV2t6hHZ3q1YMeDupfs8bD44Pr4DO+Vpq6
z2+efE1hb29QK4b+VKUY+uPQD5b+u9pcad1Ms7mV23qZjM0bwegelfBT02Vz
yzD6idt5WjY3J6M3htPhn2YMn5uL0dGgcRNuN4kSJ7Sj/ZM7UPq0jnR0Rifh
pwbN9lPzu9F5m+502U6/Lpwmt13jqQY+/0bKbf/JZwj96mug9jxIx1NNVxdO
N7fdUOxcZnNdLtfL6YYZ/UawxseupTO6OTh9x/4Ymrj3VZqS8RpNP/Y6zSpo
Q3NOSprtl9qRbXl7WnSjAznc7UhOD+vmtrshtx2eapIunODzpxq/c2Vue1CD
nmr6+bxuzXltPq/h8aEGWt1YOphfm+v+0xA6fibPLIyuj9ON4XNcl/XF4FsT
o1tj6S2L0ffHx9OGNq9TDnNi9YC+Iv8WjP7H6JEUPm+uqC9GTntweLhg0Rgp
pxZMgDrrO8zo4CiwJ+qKDzku0T5nfyPlt+NZG3yAGPGtjRuE5xT4/vTmMCo1
st5cLU4/cvCg4KuDXTqJ2C34CseB3IDo6dO0fmhYvwB/Iv4JVgJDIS6KfAPE
OKGHj9xujBPGC/HO08ztGcxsFf36CObEuIvceW5Y27jv6U75Z8+Kev7G6MBb
ktEXDxtGnq+8TLs6tqczvTXn/evhQ5mfR1DFhHFCXw+x0tikJEpnlkQeBrT6
4fGFeQBeR30DdNWQb5CYmipyDxATvv7WW6IWAHnuWM85zFx5smd3kW8gcraR
J85jhXj05cX2dbzS1eT02RMnCg5dPHw4ub78EkW3ayt4udY1NmYELZo/n5as
WkXBERGUJB078lCQb4HxwXFn5eZqeRNxaMG37u60KSZGaBbmKzwRkdMCr8Jz
PG+wZlLGc/aDIYNEPYA8tx7OnqEKnz/g+8O0Ll1o2pw5QicSOQAOvXrRqpde
pJC2r9Nh7m+5zjWGcTrDz73N2W/FF2WqxdBXP3T/WQ1G93zg4qo2V1q35m/+
d5f8d+bzd0zO50Ywunel4zPDfG4+Rt96PbQOm7cERm8Mn5uD0/F5ESttKX7s
GyJ2jrpz5LbLunBFOrpw2tx2pz70UI9uu7L2vBaf+/N3BfP5c4N8Xl/tuU7d
eWPZvCFGlzTjzoWsELkEpmT0lh5LP5ydRuMTXxOx86lHXqcZOW1EbvscZW57
pZzb3qnGU+0fXcj5067k+lWNbruoPYdu+5/6a8+DatWe1/B5Q7Xn+nLbDbF5
nJ7WEKNjXWDj1yPoctklk3uk62N0U/C5Nd/dGktvKqPv3bFD8EMC8xXYB/zw
7uCBItc9YMpkwU3ITwanIx64njkC2mXI5wajg7PB5WAuxP7iFi4QXHCFn7Pf
GjyAvmCOQs024sOIz1/wWyPYq/DCBcrw96OLJuZzUzN65oEDtJz5IYr5CmsY
YOnHgwaI/P1dY0bTXEWu7oHsbFFrjnGQGSosNlawO3IOoI0GHsV4wVsKLBbf
swedkMYdjI41DYzXp8xwl1cso4NZWU3yarNULH3OyJG05MW/0/o2r1Nql06i
tgF5BshTLuLjmDZ7tpa9oU0GjThov2EskG8Az7rlLi40z96e3NesEZ7dsscf
9A4wrzBe+HfiqpW8j84iP+MRn4PPeYwwVlgPKLaz0euXrhaj+/C5n8z37ln9
+9GiF/5Oa157hXZ36kDF0rnGtYBrbPbUqWKuwHcQWoDwBMC1hXUMcDrmUoaC
T+MTErR868t8i3WPQ5LHHbwKkaeBlpeXJ2LShT260Y3+fQWjy3Pr2vRpqvA5
6kVmdepIYyZOFHpxTs7OZDd0CNn9/W/k8crLtK19O5FPUtFPc+/ANfYO/7x1
vfm+8bvf36kKn6vot/au/13//642X1q35m2u5TZrzcLmDXC6R8XiX+tnc/Nw
um/lCiq7e9kgn6uZ794UPjclo+/YFERbR7elxPHtKGVSe0qd2oEOT0fteWdN
7fm8rnSG+fyibXcqs+9JVQ4a3XZl7fkHzgZ81RTacE8lPm9a/LyRfB6jp+ly
upLRZc047kf+lnUm5/OWGku/fKWUJm5rTxP2vkKT016jaUeZz5HbDk+102/Q
/PPtyOZKe7K71oEW3+pIjrJu+3tdamrPZT7/qTt5a7XhetEaMsTndePnhjzP
9fO54di5Pjavzek1Oe/4DKVmHPa//u1Jwh/dXIwuc7op+by1xdJbE6P/q8bS
EdOyfaOtyDHdyYwOBj3bu6dgINSlT2cWgE/TKm6yH/jmrVtFvjJYC7E7+Jjj
J2qHA6ZMESx7pFsXutCnp2CR+4P60x3mqQvMtpmhm4QXF94fw7yFcTU1n5uC
04WvJH/f7k5JoXhmyyjmiRjmHcT4kB+AXOWjfDzj+XhtlywR+nZgS6xdQOt+
0owZQjvNKyBA/B6MDi0sxNgxXmDzbZGR5P/6q7SHuQ2MDi5BPvJ9HquKAf0o
w9uLdiQmNonPzc3omLtZ2dnCm287n9MtTo4U2a0rHejcSRwLOP0ctzHQ7p43
T6xVIEYMDfp9R4+KWDr89FAvscbfX7AsfLJlzza8BvXYWMcpZPZE/cBqZt1I
nluZXbsIvYSbzJ1YC6jm8coI8BP8ZwlGN4bTi3iOg7uDN26k2I0bKG61D21i
Vk7ic53H1xj6jzk0e+QImjBtGtnwHIIOIBgdeozwjINXOMahorJSy5lVVVXC
U0DmW9QOoHYdOujgeowV5thW3u9anltJHTvQcd4v4uiYW/d4rI7ZLBDnEcdh
aUaP4HM9is/j6AkTxHpfcFAQRQUF0jZfX9o8aiTF8TWGe0cJX2O4Bx2ZOkXM
t+bu9x/ffUjBb/mrwujq+a05r1abL61b07fVl+b8f65ltv8wO5/rMLpbhd0P
XhVLnhvP56Zj9LSbKQ2yuVqx9KbyuSk4veh4IUWMbk87xr5Bu0Vue3vhqQbd
dnie11d7fl/i83dlPndV8LlXje/5b9CGk/j8eXP53Jjc9lpcPlFq+hh9fF3N
OOyb+1SQfuBfntFR37wociKNS3yZJu6vyW2fma+pPZ9rqPZc4atWRxtO5vNa
2nCGtNtNyeeGY+f1xdJjFZpxEZI/ekjpYsHn5mR0U/O5NZbe+hhd7Vj6rpgY
mv/C38ntlZdEniniWMhXjuU2afQoobuMPG74Ks+xtRWMjpg6Yne7mCXA2vC2
AlvYdO9GK196kUL5c8Cd6SOHUyqzAlgL8VLEjcGn0dHRVJyfV8crvSUw+kVm
nC0JCcILDv1FnjHyrM+fPUtbRgyj2PZviLWM7V0608KpU8W4QK8bdcTgJcTM
MV5gd3AXcg+Qiww2RQ4zGB41Ay4LFojYIfLn43jMDzG3HVi2lDKYt07wGF2s
rqYTzKc5zLHG1qBbgtOvXbtGoVu2iFpxuV4aefvX7tyhrcxTyOVGPsYO5uhg
nisjx44VjA5/LaxjoB4AcwXeYyn79wuftXHMnNA9R6wdec/QxUNtAMYKOe+b
wsJo3ssvkQu3sDc0emIZw4fRfmZfeK4jlwPjdTQ3lx5xf9SMpd+9e5c28/xO
4GsCWorImbj9/vt0k+/jB/39KJzHJ75De4pnRk9JTBTa5vCrwxxy8fYWmg+Y
QxijbfHxdVhzGY8R3oP1MvjA+/P1FcmvQ34CrkX8dBw+nBz4mvbnuYU4+qGe
3enQIns6kLJX8DtyWArOnKELPM8syeeYx658D1nCxxDN1xjq55FLIWoZeA7l
7EygsE4dRZ8Thgymu7dumWzfJz89rlYMXRW/Ne+HLh94veP1/6rNmdataZtL
mW2IRdhch9E9Kxx+axybm4bRN1zzodv3bhvN55aOpTeXz5vK6Pg+2TBrOMWO
bkMJ496gPRPb0QGp9vzIjBpftVPzu9K5hd2p1K6uNpzsey5rtxvi8z+0fD7c
/PHzOmyuw+gxE/TkuteuRf84cDJV37xpFkZvKfnuUUmhNHr7SzR+zyua3PbD
Gt12mc9lXzXbMubz6x3I4bbGV02rDfdxV+F7rpfPn/YS+nC69efBJqg/15/f
bhybK+PourruWk137k9q4R4to5uD083F59ZYuuXz3eGvgZqYlsToxnL6CWZA
r9mzaGnbNuTZqyd5DhtKCyeMpznQLGU+BztNnT1bxL1mMVeCP5GP7L9hg2BS
P/65d98+OlVURLbMZY4vvkC+fXpTDHOW0jfqEfcH7QqzXCnPfZnPzcnpjWFz
sOLakBCh6yb8wCS9cWi6vcN/L60oJ+++fWhVt660bP48ER9F/Bd8NZvHCnXn
0L5y8fKiqTxmYHTkbkPLG/HRAP5s+JpvZka9wOxm368v2TKjuzFHBa1cIWKn
iIGW8TMC6oiho4b6a/iAIz6sNqPjWvWStMlQV496e+i9QW8cmuzg0CCeI0Fz
59Bp/jvGNJZZEzFf5GUvdHAQcV9w6O7kZG2efMLOnRr/cB4zrGkgXwOcDlZd
x2O2asVymtCmDc39r/8U9Qa+I4YLH23EjbFGgJr/N/nahPbgmbIyoQmvRiwd
c9hv3TrhCY+cCVm7H15pmEPQxIvlY9m8xIHu37sn3pPPjDp1xgzhV4d6CcSV
kW8QwYz/qR5tNKyPTOT5BkbHugfmHNaG/NavF9ei46qVNKVzZ5rxn/9Bi5nR
Pdq3owAeT3i4yXrvWHPCvMYcKz592qKMHhoeLnLzoT+fxf25yM9XsmY9xiiN
xy7U3o6quZ+m3O93T76lyHdCVWH0NY88f1Mjhu7zyDVQbc60bo3fnC/Z/5dr
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
BKr4PEJrLPv4cTEXjWX05nI69gV9/5idO8XcQp498kXAw3E7doj7uCnYvDGM
nsnPjWMmTNDw8Ny5Qi8OeS3wovcPCaHDmZkWY3Mlo69ycaEF9vYUuHmzyH+A
1sOJixcpKy9P+OOZuw8/PPmBtr4brVYM/WcVYuifWbXcW+7mdsUmivm8kWze
fEZnbm44dm6GWPrZ26fqsHlLZnRL8fnxgnwKGPiKqD1X8jn02+GvBv/z/ZN1
4+eSv5rC/7yK+bx6SW+669SHHizrS2+t6EvvrapPw12T4/4rYuhSjjspfdAD
JT5vTAy93jx3A/Xohtg8erz++Dn2uUmjEwe9+Zx9iQb5vDXE0uesH05DQ5nP
IxV8nsR8nvIKTTr0Kk3Rx+eSv5rW/xx8/pj5/N3OtOIfXWjVJ13J5Qvm82+6
kfsPtTXcV0sea37Uq1YNek2Ou3li6LqMrr/VsLkyv13D54PF/uQcd/QvuHyB
UXxuLKM3hs/l9ldn9JYcSz9z5gzNnj1bL6MXFhb+5Rj90qVL5OXjIzhO9swK
ZN7E78HZYINNW7ZQOvMy6mHBnG9Jvk/Q4b4iebyZktHhbwZdKuT1XlbwLnju
BDMCdEDBmTif8nczxrwpbN4YRsc+NkdE0AJpXQB18I4rVogcadR5g1+gUwct
efh0wYsK3mbQujZXXfqVK1coWPIKA5tD4w96dfDCgmZdBj+TYLxwrhuKv5ua
0VFfDq+/SdOn02x+dkL+dlRCgtBgews+f/wa9DOPr7vG8HlTGR1zayOPFeoT
0ng+n6mspOv8vQ3tffif5xYVNbnuvDmMjrUl6Ck48fhAO2CatKayISpKnM/c
48ctzudo2Tk5IucCOoPQeJB93+S1uWtVVWbvw/2v76pVh/5MnRi6a6jaHGrd
6m7C7/yqzaeCzy3I6I2OnZuI0eOvRxpk85aa724pPg/1XEXrBtXm85hRbShu
TFvaOa6Gz9Omavhc9j8/Nb8rnQOf2/agMvuedG1xL7op+Lw383mNhnstjTid
GnRljvszwefDJD7X1XGvL4au1HKvJ8/d2Fi6zOb6+DxcwefoS9AIOhfs2CCf
t9RY+qmSYhq84QUaGlbD50IfLlHjfz7pIPN5BvP5MR3/80s1fL6Y+XzJ/U7k
9KgTLQOff6jHY+1HRQ265LHmR4Z91uQYekgzYuiGGL02p9dtW/Xw+RaJz+Ua
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
z9B3Df704vD5yqWLKJr5PLHWM5IRpz3upoY+6Y0yyuNeluabfdZUjruVE1eJ
9nR9tYCGfl5r6CrL3dYPfVBtet+dz93Ic9eM/v0wx77oD5x09Ic6M26skevu
zOma0U1Od2b1AqOZI5c7s/l4y9uOY8DxwIuPvQXN53qUVEavF1+Gaqcwnw+3
e9wdNPT0p205cS3gcV+p+qxtsnLcOyHH/YDyuCsNHb3QC2joKstd90OP+bPd
556gfe7fWj53yXP/kRn9J2Z0sy+6men+0M7ozvXoZn90Tzm9sDFdcbkrNre0
c6v2HPsHwx+65nNfGB3nB7lg7q7/rnz/g8+tQDD6Iy09NIyO9y2qrsF5oAcb
PstLC6N7wulpI0fa+qEJW92/L/2u/sDsgJ7d0IrXM0ebzymKzzGQ/wyGWr1m
jfhPVmVkUET58sIGqcxPyHzPPXFC+o1Br8deAJjuErxmeXl+Y/TicjqyrNGj
ClnsOF7sJeB4MTfgK/TB2sgs6S7vvbCBXAuZH2b/Xbt2yWcXmBqZKpE1a1Dk
U09S7Ov1aeK0aaJNo6869jGwP4Acc+SZ5+zcGRIdXTP6suXLhZuRN5DNvwPq
6JHjBi7/UK2hvUePynnwtI5dMzqu4Wxm2nXr14v34Dz//ibDY/5GpKVRx0qV
REcfVO4VSuZrGn54ZBViPV/n9XyXrwOsr9M8r/hsDKaWfuTIEfGXo2cZeg8i
MxF7BrfxvcPHhDnK52sAn636OZ7yK87BtWvXZG6yN26kPXv3ymeb+Rj8/7Tp
06lbjx7Ujlk9rG4d6vzE4+J1j+7YgcZMmSLHhXy+s+q4cB1ibR3m6zDUjL7h
47W/CQ095U7cl0Pfj3011Pz6a/9hVl4dNDZXIzG/twfauX85fdjFgXTh9jmf
+LykaelL+fO8sPuyZcuWFYvNMRakT6Uh1Z+meOZz1KCnKg19hKGhaz5Hjrvl
cX+Jlhk57jonroCGHmFp6FKH7tQP/feDDJ87GD0WjF7PynNXtegmo39rZLr/
wIz+oxOj23LdlZZewO9eQEt3w+ruxiSDy53YHN52vD/q47GHAP1/y5I5Dnxe
ErV0rLGasU9QreTHrRr0UU4a+mTL426rQYfHffnz1DpL5bjrnLh9Thr6+XLS
a82moRtZ7oNUP3Sz31q84XMHo0ue+/eK0R/UsPdFd9N3zTkzzpWW7ux5L8jq
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
a+m4/+vE95zN9RqKjrbWEK+fyczq8LF4mgXvL96dOm0aNWvdmjqGhYnnYNSk
SbJngDoK+EPkWuR5u3L1asjZHOMvX/2Fxt8bGXRGH3Y3Mega+tA7cfGh5tlf
08/UqVP/IyE//HZBPg8soyfn9y2onQeY0ddey5Q8Ej1KA6OjTnACf1e40svx
dzNmzJAcTF+y5Tzl85xNG6lvlSfF4x6jNHSd5Q4N3ey3hix3515rWkPPamvP
ctf90PcbWXEFfO6qFv2Wi7w4jxkd/dFTG4hurXPjCtalO9emGz3TjWFp65rb
nYb5uDH219JsDv0ex4C+ajhO+PS3LF/sMZ+HktGbxVSTGnR43EVDlzp0p6y4
SVa/NWS5F9DQjTp0sx+6aOinVb81Fz531KIP/MDoufZZ5cIZHV73H1VmHI/h
D5jR0X+NudieG+e6Lt3Z926yumtmd+RxZy53xebQzuFtl17uRzt6zee+cDrO
LzIi3eVUjOB7Z/TI9lZLf8Tnv87Rk+/BUSeB+oWSwOlYl8dPnJC+S9CDsf6d
GX3t2rUUn5go/nP0Xx7FfHOZmc8bNveE0/Fd3LpdO+oSHi7eWvSdgma/kJl8
IbMTMrRQp2v2M0PG2D1+TdQRb9q+PeB+d/zeh5jlUAOPexz8HTLl0c9qcGys
9DJH/e5x5uLCuL64fI55xDmRXulRUZIxNp55bjbP0SKeqwU8Z8iVR00AMsox
cvk4cb6DpaWjD/u5c+dodVYWDU1NpYFDhlAsH/MI5nP0SPMnmxfF6MgHady8
uewToGYDPcHROxDaMHqPY31tZ/bEfqqr5weS0XHNTWAGhr4/MD5e+HzZihVy
XXvbT724nL5r927J0QOfo888GB292YaNGye9HFCjgLmaz+sM5zjUbK7Hns92
Br8O/V7Kz8GvQ4+/MZWm/keoufbX8pN4KbydazYPHKcn5kd+VyibF4vTC9PO
LznweaAYPRCcju+RhQsXyv2T8z0VPIrwreIz3tuMOU84/WjeEepT+QnxuCPH
PVZp6PasuOeUz93qt6Y19FmGhq7r0Ne1K08bVT/0nUa/NVc+d12LfsMpL64w
RteZcdCo0cMMPPyNaOkNrNw44fQ3pAfbA7Mu3alfutUz3e5//0WNh2MLcruw
vAzreT+PtrLgTDaHhg/tHHsHOE4cf27ORq/4PFTZcV2TWkgNeo34xy0NHXXo
aYaGbmbFTXOjoRtZ7p33lKWuB+391mw+d+c8d6eea7a8OHeM/p3KjPuuupUb
95PKjXtoz3Z3yHenojjdzurOzO78985cPla9Ntgc7we/Pfq1o387jnlUbpTP
fF4Uo+PfoY2PZU5xxeXoib1gwQLhDefnesrn+NwINUs+GoEb8GmBX0LF6Hj8
jp07aQmzyR6Vq43a5bz8fPGtmq/nK4f7wugbN26kDl26CBeAo6KHDhVeSGae
Qv9mMPvqnBzxvUteOR+fzitHTexhvi4Dweh3796ldOYTaNKoi0cWG3y+0KXh
4/YlA764jI5j6s9z1LJtW+oWESH6PXz2mKtJs2bRgbNnpVZYZ25jrrbz8XvL
594yOj6/Fi1ZIvsE0KZRl4C9lD1Hj9IFnjvnPmzBYHS8V/qMGdSkRQth9J59
+tAA5B0MHy6ZhFhP6BOwixndHeMHSkvfzOt5+vz5lLVtm5wzZMPBF7Kb7zd9
4XNfGR3nbQBYnL/XUKePvZ+mrVpRR+V1H5KYKHmRE6ZNk/uWUDO5OT7/6nMa
FxoN/dtgM3rS3bg2oebaX8tP3IXwvUXzuX8ZPTk/6t8e87mftPQ115YWYPPS
xugY0Mrn82elu/rzwYMHF1l/7i2j3+TP4l6Vn6J+VZ+UHHdo6HFKQzd97sOV
zx1ZcVMaOmnoqh86fO7ZrrLiwirb8txPKZ97fu/q9p5r/Wp6zui6P3qSndF1
bhw4Xdelw/P+wDk/ztTTlab+sxq/GNwuY7Q1NM/LY1UO3L9VvbmweZrF5jgO
7B2gj/udQbXpxNE8n/g82Fr64NGRVHXQf1P1WKWhD3Xhc1eM3mAq8/kM1KE/
66ihm/3Qjaw4dz53h1p0nReHvuiFMTp6r/2rmvvcuIdOWjoVzI8z69NNVvdk
jFO15q7Z3NLOsY+A456ak1osPnfH6eDy6Ohol58N+MxAby5c04XxvSd8jtcI
NUM+GoEb2POFVheqmvQVzE7zli0TfkJtNzgOvaaQY418sS3MCoXluweS03HP
MIU5HHprRFQUTZg8WeqUY5OSaBT/Gb5k5JWLfv7pp5K/fV/llWdv3ep3Psd9
wRh+X/QIk/dVud/omw3m3clMFypGx1jF5xJZdZ3CwiSLDXyFugDUCl/n7xcc
431+3Hv83/2nTvnE555yOo5nzIQJ4rfHMaC+G7247vDaxHyhJ995ZuFAM7or
Tl+0eLF47JHljnpveLehCSNzEMeGfQysKXwnB4vR0d8eXnb4HeCxR9bCLf5c
QM8C+EJ27dvnM6N7y+nbd+ygCJ4f6Pfw/2O/AL0JsOeDeUMfe5xT5DOGmsdd
jV2fbQ++hv5eyr9DUIe+K9Rc+2v4STgdXinhfPiX8ec94XP/MHpifuS/vGJz
PzC6ZLbfznfL56XJ764H6tHRz9bd/RU88c757cXh9H6NalBUlSdpYDWloRs+
d5PRpd+a6oc+vdGLNKtJWZrX7CXJcs9s9QqtalNOsuJ0vzX43HernuioRc/r
AZ+7vRZdGD3KzujIiyuM0XXvtc+Z0S2/e32b3/2rFEtL/9ahLt3Kj7MNVZ9u
876Ds0dZQzM7GQP/b/G8eiyPB0oz/0mx+beKzaHpf55QT/rEXR9QS9acr3we
TC198txxVGXAf1O1aEtDr5nEjJ7yhPRbMxkdee6oQ4fH3TnLHf3QnbPixOd+
2N4T3ZbnrnquRd12YvQPC2d06b2m+qPbcuMe6Nw4p+y4X2raa9OVnu5cn+6K
110NzeQml4P9TTZHXTz2DJA9j2NfunWOX/hcMzq0TrC3u307aObox+iNN/4R
n//2RmRkpGRvow49UH3Si+J0fG+mMcMhf2of32ujzxV4U/cZB6dDG0aNc6gY
3dXoo3pYQ5dFdhz4U+dvg83x5w3MGPrx/uJz7A+AU8Ar0FnxPuBNrdtj7nK2
b/eJz/3J6X369xfmhHYOjwFqAHAe0UMb84N9lz3HjhWLz4tidPjW4bVHXcKm
vXutPQJ+f/Am1hb2CQ6fPSu/s/NzA83oCxctkhwFaMDSN4yPD33jsd8iveJ5
jvL5c/cMH19RmXP+YHPk9g3g84VafHjshc9v3pTzhP0CzNdbfFzYzwgGo69c
uVJ8GPCzI6Nx+caN0q8Bue3YY9G57SWVz//81Z9DkuWeejfhX0Hm8y+T3oup
GGq+Le0/CRfCFwqb6+ERoxeP04fmRz3wic+L4XdfeW1RkWxeGrV0aGW473Z3
r4UeRvid/MHoieGdqHflJyQnDnXoyHKHz92Z0aGh6yx3U0Nf0PwlWtrSyopb
bWTFbTV6ojvXop/u5R2j23qvMaO787vrunSL05XfXdWmw/eO2vQfFac/kGHx
tub1X3g8VMOBx2XYOR/cj9fFe4DNsUeA/QLkwiGHfnd8h2KzebC09PWb1lLl
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
J6Vf20L+fTWT4zUk55/v4U8dPkS7ekXQ8dfq0t36deljXr8nh6fRHf63wl53
0yfrg6+hv5f0Q7A19OR3Y98MNe+Wtp/4C+F7POZzfzD6hYivk/P7+l87L4TR
Le38tN/4vCRr6dhHL+y+DDWG/uDzETEDqHuFxymi0hM2n7vJ6Mh0d9DQmdFH
17f6rWmfO3qizzNq0XXPNZ0X54rRDzsxuva6S3/0qBp0XTG6zo0Tv7sLLV1z
+qeK0009/a82Vrf6sv3T4HXo61pjt8bralj/jsf9w+ByvBb2AD6Lt3Rz7BHg
WLCHcCWqOq2ZmOrA56WB0Q8cOkAVw//L0tD7Wz53Z0Y3NXT0W5OsuKmGz13n
uaMWfY2qRd9UMC+uKB1dct2N/ugOuXGm391JS7d53qGnG5wu9enfWyP1e6t3
eqryvw/T3K5y4If9Yox/V7dp5XhOyg+Kzb+rJq+P90oAm/NxYO8Ax9nvdE25
p3TF574wehzfqxR27UOHdtWHraQyeqA4vTQxuiecDg3cW80ctVD+4PJAcfq8
qCg6UqMa/YHvs//C99n9mG07dOsmOjTus+GHhs8WvHUqPo6u5Od7xefB1tK3
Ml9PLPsi7apamd6qV4f+wRwqfMWMvrtTR/mdsO8AfVtrcchyQ169MGV2Nu1n
vkLtvc4vQ385cOdcfu6WypXoNr/uP5lrVzLDtX2zjfiidZ9xMEwqD/gMnPul
h5rRMfo2bUqjXixD2a9WpEt1atKf3nidfmzWWObnGrN0n0GDRLNdtmED7Tlx
Qn5v1OyjHxt6sV3jz1HUAYybNEk0UnivkVWAeUR+PfLLMJ8r09NpZcXydKZW
Dfr0jfr0Lr9HGDMwNHxkjaHPeOLw4dL3bQo/FuvEWz73F6NjLfXv18/qF9+o
IQ0r8zwtq1COTtasTvdfr0f/atLQ2sNgBh3IDA99GD59+NtRAwJuRE8/5La9
w2tm265dDmy+k/8fvyf2I7YePCh5atB/8Xhw/Wlm2IV8PvZXr0J3mDf/we83
ntdWc2Z06NbwHcATAl/5CGZ19Is3ffKBYHQM+IfaVChPbfmzrCd/TmBfJabh
GzT0+edoXrmX6UD1qvQOM7LtGuP5ie7enfoq3R97XXrvBt4UrA+sIdRQuGNo
3PPid0VvBKxB1N6fBweo7EWsw2Xt28l1eLlOLfpzw9fp382s9/57h3b07u1b
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
1JBiqlejBJ6vZP7vZGZzeHDBMcjxhs6IOUKmHDTZy8zARfF5oDgdvb3wO8Fb
IHldzOjwV0OLxLzguHN5brzt04bPuLCePYXRpS/ZkCHiPcA+wNwFC4RXb1y7
Rt1r1aI+zJuYq3ENXqds5nZknMsc8TlHrcQ2Pkd4fDAZHR5saNo6FxA+d2SN
I18d+zjL1q2Tz6ai6tjdMbnzmDBxotQN4D2hUUMbxt4XatjhtR/I3D6wVUvq
W6E8JVWtQqNr1qD1o0fRHV5D2PNBrb6vfO4pp+fwtdy0VSvpr4j+d+hnsGjV
KvEXYE4wN9mbNrnsle7Pge9YeA4wX9DRsXYHJybKtYj6FewJjhsymPq++qp8
Zo2qVZPmDxpI7/G68vQ9vvzmS5r+wcSg8nkoeq0lvxc3OdQcXBJ/XOXCBZrR
k/Ijvy/I5oHl9C3X13rF5r8mLd1XPveV0w/s30ddKz5lMXoFKy/OWUfXmXFW
3zV7pvtwlekORtd910yvOxgdvdcyDEZfy4ye3d5ek6619FwnLb0Ap/dy5HT4
3rWmDu+7znzXrK619ds2brfYHX82h34MfPN4Pl4H2XRaM8f7wtMObT+3Gx/L
8WN+4XNnTj958iRN5++ugfy92r17d+rRowcNHjyYZsyYQQf5OywQjI7Hdoxu
ajF6uAtGV5lxwuiq75pkuo80Mt0nP231XWNGbzLXBaOr/uhtNzKjIzduO3Lj
ytpq0t1p6dCq3XG66OnIkTNZ/V4lB11dhmZ2xe2awW3jQ+sxNiZ/z3o97AFA
M0dmHTz3YHPsH0zNGuFXNtcjEHz+SEsvWX53HMuUKVPcnt8U5hBcj/5i85Ki
peNzxnw8tFGwqc5RRn0xvNFX+HdHpjv6RK1gjgFbw6O8jpl+Hd87Z2/eLLnV
wWb0vcyZqAsG/4B74MtHvS9YHff1eXl5hfI5Br6X58ydS3HMA7EJCbSSf/cP
PvjA5WOhN0KDBfeiXhcMg5piMDnmCNlayKxewuy3ge8FNuXkSHZYsBl9ALNf
K2b0SOYc8DPqgGdhXpYupelz5vjURx0DawSe5XHjx9MA/v6bzvMNzVmzNkYY
szs0Y/gRUDOAPQH4DLDXg35b+G82c7H5nEBxusnV+BxvxWsFmjZqrlPHjJE8
eswJvN0527Z5nDXnKaNf5t97Nr8H8vVSR4ygrfwe45nb4bVH9gE8CMv5+oGH
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
6meaP/tGj1Lv0/lvCn3G2M+PfRPIW4FnxxzaT3/HfUuwbI5jGfn0sx9qo2b0
76eG0hhhjQfjg33x2DOBMcIaGD7DSPk8lHz34oIC5br4ItWdztNY0xkzdape
V8H73UN/LmvSWO255SblvedO9VWT+9XpNq3UgenTQuLzD78232vNdJ241DLX
3mhzcjQeCcWxVxGbf6X53AqHGT25+Ik/wOdhM3qI+e7oqRYsmzcElx4Mn+N5
Jhl99pRJVfajB2L0Hj5Gt/akW/nulku3ct7Tq+e8Y2+6j9Ot/emoI4eebP5O
3WJ1eHWL11FXrjqzV3D7GXZfWkPg60vo//E9+P6sVlepmcMGqFdffdU2Ng+W
00+ePKlm0bWqb9++lf2YOnbsqPpgT9vgwSqFrh3V5wG+5gSfV2f0/Pw81fjJ
mwL3XbNy3asxOvakI9/dqu+Ofek6531otZx3v73pOu/dqiM30y/3fV5FzfdK
Vl/iq/1u5cH7M7uP2yvZfV0Fv+tYVzXwHHwv8uk7z3hAHTtWqvecIUwyeiR8
Li49+i4dvz8tLe2sz6x///76+K6rD1t95vRoufTM9o+r3XRv/Oa9d6ufiD3V
g82Vat1SfU8xOSlR39fvOHJE58Zi/ypqlSHAoKi3HojL8blOJjZYvHat2kP3
52BXsNlx5LLS19PpnAu+gwcFj84mlsDrsZPPI2X0Z+l6MfjORmrzTTeoV+++
U7OValUxPn/SOGUlJ2n+0f3jT5zQY4L6W6jDhZplqIFVF5uvXbdOZdI1aR2x
bGXdbxon1OpDP/YkCozPkFGj9BwPtZ+6U4zeh465vm63GtnoDrX2huvUs3fe
ob544H71R8tmvvFpoZY+0UMN8u0Vt2oCvuKbQ6gnvpnGzb8GXSBGXzZtqhpH
Y401im0HD+r91Fgrwl5z9OtDvkEGjdG87Gz9fmv6GaZceszNN+k91+iLMJnY
e+zdd6nl112jiu+4TX10/73qtxZN6RhroWNu76f054scBOTBYw495zeHDh09
GpRHL6c5M/G+e9WE2FiVSb8TrI8abHqPCs0Z/Gz4/OFjx+r1ODvYPBRGX7t0
qepx+WWV+yJQAxFzYuWKFWr4tVerRRSHb7tFvXWf7xzkO8YOLVoUEqOvfM9s
rzXTdeKIz79KPtXvymjzsumHuzBuZBU2r5PRI+P0hKKu31ts7h9OuvT9z+0J
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
nFXfHXvSLZeeEYDTR/g5dYvX4dZHVwt8Hc8d1r6p2pKzPiwuj6ZLx++Lj4+v
/PxdLldI7t1E7bjeGd3UtZ3/60x/9OqMbtV17w9G/69KRte13dMC7EmvjdPH
+zjdx+o6MhEVHK6D/o5/4znNx1ypJs4bpcctUjZ3gtEPElPUxefY3xwOn3Nj
dHHpvBjdKU7HuWsM3S8/ceklKunii9TQyy5Vo4nN59H9M3pdtHr4YZ3HHZ+a
qutS40+4UDCBlYuLPGTk1iJnGTy74OE2er/tS3c3Up80vrei51bzJpo3y+6/
V61Ys0ZNzcrSn0EoPdSdZnSM8cTJk3VfbfQdR84w1h/AOuCe9cQLQ6+4nMbn
RrV0ymRd361N27aa0Xv266friA8bP16zuovGKY7GDX3SwO2o2QVnDObEHmHU
yEOt9pwli9VqYlowJzznl759wnDp6OeWf+jQWb3So8npM2hOjKYxQn8ssDly
ApBDgTHav2uXGn7D9Wr0Ddep5TQ+uKY+/OijqjWNEcYC+QRwviMzM/U4HaL3
Bp49TnPG2peM2t7gNow/5hLqG/yDxgufAz6PBc2a6H4DyPP4iObWd75+ZRi3
HcR44fC5nZyOevwDR47UXht1G7CGhWMD43P05Ek1jub/mDtuV+vmzdVzD73k
m7VqpRndfw6NojHCfvyaerg99fTTKqZrV713ALkbi1BzkH4X+teB0TFWOCY3
0M/B3Crw7V355wMVcwvrGjtHjjgrb94Eo2MfA95jJh3/q7Zu1esK2AuC2pPP
02c9rf3jatRtt6nV06eHxeYI7+ky4znuaV73t2Ydeny7aPOz04/4oti1YfN5
GC49sajbz+HwebicPvZoumZzKzgxutMu/Wk6x9V2n75s2bKQ+rWZYnR8fdH8
ueqphx6okuvu3x/9CWL0nhajo0e6f924Gly6P6f7+3R/Vrd43XLrCOvf+L9B
D9+l5k+bpF+fHWxu2qXPo3tO/33n2Nsa6t51p126lfMeP6SXuiHuvAqP3vU/
1HW+/ug39CJO712xJ10zusuv/9pZLv28Ck4fEoDTR/mx+pi/aV6/b5zPrftC
f42iycjLVXJmH3X0aIltXO4Ep6M3bm3HPHrthcvmku8uLp0royNQX30T3edj
n6iXzrtWDjx6WCckJakOnTvrXNzuTz1VyVBgTnhO1IpGfu1B4qmNe/aoodde
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
P6/rGFDxZ9P0q1XvkbFq5sKpqrCooFYer++M7t87r6aYSffOdvO5uHTJdz+X
XPqzzz6r+hGbP+zLr33K5dI8kkg8tZy4Es/B929at04lx8So9CFDNMvttOq9
0zjAkyFwL76KnhcJn9vJ6NgL3L13b73/F68Z/hOMDk4GYyHPeim93mDrv+O1
rVq9Wteqxh511PR6OjFR+/TR9DtwXICLdm+nczYxVh8arzFTp2re1Ptysf5K
4wnvippfO4iH8bujle+OvGorBx35yXidO/Ly9L5n5HGjZx7+XRuf18bouC+L
69ZNPdi2rerYtavmONTeSyX2PHLkiH7OiWPH1JikJNWzRXPt2cHu2GcB3sRa
ximfp34e9UA9HqOMPofYGGtXmEPIcUceBl4b1g6wboE5BBY9TO8lUj7HcTZi
5EhdCx0eHXnxWDNLoM8ma948/XpwPl8ye7bq16ql3rM+jK5/yLuvkhtCnzOO
xa27djme776MeBx957APJD4lRY2fMUPnkOD1YK+ENYc2bd0aMZ8j1r23yiif
G++F7nXlRJujnXj09nT8D+Lzz23n8wCM7i6O+yal5Ik/7ebz2hj94LN7g+Lz
hurScb6v7V4d/dcwNhwZ3T/wXnft3KmyZ89Q4wYNUENdvVVq9xiV0LGN6t/m
PuV6uLFKfLylSu74kErvEaMG9+6qJg0fqBbNzVK7duxQz9E9SbA8zsmloz5/
J7pnsj7vXr16qWK6jtrJ5qZdek2BunKr169UY6YNV6mjXerpId1U1/R26rHk
pqpNQiPVIbWFjicGd1A9h8SojImJakb2FLVxywZ17PixOh15NDk9VD6vq+YE
6vXjeU4wurh0cennikvHmHuIfRYvWaKWLF2qA+ej6s8bPW6c5hTk3aLvGPzm
qx+e6ceGOub7S0r099YHRsc+abB0X+I/5N9mE1uj3xX4Af3SNhDDzMnODrp/
uhU4nlasWKHzn8Eoh+ln4ev+fI1zD9h9HP1e/7pZXr9+bOAp5P7WxOcmXPou
Yk3Ueuvy5JM6hxtsjBxlOFCMD2qUzV28OKi97IEYHfMOOW0YpxXEkuglhq/5
Pwffj33eVv3yDb7cDL0X3rePGdyJvRSR8nkonO6hOY6+aliLwT6AUZMmaUeM
HP2tvjmEHnO4xuD5kTI6fgbusTC3UO8Aa0G436vO12PHj9c93Ab7nLXul073
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
xBJ/whHPufrvagcxeglxzgvE0mDDTQ8/pMcF5xxwzfHjx/W5wqrZ7vF4dG4/
GBw5B9irjtx35POj5h44sssTT6gM4jg4ejDUR/ffq35u3kQtbUnM+dBDej8z
1kNQzy9l4EC1p4Z959HgdLzv0cOHq/bn/VX1961h5Nx4vcq//Vadi/EijdHO
Fs10LVGMD15HTfXmrHqFWLeBZ0eeAfrVWX3/VixcoHsOWHw6hDh09tVXqT23
3KS899ypcxiep7nVvWULzcTWfu/+xPOziTmdYPO6GB09hto+/rhqff/96vH/
/i+9hjH68svUiuuv1cfYiTtvrxifdm31WFb/fn8+X7d+ve4pgFoIOF6wrrV4
3Tq9zx5rPailtzQrS7Vt3Fi/d6ybgbfxnOFtWquJV16h1t9wnT6usS7wTYum
KqtFc9UCHp0YPY7mH47F5IwMlZeXF3I/9br4/NNvPlVDT6WbY/RTaUZz3FPK
4udHm7dDecRtifu/icHfOovPHXLpQddtt8mlTy0dFRabi0vnyeji0nkxurh0
XowuLp0Xo4tL58XodXH60nnzVLeLLlQZl16sZv39KrWSGAL380uJs/bv3Bnw
++D85mdn63rVYALwZ5Yvbz1r1Eg17orL1TYfn8MVWvu2y1q3UifaPKg2paWq
WQsX1tgvvT4x+oRBg1TMX/+qkojRwaDgaIzPCuLDvdu2VbJ4TYFj8DFiINTN
7u/L7Udf8FW+XHWwVseWLdWgSy9RS3w59O/ff09lDbEvaLyO03it6Pu02kGf
RahcbsKljxuQptr/9b9V/4suUGPpM1947dXapa+m8dlJjFhbP3XEUpozyBXo
2LWr3nsPR67z+XNz9R7qpWvW6Hr6yE94umdPlXTJxWra369UO2++8ay5deLB
lmrn44+pnTRWuL+o3o/NJKPj88dnNnHwYPUYjU9vYnTsJZl79d+1z15Lr38/
vcdA32/xOa5ljzz2mGZ05Lkn03xEnjtq4aGeIPb1Z44coVre2aiy5mPqkCFq
/MSJynX5ZWr0FZepVXRMY+0H+Qw/++bWOzRWhQ+3Ubvp+1HLIFQuD4XRF70z
/5zNcU8tc701zjPu/4k2dwf7iPfENamRzR1i9JDqttvA6JtPrIuYz8WlS767
uHR+jC4unReji0vnxeji0qPD6OuJh/rcdafqd+EFKv2qK9W4Du3Vfj9vHihw
fKEfWdsOHXQNbeQog6+G9OihhhGLgGNP3nlHpRNW4KhWzTV/Hu35hJq3YMFZ
fO4Uo4fL6Rg7rGH0uuMO1YcYK5WYZ+xj7dReYiP8f218bjFaM18/sj5+Pe2Q
ez1s/HjV9u67q+zhPuW3hxtjhb3unu5dI2JzJxkdP3fe1KmqF/EhPHEqfe5j
H31U7d66tU42R2DOo58AGB0Mjjx2eHKdz09jNBH94N1uvcc8ljgdrh7MueHG
69WxRrerD2hu/dTsAfVnq4q55e3weK090027dMQyzB/6nHv+7XyVePGFaiy9
j4LDh+usCW8xOnx8kxYt9DoFfLcrLU0NnzBB56MjL33+/Pmq+8MP63lm1WJM
SUpUvejzwLob9q/A25fdc6fem2HNrZ9pbp0oKoyIzYPh9OJPC4zyuek67qnl
iY2jzd3BPlwFnSbXyuc257uHVbc9TE4fUPyUOvZcqS18zo3RxaXzYnRx6bwY
XVw6L0YXl86L0cWl187omHvP0z0JcrpDqTGH4yAhKUnXhkaNd3B6z9atNYfM
8+1rh+fEXlvkIqNGPP6+qVOMvqeoic/ro0vHZ/0i3a+8Qtfrmv6/NkY/ePCg
6hQXp/OJu/j6kSUOGKBzvzNHjNBu1WLO0ka3qbfuu1tz1PdNH9CsvqdLZ1v4
3ElOx+eFsSmje4RguNw/MI9SiDlb+uXzYy1j2KhRen5h78CD9H+tGzdW3f92
nkq95CLNnHtpbr10dyP1kW9ufUdxvN2jtfJ5NFw6AmPkxX0ORbA91f05PXf7
dtWJxqY1ct27dtX5/knp6Tr/Hb8b4xRHc6xJy5Z6nnWjv8f69h4glwVrZUW+
+gD/fKBibn3apLE6efSobXweiNG/+PYLNfzUQGN8PuhU6u9Gc9y9ronR5u5g
H+7C2OeC4nMbXLq7KO5bx9i8BkafWTrONjaXfHdx6VwZXVw6L0YXl86L0cWl
82L0c8mlhxP4mTh/gxXQZ3nPjh2qO3HB0MsuVSuuu1YzOvazl99zp645V9ro
drVl6dJa2bw+uvS6ojZGx3spKipSOTk56khenv43vo5zSCfic9dFF6rpf79S
1z0DR71M3AmXjr3uOdOn28rnJnulhxI4T2+k+bNp82Y9n/x/HvbyP0Rs2u78
87SHHn75pXqvAbzwszS3sBcdkZOYEBSfR8ulhxtgdPzsEydOqC1bt6qCwkL9
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
g+51fRpXFvc/neJzd17Hexxnc1+4C2K/Mbn3vOB4fsR8Li69fua7+wfqA6O/
DlhdHJCEhEQ0A+cg5GeiF1goXt0pRkfgHIk99cLkEhIS0QzkPqJ/A/KOsGZo
MXn1cILRuXH6ueLSP/zyA6N70FO97m9MMXpKmfsOp/jc5Yl1m+LzhILOP6QU
dCd27l5v956LS+fn0v0DvZTQFxf7J9EnM9rXIgkJiYYb4GHUNse5yTSnY20A
50I5D0pISEQrpkyZou/H9u/fr/tcfvLJJwGZ3BSnc2L0c8WlT3pjnDE+TytL
MLYHPeVVd3+n+Nzt6bTMFJ8nFXT5RfO5AUafU5xpO5+LS6//Lr16lJaWVtYe
xh5L2bcuISERjUB9S/Rxc5rRkV+PfZziyiUkJEwG9vnMnTtX19EsLCzUe8k/
//zzkHicu0vnxOgmXfra91aZ24NenvyzOX8ev9gpPncVdPqHMT73dP29ks8r
Od0ZPs85ulLvUW7ojN6QXboV6I/kH3Ds6HmM/eurV68WbpeQkDAWyH3H+d5u
Tse98Pbt2+VcJiEh4WiAw2fPnq3vn3bt2qV7MKI/Ody4HTwuLp0/o1fn9IJP
8ozx+cDylN+N7UEvc590gs0Titv9J3HzV8b2nldncwcZ/fCxg5rPnWJ0yXfn
59Krc3r1QG34ffv2qa1bt+oa8ahbgmvQpEmTon49lJCQOHcCe9SxHzyYWnJ1
cTmeg/MW8kij/b4kJCTOjcC+mIULF6p169apnTt36rqSuO9944031Keffqo5
vLbgxOji0p1n9LdOv3lO7kFPLXN9Ff9W/L/bzef9PbGtje0993T+PiCf25zv
PqSofyWb+wcXRpd8d3MuPdjA+KHG0oEDB3Q/IvRVQg1k9EQGw6NXMNaUo31N
lZCQ4BNY+8M5Bfe84TD6Sy+9pO+ho/0+JCQkeATW8ZCDjjwerBFu2bJF952A
A8c9UrD8HWw0dEYXl17B6F9/87Ua9/pIc3vQvQnfmXLoyeXuFnbzebwnZpg5
Po/7qVY+t9GlzygeWyOfi0uXfPdIOb22QO0TjAX2mKJfCO67UZ8JPh7731Gz
dNmyZZrpcX2cNWuWmjZtmvh5CYkGHujNBtYO1qXj77inlj3mEhINL3DPAL+N
njVYn4MrQM4f6k5g3x5q7sB3o/4O7k1QK/Kdd97R+eefffZZrWEXl3N16ZwY
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
e8ePTfB5Qn7sj2fzeXCMHiqnHyjeWyefi0sXly757uLSOTK6uHRejC4unRej
i0vnxeji0nkxurh0Xi69PjL6G5+/HiSfR57vnl6e9KMRPi9zfeDP5umlcf/L
VG24hLzYn2vmc/vz3QtKPEHxubh0fowuLp0Xo4tL58Xo4tJ5Mbq4dF6MLi6d
F6OLS+fF6OLSG4ZL/+Sfn4TA55G59IzypJ9M1Yjr7en9F4vP3Z6OV5jj886/
1M7n9rj0NM+TIbE5R5fOKd9dXDovl86J0cWl82J0cem8GF1cOi9GF5fOi9HF
pfNidHHp9YvRh5ZnGGH0DG/yL6b4POWNfpdU9lY78vjd8UfM8HliftyvdfN5
5Iw+1BMfFp+LS+fH6OLSebl0TowuLp0Xo4tL58Xo4tJ5Mbq4dF6MLi6dF6OL
Sw+d0Se+PjoMPg893534/FdjfF7mvsOv93lbzecGGD0pP+634Pg8snz3cQUD
IuJzcelSO05curh0cemS7y4unSeji0vnxeji0nkxurh0Xox+rrr0WW9MDZPP
Q2P0gd6U34zx+SvxD1l87jrcoVclnzvM6cTcf4TG5+G59MkFwyLmc26MLi6d
F6OLS+fF6OLSxaWLS5d8d3Hp/BhdXDovRheXzovRo+nSF7+dHQGfB5/vTs/7
w6A/f6LSnx/uMOgsPneI0ZPyu/wZOp+HzuhZhRNt4XPJdxeXzpHRxaXzYnRx
6bwYXVw6L5fOidHFpfNidHHpvBhdXDovRq+L09e+s9IGPq/bpdNz/jTG5974
AWf2n3eYWiOfO8Do4bF5aPnuiEVFM23lc24unROji0vnxeji0nkxurh0Xowu
Lp2XS+fE6OLSeTG6uHRejC4u3Tyj5763RQ3y2sHndTO6KT5PLYvPrMxvz+uw
NCCf28vp30bO58G59BWF2bbzubh0fowuLp0Xo4tL58Xo4tJ5Mbq4dF4unROj
i0vnxeji0nkxurj0mhl9/wd7K/jcNkYPzOmpXvc3ZvLb4xef4fP2m+vkcxsY
3ZUX8509fF43o28oWqmKi4tZMbq4dF6MLi6dF6OLS+fF6OLSeTG6uHRx6eLS
Jd9dXDo/Rufs0gs/9Jzhc4cZPdWb8F2yGYeeU8nnRzociD/S4euKcI7RXXmd
vrePz2vPd88t2qT53IqGzuji0nkxurh0XowuLp0Xo4tL58Xo4tJ5Mbq4dF4u
nROji0vnxehOu/TnP3m2Kp/byulV+TzNm/g9+NxpRk8tc+21+Dz+cIfjZ/g8
CEYPk9PdeZ1+sJ/Pa2b0Z4p2VeFzbi6dE6OLS+fF6OLSeTG6uHRejC4unRej
i0vnxeji0nm5dE6MLi6dF6Mjyj/z1sznDrh04vMfLD53lNHLXCV+9eG8Vfnc
GUZPyI/90Rk+P5vRDxUdOIvPxaXzY3Rx6bwYXVw6L0YXl86L0cWl82J0cem8
GF1cOi+XzonRxaU7w+jvfv5OYD63mdGJz3/053MHGf0VP3/+8dl8bn++uzsv
9ifn+LwqpxcWFwTkc3Hpku8uLp0fo4tL58Xo4tJ5Mbq4dF6MLi6dF6OLSxeX
Li7dfk7/5J+f1M7nNjI68flP1fncEU4vc72v2XzJnf9vYDa316Un5MX+7Dyf
d1Gp+U/Uyubi0sWli0uXfHdx6XwZXVw6L0YXl86L0cWl82J0cem8GF1cur2M
PtSb/v+z997fUVzZv/YP7z9w32+4E+xxjhgwOedoggSInIQQKAESOecocs5J
JJHB5KAAGOOcDQLnbI/tsT3jscf2eGzvu5/TdVqtVktqSS2gcC3WWS1aUner
atep/ezPDiUzegQ4fcTVIT8Nu5oYks8jyehpeUl/776/+/83NKfLf5fM55Fh
9JTcbv++Hnw+5tzAsPnc09I9Ld3T0t2npbuJ0T0t3V2M7mnp7mJ0T0t3F6N7
Wrq7GN3T0t3F6L9HLX3qtfHh8Xk5GX3k1aH/9vF5xTP6iFfi/k9KTod7wuPz
8ue7K5//fD34fNL55FLxudsY3dPS3cXonpbuaemelu7lu3tauvsY3dPS3cXo
npbuLkb3tHR3MfrNqqXPfXN6+HxeDkZXPv85n8+LZvRIcPrQq0PvTM6Orl46
Pi+7lj4kt9t/rgefTzufVmo+9/LdPS3djYzuaenuYnRPS3eXlu4mRve0dHcx
uqelu4vRPS3dXYzuaenuYvTycPrit9JLx+dl5PRR14YF8XnFaenDriVWSc7u
3Kz0fF42Rh+S2/2X68Hnc86PLTOfu01LdxOje1q6uxjd09Ldxeielu4uLd1N
jO5p6e5idE9Ldxeje1q6uxjd09JvLkZf/c6ysvF5KRl99LXU/4Tm88gz+vC8
xEZJ2VGdysbnpc93V3b+9Xrw+YLzk8vF556W7j5G97R0dzG6p6W7i9E9Ld1d
WrqbGN3T0t3F6J6W7i5G97R0dzG6p6WXntE3vbuu7HxeCkYfdW3YL0XzeaTz
3RM7JOVE9ysfn4evpV8vPl92YVZE+NzT0r18d09Ldx+je1q6uxjd09I9Ld3T
0r18d09Ldx+je1q6uxj9VtXSd76fUT4+D5PTR19L/bV4Po+gln4tqbfydVL5
+Tw8Rh96rsdv14PPV19YEDE+dxuje1q6uxjd09Ldxeielu4uRve0dHcxuqel
u0tLdxOje1q6uxjd09Ldxeg3Uks/8MGeyPB5CYyufP5beHxefkbXnx2UmNt5
RGT4vGROH5pT8WzO2nhheUT53Mt397R0NzK6p6W7i9E9Ld1djO5p6e5idE9L
97R0T0v38t09Ld19jF4Spx/78PHI8XkJjB4+n5cz3/1a8rDE3E4TIsvnRTB6
dqdvDZ/bVYF8vuX8arl48aJrGN3Ld/e0dLcxuqelu4vRPS3dXYzuaenuYnRP
S3cXo3tauru0dDcxuqelX39GP/PRycjyeTGcXjo+L7uWPuxq8riknE4zI8/n
hRk9KadzQT6vQEbfdmG94fOKYnRPS3cXo3taursY3dPS3cXonpbuLkb3tHR3
MbqnpbuL0T0t3V1aupsY3dPSQzN6zsdZFcPnIRhd2fnb68Lo15KmKUsvrBg+
L8To/yzE5xXE6LsubPbzeUVyuqele/nunpbuLkb3tHR3MbqnpbuL0T0t3V2M
7mnp7mJ0T0v3tHRPSy/M6Rc+PldxfB7E6Kl5if8sG5+XLt89LS8xPTE7elXF
8Xk+pyfldgnN5xXA6Huf2F6Izz0t3dPS3cbonpbuLkb3tHR3MbqnpbuL0T0t
3V2M7mnp7mJ0T0t3F6N7Wno+oz/96aWK5fMATk+7mlQOPg+f0fV9lifkRG+u
eD7v9I+knC7fFcnnEeb0/U9khuRztzG6p6W7W0s/fOCAZKxYIdt0bV/pWztW
r7opGN3T0m8so2edPSvbV6+WXWvWSKau3Wt9j9iQp6W7n9HLy+nHDh6UvRs3
yj5d+zf51jO6x7pJS3cTo7tJSz+XlSUHtm6RQ1u3ymFWxlZ5Wn2F3xOje1q6
uxjd09Ldxehu09Kf//TZ68PnV9HPk74rH5+Hl++elpe0ITG7U+b14PPk3DD4
PEKMfviJfUXyuZfv7mnpFc3oRw4dklVDUuRksybybt3a8reG9eT7xg3khyYN
5e+6crrFyJ4tW8y5vdGc7mnp1zffPevMGVk9YYLsbdFcXq1VQz6uX0f+3qi+
/EvtgnWpaxfZrdx+SfcTT0v//eW7b122TDZEdZSzDRvIm3VqyecN6sk/nb3j
pS6dZO+iRfLUpSddw+hevnvkOP1cdrasGT5cDjRuJC/Xqi4f1KsjX+newb3l
anRHebJPL3ny/PmbktPdxOielu4uRve0dHcxekVw+sufvajsnHpd+DwtLzlC
fF6Slp64Iymn0+Hro593/n5oTnfxrYpl9CNPHCyRz92mpbuJ0X/PWvqOzZsl
Q5n86RrV5N16teUb9Z/+3bSR/Na8iUiLpiItm8lv+vijPrdzeNpNweieln59
tPTTJ0/K0ob15VTVyvKKsvlHyubfqm/9n2aNRbAPtQ3WL/r1iYFxxuY9Ld39
Wno4XM7eQa7NjmpV5byuvNo15bMGdeV75fJfsY+AvePFbjHyvP68p6X/fvLd
j+zbJ6tr15IjlSvJM3pvebtuLRP3/bFJwXvLW52i5MDMGeY83myM7uW7e1q6
2xjd09Ldweiv//U1h89TK5zT064kfT8sT9k6r2IZPTUv6UBCdqcz14XPszv/
K5/Pw2D0cnD68SeOhMXnnpbuPka/mbX0zG3bZLX6TmcfrSyvq3/9abB/3aq5
SGtnqS/1c9PGsmPYUP95uBUZ3dPSX/Hr5rPr15PMSg/JE9WrytU6NeVztQ90
0d8smxv7aGEe4bBT/fuZz+TVpd/6WvqC4Wmy9oH75HHlr6drPCpvKX99qfz1
k9qHFLKPZvJS967ygu4FbmJ0T0svG6MfO3xY0qtWlYyHHpCTVSvLCzWry3v1
asvXah/Efn33lmb++8uv+v/Thw7dtHXpbtLS3cTonpbuLkb3tPTIMfq1z/OC
+LziGH14Xko+n0eM0UNy+onE3OgL1yW/PadLEJ9XHKOffuJEqfjc09K9fPdI
cPrM6tVk58MPyrlqVeVKkXzews9gPPdd4wbywpbNkqXvvWbDBslQxvfy3W89
LX3huLGy7L57ZF+lh+XJ6o/KNeXzv6p9kNP+azB/OQz2i9rNjokTb5necZ6W
HprRt6xZIzPvulPWK58fNXxeTd5UPv9c+Stk/MbE95rKU106yVN6P/B6x926
WvpR5exx998nC++9W7Y6fP58zWryjlM39WOgfbTOj++9F9VensjNvWkZ3dPS
3cXonpbuLkb/vWnp73zxdgg+rxhGVz7/VwE+ryhGz0vKTczu9Ox14vMfCvN5
xeS7Zz1xptR87jZG97T0m4vRF06ZLOnKX7uUz3MfrSKv1fblL/+jUX352Wgc
AT62Wc0Mn6N/fNgtRi7r/e91vbc+oz58xp49cubMmVtOS3cTo0eS07euXy9j
lb+WwuePPCwXqlWVy7Vrysf166p9NJD/YB/NC9sHfvcn+r1tmZmyR23Cm8N2
62np7B2jW7WU6XfdYfTzw8rnxG+I732i9mHqH5rm57f77UO//kltY+PCha6c
w+YmRr9RWvqxY8dkXLduMuYvt8u8e+6STQ/eL0erPCJP1XhUrtapZeK//7T1
MUH3F/JvDk6e9Lvs7+5p6e5idE9Ldxej34xa+vtfvFcEn0ee00PyeUXku+cl
PaN8/oquCufzlNyYYvg8slr6+YvnysTnXr67p6WXldGHVaoks+++y+QgnnZy
EN+uW1u+cHrD+WuMrZ+tj/AX9YOf6Pfz9u+Td776St7Uve81vWfvOnRITp8+
7WnpLmT0AwcPmjyI1Vu2yNa9e2Xu0KEyWn3sBffebfIrsh6tIi+pfbzjt4+G
+YweYB/kXcDvV5YtlVw9H9u2b79ltHQ3MXp5OH3vvn2ybsMGWa/nLkO/3nX4
sKzfvFn2qF1w3Z4+dUqG3PYnmXjHX2T5fffI3koPSQ72UctnH+S4/0vt4xd/
j4J8+yC2t7dnD28Omwu09JMnT0rm7t2yQm1hU2am7DhwQLbq40Hd5/EPgtn8
kD4/cuJEGfynP8qI228z8Zs1D9wn+x95WM5Vq2L6V9DfxNhHk8L2wb3l9Y7t
XDGHzU2M7mnp7mJ0T0t3F6OXldM/+fKTEvg8cow+4uqQH4rk8whq6alXk19M
zI5+zfB5BTN6yXweOUa/8MT5cvG527R0NzH6raal8/fMW7BAhvzlNply5x2y
ztHALlavKq/XriHv16tjfCjy2PGnYS670NXRxz6oX0deXbhA3v/HP+S9b76R
N3WPelX9gO3qw2VlZd2Sdelu0tLD5XKu7znp6bJS+Wv/6dNyVu3ySWXRkXVq
S9rtf5aZd9/p18DQSLGPDwLs4+cA+8DfpvaYHNY35sySPPUz9h8/bq7LGzEv
3U1a+o1mdI7XkSNHZLbuCxt27ZKDZ8/KWd1LsIXnlfNeViZ5SVln/4kTMr5f
P0n8859klO4f6ff4cpiPqX1cUvsgx4K9wc5/CLYPnjvau9d1m5Xuaeml53T2
j9m6JyxYuVK27t8vh7OzJVvvG5fUTl9wbOGM7hvbldW5l5s+7efOSVJqqowY
OVIG/vEPMvS2P8n4O26XxffeI9sfelBOOBo6ORbsH39rWN/UUQXaB19/3LSx
HMrIcAWje/nunpbuNkb3tPSbh9E///LzMPg8MoxeIp9HitHzEtHO8/x8XoGc
npwT82PJfB6ZfPcnLj5Rbj73tHT3MXowp589c0b2q9+zsV9f2RnbXzIHxMrm
8ePk1MmT5tyWl9E5PrD5sk2bZPBtf5bR6mPjQ6GR0qObOlJ8qPfr1TZzkujl
Doehd+BPkftODfK1OrXkRM1q8t7f/27W2199ZXjsWfWHd8+ZLRfOn78lGf16
aOm8R3bWWdmycIFs0/O/Oy5O9gyMk8x16yRHfeVIcTra9uSZM2Xlli2SeeyY
nNTr/All5RfUR09TPk/6s8/HpgadHnHkWDwTZB9/D7APHrEXaiSeju4geW/7
fPkN6m+HM1/d09ILcjrXBtfRxuFpsis+TvYNijfrgrIQc8UjxegcowULF8oM
Xau3bZPdx4/7bEFtBDanhuWa+kpvqQ/yhvo3k7t1k4F/+oMM0f1j6p13yKr7
75U9ah9nCthHHVOLHmgf5DUT13mieVM5re9RVN85tzD69eodR9/7LN3/t8UP
lL2D4+VAwmDJnD7NPB9pRse2p8yYIXOWLpW1uj9YW7jg2MJr2IL648YW1CZO
6/fOqY1O098ZPGyY9GvWVPr94f9Kwp//KGm332Z6FKChk2OR9WhleVbtI6+O
j9Ht/kEuDveWbxs1MHvHrkULI87nnpbuPkb3tHR3MbqnpZeO0b8Im8/Lz+hh
8XlkGP31xOzoNwrxeQUweun4vOxa+rDcnhFjc09Ld2e+O2vvzp1yQP2Wy86c
IqtPkmdO3eaxvr1lz9at5dLSZ8+ZI7OXLJENmZnSX/krRdc08hDVx97r+Ngw
+mu1aph+T2hhn9avq0xez3wm6o/p0/x8zepyoFpVw+Us9PMreo/Chzujx/5E
VAe5cOHCDZ/D5iZGZxGHWao8Tr7wNdMvvZ5fZ8IOvtfHzLQ0M2u8PIzO8+Mm
TZK5y5bJRrUFtPMzat9oZOikybVrSdwf/yCpymCz7vb1Aduv9kGff2MftWsY
O/hQ7ZWaUmsf/P+Kfu6LfftInvqu5FSc0s+6/8CBW47RK1JL375urazVa4ic
hTedvugwLjUF2MJrHTuY2dKR0NLnzpsno6dMkXnLl8vG3buNLZzWaxjt/EVl
Nq5reOzdb74xsbiJ3btLH2WwQX/6o4xUBpt7912y4cH75cAjDxv7gNHJs2Ce
1oe6f3zm2Af7CPnvz3RoJwf27Cm2N7ynpfvWGr1GM/XYFZxP1tDsBR+3bysH
pk0tle5eHJvz/VHjx8t4Ze30lSvNPWLfqVNySu/RF/UaIm53WW3hzQBbeEv9
zL3K8LGDBkl8Sor0atxYuv/v/0is7h3kWFCHPv+eu00OzsHKlUydTL591DY8
bu3j4/q+vWOH8rnNmXcLo3tauqelu01LdxOj34pa+pd/+7IUfF4+Th+el/Jj
WHxeXk7PS8xTPn8rJJ9HmNFLz+dlY/Rhub0izueelu4uLX1e504mB/BV5eJP
nB7qv1GfZ2s3zWoq37VoKpsnjDfnobSMvnHTJhkxcaLMV99r89690lV9bPyo
4bf/2dShk+eODnay6iOmH9hzNauZz4MexmwtdA+4jOfxww/36yt5us9f1YV2
Tg36s+qv0tf9yYkTJGPx4lLxudu09Eiz+bEjR2RFvbpGpyY+AvdSx/trs4Aa
b6eO95kuneR8bm6ZtHSO89Dhw2XM1Kkyf9Uq2aSsdODMGcPnhsnUL56dlCQ9
/+//Svyf/uDkMSuDPXC/ieEY+6iOfVSXV9UesAvsA9+aGtOLypQXpkw2vjys
f0G5e4PaXjh87uW7X5bNy5aZnPFsZRk4xsxUaFxwpridOb9v5IhyMXq2Mn6K
2sLYadMMk8HnlsnIpbD6OT0mLJNNSEyQLv/z34bRE5TRx93h61OwURlsn9oH
eTjM46NnN/tFnrN/EHfkuRzdN6hnL2m+upsYvSI4fUGvnv7enZftbI3GdnZC
vh3kDoqX4/v2lUtLxxaGpKVJ0ogRMm76dHOPoM5hz4kTcgL9XPeP5/QzsceT
S/HO11+b2iZsYvG6ddK9b1/pP3iw9O/aVTr+939Jd907+qt9EP+lT8EitY/N
ah/UorO/sUfQ7+S1gP2Dr4+0bF6ort3T0j0t3dPS3aWlu4nRb6SWPtbwc8Uz
eqn5vIyMnno16Q3l83eL5PMIMnrZ+Lz0+e5p5/rIE09ELr/d09LdpaXPU7+I
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
B/tctSrycq3qpt81ee7MtfshyA6wDeZYvbF/v2Fgjv8e9aPR0XPVl545Z47x
fwvMTlN/nPwJbAENfajaBbrpgtWrTb0pvjL9wdBO6eF98sIFiW3fzq+TwugD
mzYx9cqB/b5P6c8a7Utf/7Llc6eHlJ2/x/PUYZSH0d3G6aXh8wTl85TbfP20
yAGm9hgNHe2UWA3X/DeOHfzbsQP2BnIsqE/euWOHTJs1y9eT38bV0Kyd6/aK
k/NCLIeeEdPnzjW6Z6cePYwtWN2UngSrlKvRvekP9rhe/8RfeK1zatfE+Jq0
bCmt2rWTdrVqyWPK5cT3TM84ZbCBaluW9dfoXrDr6NHQfK42gW1gI9Z+N+nP
36ia9ButpU+dMUMGDYg1MTDymLCDFffda3KrzlatbPpy0p+EPHfyKf4VYAfw
Or3dH9+6xfQOgKFhZ/RtYmPMQiOnZUeIPnLE9Jq1bi3tO3WSLsrp1JEnDR9u
4rjEaInXoHGzj5AHQZ8KWJrzeV7fp7vaQaPmzaV5mzbStmNH6ayvgQ7fW5/v
eNedZu+Icupk+t1/n8TrPYg+pfA5eVzsObwucSDbn9I/M8CxD/YS7OOw7h9e
77iK53Q3MbqnpbuL0T0tPZ/Rp1wdW5DPK0hLjxifl8TpeYmfJ+ZE/83H5xXL
6JHn89CMPjo3rlg+dxuje1p6eIwOn1ObR87w/HvuMho6mhl16OQ3v6Vs9rH6
5HD6Vw3rG5+M/Eb8dOrUqU99VTnMagz4M/g1+MAX9uyWnYkJ5n0mTp1qclLb
RkVJl169ZEBSkvGP4DQYnDm3+OKzJ06QUX16y6CUFJkwc6bJXYbPqUW12ga+
k+Ev3Q/fdvRRFnwOt5P/jtZC37BDlSvJ/t2ZEePzWzXffcqwoaZHX5raAbUO
1GbSP4nzC6PDZuhm9Iv7qpG1g3pm1h31EJf37jHHn3NPDGWtnrcxen7NHL1d
u+RAQP4DXDZl3jzDZfR0srXHPAejr87IMNopTAV3w2bkoDapWUNaPvig8bfj
+veXMVOmFOwtp9f8eae3nOEvvbdbfTRQQ4cZNm3ZUi4+dxujh8vpcTVrmn75
2MGcu+8y2ikxO2I1MDps9qG1A13WDrAN5h1eYH6invMl69YZ5jmie4NhYofT
uGbZJ2y8BOZC92zncBl1xKljx5p4Ded2pZ4ntFN6ExCzQeNET2dPaNCkiTRu
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
1oxQe4geW2wDFuNrYgw7dV8rK5+7SUvnNTfqfjAjPd304yOO5s9Np4+DctZl
xw5OHTwgS7rGqB3c4dhB/n7A2qS8vkIZnx6P7P30CrDz68lZsbPxbJ6V4Vx9
z8Ac9yO65xCrsXULoWwhMdAW1A5YY9UWTut5Tdev26idNq1a1dhDY8voUVGm
/oH9xuRY6OuhpVNHxe9jr8SB/XuIfnb2kJyAPeSSc4/hufVq2yXxuaelVxyn
u4nRPS3dXYz+e9PSp14tov48wox+Xfjct75IyI76PKFEPi+/ln69+Ly4+Wq3
GqP/HrX02fRbUs41TKY+9Dmnj/FrTk3o207uoe2h9ZQy1Krhw2X0X243Oe/M
W0I7YS4ymirMtm7WTKMz4Yfxmvi8PFJrjI9DzWjmsKHyau2aRgOzPjt5hGgf
hsvU/zL9m7t3N7mM9HCGv2yf96Hqh01WnifvHR2W30WT4z3xI/H74QKYCzbE
p6KfGDoIPcWK4nO3aemRYnNqTKk1oGZg38mT5vjhc5p5QvTL+vJLvx2gc8FS
i5TRmYnNzGDmLc3X848dYA8z9dzu2bvXnHu4HBbj2NNrgFx1MztN7Y5zR+0w
tmH8Xv2bYCGYnbzkhtYXD7IFGJwaCPxoGI28Z/gLX5v6CJ4bS4/nJUv8/jVs
wOvyeXgv7CLLsRF6vJN7y2fhczOj+/fI6Fv0/MCtxDXIR0cvtf22Xw3oi2Vz
0C/psZtct47fDugZtsDZC+ZXqSx7MraauAjHPl1Z2D+72tEkD1tNUm0Qe7Nz
sXjEDjhP45Tt/LrnY48ZLqOvO/nu7AWwGT0rOOcmN3ncONOni3VK94ROlR+R
5rpgsI4xMb5adrUX+hqgvS905gNsDbGHWPvga2JWG3ftKjefu0FLX6/nnzga
54rY6X5nBrjZE+ih92n+HEvuEa8pb82N6mhq0qfdVdAOluk5Qn9nJge5E7D+
487McnjfzEPTz855J3ecuOBqvWaDe7kf0d9r3rq1yYnw16PrNd850Bb0vA5S
G8AWho4cafbIt99+26xMPcfMVGvz5z9Jq4cekqYNGpjcCl6HZewjoA4iuAed
2UPUZolZsa9ht3YP4W/hWlm1fn1YfO5p6e7T0t3E6J6W7i5Gvxm19Mmh+rdX
AKePyEtRPk+oeD6/kvhXZfNP4fOKZvTrxecjcvuVi8+9fPebV0tfp74E+jW+
B72VbG9dcjmpp7NzqGzPJvxy/DLyxxclJ8mw2/5sZuHim7NGMidbfSLbpwdm
3kEPL/XN4R76OPE9clyPxXSWC9UfNf40n4F6cvQ1fofcRPwtNC/yUvGZ0NLx
y9E70MCMf+309ub1qBPcpP4TTIGPjT8JF+Brw4ZoY3wWYgOz9XeY61YUn//e
tHR8cbTowJ5txDaeUr85sEbUzpuinxOcBkOl9+trevyP+ovPDkbr46hqj5rX
9J97fSSHmPO7btJEmdCtq6SondgaYGIC2IdhZ/VxYSE0bnp9YR+2Hr2to3Wh
cZFHAYeTrzxg0CA5r7/XSdnL1pXiq/Me2Bb2tFRtfZ2+D3Eo0/9d7eGgYx/Y
yX7HPtAKd+sxgM8ritFv1nx3dPM0p3ca1xN7gtFMlc9t3+rAPussGO2iMsr4
enWE3u6jHTsY/0gl2aA8vsM597weuiY9JaYxP5G8YWVd7IOcheMXLhjGQYPM
dfJtsAOu483UE69ZEzI3mb2AvQI76KfnfIbyP3+L5XMWx/vUyZOmN5jZT9RO
+Hk4jl6CfB5qITj32P8OZw+Bw4x96MI2sUfqmyPB5zczoy/XfSBlxAhTI2L7
cHKOgvnc7gnM0HxH7w0v6/Np990rw/WegB2M069n9+why5W1yXGhj8jSQC1a
rzvuOTAu55vzTo4CnLtMz0cwn7MeV5uMU3Zu6DC6maNHvKZ7d5M7Q346eTaT
pkwxuSCWze2irv2g2uMYfY1xum+MHzxYJuiapXsR95vWah/o6P4edHo9EFOy
/QjZQ7hHkWuGTfA3YB8H1VZg9yV67ErD556W7mnpnpbuPi3dTYxeVk6fFDz/
vIIYPZ/PK5zRPxmcHf2R5fPwGL1s+e4puV1/vB58Pjy3b0T43NPSbz4tfaj6
YOSUo13vCs5ftPq5M0PG9tflOTTVk+fOSVrdOmb2Vrxy+eAG9WXE8DSTt4ze
QM46uiWvzaJXF/oJOelTp06VPU0aydaa1aW3+lI219TMTVIfGX9wq/pQvA4c
jkaKH86yWmp3p7c3dYeT5swxP0vvKRgQjQYmIIeWhS6GT8g8JfxwfPiS2Pz3
oqVz/QxJSzP1uEYrwxe3Wpkyn+3dFThvCnvg/+S44usmPXC/DPzTHyRRmWxM
3z4yT/nO9uzifK5wzv0cPUcr+/eTVPWBqSc3c4wc/ZIc4y3Kzvi9vD/6Gjo3
/i8xlX7MLFZb6dqjh3Ts3FkSkpPNWqzsfUHZDl88Xl+THNg2zgwl3oNezOiA
5Lpz7vksaLfYGH429sEjXAafzdKfg1Mtn1ckp99sWnpcQoK/tznnDh7lHMBO
xOTIPS4wmy5gdvyxkyfMbOzkSg/JBL1OFzu9tTjeMC1sRswk3pnNQK4GNrHW
4Z3dx4+buBAaNe/JI/zDeSLPGq7KwhaUF+GzeP2sXZTJknQPSNLXnD5jhrnH
8HOsQD5nsZ+3U7swDNa+vWF78jASdG8hbkCcj70JuyWGyH5BLMfYhy6uC+xj
pdpQpPj8Zsx3574wWI8pPfSIbS10ao+Ib5685Otx/7zTez0wVvMuM+jUNjLX
rpGhVSrLqBbNZdaY0eYcU3vCzHLD6MTK9BgTmyEmZ+ah6Xk1eVa6iIfAuav0
PIficxbnFy19oPI1dend1d6whxTiLaNHm/2Anwtm8+LWNj3naOnYh+0nCOsP
dHpToqNjw9zXuDb4/NxjMpx7DF9jH7x3afncbYzuaenuYnRPS3eXln6zMPqE
vJFl4/NSMvrIqyk/5vN5hTL6Bwk50e8H8nlFaenJOTHXhc/TcnpFjM89Lf3m
0dJXKYslqm9Kjjg+NBrnEdtbV/0fO0s8cE6ZmTOk+yd8DsdPnTFd2jRsKNGP
PWZq9uDlIeofwXpoDrAXXETOOo/839Qe9+5legilNWzg77lNT+YJjk4BZ5Nv
amblqO9jdU0YDq3E1KfTz1kZfYDTz9n08NXXh9PxKfEByQtgESdAB8L/Zn7y
cWWBcPncbYxeWk4/pD4yOhHMZHqqq99pe3ehm5qZdU4PJ/IpsAMWdkEM5wn1
1yeo/9o3JkYSnNlm+LLEaWCwwHM/Xnl8U62aMrBlC1OrQF92ciCwQc4N5wl9
aoszLwttlXMPJ8FxfL6j5Maq/w6PBy/mDjRX2zA6qbIY8RxsCzbgcxHHoZaC
fAtsDNvA9nlf9FziB+RWBLP570FLz1Yu6u/MlYZVOSZwM+xE/Tm55uTVoKEz
my5wT2CfIJYzXTl31MiRJuY3PeDc83pDlKmNbu3U9hrdev58ExNa4fAO53m7
k3PBjCwYeb7aBful5e7AxWcO9XxRjD5D7dKvuyqjo7mitZIbz9y28fp9Pje2
yH7BMcA+sBM4E9vZXsr5am7T0pnZwDGx9ddcc1yT/j6Ozv2Be4Dpuf/55/49
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
ZzTGi8ozcPqN7h2XlZUlffT89HT6rjNHmB5xzCKnhpQ8CzMjT3/2osOWzzr2
gWaKbwm/048b7ZPXXLV6tel3HsjoZuaUM9Oc888cNh4H6iP9kwK5nNeImxMn
jdY3kqa7mkrLwy2lzek2Rh+zeRRd33RyVwNrHGyspgg2D8ce+Hl+P/bbWJmw
a0KZGJ01d/58maO+uGVz6nA5dn6NWe0Ae3hGn9u4ZYvZQ25WLZ08CPpMMz+O
/o/UKdDzr8DsPN1D6OWOPTzr7CHYCX8zewu9+5m/Z2bb9+1reI6YkLWDybp3
cNwslx8/ekTmR9WSzcrmezo+IIc7PSSnu+Zr55cd7fyjpFpmZto/UusY7fzn
UQHaua05n+rUmc9s5ujmls2Vxec5Kz1g2efm5mvpP01uLi+M6WTy3UvD6Nv1
OiLmxfVEPzxqRohl0NveasnkpDylx22Lcrrb8t2JqdhZZ5zPYXqPQQen3wRx
4AJ7iO45dg/x32P0vbEbbIkcjW16DEJxOZ9x0Fxl8+X1peHGhtJke9Haual5
eSeg5jwgdmdz2tkfwt0b/PvC1/EyY/+MMvWOmzlnjunJYuvLjjqzTZ9x+r+Q
R4AtcO1k7tljzvOtwuielu4uRve0dHdp6Tczo7/y6cvKzsOuk36emM/n5WL0
4jk9NS9xb0J21I5I8XlxjK58/t3Q7G6l4/MyMvrBC7tLxeeelh4ZTo92/Cc0
K+o/qfdF36AXD/41bIX/hL5HPB9/ib5PfM1zcCY/t0I5Youu4uark7vbU5k8
uksXM4scLR3/DT0dnaWb+ujDR440TBbI5pMXTZZGKxsZvwtNpO2ZttLholNL
eNmX144eYnvBFfC3fosPyWKBftaQEP+s/+XXT9Vng/fJk44/Gm/6kZWGzfHF
ZyiXkduJT8qxQx9DL7L992ztNvmdaItrnPyBG8Xo2NYA9avhZ+InzA5mRhJ1
EMRj8K+pI6WfIH2+4PTzylvYB49wJ/Zh5uQpl1tN/nH9PTMnrV07adG2rZkt
D6dbO+ivnM78eXpABbI5xyJhdoI0WNNAGmc09uW1H2st7XLaFdDO6QcXSjsP
xx6KswXriw/6VW3huziJuxRn8tBLw+aznDoO+uHtcuaQEacJ7HMeWKONzrw+
I+Om7R1HXwm4mhwIcpjJS2fmAn3ACu0hag/wOHsIC3vheXpSttO9gLidsQNl
fuyAPtb7lM2wmUDdPD11oKxrfY/RzvdFPShHu9i688qm7jxvYDV5R/n8k4Dc
dvq1/zK6gY/PA+vOQ2nnsLefy1uJzA9altNheHhef/83Zf29C6aEzef0TaOe
g3jdVv0bD5FD8Zwz01L3BDMTIaAWm+duJKOXhdPpR27ypZwYDvcYaheISVBP
Tj9IYpXMabB7SC57iHOPgVGxjzV6rNCXQ7H5k5eelNZTWkudxXWk/pr60mhz
I2m6s6k03++reSGvxtSdP1+wJ5ytO/fXvfw0wNebpJT7Q+B9Iv6HeJl5YGbY
bM4xnTZzpj+vgDiN1c6D94R3nD2Be0XGzp1e7zhPS7/lGN3T0t2lpZeXz5//
5FmHzyue0dOuJH1XgM8riNFT85IyErKi1keSz4ti9Hw+t6viGH3v+R1l4nNP
Sy8fo48ZO9YwMv41ucXU/5Lnzhxj9D1yC8m7xMfGh8J3YMEVPIfOzs/NXbq0
UI+4otZx/Z11Ti/m9QFrz549hWa0wcHNFzQ3fpfVzukBFqpXu/G3/u5o5z85
2nlQvXmgFmJ9rKFB/4rlMn1d0+P94KCw2ZwZW2Y+mTIqueEcN/Qi9CHTH/+v
+b2t6V2MH0Z9Lv7ZyrVrzfm9UYyOj82cIvxregZQBzEL/1rPFxrYtkOHDIOh
gZJvcULtwtoH+c3ogsQkVqxaVai2fT99ljdtMr2WNwesYC5nYatJM5Ok7rK6
RiNruqOpidW0OdVG2p8vXFvqz6X4xukPiP8dwh4C/e/i7MH654G2MOBfA2Tq
9qnmOIXD5vxd5KnAJ/RR26O+uJ1DhmZKPbbpg8+cOqcPPv9/Qn93h7LMzdg7
jhgLjI7+jcZJHjJ9A+br+V5l95CjR317iNrDccc+WGjrzMvCjtgL0Ee3B6zg
fHb+tsWTx8iyFvfIpjb3ys72vtz240G57b55ajXlU+apKZ8zT+0n5fNfR4fo
CxfI57OD+TyAyRc4y8/orQrq6NObyfcTm8ne5fNKZHN6cg5xZmZwHbEnHA7m
888+K9TvnpjdNmU4t/SOy8jIMPE3+o4Qe7N1EMQlZi9ZYnr/wejb7R6ix4Ba
B2sf7CfYx2K1pVBsjk2mzEmRmnNrmn2hwboG0miLL6/Gn9ue64vdRb8YlFvz
qbM/BNwvTD84yefzYO081P5gn/Mz+s/xpr97OHyevmCBqekZ58TFuQ4Mn+s1
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
lgU19AI6eqvCfA7Tz3Zmo09pIv8c21hyzp4pxOddunc3x4Y8lCEBM8HtTDry
KWBhGJ14zfPOnsAidkLODfkNZeHzcBj9tLLWHN2niLcFzvoysyaowVBmIM/e
2IfuI8/pvsUcQMvkvEeGcvWuJo0kt35debpebenSpHEBRifXnXoqZnfQs4B8
HPoWkJNDLbbZP3SN1f+fU04N5vOEqQlSeXRleXSyw+cLavvqz9eG0M9z20mH
p5z94TWnP9y7Ifq3/+DMXvwtvlQ5NkVp6Px+3D/iZN+xfSH5PEGvi849e5pj
QKxztP6txCeWb97suz/odXks4P4A977g7Al2rmnG3r2l5vPycvoefc/J1Cbo
ZyXfgd6OZk4o+fjODAqT9/G5b4b9Wd0rLqpvYHl7t9ru+nZt5ajaxiu1asgH
em/5qlF9+ah1C3mue4wc0b/f09K9fHdPS3c3o4fD6Sc/OFYCn0eO08Ni8whw
emre4NGJ2dHDQvJ5BTD6kBL5PDKMviZ3YcT53G1a+vVidHLHF8UPlAvVq8ob
ddSHbVhPXlR/KlpZvXGLFv65V/iRsCX6L/PI8aPgTHiMR/qFTVc/OxJsHsjo
sRNipfr06kYXgc9NPvO+5oX5vJh+P4bHnHk5JfXjDZfPC9Sh6+vyHvh3vV7u
JWu3rQ3J59179TJz5GyOu3/+r7IWPhi+DfOnYDN8b/QSFl+jefP9Lcq3O3bs
CIvN6bsH+1CTQM8A+i2dc+qbXwuob7a1jORR83xmAKMv1vO7/9Gq8myNavKe
+tdfq/+U2bSx9FX/GvugHh2dlFwLcjThdPI0A+0DJhusNsMM5HDZPBSnNx/V
XKpNrWZyKfx8vt3Xi8DP54H57U5/Zn+/wGB97Nei/e8y9yT41deToPf7vWXN
jjUh+TxVj43tc87xMVy2Zo2pzaYOG0aHg8ipoDcUPjl2wCPnj+9t0J8tD5+z
MvR8YB+mF0IRfckCa11t/fsGtVlsY93CBbKycUM582hleVX964/Vz/6scQOZ
q/bRnv3DqTe2fd2Zm4dWCqcT67P2QR7BUF3F9Ya3fD6mQwOZUv92w+fo59Sf
2/5wh5z8dlt//rLy+dWB1U3/9o+d+Wp/T2X+eb38+edF5riH0NDD6ROXHtDL
ndfg9ZT/D08rrKHTp574J7Ga4Jl01L7Aw+S7MAedXuaBewKMDLuvWr++zHxe
EqdPVfYiBouGTXyPPYrYkYnfOHXxtl8Z9vG22gdzAHfpz56gViIxQfZXekgu
VtfzUKem/LVBXXm/SUPJaOpj9EZOLUQ729ddjwOxigFJSUZPZ9/APlJHjzZs
DvMHsnn6ynSpnFpZKo+p7NPPZ9bw1Z/r3mD6t28JqD8/6fC507+9wHy1D3v6
5n38rW/BHJtyxPAK9XPXfSE1OzUknw9KTDR7aIwz35RYzUSnNytxO3t/OBYw
4zRwT4DbN+o9oax8XhZGP3jokNnjibHRn4ZcMNNDQ/0s7l/EEIjfBN5jeMxW
mz2o97AV48bJ5kceluNVHpHnalaTd+rWlr+p7/Gj2sdvzfU6bNFUfmrVQl5S
Tn9S/263MrqnpbuL0T0t/cYw+uH394fJ5+Vj9NFXhpWez8vI6KlXE1MGZUUN
LpLPI8zoKdldfwuP0cuX77783BzDjRXB6J6Wns/o1ASmK08d03vky7Wqy0f1
68g/1b/+pVljebd5U1muq4tlMMfH7qY+VC9nTjks1k/9be7To8ePjxiX27Uj
c4fUGVVHqs9w+Hx1AJ8HzssJ1EOYl/NxL+n9hfpb3wTM0/p5YJE94sJhssA+
7sHz1ugNZuat/aOfYcHYfbHGfkPp51ExMeb44XvSE2q+44ORe44/Tt9i+oTh
B+N/s/iaHHi+Ty/9cPicnPa0MWPMDDReP9P2H1Peey6Iz22veHwodA40+4w9
e2SR+lBb1b/OebSKXK5dUz5V//p75bFf1T6+VP8prVlTaaP20dLp223so08f
/xx7ax9xgweXmc3tQjt/dMyj+Xy+JIDPrX4eMD8psH+7ma+G//2V2sO3/Yvs
GViU/x1OX3//7L2Avv5xR+NC8vkQZY/25PaqPx6nLEK+AecJTjY9rA8fNv44
+iksfho7UL8cbRsdje+Re1EeNud8WM2W+A09/WDBwF6Fdq4XdmHtAx6DzVbO
ny+LH6kk+yo9bPjrWh3lX/Wvf3D86+d07wiM4WAfMFhXxz76OvbRX9ciZVL4
q6T56ju3bpGxDe+Tqcrn5LcvanqXrGp5t2x0+Pyg0x/O9m9nvtqVgb755x8m
1pTPlc+/HlZHvhvuq0EvkOM+KWgGeiENPSjPPZxZa5bP9bU/GtlCTh8/WoDP
O3ftauYJdqJOZMAAE6eAh4nbUX9MvjD5MuS9wGaBewK9/onjLFN2Li+fBzP6
5cuXTU204cRZs0zPgEA+J05QYN6X00/czBj48ks5q3Y0u15d2fjg/ebeAn+9
7fDXT9Y+WjSTPs189kEMx/R1D7APs38Qy1F2pTdoYK48bE6spmFKQ6mUVsmn
nyufc5+gb2SdJXXMvcLMV7P92+3+cLGDb77DK8rnV2J88zhtTNeZ+RGc4x4q
hhfunAe7N5iZnF/ESeaRzEJ8HqfXQJsOHUwcnL+f+AQ5JtQDUXNPz7ytyuj0
JTjs3B/YC+yewD6xQveD8vB5aTidfgqpahu2/77lc2q1/Pq5nUfyWcHZA+wn
uXqtL3/wAdn58IMmtveS+h7Efr9pVF9+bqrXYgu9DlvptdOquVlvR3eUi/o7
Xr67p6W7mdE9Lb1oRt/z3o5S8HnZGX103rDfysTnZWL0wQMTzkb3KpbPI8jp
yua/wud2VZSWvjB3quEbtzG627T0mQmDZfNDD0i24a8a8mn9uvKd8jn8JS2b
mnvj+7pWtWwhXVq3lvbqQ8AVUc6cdLQw9F87x3jt+vWSrb5UpPh82ZplUnVc
VR+fL3D4PCNfP2+b5esPF/V8VL4eYnnscx+P9fs2vwa9OD2kpLnXwWzuz293
+rjz+sQC4ED8vg3bNxTic/Rseu/hh/ZTZmW+FvXH1N/ij+MDk+MMh1PHh1/O
PGD8YnRV2G26+s2wd0l8PmnKFFOLQK8h+Bw/Hx+f3GjbcyqwVzzsZeat616J
7nFBf25tTBfZrXx+oVpVyatTUz5z+Pw37KOFzz6ea9lcRrVoLp3btDY+JhyG
feBj418zNwittTxszrFrkdZCqoytYvicGUr44LaXP/Zg+sNlPWb6t/v9b+af
v63+94cBNQ82pyKE/12aOehFxWoMn9tYzVs91W9dV7j+XP1a2+ec2hFyT8hp
NX3w1641ucTktZIvSk06PQSxBWyCOAvcNkt/tjx8njhkiNGvsT/6caHRBdYW
2/x24jX+HAtmCZBjofZBD4T19erIIWX0p5TP36hbkM+lZTP5j9rHKbWPLmof
Hdu08dtHF+I4vXubvF7mqJXE5XaN7dlBxtW5zejnsxreIQua3ikrWtwt61vf
a+af71c+P6F8ntP9ETP//IX+VeX1uGry5iBfj7jPUqhBr2NmoJsc91E2x72h
L8e9SA09iNH9nB7A6vb//vx2h895HeX+/4xtKPumFNTQlyxZYmoAYHRiW8Qr
ho4ebZiYHt7ETcip4Nxw3tkH7J4AqxHTo99jJPg8kNPJWyK3A/5CH12wapWp
heY9YUPbty5UP3G+JvZ3cPUq2aR8fiKAz78M1EfVPj5V+9ionB6ljP5Y2zZm
5j3XRLdevaS73l8mT51q6ptC1bNfeuqSPJT8kJ/Pq07Q+8S06qY3Re1FtU2v
koabfL1Eid8xi9PMd7jQ3jeP86VOhXJs7D0jMIYXzj2juP0hsPaFuN2yfcsK
8XmsHuumrVr5GZ09gVoh4nbUQdn5hP+PvbcOjuvK9n/vq1fv1atX9fvjzR0I
GmKKmRMzswWWmWWSbEmWQbZlZmammDGGGGLHDEE7EwY7nExyBzL3N5iZycxk
JrDf+qyz9+nTrRZLdpTbSe2S3FK3pD7r7L0+C76L+x4dSa7DcbsnYBOcGZy9
JcHnBWH0VWJzg1xcXs4Zp5vA73ZSzv9LVr/CzR4Iq7GQvYSe+f2jRnp8XqeW
ebVhffOJ2Mcfmjc1X8Hn1j5Mx3beElY/nzZa36tYvXsslx6rd//h5dL3fPSY
mXy7MHxeNE4XPv+2yHxeSE7PuJXSN+VafNcC8XkJMHralV7fBPm8tBh9ybWp
Pp+XJqeXJUYvaU4/Iiw4p349s/fhapoffasx9amPmC+Ez7/WGHZr74y0MWzW
0/LYgbZtzM42rcyxhQu0r4yaaHx2cm2cx3uFK6iNLgk+bz+uvcfnc+ubRssb
+fXt9J8H/S14LPGNxBCPfRZe4+7yIdpTKCwNQ+XH6Ln9774vjM+/s3wuP4cc
DDWTE7fm7EM/LbzVPTFRewZUHz81VRmaGmN6gGEztLzxyfHFYDTqXNF0xj8j
jzV9zpx82fzFF1/0a6fnLlum7K+aU1euaH3kc1ZnSLXif2N1oe11dH3o+FcH
JmWZxy2fkz//ddNHzV9sfUWkfXwn62Db1mZvm9ZmY/9+5gXhD2aE7ROGKC6f
r9m0Rv1w+LzurLqmwcIG5pGVVr99j9VvZ77axc46/zzuRet/ux50N3NPro32
mOJ//8P638Loag/fhewhGqPnZQ/OFpxGHHZGrAYbnLMzZx8695/W9tr+fXKn
MDq6DrPRwV+/XtkMTqcXGRvAFrAJ5i5hJ1u2bi0QhzNrnhzrBnnOJjtX/IT4
0UNHjVL/Gtvj9XjtSH2614MaBdY++By7eVZ4eVfHDuaJml7+nPgN9RV/y8U+
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
Qjl014f+aXjONAejB3IiTsc76HcFfa/gY+77eB4+G6+FD8frEw8gNgAXJjyR
EMbnQUYnX9UtLk57DvHD3IyyPsJMcLXOKRsxwswcOMC8Lxwe1N3SnryOXl8e
fLZEfGj6zDfZGcXky7rmog9OHys1jqoPLn686oPL+01f+iWrB4wGL3WsS0eO
MAsrllcdZudDqX084tnHryPsg39/IP4VsZvXz5/TXmVqGsmpUdN8fGy63l+F
4fP9B/d7fJ4RypPprGN60FeH7KHN43bOsathfT6ihvX9kJa787/9ugrH6P+2
Pvh3IwptD9gCtqR8TqzG2gJ2mLYzTWscHKMHOX337t2mt1z3lgFGJ7aicxLE
JyfHjS1sED/9zfZto9uBfP5p545mptgBuTU4ancu89KYgYXut5s7jX8N/5OP
g+uZDwDbw3R8H3rxqhtu7YOcGI9hH6umTDZLHqqgOmAnxD6uiX283LCe9qI7
+8AusA/shPnG1Dm/uGWz/k5bc5l3HpXP691jMoXPsxrdpzXuLoe+2M5Zy1Hj
rnPWwnPowT7036Y1Nn8YG6pz/7dl9O/8XnTH6LYfnTx4kNODrO6vwNfQgJ9t
+Xy6lz//58Qm5o2MdsrnkYx+8NAh01bY3NVTOEaHgVTvXuxgpFyrhf37mY+E
y/8exQ6+k89fTkowqcJwWXaGNj0O7An+7Ab4XPxsx+dOV5t/H5Pv40xhzkQX
O/uNn82ss8mzZinvw3nRZgxgF8T7+MjPOiJ7/hKx6xWVKmoPFXXM1+phH/XV
Pojxolfg7IPeY/qrdo3LzJfPe4/rbaoMq+LtC2nVvRp39gbXhz4nMIOR/WFX
S52z5nTc/Rhe5JnxYe+wOnc/rhtk9ECte3D2Q+QeEXZWuDgufP6XIfr6js+D
jM6aPmOG6Sj7gNMl6CRnBIyeZGvKB4gNDBVbyBoy2Nxq29raQcswrYdvhdPP
yv2fInbALPkwPpd7mvuYWAq9K9RRwOdBffXTETn44Jon+4uLITmdWF9vfvFi
nUeyMbCHnAjsIe6MwTeg12puvbpmdaWHtAaHGr7r9TxGJ0fwaYR9sJc8MXhQ
gfm8rDF6LJceY/T/ybn0GbezcufzEqx3n/hO+lelwudRGD3189T/9z/Mf/wf
KZfj/lgsRi8gpxeUz4vL6WOv9DXXn75+Vxn9h55Lnypn6tB7fmYmPHC/72PD
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
RWVzt4hDpQuHt2rQwM+Z6h4hjK57hDCZ7hFiD/z8Jy5fVu14zoOgLbwhTJMb
o8PnD3R7wJSLL+fVuRO7c4w+2DJ6QLfE3x/m1ldGp+7K6cU5Rte4bvDMuBw4
M24Ezowgp7M/vJvL/mDPCn9veMPTJWHP6b23d+58XrmyaSX3ETE2vW5yzvbB
DuT6+5rnYgfDrB2EzoUKagfuTFg9aZIZPnJkGKPTt5LQp49qVKjGuuwJ9KtN
cnuCtQP0AYvD5m6xf/dv1NC0l9+vZaNG/t7k9oiEiD2Cmjx0C98QRnxf9gJn
Cz+X9+qpc+diufRYLr3MM3osl56T0Td+sLrk+TwKp2e9k/5N7nxesoye+dao
3iF9uPh2RePzwjN62uWeXyuflwKjBzl95pUxyg5ljdF/qLl09LxXWE4nt9NP
/Kxecr7GCbMnCoMNrlbVjGvYwKxduMAce+opc0k4jnk95EXekfv8w9//3nzy
5z+bT7/4wnzypz8po3MOo0m0S/yBSD5fv2m9qdyjcig/MshqeI+u5vcWqn53
oLfQZ3TXj37cMtlZW7to8yLdngv4XHCZMJX6XcJX6nsJd6v/BbPbBa/xmDI5
HCbfn/Bqgr4GjIffpWwu/EcuBo2yKSumFInPNU8t3BQnXA6jD/7ZT03Kffeo
5hZ++XSrf0xeHR31uUk9zCTxt+kvdzrLLoeJT651DmPHhtW146czxxbeLgyf
u0VOg3p37KGX+N3x3bub7uIDxsvP7yO/x+h2bc3C8ePMwccfN5fk72GGD7lz
cqVqC2IDzhbwxbCVrdu3R2X05PHJniZUrwrK6C6PTi2r74NPDtiDi9k4Rqcf
/aA3V4m6Br+2Qq4XuXR8cMfp2pv+akLB7eEtz/fW+gl5rovT4N+Tj+Nnzl43
u9B8ztq2caOJK1/Oz5sRq0m9N2QHzJTGBlQLu2sXs3XnTo3JNHNzieWaxLn6
BpenysjQ648dYA+qB3jhgs51KyqfO0bft3+/GSA217FNa9NJfHHsIVHsgZ9N
XTXzHdAi07id+O/kSj/43e/UBn5hbeFdOb/RKrsgv1OQzxdMzzZJVYRNqgmj
V/cYPbmmMLqdu4amu6tzn2n13Je38maubYnG6EnVzQVh9Kt9vdlrNwbaevch
dc2b5NJtX/qHgXz6fwVY/TeW1yMXX+N7yJnD9+/L89+W13tZ+P+ZfrXMtgXT
C8Tny1es0H7e9rBZndphOmvJVkdrHBpaqpXv2cGsShXNstRU7WXoGIjVOF1I
rX1yOWxb5+LsYPqsWZrzZLZbcRmde3bH1q2mX7t2prNc/zZNmmi9dXynTl7c
btQo1cZAk4xYzcs2VsOZ4PYFYnevk0cXm4rk870H9poHuj6gfejsCzA65wSa
7uwNbja6r1syzs5El/2BGJ7W2ThGD9S6K6NbzQo/judy6dTb3IiI7b4Rvj9o
TM/tD8Gzgr1Bnse5Q8xuwWMLctVunyZ7dYumTXVmmWr9yXVjH+/VupVqPDjN
c6cZhxbjeNXE92YmYAcr5f7mfSJWMkLe62A9RTB3TRw1eDakiy2wB6OVXhJ8
zrohZzl6lwNbtDBda9Y0rRo3Nm0ffdR0ld/FzQFgP2IeDLP/Xpb3wMVqsIFf
WFsgvotfUNYZPZZLj+XSY7n0cE5f/t6C0uPzAKNn3U7/Om8+LzlOz3w7pXWo
vj2xdtH5vHCMPuZyz3/7fF6KjD75SrLP52WR03+oufTgOoWe0OLFZpqcr2OE
AdB/ojaNuS1hTGb9cD1vhdHxwWA0fLKb4kds3r07qm5cs/7NwmoYKw8OMFlw
hs4Cy+i5MJnWu7u8iM2dKqc7LrsZYnV8L+Wz1zxm9xf/ftVjcr6PHCn+Gq8B
4+F3KZsL/+Hn4fMt3bC0yHzuGL1H5UqqbzvgZ54+EDOKyKeni2+eXrWKmST+
Lpp81KmSC6E2kjx6ZzvrxuUnyFfB6vhkY4TJdgrLwebBVRROd+vwoUNm7fLl
ZpD83Azx/6mXJVeK5hA5EZgsmD8PswWxDXyya8IH26PUuqdnp3uaUInlwxnd
zUVHD2p8jVCvqY3Z+LXu9KPvbqkxEz9P5nxwF7dxnP58yB6U1fOwB7UF+brj
cnx4tQXY/GxH/TnUc/DeFoXPWeniX7d7qKLpJv54LztfYYTlM/JnmdWqmpkj
hutsKnSZV27erHZAnKZVIHcJm+EP97d2MEgW/cNnz55VNnerOIzu1m65hotm
zzKDxRbSBg7QOurtBw+qBhnsTd+5nzOV8zloC+wTr4u/uXXHjjA+X7Fovkms
+mPTs8p/RmX00XV/pnpxE62e++ymD2ov+orW5c26CEZ/3PajP5n0sDnfq4bO
R3f17uTSX7baceS80Y+jbxzOJqcOqzOTDV4nN/5ZYPEY/et8Dznzd+R5b1o2
57XJ2e/ZtK5AfI4mG4zm8o2da9U0XeWax4sNOC10etLhs7HCZVlNHjXzhK+Y
r0jt+ib5SK84Nea8TntbM50YyGEPtPMbssResDXY3K3iMrpb5596SvO/Q4Uz
x4qdLhZboO/9sDxOzzlzvZi9TX/De+KzhdmC7BPK77IHBPmcORfweQ5Gd3tD
f++s8LVFMwK96Lkx+k5be3WojepFuJ504njs7VpvQ5+U5XQ/lhdtf3jN7g9u
b+CcsPFb5q6v3LkyKpvD00tmzTLtatYI1YPLfex6FPqypz9cTfcCx+jJ93ia
+GkPPmDGydfGy3WGr93iupJHJ3YbmbtWbb8hQ7w+lJQUtbngc0uS01lrV6xQ
WxiW1MOMz0jXfYF5DsTtmPnH/k+/0xty/78rXEDuXG1BFrU1e3PpR4/Vu8dy
6TFGL7u59LnvTitdPr/t8udp/yoYnxef0SfcGlXd8Xn6093uKR6fF5zTx1xO
+iqMz0uJ0TOv9jPXrl8r04z+Q82lR670zEztI6R3TZns/Hmd2/OM+FYvid+B
78V5i+/tatbwvWC1l8Q3o/8Q7aFIPh+bPTa8z9BqhDkmC9P/WRBiMmZhN9/m
MZnmRQ7b+mbnczlOh8uoYRS/y7FZ9xsen+l6MbD4N37ZCx6H4W/xXHwutOh4
XWXzI21My30tTftV7c3R40e1brg4jI6m+4zx481A8uK1a5v4Bg1MryZNTL92
bTX3Qf5rwvTpWpc4feFCrVEkPwWbkXtDvytO/DtYfWRqqpkvX8feI9m8JBid
33e4/E78PvQ1ozn1uPAf87zQhfv5e++p7/WOnCGu3+Gj3/9eeR1WI4e+Xvgy
ks+xhfLdynu2AKP3rOD3o6MJpZrN6VEY3da6oxkX5oMftj74ifYat9G+dDj9
ck574HoH7UHjMgF70NqJ57ppvAd74nWUzU+0Uw35QcsH6d9Q2P5zrsUa8V8X
LVumua+WjzxiOtarZ+LlY58WLcwgrn/nTqqrRI06NcpoDaDTjd4Wen2p4od3
kwWb4ZOTS8cvnykMsEHu1SCXR67iMjq1FcOsLSwSWwj64VfFDycuR20Nsbtg
XTOfs1+gI/mUMFyQ0Xs3eMgkVv5RiNEf9jTjnK77mLreXPRJrhddGH2RZXSX
R6cffV/XKqrrzuw15qO7nnRy6c/097TjqEWHq8mnu7p3+tPfGe7l1eknh8E/
GOnl2PnIY7A830fOnOeSk4fNr/SpYQ70b2IunD+XK5PzNx4QBlkp79d2uXfm
C89w7ZtbLW7iLAnyb3Kpgzp2MCO7dTNjhHvHDx/uX3v2gOyZM/UawNnMweN6
w+nt7fwr7ID9YLzsHSdPngzj8pJmdPS9B9m6+oliC9RRMHMRzfBT166Zy7Jv
EMfVPihid9Q1y56gtiCfYyM7du8O43P2mnZD2uVk9B6BvcHpSY6o4s97UK2K
CEbXfnQ047Y0M813BOK6R9qG4nhnwzk9GMvT+O6N0Dnh7w9ub3DxWzlvqNvp
urureV/OPMfkaNJz9nLN1wofo5/eW+7zFrLHh/UoyB5OrfvAESPMALnmA+Va
DhdeHy2smyHXcsLQoWb6/PnmnDw/krFZx48fNyPtueB03bEn7IBaDe75aM8r
SUYnLuz639ERZf4LOoXMEmDenx/HtbE74jUfWluAzy/iU4hPdacZPVbvHsul
l7V697KSS//8t5+bKbfHlT6fy5pwa8xXBefz4jF65uvDf+Lnz7c3/L+Er/98
Jxh99OWkf+bg81Li9IvXzufg89Lk9LLE6N+XXPop8bOS5dyntxTfy/fD5Rpd
ES55Xvwzzlt8bnxxat1hdXrSYbWb5Fjk3F0uZ3Ukn6MVVb9n/RCX9bKMPjSC
0QO1i6oZ5/IizMPe0cLzuWzutO1xW+P8ZITfJWylvpfwmfpfMBrrmW7+5zzO
bHXlMHkOz+U1yIngy8Hm8B/52oxFGcrmwVUUPqcGfc22bebQmTPKOy2t/per
W3YaXNQowupo4WbItaBecYL4YKsqVTTzR47IlcdLktPnzJ2r9Yr0Oc9buVJ1
45mxe/LqVa2nwPciXsN1xxcP2gJ+OLbCjG5sO5LRx88Y7/nicdYXpx+9t/jh
A0OMTi2rMvrknD74o+u82UpaW0EufX/rnJzu7EF8aXLgBbEHvseP0cjz0aFT
W5DXJh6QvSJb2dytgrA5vvRCef+YjXfiyhWtBcZXd9cev5q6CFez7upT9drL
QmMpW/z25+R9zIvB81vF4fPR4oNTR40tzlu+3KzbudPskb/r+KVL5vyNG5pD
J17DdX87YAvsEdTcMPPhsPz9QT7PGNjLJAifBxmduWuDqsPoaMZ5enGRjE4e
3dW6bxJGR9d9j52PfjSeXPrD5kzSw+ZcL4/Tr1lOf144/aate3/Fsjp5dXLi
b9kFt79tP+dxvo7eHPPbeC618+Tn6XnfOH2c8iorks25f9DQh1e414lpPSPX
gPhLmB661Q3rZ/UYYZ3gtc/Kzs6Vt4u6isPn8+VvQpeC3xVbQJOSOo+dR48q
i/J3Xpf7gnPgNeEruIz4ndsX4PZdhw7pexRk9I3bNvp87hj9wfgHVUuSvcHF
c9GMy5XRbT86uu7aH7WpaagnXfZx4ms+p5+y+4OL7V4OnBdPdw3tDc+E7w16
Tshz4Hz2mvV71iufs+gZW7BkidY8UHcGo16WvfeUXP+pso+2cPPqAj0Kqutu
exSC136sLLT9YP7cOLs4q7hszp7OTALX+87vO0v+9lVbtmhMnzmPZ4jdyV5P
nJZaq7eE324HbIHa99Py3uTF57Fcetlj9FguvWwxekly+i8+/+SOsDlr/K3R
/xz7dmH4vMic/qc+x/r8n/8R+E/Y+tOS4fO8GX305R7/yJXPS5jRT19/Ilc+
L2u59LLE6IXhdOZjUT+N1gzn7drt27WXDN+L+sWrltHJk+Nr4Y+j/YMvhn+O
n35G3p9V4qNE04nrMrSLagEpl7mZOkFGT/dq3d2sW9XxXhTyucilq88lrIRW
GLkRx2X4XfSnOzYjjwqfwVrKaIHV6WIn72vnLJPLc3gueVJq6HlNfDriAe2W
tTNHjh3JweeFZfRlK1ZonThzq08T7xAfHl+spfPX0GWzdcvUr8PG+G3UrWY+
0thkVyxv5qam6PtYWD4vCqMzVwdugA/J4a60vhezdcmbkiuD0alhpP840hZg
Murho/H5+s3rTYXuFUL5snibL+tTQXWhXL+py6NrP/r0up49LGzozUen/2Fj
Uz+X7sdtsIejEfZAncVTncLt4VLAHi54X6NGnrwY/rezBfx6fe21rfWaB/k8
P0Y/JteaPCgzjvBZiV3p3Cm5p4jDaK2ynW+Nrx527ZmpIOw+NiHebBQmLg6b
F4fTDwlPJfburbZAHh8tuuVyf1PXjHb7qatXzUWxb+598ujE74K2gH3AKZF8
fvjgAdOzTnmf0ZOE0XtbXfeBPqP/NAej69w1qxm3pq03e21bx0pmV+fKZl83
L5d+LKGa6rvTl36+Vyifziy252xOnR71F4XVfy4LZie/7i/7OEzO98Ll6M/x
OuTnj8VXM0f27/X5PMjo6+QenzxzpvaN+5wm9wrMyr7J/a81FHLtO0Rc+/72
2rPGTZyYo079bjM69TrEE/g9iSNR50NdM3P+9p88qX8rNs69D5fR90B8xtkC
9gHDY4dBPkcrvsWAFmGM7p8TgZ50v+ZqRNUQo9uYLudFvTn1vNlryxqHam22
hOJ4rv5KOf14u7DYbo7z4lKUvYFz4kR7fX6HxzqYY6eOKZujrzAhO9vMkz2e
mfTUE3AOUmekMUz5+7esXWt6Dxjgz8sIXvvegft+uOwLzLkI1sqXBqMXh9Mf
F7vuavXu1BYyMlSjFO14YlK7jx/XvZ9rTZ07NRW8D0FbwD5Oy/5RED6P5dJL
j9PLEqPHcunfb0Z/61dv3Dk+f3v0P5TPS5vRb6d89B8R/6Vcjnup5Pg8d05P
vZz4ZZ58XoKMfvjanjz5PJZLv/uMvmPHDvW/iIkzuwffi3zf3hMnzLGLF5XR
8TV17rX4pJyxN8Rv4/zlMfSiOJeXy/Oi8fmefXtMrR61PN/L1jEqo9N/nBzo
P3Y6vVPr6DxsrXenvpmZ2OuahHIjlsvwu+Aozakftb6X+FH4X8popzvkWDzO
98Bx8D0+F74bjMdr4tPh36UtTIvK5oVh9EX09QvXMJMYpsFvoReT940+XrRu
6SOlv5i8Cvn0nsLsfdq0NiMqPWTG1KltZqen6TUqCpsXhdPpZ8b/whZc/SK+
J3zB70xNBVyGLw5zYgs3A7aAn37g9OmofM5qPaB1KF/W7cEw/eagJpQfswna
A/XuSxr5uXTfHnYUzR7UFk568Rm+14/RyOvg1+PjT1s1LQeb58XpR+V9wmfH
Z2Uesevd5/2BX4lp8D5Sq0L+nPl22lMcH296d+hgkhs1NFliB8/I/lVSbF4U
Rt+3b5/aJPUd5E3pfYFDmLVMTQBxB2qbufevyfsQaQvYB6yyTPgkUsd9YOuG
yuchRv+R6SWM3reax+j0o4+q7Wm6O0afajXj0HVf0rKcWdWmglnXzqt3d7n0
A7YvnZr3Uy6f3tPTkGNmOqwOb6PxBnvD7M8NCC0e42vXZfG9l+V5F3rV0Nd5
Ql5zXXJ3teEgn7O4P8cKV9OfsGrrVq31JX5BXJM4hevLZs4UeufMJqPe2b/2
cXFat7xr9269Vx3zlwajF4XTmfXgZjBiC2gjkEPnb0WTgPsdRqfHib/Z7XG+
LYh98PVIPmet2bRG+15yMLrNpfuMPiBKrfu4mtH3B5dLd3E89gc4nXz6Qbs/
uNiu3R/Ireu+8KT9KP/WveGJwL6wt5UZuWqknztnnliW3SM5L9njtR9f/k7V
SLM6HS/L944T/m7buLHqumttulxzamioF6c+gf0yN7257wujPy73vZsp0UvO
LeLI7GP0ZRC7o+6OWivqp9ANJBZN/C5oC/TFbJY9pKB8XtYYPZZLL1uMHsul
F5/Rb/zyuTuYP0/90ufzInF6gRn9xSh8fq7k+Twnowuf/y1fPi8hTt95bWOB
+DyWS7979e7wOTWX1K1Razdj0SI9bzfLeYuvCU+g0Y7/BZtx7rKod+YxfK89
8n0Lli/PdRZ62pS0cC5LiMijj7SacWNrhNcvzqmvuRHtS19lOd36XbA0dYw+
mwljK5+JL4UPRq06/O0W/9bH+fohj8mVxfa21Neh3x02b76wuTlx8kSefJ4f
p1P3OGbcOK1HII/q17sGdbXEd8Nn4T2Ea/HtzoiP9/i+vWb+9OnmlPg6xeXy
wjI6fa7ECbAFcujEF4jX8DfsEvaEy05euaL+F9wZtAX+PnwzuDQ3Pj9/4byp
06NOeF2r1SdQRiePTq37qGq+rnvNidYeArl0Zw8+p0ezB3zxQ/Z6HwnYw1Fr
D84WiM8c9GwBHxx/njr6xAWJ5uKli3nyeZDReY/HZ2VpXEP11A4dUh0HX+9c
fM2g3jnXnveMmMfRU6fMsnnzzOEDB/zXK2k+LwyjHz161J/DyHw3dMLpkSfu
QLwJRsemma2FZjN/4+WgLcj1p+Zi05YtOfh83arlJqnm/WGM3kPr3dF2DzB6
nVCtO7PR0XVn9trcZl5P+nI/l/6Q2dqxktnZuZLZG+B08unUvdOffiapuubA
yauj8XbJMntw8dhFy+RwPXn4U/JceP+xxLpyX+7OweasDLlPVD/d8jk9ANwj
vB/+/AvxrZxWFnW+xC7oE1iyYoXZv3ev2lG0fvbvA6PPFbvUuV7WFqjJZp4X
XEq8Bjsnd8y9T42N2oLcC84W2Nfgtmh8zmrcp3E4n0fk0iO1S5TRU20vDDFd
5qMH693z2x/2RuwP0c6KiHOCPSVpVZJ56eWXlM3Xrl+v+vloM6Dlx/64X94D
7mXiVS++956n2SL+q7vul+R6n5L7Ze22bVpXAu/mxuR3gtELy+n8vmhWOm06
bGFEerrud3Pl7KfWasv+/Xqtqb2jXoxzLWgLvD+nTp8uFJ/H6t1jufSyyOj/
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
mZlWUxHttOC9vkBsgWteXDa/m9pxS5Yu1fno6BTweWHmqhckl54+LT3PXvQw
vTjH6DZ+l+OcsPFczaePD98P+Mjj2UuzzYs/f9Fn80hGz5w4Ueu1uV+JsVIP
w+ywIJ8TtwvaAvEa4npON3GV7PHu9X4IjM5iD1qAXqTYOnMs0AgtqCZ8WWH0
mHZcLJde1nLppc3oz//XMx6f21WajD7+VuqXxeLzgjL67VEfRGNz1Yi7FPdc
Dj4vBU5PvZzwt5x8Xjqc/tjVdSXO5zHtuDuXSy/JBY+vFv9ktfgp6zZsMOvF
T6U+HLbdf2C/qZlYM2evYWQu3XF6oJZRfTByJZbXa2TU0Lpn5bUM73FmqyeM
TTDbd27X3yOSzblG6BGjb0Wek9r2M47J7OzqMD/8iy+Uz94TTkOP+9j589of
4PevC2OTW6A+nLxzktV5HpGebjLQWZs+XXOr6Kqhf8xH6uDp2Swom9/pvvSi
Llh+rXAoOnsbhU82ia+6edu2qJzOfd28X/Nw7eaImlZmpMPp6osPr+rbAtc4
mi3gmzs74Ovt0trp9Y7G5SzyPuifwVb44dQn03d+lblJgfz5R8Jhzg/HFphv
DL/To0/NJ7mkPoMGaV9IqtgW8RmuMTEadI5Z2MAUsQVy9kXl87s5hy23hc7e
erm30VXcsn272Spsu0WuOXtsXpy+cc0qM7RD0xxz0XtpHt1jdK11r+X1o6MZ
N0YYPT1Q704u3eP0+5XTXd07rB65YPjsPp3M3h3bc7A5f3+G7aMlZ0qshrx4
MGeKNrfLmX7ypz/5tkDcjh5zaiiIz/j3ulxzrv/UmTNLlM3v9hw2t7i/udaP
CaPt2L1bV1EZne+5dv2aSZ6QnK+me8V+ucTvXJ1NYF/Q8yGjhr8nJE5M1L8x
ksuDizgEWnj01Ttb2GNnnqMroDPP5Rzgun8QYQv0PejsSbGByJx8Wcql56YZ
t1n28+2yT+6Ua72L+ef79unjd5PRY7n0ssXosVx62culn/3FqTA+LxijF43T
M99O+Vux+bwAnJ55e+T13Ph81MW4I7nyeQkyeurl+L/kzucly+hrrszXfiVW
WWH00uL0ssToJcnpvJ9ryR2gq3T2rOqiuRlj9HWToz5x6ZJZsXa1GT99vEkc
mZhTz7t3qJYRTSD1wWw9o++HsVI8f4yP5FCqjKhiEjISzOjs0fp7RHK5W9Tn
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
bLgk2BaITdAHrl98vBmVmWkOiw0VN089mpweTUbfLfs0tTrTbL53rtXOXU0Q
XOrd47nvj+bnl6ijh8PpjtU35mw06ZPTTd0+8izoK8+CfvIs6F/P1I+rbxoM
aGAaxDcwXYZ3MZu3y7rl5gSYG7ujvwq9KZfK82nVhg1ac8MzJ1hPX7V6tcZV
ialiC+S4U4POPA5sndgd5429s88Rh2SvC9iC7BNcE3yU0vjcD4yOP5Qqzyxi
lzwniVdx/t5YHLF23ePtvY6Wfq0ZPZbvHtPS/cboVV1Ln30pq1Q+j1S++5iL
af+KCp8Xx+mXkjJK5POzHfuFzOcVZPTU/O4/hMbnFWP09IK+V/F5LN/956Gl
r1mzRp/j5AhTzw23wLlwDXoa/W3x2z748stAXyWe7U+If7SAXlrCeehw5A/C
RLAPugy1fhupaRa/irUpru8c3I09ML/Je+SL/xXM50fEryQPmRlBaeJvUl+I
ho5uyhw09F9y99BO8b9gDnL43HvBR8c/Q08pjs/LOiLJ5teid1xwz/d04ZpZ
wjL0qCf/E6YlL5ycCTTGdyynse68kicO36wQni2r17urUV8ov3/ZunW6PtgH
a8NaoG2j38H7fB/fXxyHc90fYw8KOhbK2nft1UttQXPchaXp44Yfig2T544v
yprjj2ILz3psAU0VjodXi5ulXtrhF0YP5vQzZ8+aZDvzHR0VfqUu9yo+9/Ru
4GP4jfpkx+ihzEs/IUy2ZO5sPYa0b2p6PXCD6VPjBtOv5o0mrpYcNW8wAx+8
xUxMHWrWyP2oc8plnyW/hfVhnQ4KW28RbuYeKY7LOb8zYrdxvXubcQ+3N4lx
cWaUnN/06dM0/sB9TryGOWkwOvb2pLx3777APsGM+5x9+0pl8spg9GhxOv3S
6KkwbcECs3LLlkI+l3uOe/E5myvzpuVzt8ejpW+vYH/38h6wNja0c9cuM1ve
M+u422q/9HB7yu7tu6grl/Xle5XPmTXZtav2JSf/JW34cJM1ZYpZJZy+ZekS
7TVyyMYmiNOiI+uzymMLGtcLgc+rcr4712KsnDO1WNzr81au1FoefUbzbJfz
1me75XO3x3Ovn5E9mudHqIwe09L9xegxLd1fjF5RTv/k00/M+IsZZfJ5JPLd
My+mfh9VPvcwesbFxB4l1593bBIWn1eA0VPyun0XOp9XjNFPPXq8Uhk9lu9e
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
iLDzftasRXMz9ZabtdZkg63599oBeTbLa9UMzFaG71hL6liZ2cQ9rDXka9eq
ju2tIccuqC2fMWeO3kvrxB5bCeezt5RkH0OTkswGuaeZVY6N8P3KhfXrm7a3
3Wo6Xn+96Sk2ovP8pk7V3A3+FnxO3I7+keQu6xxuD5+7GB/2sU3sKVw+9xuj
B3M6++8UuW/hVXLRtZ+bfO2E3FfYweI+vc2Me+42i265qUhvkCt2cJ9JqVdX
18L1m4P12BNSXL+J+fMD/SaK1Ipv3apzt5nNHszn7mC/6iU8Tg6O2odjdK99
CKv36NVLY4Bo7XA8ccBuxItr1jSdxI67CKP3lfdJDIn5oDPtnHaeMV79/GWr
n8Pk7hnDK1+jDqKyGT1anI7dErdoKutG3JSYaYaLe8p5av8I8REOHDigdrAq
LdXMlvudGqh1Ygc7rrKDe81eYfVjsqdEks/9pqX7idFjWrq/GL08nH7y/WOl
8nkkGX3kheR/FMfnUcl3P594c6h83vzx5v93Ul6nz8Jn9PA5PTmvy9dF+DyK
jL6kYPpVfO43Ld1PjF7ZWjrXPKFLZ9WfYHR6qTPvjH639Fpad/ttGi+nrzfH
Jjn61a2rfhCM3jMuTuezwGZoVuSyo3N1Fl8JTY3+UWis5LknpaebmbNnX8Xm
3oPZ1Ghl1J1q7qH44UeCfCflr8uX1b/Gb3JzdPGfyG+mjnC8/G3W3vF5tBjd
b1r6qtWrzTRhIvwvarbzbM32S56abWIgZ4TRpteqYWaLT44d0DfOawd83FW4
SH1hy+hoL+RU4OPBz2ioMz11oeiZI4Xb0EPJwegkPNdF7KP/wIFmmfzfkSNH
lBnd4WV0jkyxIXx/YkLEAeBzNFhyZk+L7aCPBuZtC3+5edvYCLaCJoZ+ukZY
MZJ87jctHTY/KPfVdLED+Agdk3uGuXjBtdlHt20185s1DdT8B9vBGjm61qsX
0E+Jy5FbM4g9Qdgs01NDDqurLciBpkqPyRPCzr+Tv8sBBywXO+kg9y69pjsL
X2FXI2Vvyc7O1tgSbO6Ow8JVLeVvau4zWqnYRg/hNsdf2BsxAfq9M0fd6aM6
44v8ZTuH29kHNRHURe8TvigPo/st353fTb+wabI+9OBD1+Y60SdAZ6HJXvua
2MFrYgdn5N7M7t+vRDuYX+N+00rY2c1tUx3d9gVnT0j37AnBteJTZs4skc29
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
5nLSYy1z8mStz6VOPW3UKI1bBNe0VzUt3R3Y0tatW4t8rTi+Pi3sMUf8UXrk
qVYktsL6YwfMxF4r18ovWvo4WSf0b3qTk5NMby/OR7Uv8Z3h87cuX1bfGtvg
wMfGPtDRiWdQ94CWTl4FvRiZmTDa2QG1EMK4xfWc8wOje3u8H5LzZc/1cvYi
2Q/IEaCHPfX2cKvuB3Jt1+fk6DPKr1o6z6wUubddL0D61pO/Tj0x/R/px87M
LHgcm8A22EOwFewD7Zz15+epyZ4jfB5cz+4nRi8p551crbkLF2r8wV0fcv+J
cR2T9c/Jza10Rq8MLZ15qcTmuNfhc/Ij6OHPM+asJ7+CGLD3GYN9PC32debs
2agyekxL95eW7idGr85a+tsfldIbLtJa+sW0HyuFzfUYdq4ibK58frbj8mL5
PAqMnprf/ftCPo8+o+8o2Ky9t/zC6DEt3V+MHi6nh8vocBt93mES8r/xv8kP
h3HxRfFByOODe+lLWxXy3Y8dO6bMRK8izU0VPvfmpr5sfSf089+Lf/2e4y+r
kcJnW3bvDnD1euaTtWoVYHRX14+GqrngKSnah4/cZ/J+uTdL6w1fFRm9pMNx
9crsbDNLfHHqrLmWxDqeFs5web5cT17xP8kbr8qMzkx6aqmVz1es0HgDM6zR
z4k7UXce4C+xCfxr7AP/mq9RU8qaa+0ImvLAgZrXSx9B7I7/myZsznsqqS+8
X7T04L7s9FOkTzc9Erlmp2T/cfm8XDPsgH0B21i/ebMv69KT09J0HWFsdHB4
G/3c1RZzbpqD49FHsQ/s5M0//lF7dKeOGWOGye9wNQAl9Z3zK6NPkb11htxH
LrcANqcOn9iFezZwMGfu2PHj1UZLZy372Bl75FfovEV5PjBr0MUsn7A5ODwX
sQcXw8E+eOZslz3Uy/t+YvSYlh7T0qurlv7E+4+Wn8/DZPTRF4Z/X2l8fjFx
cYX5PK/jsBL5PMKMnnKuy7dX+Dy6jL6qYL7yebQYPaal+0tL9xOjox0zH5se
1cpkwoHU5lK7DceiDeB7oDvDLS+KTwCjX+t891WrVqm+4fRzmJK809NyndB2
nrf8RT47/hLvn/PgfNDVOY/9p06Zo0ePBpiaGuL0jAytF3B1l+T8ak54//5m
kPAZeZ/c56HMV6+qWnpxBzowM9bQS6mxhWNhshfFt8QHf/Py5cJrKAcfPys2
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
9Gz5G/Ssw/enLwI59tS8Pv/WW9ormvrnbGoZatcye4W/nhD+eqNuHXO5YX3z
j6aNzKdiH0vEPlwMB+boYvt2E8fhXOnfzTwp7IMZ4KGyuR+19NIYvaPcO7BZ
S2EzOIQ9AUb11oxQl01Mxu0J6KnkgK8TG9hVjv5woXI6NeMzZE/g75FrTz8/
8qnpicB8AXrW5cu9s0Fs1P3M6dOnzTThpVnCXBvvuN0ck/3jOfn4HeGvPwt/
fSv28VOLpmZks2aBemN6gnW2fbv7OvsQDsM+iOfMkOvAdSyurr06MDrPhS42
99/VhnAtuA6w6NisLJ0FPnfFisI9QdbDPRuWyucLs6aYx+Q+jRSfF8fZ68TO
XE9TarF0Vr3sFc4WOLbu2GGekf05+GenzpihOTNL1q41G+V75rRqaVbcdovZ
cfed5pw8W16uU8u8X/8h85fGDcz3zRqbD8Q+uje7EuNra/u6E7cgzkccx9lH
2siRZq1cg0ixuV85PaalR4fT/cToVU1LX3ZpQaXx+cjXkv5ZhM9L5fQKM3pi
pPl82OkOD0aUz0th9OS8zl+Xn8/D4/SMc31NXv65nwWjx7R0fzF6cZy+b98+
065DB9WO0NFh2oE2dw/NeYL1ZajVJcdzhrzim/H1gt49zVdNGpkvxId5r0Uz
8+jAAWaPsNTekyfNvlOnzApmCYsfFQ6bs07U/FLXR2836l1h88Po9XfdaXZb
/rok/PVHy18/CX+Zls3MpVbNzaSWLQI6GBog+ZlwGHPS0TuoN15re3JHis+r
g5aenZ2t/id5nOS6ozET24DN0NLRhZiJDaurHcih3C7s82aHduZvTRqaP8k6
vDow3mybO0fnoVP3UBE+PyU2NHr8eK2FR6enzh1bwAd/RXw1netkZ3wtaFDf
rL79VnP43rvN07VqmLes/vWN5a8fxTY+b93CLBD7aGl7ggXbx8ChQ83sOXP0
PgmHzauTlr5nzx7Tul07tQX0U+1dzbUJ2hOmevYEXrNmzjQvdulkPhcb+INc
613C6vmyXpFi9APC5pPk7xKn2Sx7ltcWmCehMyDt/Efms+fs2qXXbpbw/OiH
HjTzb7nJbL7zdnPq/ns1d/n39R4K8LkR+/hO3vNLcowV+29Wgn2kCJtvEx4s
a3abn7T0khh98ZIlmlPAQfyWvBOuBXuo7gljxxa7JyyV/eDDtq3NH+VaXny4
nTknz4JIcjr+wSg7SxMNnxkdzFrw2oKb98becFx8qt/Kc86x+QR5f+Sk816J
K0yTfW7KjdcLn99qdgqf59W4z7zyYFE+xz7+IedzoGVzE9+ieYDRvfbRJz7e
jJ84UZ8FLn/+587oMS3dX1q6nxg9XE7/8OMPzYTzGZXG5xnnE/5WLJ9HQUtP
+11SzUjzecaZh/8t6VynzyqL0VPzuv9UWYx+oGB3ufncj5we09L9ne8Oo7cV
JnPaczfbw5kaO83/zczU/D18c7T1DPHNzvbqYb4TXxz2gY1/kuNf8vln4pu9
IlzFvCXm7qBz7qSvlPhRJTE5NeDzFi82a7duNSs2bFCfD30OjYyaRnoEr01J
Nktuvdnsg89rFfL5pw3rBfRz3oMR/vpOjg/l2N2qhZnYupWZ1LaNGdu7l/a0
or8wM7vpMZw7fpwpEL/u58roxXH6vPnzNc/d1eJqnq9wCfoQtcjwGXUB2AC2
kCWfvyE+OD7sTy2v2ME/27cxb23cYE6fOql5x8eOH7+KvbEHapXpcbxZ2HuH
8NfuY8f0IGf50KFDWn9Ajga9l+iFQI0rPaiY88YsJ3zwdz//3JzYmmOmi20U
8vk9yudvEr9pVBi/UftoVWgfpk0L8wd5nSucPkn87HHCHeSzL1mxQntXl5fL
q5OWPiIjo7Dmtnlz00pYndwaciqoy3Y1I+Q6o6lr3cjYMebJHt3MD82u7Ac/
ij283K2LKfAw+i5Z59XC10vXrtX+3rmy5ntkvfeKfWzKyTF79u4tls2JGYyQ
vwcHwlTbrXbOrGlyJ37nsYX3/vpXfWUO90z5/pT+/UzmTTeauTffZDYJn1P7
8JzNX77cyBPfE/7CPr6R4xXZOyaIfUyQ/WNoQoKZJEx34sQJvWfKYvPqoqXz
/ufMmaNxmiJ5J716af01Wrrm/nueDTNlP/hD21ZiB4X7AXvBpx3ambOD4vX+
Yn/fKmu8++hRs1eu56Zt28yp06fD4vM0W/MNXzNjgmcEfRDoX0oPeeaAwuXO
Ft7585/NCfGn8FMmyXPL21Nh0cKFJv3WW8yUG643S+U19647zZkH7jMv1qlp
3hX7+JPYxz9tfM/Zx1/kOCQfYx9DyTeTZyRa/jmx8+J6zUWD0WO942JaekxL
D4/Rn3//2Upj8zEXUn8qkc0jzOjpFxIu977U+/+JNJ/zL+lch8fkiCyfl8Dp
qXndfqg4n4fG6Ovzl1aYz/3G6DEt3V9aejCjUy/Ypn37In5Yz7g49cnxxQbh
lycmmtlx/c1z4oMF+y1wj2ndXL/2504dzBuydm999plqm+hZx8Xutot/hp04
Lj8mvvnkGTM0N5I+Q8xumrtsmer1fI28RfrEnxaOnlLzAbNIGIz60Udr3m9e
e6i2+UODuuavjRuY7/AH9b000/eg76dV4XvB/35vyCDze+Hy3//lL+bNy5dV
e80/d9ZsykiPKJ9Xh3x3fPKHZf01B8HOFerhyeMkZgOjTZLPX2ndspBvvHZg
rz2xmw925CpHH2BtT51SLuc+mTF7tlmwcqXONFPmfukl9a1ZFzdDeZOwHBod
TEYeNbWtzHl7zMPnrCVrOql+PTP5xuvNyttuNfvvvds8LrZyQezjI7GPL6wG
FniPra7YB/Gky507mAvCJ0fFxrgPIsHnfmP0YE6nvmTdunXK5k1sXywYnbgd
bIaGSs0IdjBX9oOXirODNoXX+NWunc2jcu+vzM7W3Ph1O3bovc5MPma0kYcM
UzE/G/1zs+wRXjbHJtNt/Te5O2oLR44U5XP5Wcfn73/xhR7YEu9vSM0aZtR1
vzEzhNHX3XGbOSL28dtaNczrD9UxHzeoZ750GinxvYANN9fP2eMK8vLCYvLq
pqVPmz5dbUDr0cUevLVD7tkwVPaEyYMGmjfsfvtjiyZF9oOfZF9+eeKEwJo9
I7/3ZXuvcz9v3bVL94ay2Hzp8uUmQfg6wOdiC8rnYl/UORB3Ze+4ZPnc2cLb
f/qTWTpunOkn75s6J+KL9FMY2bmTGf7rX5nx11+n+RVb7rxD68+J712y9vFV
k4YBDb3wnAr3kB/l8/2jR4XcE94vjB7Ld49p6X5j9FA4/cg7+yuNzzPPD/+h
TD6PVL77hYT8aLA5/5LzOiwu5PPoM3pKXpdvIsPnZXP6nLyxEeHzWO+4mJZe
mVo6+tWI9HTN3esgfhi91tBQe4pfkyG+zJ4mjcybdR80nzUszBsO+Cz44m1a
Bnzy75s3Nh8OTzbvCZ87DeOC7KHPyjpuGj9er/1R4a1xWVlaw0y/X+b0kMtO
zTNMxgwjZg3DZMdOHDcZ1/3azLn5RrP9rjvM2Qfu0xxV7Q/XsJ7mVgcYzOq4
vMJf/B/v+XXxs3kfaCuvyPOXWsWnBg8ye3NzfcPolZXvjo48Y+ZMnbfVTmwB
n1zn/4otDO3R3Wxp3kz1aeq7r47TWDuQNfi6fRvz7mOPanxmvfjS3Bv0E6TH
8QZP7YLmq8uavP7ppxrTYZ3Qzb18Tg8yWP4Rq5OpHy7fz/cmi489Tnzsxbfe
rDmq56wG9k6x9tGsUOcnp1m+9l/y/69uWK/MQC1GpPi8OuS7E7NLTUvT3Bp6
eRO3ww569eppBogtrGvVwrzSoK5ew380KapDOztAQz08oL/JmjNHc2K2e2Iy
3jwIGIqDfSJn+3Z9P/A5/b+IBTDPCqZCM+V3HJbnYp7YbsB2PvlEf579Biaj
fyVxhMG33mJG/ObXZvIN12uNMfG9ghr3a40xGik2jH384MkFcvbxd7Ht3Iz0
CvG53xi9OE6njyjPA+odiNVQn09udx+xhZSuXc32Zk003kE+098D+SoeO5DX
r7t3MU8ePqQxGXKryEHXe13WjPXfeeCArnlJbE4fir7x8donImPCBN0XeHbQ
u5T+JOdkz/3t+fOB3/22/G5id8rnly+bmRPGa40CceY02VfoyZ/UoL5J+tUv
NX4z/aYbzJrbbzP7773LPBKwj4c0x4IcrR+C9g+eLeQFhDNTPaalx/LdY1r6
tWH0NW8uq7za8/NJ34TM5xXU0tNfG7YgWnwu3NzvCp9Hl9GT8zr/PbJ8XjKj
j8qLiyif+01L9xOjx7T04nvH0Vdp8pQpZqj4YZPvu1f7bj1p+27hj/894I97
NGuvLil+7+8ff8x88OWX6jOjdeI7PSc8vD0p0YxFD6PGXPxoZnThXzG/J3nk
SK0tdLmL9ANbNmmi6hxZN16vGhg1xtSgv/ZgbfNe/Yf0b6FzEDPAj/qXHPAY
Wg41yGipr50+pboK/j89xeDzE9nZZuOwoaoXRoPR/a6lc+TKeiXFDzDxNR4w
c++8Q+0Afdr54/iu//LUF3jt4Hs09MxRuvb07pq/dKnOM6OGmJlszGJiHdBA
VQ8XPx2fmtna1DsTq8kivx0/nDpTjx/OGsL9xFuGio+dIQw26+YbNYf5yH33
qH2cf6jQPj4rxj5gc7jsQ+HLl9etVc6jB3Sk+dxvWnpJfeO2bt1qetR9yAyq
UcNMv/cetYPHbJ4CfRq/8tpBUC4F9+F8WUdyYojF0cvrcflb2AT341s2jgdL
sf7K6Nu26d9NEh4jbwNbIGZDzTG94tkzTss+9YT8nheEfbAf4jUwOjGbtcL4
9J8fcMvNJvnXvzSjhcHm3XyTybEaKRo69vG+Z//41toHx7dyUH+8PQJ87vd8
9/UbNijXojunyTr0kecBeQlL7rhd7eAR8plkL/5D/cJ8lR+K6M1WQxe7+Chh
qN67aOfEU1gnp3G/JXvEjlJmsqHja2+UxEStt6IGihkj9A9lBih5Vmjx7CUu
dudifU/LftKjUUPtua7z7dPTzfhp08zQenXNkF/+wqT+plBDJ7637a47zIn7
7y1iHzxD2Cu+tbbxg322nBoYHp/7jdFjWrq/GD2mpRfP6B99/JGZcnG0sPPw
yqk9fy3h72HxeQUYPe380F7R4vOUk51uL8rnUeL0PH39KvJ8XjKjHyk4EHFG
j2np/mJ0P2vpHPT3ShfuIfcPXdL5YR/avPJvvZqCyx2Wj9Gi6L30ct8+6ne7
vHL8Jnjs7UHxZt3QITpvmr5f6KgcsPmw1FTldPoCM3ebXNiF48aZoeJH4WOT
446GTh0pM9Z4P+gcn8h7ol6Q90XOKq9oH+/J/z1bu4Z5/ugR/fvECGAxGBA+
P966ZZGZbn5h9MrsHbdYfONMufbYwY677tT++a/aHkqfN2qg3Pujl81sbQEM
/HHb1uonc+3ha3oLsrbai509TX6/1o16cpTR1mEr+iHTi4x+4cz0Yu42+RRo
6KwhjA6Xxf3iP02SMBg+9jLqSMVW6QP2tPWxC+2jntrkF9Y+YC/iCxfl/5/K
Xqk9DlaKv49OFw1G97uWTl+0hPvvM2Ou/41ZIHaQa/MUXqpTS3ut/clb6x+0
H2AfeQP667xG5rHRC0L7CAivEGNxdQpw2nuwmtgLuco58v394uM1j5paZ2I7
2t/x/2fvLaPjurJ23XPP/XG/H3ecc+7HDUknHY4TO2aSZWaSmS2wwCgZZGZm
tmWUZWYmSXYccLgDtsPUgU460OHuJB30vPNZe63SrlJJliywKylprCEuVe09
99rzme+EbdsM55PXTP6FideQJ682hHaKraH107er+01/kHjdO4jveTUQf5Sd
+txPOfvQ/YPnjy04+2DxOfP5Ng8fVm58HmlauuPzvrYXCfksKU2byBCbE77g
j95efNrmM71ex8tH+DoQqymoKaEe/W9dO8uj5+431y0xGH++A+effiX0qiiK
z+mXTk4E+wK96Zj9SP924rjMYGdPf0htlT4j2AA9A8nJeVDvw3H16wXmKvJa
0OD71qwpff7zPyTpN/9lcizQ0FfddovpQYp9PKb2QfzJ2cenPvvgdR7q37fU
fB7Nd49q6ZHI6JGspV9451kZfXGw5fOKZ/RSs3kZ8t2HX0q+uaL4/H/I//i/
lJvfrRRG1zU4L+6nimH0wpy+4cyKCuHzqJYezXevLC0dPkdbmK5+yyZfbyXy
xfFXvozxNIWfbG6o6ZOtn5uZVvrzZ3v1MHmG+Nv4SdSEwkEnstbK5qREMx+H
Hu3oH/CXm+s1csKEIN8rR/3x3upHoYPRa3flrbcYHxsGe7h6VdNvl35x+FFv
q0+NjvO2siP57+QpnqpaRc7t2W048Lz6yPQSQpc/sHiRHG4ezOdRLb0wpy9U
33i49V/djCp8V475ezZWA4P57YDPybF4S3/+6JrVJgcZFie33fTg3rPH9OBG
D3/E5qXiT8NqaJ+wFbaAZjeTPnKbNhmmJ45DnwJTn8CMNfXFu/zHv8sAZfSh
aqs8R/rE7bIMhg72rNrAy9Y+3rH2QWyBGtPzaj+nFy009dD0qjujfn6kMXpl
aOkJPXtKgnIZeQrsBxt0Pzhyz93m+MEwxOw+VTv4NowdoE0/ED/A1Cm43HRm
5D2qDBjITdc9gtgMnPaq7RHBfGrq3tFNsYURtgadfArsh30D1uexyJtGOzU5
OvqRPGzqpDvecIP00r0DndTlWKy97VaT537a2Uct7KOWvFnPsw8WtnJB2X3t
sKHlyueRpqUv12uP+iZyGEz8NDZWkn/z35L++9+amv51t98qB23PB2KlXFfE
Nr62uQgFdhCj368vj+t+H1SfoozOOUfnxg6oRee1hPL5FN2DTN17v37GFpgp
4WJ9xHh3KdcTr2E/gdH5H8QBsKO8/HxpX7t2oM8hvU/R0LtXqyZd/v3fpN9/
/YcM0tdEDJI+grwm8gJOV/ViwM/V8vaPP9ctsI9X1V529ul91XweaVp6JDF6
VEuPLEavaC39+OuHPT4PYvSK4fRS1Z6XXUt/C4auMD7/HybH/XB4Pi9/Rh+c
1/m7iuPzYEafkz/W+HqsXzujR7X0yGJ0x+nwOX4LWgm6015f7SbsiyaJDknu
H345i3xntDRqOx/r3tUwF1oJPaBgKRjtWHa2bIyPN772aqup8dHUNPbvb/qE
k8tK/iL8vkF/1ue224xOOtzyAToH82phRZ4TWtif9HnhS+FX43M/3CRWTnTu
JAe6d5Mz+pr43/hv9ISntj1n5kzZ1axJIT6PNEavaC19gfrGKdYOlqkdoC/l
6zH/k43V0IftE5sD+o21Az4nL5Q8+IcWLjRaKVrnDPX3mZdGnzD08BN6baCl
mv5w6gNhK7A4vjhaV+qIETJez9P8lSuNbkrvbriefFa47EFl037Vqko3ZXR0
UmpJZymDUUtKDIdcZupJiSeg9WIbLD4/07a1HO7bW07k5ZrHXLh0aWDmuluR
xOkVqaX3Vbbh+nO1/kvVDsipQTt9XO2AWA3cwrX/VYgdMAfx/OBUw+fkI7te
kJy7J63W6WZiUeMAp8HZcBc9Cjuhe+q+YPKS1RaxH3LlidfwWDA61zX5zWjp
5LzHKYfRP6Ot2kEnZbBeRif9bxlzg5fnTp3MrrvuNLnM59Q+yLF5xtoHe8iT
tWvo3tFRdqmdVgSfR4qWPlqZnGuRfBZmfPdv2EAG/vd/SprV0BfbvufEbh+t
4enNb9uc8C99doBN0M/zQd3L4WdTk6AcQdz2Fd9cvAetvYXy+eQpU0wfDKeB
Ow2dGC/7BfGa3SdOGEY/rfs3ewoxm0f1OKPJt6xeXVrQ71LvMW6We/cG9aXd
v/2rdFX76PtfXvx33I2/N/khMDoxHF4XdRzYuN8+HmrUUNYlDzJ97crC6FEt
PbIYPaqlRxajs9a+vKyAzyuY0TMupX5XZj4vIaMPf37Q/opkc95S89qOK5rP
y5fTU3M7fjM0ryL5vIDRR+b3lfwz+RXK6NF896iWXpGMDp/3tbokzIN2ekh5
GH/2aatJopfA6fjg5Py936Cu0Z7wZfLUv0XDIPcUTQu/jD5wB9evlzX9+poa
QldPiu+OvoH/1T852eimZp6u/hxtPTN+oHRWPwqdFO0GnRRW3HzHbSZucFQ5
7KT+z5PK2/tHDJdDy5bKEfXv6Rl8Slkcljulr4mcanJj4cN1+nvrYxuF5fNo
vnvBmj91akCfnqHHHd/1QJW7DPc+pX4rDE6d93t+O9DP6c/2GHawaqU599Qd
w9nMy2ZOFr2d4GK0a/Iq6NEGly1cvdr0I+vcs6fxo+kNRk8C4jVZMPrBg4bL
8MXhvKVqRx2Uv2B06iDQwWbe9AeTZ7Hlzttln9rHMfWzc/X5nmreVLZPny4H
ly+TA+Ra6/6Rb21jkXIffeYjmdEritN76bXZVY/tQF1Df+vl1KxVO+Day6vm
MfoLagdvGjuoY/ryOTtAazydnGTOH3E4l4+c5/KRdW+gJpn8dOoViNNgC/Sm
aNm2reFsbAENd5jt7TV/1SrzWDA6XMZ1TcyGHGfiQPQtaNa6tbSOjZU2ahcd
lcN66kfiTMQX6DVJjI964/1qy3DYaX3+h7vGyXa1pwMrV5ga951qI9m6j9Df
8Lj+H+ZO/JoYvX3VqmZf7mpzy3vUqSM9bT6CywknX8XkI1S9Rx6r4WpKvLid
swNsgu+f0v2c8wM7E7PjXMPpnHuufbg6HJ9PnDzZmyPQubOZI0AdObPdJsyc
aeI13D9gdGZ+UEfDXpOr5ypP/9cu/X4TfR1mJoWdW27mRupqq68DRu9sGP0/
TR0EjE4MZ42+LmIPB6x9nNTXsTspUXbMmS17dP8ilydH711bdu+WHLXVXN3L
qAe4Xhg9qqVHFqNHtfTyZ/R33n1HJj0/MpjPC3F6efaGSy597flV5rsrn4+q
cD7P7RhzZT4vH0ZPzevwleFztyqY0/ef2RXg86iWHnmM/mvX0nPV/+iq/gq6
5GhlHuoN4WHyGc+gSdYg96+G8cthdXp6U89L7+x89dn3dokz/jd6FvnIcBg+
77Zly2Rx924mj518Z/xsmIu6QFc3ij4y2s6pJYdxpfpD7fV5dPr3fw2w4oQb
b5C5f7zJcNj6qvfKiuHDZE1OjvHX4S20GJfzih/IR/zCXcePmxzrnbExsjh9
RLF8HmlaekXw+Vzl8+7KNgmWfalDpw8bfits9qjNEXZ2wEJHoxbipPrl+Nyc
e/KR6S1g6oitHs7cNFiNXl/YCPon/nUr2zceW6BnM/OV6dnMeaPugZgOf8tj
wvg97rpL2v7r/2e0MJPL/PvfyuQ/3Kg2e5PhsHW1asoqZx/o9raf1OM2JmDs
Q33PI7qf7lPmC2X0iuL0SGH07spn7W+9VXpYNnP91tZbRofNyBUnLse5d3YA
k2EfO5MSzHy1RXr+6C9A/go1JvA0sRlqFTgX1A5Te47NZGVnSx9lqGZ2rhe2
wMw08tyZwUisx2ny9PfHFvarLWA/cFtM06am53gr3bdaq220Vw5DRyc/m+c/
VdmSfhZw2KpWLWWZ2hi2BeOZPgd6znku2AX2QZxxm9oGOSW/Fi29dZUq0qJt
W+nYtauZtxlXp3YgH8H1BJntqxk4ZWuOuAeE2sHZVs1lj42Zku/A/kwfCfZo
FjbAPhCOz2fOmiWNmjUzjN5WGZ14AfeL4ZmZJs4LoxPzI5bLvYR7APyMLWxU
O2p1yy3SoHFjaayMzusx8ygGDJAu+nqwjTa6OllGJ0eEPgvk7zMXfe2dt8uy
nj1k0ezZXr6X2i5xvbOuD4baBfZBLgic/mtg9KiWHlmM/mvV0p9664nwbF5B
Wvrwi0lflSufF8PoQy4l16toPk94sMm/KH9/XFmMPiSvy0+Vxehr8hcV4vOo
lh7Nd7/etfT5ixaZtVh9njn05xo9Wmb26C6ZN3o9gdbf4fXtJTcUTqdXNnWo
LHIBqQvfqT8/uHGD0TfRzPHJYPNNylWrZ82U6R07SPLw4TJBfasFq1aZmuNM
5cDGLVoYvczkMA4bJqMmTjR1hvDc1IkTpK36hU7rSDF1kL+Tccpek5T7yHMk
V970hyZ31tfXmZpWFp/DYzDdkg7t5bD6clfi81+rlp61fr3J+Z6t52j2yJGy
cMxoGVOvrtEfXQ4oue7UGBCPoQb1EWsHaOto1nsSBhpflnNPvjI1rEPVntDD
F9v6BeZZcz5gIniNOgT88CYtWxpbYC4SfQPJqUAXxRdnVheszWPC6sv0e3HK
i4bRbT06Wtgo9bPHNmsq05S9ljHf69Ahbw6znblucqvff9/UvdMnAfs4q8dv
le0VF8laenmx+cIlS8wsxMmjRqkdZMgitYOp7dvLmBs8nTHL1hIc8dnBeZ8d
EM9bumKFjNbHIN7GueO8wejwE7ESeA3eofcfuS7YwvKsLJmtTNSQ2dvK2XAZ
tsAM6xFjxxouI75Hjg1cDZthC8wG2KTMDovxt02Uy1rpPgGDdUBHtzGGob/7
rXkNkxrUN3vMUn0c9HjiRW7uH7o+uffkYLv9Y9/x4+a4/BoYPUmPN7ozM9WS
dT+epMd8sl6Lc4wdjJGMalUNy842NSVezRHzE+gd6N8PuE/saN/WaNzER+lB
wL2B3BXOOeeea5+8mHB8zuJ8NrIxF2yBvgTxaWmG0Yn7zVQ7ZU+h9sHYgv4v
bIH4TXLbNtKoZk1pEBtrHoP9hdmhPfQxOtxxu2V0T0fvY+vRqaVCSx/fs6dX
666PzfOH+3muxHr9cyTc/rFV/x++UzTf/fri9EjS0iOJ0a9nLf3Aa7uL5/Ny
ZPRRlwb/VO5sXhSjP5/4ccKDCf9S0XzOW0p+u/yS8XnZGT0tt/P3QXxegYw+
PT89LJ9HGqNHtfTIYvSr5fS58+cbXxf96KTVF9GP4Fx0rTy121VJiTLjpj+Y
3HI0VPwx9DNyRPfdfZep6SSnOKtje+N/44vxeHARPhOPvyohXka3bCG9ExIC
s2jJV0VbI38xtlmzgC+O/0VOK5or848zlRM7KHcZPwoN53e/Mb46zOZ6wZue
Y+rvGt/a9p6iB1Ggl7z62vQKXrdlS4nZ/Nekpc+zdQVuVjW+s+vFxnpY/ef5
bVoH7GBDqB3oIj6zqXo12bp6lcln5twvnzdX4tUfRvdKtzOMOefEZvCjsRXO
H7nK1Kk7vSvgi6emyhBle+I4+MuwGbEd8qZZ45TfW9l81W6W0ZNvv01GZmSY
OtU1+n/Q1eACM5dL/VbTP9z2jffPGuA17j9wICyj/xq0dGx9sR6zRXYWnplt
Z/OS0Tqxg1N6vpb37WNy3alHp/4leD+403ydpXsG/GRyYpTRObfYFzUmOVbr
JD7DeTd9G/VzYjZzFy8294n2nTpJQ2yB2J3aQjc7Z4uZa9QgE+vh/M63tgBH
YRfE9thLjB0ppztGd/pv/H//p6TUrmXyeHhOK5Xr+L8mfqM2H5groOxF/zLs
gwWHwehcY5FSl361fE7vicTERJOrwDUMP6Nxo31zfLCDB/U4ZCm7T7N683q1
A/r777F2gD1sqltb5uk+T28/o3HrnkC+A3bFOYfXeewlq1fLpUuXwvL5Qt2X
4GtswcTufLZAz5JRkyaZviV+W2Dxebq+huZ/uNH8PStG7YG8DJPrro/R3jK6
vx6dvu4pnTrKSLUjanKI7/nnPBZ1j8E+cvQ1Xm816dF896iWHmmMXlZOX/bi
vCvzeTnlu4+8lPp9hfF5IU5PPFUZbM5bam67GSXn87Jxelpep28K8XkFcfqI
Mz0l90xukYwezXePaunXA6NzDiaon7t80yaPzeEX5RPy9tCf6eGDj0rfpmf0
frxduWp2TEPDZ+jpMNqqW28xecQr9OP86vfJMv0dNC2YCJ2T3EPmZM1QttpY
r44MahRj+g6ZXrzK3+jo9GzHt8J/QrOhBpl+u9Qaop+iu+Jzj8zMlAHqn3VR
X3Cg/o6bqY12hu9ktC/1nQK9oe0cH2axM8sHFkMTg9GWq+/2S2b00nD6IfWZ
Z6p/S/23m3/mOCXQw0vtwOQgqL98cPMmmax+OHawUO1gOXZwm2cH+OlzO7Q3
5568BnzkoSNGSFv9nstZT0cPV7ZiZhb2Aa+hT1GXzse+CQkBRje20Lt3kC3g
N3PuyWWeqL4/s9i69eghTarcLa1/+xuJI9e9Xz/DhNgW9cwwgbPvAJ/75nth
I8Y+1G5OK4cUxee/ZC39Id07xusxI+YFS5H7gF7onzuPDbyktvCc+rs506fJ
zDq1vf3glgI7WIkdNGoo85R9OXf0zSZnBo4iNsN+QH46+e5cuzl63llo39jM
brWBixcvmtxmw1WWy8h1Z1+gHjpRbWGI3xb0d9HVzYxG3Uuyt2yRZq1aeRq8
snrrunWkrT7Pjv/2b9KjWlVJTEkxewq598x/c3xOTOox12dcX+cbdlY39oGt
sK9s2rbNsGSkMHppOf2Y3gvSdW9mfoKbXU8vPuK2cDmxC44DewJ9HQ9krZUJ
ug+E7gfcEyboOeP8EAeBmTnWxFOzdZ/hnPOR63+Z7gVurlson2Ob8Xr9+xk9
yBZ0T2E2etC+oLbArPO9al9Lda9prs+rQUyMp6OTL9+2rWH0Lnov6tqmtdHS
YfS4//h36d2sqbGvkba2Bj4nVkX8yF0P1D6wL8Lk7h7DR66R3fo/o73jfj2M
HtXSry9Gf+svb8nYS8NLzudl1NJHXEz+psL53DL68EuJkyuLz1Ny27cuPZ9f
HaMXqkGvYEbffSanWD6PNC09khg9qqVfmdGxv3HqL89RXxwmIrfzjJtJbX1T
tCN80jeVW8jxhNlPq31NsrnOE2+8Qab84Uazxt55h0xQHwmtG58X3uYj+gM+
85Tu3WRWlbukjfpW6Bf0g6PvE/rHGHJolQ/RQ+gLhV5GPXpn9Z3Q0vvq7+GD
pSjnoZ0N0t/Df8IXw+fDxw/ynfT+jt/Ic3b6KIvP4Qv4bKv6haXl819qvvtk
chRsT320bDgWHRkf1BxH3wwsYh74oHs3bJAxd95u7IDZd9jAZPVxx7dqKTPQ
Ne25nzB2rPRVnxo90/QYQEdPTS3IjdDfgQc5j+Q/o7PB7bC83xfHXnr0729s
JsHZgtobfnmqsh/+fbraUmt+v6n612lppo8BfE5vuV22ZzyMgQ4cTh/lNfI9
7GOtPpdfCqOXhNPZ30aPG2fiHfR9yAmdUx+yJ7hYxgk9rtSajPXZwRTdH6bp
uSUHhmudml8YnfgKNeTwE7yGNrtE/xfnnHMPt09VrqLOGz7neU9Q5sIOYmyu
e6gtsC+k2n0BWyAXiNfD3ztGpx7d1LJTT60fuyvXuTjRdPRz3/w3YnwBfdTy
l9FHmdWtNkJM55wyPAxbUYx+LbX0I0eOmOuJmBfXoZuDiXYe2BPccbF7Aj3Y
d69YLmOUy8kLn6x2QA+IlAYNpJ/yM9cqsRD2+FnMWdTzTE0B5x1bm6XngHuW
4/NwjI5NJOj5Nhq4PZ/o6PQPDLKF9HRjB0PUHjj/7u/nTZkscY0aSaM6dQI5
GfSMo687nN9D95secXHSs0ucueck2FoK4ojYKPfIwPwBtS/iFNwP2S/89xiO
y+H8/DLzeVRLj+a7R7X0q2P0R/78UOnYvIyMXiG150Us5fNmlcXnI063/V/K
259VFqMXqkGvQEZfeWbOFfk8qqVHHqP/UrT0tepzwEf4Ry6f+ZxyxxPW73C5
v2hHLJcfjn+2afEiSVV/nFk7qTf9QRIa1JcE5S78ZLiLemG0MnwyenBndOsm
k+66UxaqjzR02DDjH+FfUQfo5vc4/QOfqHWHDl5/J/wn9e3R4PDBesfHGx2V
j/hP5Dvj06PHON+JnlNP2NlNaDwwOkzBwneCKdACj6ndbVK//Hpi9MrOd+f/
zVKfOcP260Nn5jjS0404B7UAMIrLQ3jLakQcR/hlszI4s4nS1AbSbr9Nhug5
Sved+xHqK09OTpYJ+j1qP9GtOLcuN4I+A9gLOjez1Kh3wB/mY7rawejMTGmq
vA2jw/ad1F7oD0WPAnQz1gj1w7crQzDviHXw0CGJU36DDbFD4gSrrT5K33dq
nOEvYjimflRtmteHffDR9SnYrtcEenJxjP5Lynenjp/cBI4/3ERtAsfrbEi+
t39PQFu+oH7pkrRUSfvdb2WI2sAIZZyMjAzDR230XHOtcy23t/PMicHBUNgJ
+w86J9zGGqfX8y69lqlDhq/d2qDPB50TpnI948jBIYbjbCFeH3fajBlBf8fa
t2+fpA0ZYnLl26oNuRjRgJQUY3tTqT9fv97E+MgXOGXnv7GHXHB7iNq720M4
BtjHan1O8HmkMXpxnM5xT9d9mJgpMVWX2+74/CEfn78WohuzT0xv11bSbrlZ
Ev54s7SrU9vwL7EUYjP+PZ7Hdtc6sZqFeo362bwoTofRk/Q8N1E7cBq4YXT9
H5xT/s/AQYNkjO4d5ASFMv7Dep/N3rhBBqnddNC/a9WunZm95h5jgO5J7E30
eHd1FOY4rFplNH7qtsix8O8hxC+5L75u9xA+J/63a/fucmH0qJYe1dKjWnrp
OH33a1uvjs+vIt+9QmvPC7F50mdDXxr6/1YWn/OmrP3Y1fF56TndzEEvjs/L
kdMn5w8uMZ9HtfRovntlauk71edKVp8V32Op7Z115Ny5oJzml3zaouNz/FT8
dDi+L75RjepGD8dXxveGm/Fr8MXg53j1leKp42vZQtYsW2Zmq3Oe6c2Mr02v
nvZ2Li1/S50xebD4ReQ443+3YLaO+tZwel/1xeeoT4cfxf8h/xB9lDpmenpT
z4j+BVsyZ5fXgf/kcnJhc54//hNa+6o1a66az38JWjrXBzPt8JlNHrjTynx1
Dsb/JA/cx2XYBWybr7+XpueluzIP54/HgovN+dfPF8+dY/4vfvVUZTE0UHLW
YfRONjfC6F5qi0b3Uj6kLwGfz9bzDG9v27ZN5ipDDR46VFozI0l9aXpKD1a2
X7BggbEpx+ZudVW76ae2B2/CX/Cm4y9iOOdsf4VnLKPDYNgH9RzEptDG+D32
uivxeaRp6eHY3HCPXnuGz5WTOV7kHqMnwyL0S3tW/VmOz+suVsOeYPNRqE0f
0LaNud7JW5g4ZYqZPQ0bE1+JsX25mNcF/xiOUj6m7xjXOuccdiMXGUb0Lz9r
Z2VlmXnYLezsNexgoO4F5LPn5eUVYvPQdeLECRmpr9HVS6DrEhdaYPmLPO4j
bg/R33d7COxp9hBdXA98n9lrjs8rktMrk9EPHz4svfXccP0R+0Q/57iQe0Lv
TWKfT4aJ35qYne4Rh8il0GNKLM5p1PSXIw4LP7Onszdw3Ifa3Jd5eg0XxeZF
aenY1RI95/B1K7sndFO7Wq7Pl9cQroY93Dqs94yluu8t04XWzv9KV3t0M+WS
7CwRYnzUXVD7Q5+MoD1Er4vAHqL2ga2wb27OySk3Po9q6VEtPaqll5zRF7w4
o2x8XgotvdzmnpeMzx+qTDbnLTW/3aKy8XnJGT01r+PXJeLzcmD0Yfnd5OSZ
E6Vi9KiWHtXSK0NLX7N2rck1JYeR3D3X+8bkdvryw9EWYTF0MvxyvsZfhd2W
KtvOYv60+tzN7Owb9M049ZNMvmCb1qbv87rVqw1Dha4Z+rdNba670y+6Ww0E
3whfbpj6idvUP2T2sH+lKPvDg/h31AcSYyD/ELak/zN5+g/r63Az1p7T+yXP
G1+KnnduJvdKfW5l5fNI1tLRTGFqera5Pmo7ba2pv8+50xDfsLaAL45PiobE
35pzr7xt6kH1/E2ZPNnMU4L7/GvJ0qXSSZnK77cbPbx/f++cU2OunLhcnxe/
H8rdJV1xVrOD/7BxdEATw1HfnToOM3fd+tfksj9r7cPN0iK+Qz5JSfk80rV0
WIfrLU2vN/RM+qzRA9voyXqsTM2+nYmAfkyegdsTYHa0ZmI8/fUxYB0/X+/X
vcUxutsnmGONRgkL8n/76rVMzXkom4dj9LKuTcpZ2Co2RzxwpK1Bpw8CMRz/
HgKj89rMHqL2weJz7H7Tjh2F+DzStPRQPmdfdXUI5L+wJ1Avzgw7ah3yrW78
jNONfblJLreK3orkO3TXc+zqU1r7r3Wb7zBI/xf3oSuxeXGcXh7rFT2/buF/
cT9yscP+NsZHzIo+J8Qq3FxIt4c8qsftT749hHsM+0p583mkMXpUS48sRv+l
aOmvvfOqjLk4pOx8XkJGL/e558Xx+cWk+ZXN58m57buWnc9LxuhXrEEvZ0bf
emZ9qfk8qqVHtfSK1tLHjh9v9CvyimGXDTaHkXlH5+zs3yBtUX1w/PBLuv/h
g6GjrMnOliPKchzXos5XOC73L35nrPLdYPp+DR8uw5UPRmRkmIVGwnMNZXPW
IPWr0WMSbY47NfT4kcQZ9p06ZfiSWAPPE9Z6TH1Rej6hA9Ibjh68+3JzZea8
eeXC55HG6I7TqdfGV3ZxDhiFY0gt/2nLZehlxDcCeQhWI8IfRTelp5f/nHIs
Qrncv3hNq1atkiHkto8YYc41ObUZulatXm1+Hvo3peVzcqlhAfxr6iWm2fkE
braXm7tO7javEbvA5vG1eU3YDnn+peXzSNXSOQfUmZDHQF90+gFQs2/05HNe
Pu955TLXN/IF357A18RxVmVlmWPP44XyNd9Hux6u5xt9cqSe61HUNWRmyiFl
P35eFJuXN6NvVD4nRkAsifgA+j0xCbRi6iDoURi6hxCzxD5Y7Cccjyz93XB8
HslaerLupy63m9x/ZiUssbFPrgdzfyCupefb6Ma6J7zo2xOIda3X48tj8Xy3
KKOyx2TY803eeabu9+v0WuQYlYbNK5LRHafje7lZAcSQiCWYWMWkSaZfgn8+
oNtDyDljz3B7CPELvrdB74/lzefRfPeolh6JjF6ZWvrZN3PLh81LmO9embXn
Qy8N6ljZfJ5wqt1/lw+fl4zTB+fGFV+DXo6cviB/4lXxeaQxelRLjyxG72X1
ymHqH7v5Qsw7gsvwOYwuoP6G0QX0vhXQFvV+y/eZt0RO/ObNm4Py5q/E4+FW
9tpVsmHpgsDi+YX+TiifJyp3ocegoaNvUMtIjio9w+FLYg3kupOHCIvjT9Pn
Cv2H14dvxe+RD1lefB6JnD5cfWfq+snjRGfmGK5zeb56/XGe4Vf4i7iMXyN6
XH1a/FD4PDRvvjg+v9pVGj5v2a6dqYdAA2O2F8yJFkj8YaP61zuOHDG2DoMR
h8i39oGd8DW2A5NcDZ9HGqOzyBOnloRaA2ZKE89wNQF70ZN1H+L4wKbEa57x
7wm6RxDzgs/9mvyVePtqV5n5XG3AX1fjZv7BovQtI4ck7B6CfeiiLoYc+GVr
1xbL55GmpbPP9ta9wMUt6A1BfwBiNczjoEcJOVb+3BO/bhzIK9i5M0iTvxoG
v1aMzvNNHTzY1E9QiwGjk9NDDIf9kRogs4fonuffQ7AJd4/BVsi9WafXj9Pl
I4XRo/nuUS090hg9lNM3vbK2/Pm8CEYfdWnwj5WonX8x4rnE/6hsPudNufnZ
ymL0EteglwOjj8rvf9V8Hs13j2rpFcXo3dUvJZccdqEGnR5rLncPHwyfFF8j
SFvUj+gEfB92o29QKJ8Xx+m7tm2VrRvXyZqRibInqZUcSGktR1LbyoVBdeSt
lJryTmpNeVfX2eHt5MywdpI7tJ3sG95Vtm9aL9t0+bV09D7yo/GfAv713LmG
L9HRYSteC5qPmbOrNo9PDZfzPWIR1BMuXrq03Pk8khidnAXqEeiPb3RmZv2q
X4n/yWxqzjO+J5rZ+RCNiO+hp61V3z1c77nS8jfPZ8vOLWbtO7ivTJxOLzDq
UonhEIcarPaCf00PPF4fdfbUV+8+fjwwf9vYh34kpxsWma9c8qBee1fD55GW
784MO5PTq3xmuGzqVI/L9FriOHFMyPkmjkHvas5/YE/QPQIbWa57SLja9qth
8H2H98n2vdtl94Hd5c7o8Dm9xYjhwOg9bXyKPHdySGB0XjexCeJUvPaDum/A
6izqj7GPeYsXX5HPI4nRuf766LGgnzn9G8g9IVZD3ILZCiZux/0B3Zj7A7qx
7/6ATbi8gtC8+avlcF7nnkN7zMJOK4PTyeFixif2AaNzLAbaXoLkWcDoy9SG
mA2IHbBPmj3E2scBvd/w/WzdF/2581EtPZrvHtXSK5bR33n3HZn8/OiK4fMw
+e7pl1L+WYl8/tS1YHPD57ntlpUvnxfN6KWqQS8HRt+Xv/O6ZPRovvuvV0vv
pT6HYxd8MPxS+rjDLdQa4oOiATAHmhxP/K58qy3Sv5b8vkVr1kjO1q1F9oeH
yU+dPCmrZk+RrJQukt+3pjwzoKq8nFhdebyGvJdWSz4eWls+H15H/p5eV77O
qCf/HFVPvh9d36zvRtU3X38zsp58qT8/mtFdNk0cJseo/zt0yPhQ1DUSZzCz
kpTRJ82ZY7gCBqPeGG0XLYxe1CxyV8lPhM2nqd9JLyF4vyIYPRJ6x9HXGh+U
WgEYJXPKFMOwK9T/JMax69gx44+jn8Jg2AC2gEbE9/aob7pIeaa42W3hOPzw
0cNy+NhhSVuZJonrEiVxY6IkbUmSDo93kE5/6iTdz3aXlB0pkrIzxXycuXGm
HDl2RE7nni4Ro09TFjc+tjI6MRxYgxx+GH2mm8OcnW1iTMw1xp/GPmDRjXYG
9xy9JsrC5pGkpdPL2swts3qhyUnRa4m4nT8nhRjGKV9OCnsD+SjwySLllqJ6
wxfF4Xn5eXLi9AmZuHqiJGYlyqCNgyQ5O1k653eWjk92lM6Pd5a0XWmStttb
Y7PHysnck2ZdLaez53dUm8c+6P/t8nDoSwmjE+cj1x2dlBx/rgPsAvvATvia
n1F/UxI+j6R894F6P3AzM8g98ed2Ux/C9ULck/uDP/cEW2B/IM61UPffovrD
F8Xhjzz6iOSdyZPlW5ZLUlaSJG9MlpTsFEnemiwdHusgHf/UUZL3J8uQPUNk
yN4hMnTXUMm/P1/yz+abY1uefH5AzzUz3Ix92J6G5PzT95J7JYxOLg73y9V2
lru7x5icsr17ZYnuL342j0RGj2rpkcXoUS39XXnqrccrjs3DcPqIS8n/qDw+
H7TwWvF5cl67zsroX5pVCZw+JK/L5atm9FJy+sr8uWXm86iWHnmMfj1r6dT/
4oehnboeSWin9IWCa2GWnU47ys83uiKcxtf02FqrfusU9VOKYnPsauXMSZLT
r7E83Pse5fJq8lLiffJn5fK/Dq4lnwyrLV+OqGvYGxb/cUwD+XlsA7k8rqHI
+JiCNSFGLutHvv9TZgP5Tn/3zRFNZPvI/pLWtqHxoeAKGD0+ZKY2PjY+FL40
841ZcDt9fugHNV2ff2jefKQwenlx+hBlcnxQNDMYJc2nM3Pc8MedRoRPTv4B
Cx7bqeyOhjRDOe5K89Vhauxu+srpkrIsRVocayFtzraR9o+2l05Pd5K4S3HS
9eWu0v3N7tLz7Z7S6y+9pPf7vaXPB33M6v3X3tLrvV7S94m+krE1Qzbv3GzO
V1F8Dju1aN3a00mtnZO7naqvD96g39NsO4cZm1gRYh/Tlc13qt9dHnweCVr6
goULA7PFyfnmWvLnpKwOk5Pi9gS4nV5yc/UxrjRjHabGFrJysmTYimHSZmcb
aXmypbS5v43hsE7PqC08HyfdXukmPd7sUWALf/VsofcHvY1d9Hqzl4zZNUaW
bV0WmJVemjVHz7+bo00uM7kD2D8xKuazk1MUmM+uXEq8BvvgmiAuOWXWLLO/
l4bPI0FLZ7646d1oc084JszMJG7nGJ2YBTxKT3f/nsDnxD/3KJ8WN1/dr40f
OX5Ehi8fLp03dJbmR5pLq9OtpO0DbU2crvMznaXL812KtgW7J6QfSpdZO2YZ
Oy4PPud5DRg4MGjOOnkWxCvi7YwDep4Q00ZLJ9bn7jHL1U74ep4eq3B8Hs13
j2rpkcjokaKl7311R+XwOev5wZeHXUysFDY36/nkdteKzxOOxP0fZfPPKovR
h+TF/VgmPi8Fo5d2zlpUS4/mu5eG0+ejByprLFm+XJbCpOozXInPmWPURn0w
/DDTZ23IEDMD22lHRn9WPwwtEVbHH+MjWgF+CL8zT/2TcGy+bNp42dqzrpzt
UUUe63uvXIyvJq8NqmFy1z8aWlu+GFHHaOXo4zB3gMkn6prUSGRyrLemsBp7
H8339GcTG5nf5e++SK9nfKjQmdr07GbmOj4ls5WZrwWvT9dFXS3fG5GZafpK
h+s990vS0unft3DJEmMXy5WzyEFer+fW/ZxriZlnMHpHZRSOH4yO/4k/DovQ
mwAORxfCDljkJVCTOk/5hRr+4th8686tkrkkU9puaistjiiXn1EuP9/e6OTG
/35V/e8/9/B87w97S9+/9ZV+n/WT/l/2lwF/HyAD/jFABn490Cy+7v95f+n7
cV9JOZIiG3ZsKJLR6RXvfGxyVc0cZuUNegriY8PpcBg2b+xD+RL7mKD2MV+/
Lk82v1619Gzlbmxjll4jbhY5cYzutvcijD5x9mzDIfTGojbbvydgE9TFENPA
nq7E5ys2rpBuK7pJ033KxccLbKHjUx29GM0rXoym17u9DIsHbOGLEFv4h2cL
/CzhsQRZsn1Jqfj8frV7NHTso6G1f6cZk8vMNcB+SKyKWA524ewDm2GWW2nZ
PBK09BMnT3pz0Wx+t5sP73L+iddxrolXkO9OzMbtCfxsntoJvkRxfM6asHyC
JC5JlMY7G0uzA82k5fGWXrzO2cLFOOn2su4Lb+g1+47H5Fzz/T4NsYV/WFv4
Sr9+Z4DM2j1Lth/cXmZGJzbXSO3C2IceD2JXJs/I9mgI3GN0n+T6mOqzjwn6
veLYPBK19Ehi9KiWHlmMXp6cXi5z1Uq4Rl5M/cHjc7cqUDu/lPRZ6jOp//ta
8TlvybntHgrweQUzelpep3+Wmc9Lwegnzhz91TJ6VEsvf0Zfm5Ul05Ur4GUz
98b28aIWkB7U+cpu65Sf1qtPXRSjZ4wcaebUwrbdrP4Mt4z1aQP4YsxfQzdB
W0dLYxbsmIkT5fjx40Fcvj0nWxYP7iPHu9wt53pWkSf63SuXlM1fVzb/i81l
/1LZ/NuR9eSH0fWNXi7jGxqNPMDlU3VNa+yt6WEW3+d39Pcv69+dT4mRJk28
XERiDaEztfGz8THhjIzx402N9eD09CLZPBIZPRynw6bUT8PRaFt5Pvugx5eZ
/a7nlb+lvzKMgk7U0eqI+J/wCb4nuQboiJz/pWoH2AL++iz9H1OUX3hd4bjc
zNBbPkOaZTeTpvubej641Uk7P9tZurzYRbq/3l16vtPT87+VxWBvfO+B3wyU
+O/iJeGHBEn8MVESf0qUpJ+TzEe+Tvg+QeK/jZf+H/eXQacGydptawvxuckP
0NfhYjjwhuuD1sfOYWbO81CffZC/OkpthOPCY1QEo19rLf306dMyd8ECc23D
18Y+9PVSV+56TPA1xwRWpS4ADqEO2ewJeu7dnkD8hu9RC1Acly9bv0w6LOkg
TbY18XjsRMug/AkXp+n5ltrCe72lz0d9DHvDXfB4/D/jzTlP+DEhrC0M/Ep/
52K8LN62uMSMzr7cwTI69oGO7nrGcQ0M1P3QzOnWPXGEtQ/6aa7Qa4G/Lwuf
X69aOv0Weun+yZ652Dd3k/3C2Ic+PvsHtS3Ea9yewO8SsyVOXByXb9u9Tfot
6Ccxm2Ok8S5l84OWzX0xO9icXBoXs+vzodrCJ5bLYfJvBwbZQuLPag8/JXm2
8F2CDPhsgCzYs8Bc/2Vh9O3bt0vTFi0CMT6T6277/tPXnR739G/h+uC+Yu4v
ah/MKSgJn0e19Mhj9KiWfv0y+itvv1x+c9VKsDIupnw77IJy+YWKZ3Tl87PX
ks0tn8/Q9WWyn9EriNNT8zr+o1z4vISMnn1mTbnyeTTf/derpS9SXoKT6XFG
jTjz0OilTR9dZmAx+8jNvzqrnLRKfehwfM456a1cju/Rytbpwi3UHDp9Ef0I
TY1aVHqkj5850/ghM/XzUDbfEldNjnW5U872uFset7r5q0nVjW7+sdXNyWf/
cQxs3lAuw+Zo5ujiU2ILmHxGE5GZrKYis0IW3+Pn/N7UxobpzyY3ktT2sUbz
MXmZymD42MyLQg+GMYg94G8PUX+b3OeiuBx2WapcS/3gevXPtii/5Ojvr2Ie
9JYt1z2jcy4m6zkjxxLfmtgNPafhLjMPSe9jzj7ovbxXfUn80E7KJY7R/Toi
/AqnwWfUXWID2AKf8/09e/aEZfMt27fIgHkDpNHWRh6bn/DYHB4jb7Xri109
Nn+3p6eTftLX+N8BFoPLf/Y4bNDlQZIc8s73WPjkhtPf7y/TtkyT4yePBzE6
MYJRasutlL1czyden/OxsY8B1j4SldeZO8g1RvyGOVzU1hs7UBvYTJ1pTo7p
WXC9MvqVOP3UqVMyfto0w+Zon9QpELuhtxf9+c3sNLUNFj37c/Q40NvBvyeg
HxO3QVdmb8icONHsJ+G4nJ4BoxaNkpisGIndHmtsgdqG1mdaF/DYpTgvh+Kt
Hl5Nw8eWzf9ewGKcZ2cLofbA10mXPT5DSx27d6wcPHawRIzOue6vLE6c0tkH
jI590CvP2IdyGPZBvIo85m0HDpjeX/v02JSV0a83LX1zdrZM1Gsb+yBPgnom
N2fxKeW+C+qf++2DPcbdGyapXVG/EI7Lzz9yXnrP7C2NljeSmE3K5jsaF9hC
Xmtp91A7028g7oKy+Uu6N7zh5VCQx+7Y3L83YAth94bLnj3wO8PPDZddR3aV
idGz9Xg0a9lSGjRubOzD39edPZL7ZcA+xoyRo0ePlorNo1p6NN89qqWXD6Pn
vnGi8nLbdY24mPT3AJ9XMKMPv5Q4+VrzeVJe+6aOzyuD0ZWtfy43Rr8Cp8/N
Hyv5+fkRw+jRfPfrU0tfsGiRzFy40OQSUu+HzvWIZS98plc/+khe/+QTeePT
T+XVjz82vM4MrJVFMPoWZU7XK8noz926mdxW/FL0RfQjZsvgmw/RRW/nCeqj
81xgQWx6zuABsr5zDTkSd6fkd79bzve5R54dUE1eSapu+rJ/OKSW6QFHTju1
5j9nWt28EJtbLofDZ7OaicwJWXxvtmN1y+n691+NjZGzg2IktUMT6dq+lelH
Tf0k/a7MDCV9PROUI8LNamOheTjNmZ7N6ENmzq/6lvilZoaU8s1mPe7kDVyP
nI69TqROdPFiU5tAzTi9u/Ctef6w+Ssffhiwj9f+9jdjH0f0WscO4pRbnU7k
1xHhV847uQjODlKGDzd9sMOx+dKspRK7LFYa5Sib71Ef/Ggwjxmt9LVupp7U
6OZ+Nv8uvoDFxPO9U+x7asg733N85tgs4aEEOZ13upCWDlOPVv+5S48ehsGc
feBnxw8aZOYy0xfK1Mgra8xfscL0BKMfM/EN+JW5YswXpD/aus2b5ciRIxHF
6ORkjxw3LjBPkV7cx4jv6e8/oa8N9nrpgw/kdbULZx/YDDXF9NczOSnK6sRs
0AyNrqyLfb0oNm86t6k0WNfAxGma7Gni1RjntvJ47ImO0vlCZ08rfdNqpT7d
PP4bTzM3evnlYHsItQXeA7bwQ6LEvxovOw/uLLGWTpyJ3mhxahPYP3X42Acx
HPZA8gWYZUBuAceK6+kBPX+bd+wwe+H1yOil5fRNmzbJyPHjTR0QcQj6Tpj4
nl7TxPeI9774/vvymt5XnH1gM+w1GZmZckz3xXBsTu+37jO6S93ldaXhhoYS
uzVWmuxWWziktnCqlbQ911Y6POr1Hujygm9veN+XU/OPAYbNObdo5Y7Li9sb
jC18lijL9y6/aj5nr+e1weFxune4nnFtrX2QZ0TvltV6vIhNXA2bR7X0yNTS
I4nRfw1aetbLyyuPzy8N/jmIzQsxevly+tCLSTHXms8Tcpr8S3Je+48qi9HT
cjt/X658Xgyjp+f3llz1GyuK0aNaemQx+tVw+qrVq01NNTmFWyw7wN5o5wHf
Wtnrz59/Lm9/+aX5CKNf1J+hkWUVk+uexsxX9TtcjqfTj+AzWL0f+cDJybJ0
2bKAZo7NzUruLVva3CoHOt0hp7reJQ/2qiJP9a8qzyfcJ28m15D3BteSvw2r
I1+l1zW92H8ao2w+zpfTXhSbw+JzWc1F5vnWXLscq8/0aekTG8mPyv5PJ9eT
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
D6HxGvrLUdM+Y9sMw+fhGJ253911EbMjz5s67BXKnI5R/XkGbpbli3ZPgFXZ
a6l1KG8+r2hGb9q6tbGPbn37ejE+vccwM41eaPTk2Ob2kPPnw+4hfE4NzeoN
G2TVhlVSI72G3DvuXmMLNed5fG5qHRyf720S6A0Xyufh7MGf3x7OHngvqT04
W0jPSzd14qH16NzjOnfvbo4F9wZ697MnzFu50ouJHzkSiGeFuz/wkXvDJrWD
8ubzqJYezXePaumFGX33q9tk9IW0SuPzQnPVKlRLT8y+1jwe+pZyukO/kvB5
eTH6kNy4nyuL0cfnDyqWz6NaeuQxekVr6RyPePWbyFFNtD1ryGFelZ1tNFL8
66P62phTi8aDDwk7svCbyMeDM8hVnDZ7tjlnV8Pmx44elYkt75PFjW+SLOXz
rW1vlX0db5cTXe+Sc8rnT/QrmHn+jo/Pv0Y/H30F/byo/PYg/bwoPm8RzOf+
XnH6P98aHiPbNq4LMLrj9IRBgwzTmrp+PS6Ls7Jk465dhsuO2ZxO44uqX0QO
Aj45C06DYTiuqzdvDvB+RTB6STm9e+/eRiPFv4YtyNNesm6d4Ux8ygO6p5AX
gF8Ja8FhD2Mj+hGbOa4/ww/fVgo+35C9QeqOrivVp1f36o1Xej449cbN9jeT
lic9vTTQq/uFYnp1w+c/JQXVl5aEz0N9cN5DNXTmrg06OUgefOjBsIw+cfLk
QP53xvjxhl1X6HllRoLRDm3+AfkSxDPIN6CWhI8wGTXq9FrjPPB41xujw+et
O3Qwvfjpw59m+5/Rc4GYFPzJHnIkZA952O4hMBm2s2HHjrBsjo02yWgiVccp
n08vzOfUGxs+P11yPg/wWJhe3aWxh4CGftmzhcSLiXLk+JEAo/s5vYfaQBer
I8NlJs+AOJdeE1xDh3TfpPaFY0PMAjZ1ewKfk3+wVu2Gx6oIRq8oTqfWunXH
jtJJ7YOZHYm+Pu7oxoX2EN33zB5i7QP7h92XrFopMcNipMrIKlJ1fFWpPq26
p58vqePVn68P0c8dnz8WnN/e4y1f/cvnJa8/L4k9OA190KeDZPP+zYUYHT+J
GSZcK9wbBjLX3M6ccxo6eST0iWP/55w/6bs/sCdwb9it+wGP92tn9KiWHlmM
Hola+pznJ3l8blbFsvmoi2k/XTWbXw2jPzeo97Xm8dC35GOd/iv5dPsvSsro
ZeX0wXmdvgvP5xXD6Ify910zRo9q6ZHF6I7T0Xo7dO1q/GvycOkTR0yfPk+b
ldHhA3qbkYeJD0VPH3xtPkc3hznxs2bo3/F4V6WdjxspMxveIEub3CTrWnp8
Tm+4k8rnD/S6pxCff+jTz8lv/7nEfN6scP15UfntxeW4T/bq0OlNt8enobvF
vGP8ceou0RRNTqf618Q89lpNkfxmct3hdHRSFp+jqeKjLQ0zu+1aMHrnbt2k
XVyc0X3oU0BfIzjT+NfKVeQFUEdLbgCxmlPWPmBPYjvYx5qcHNm6bVuJ2Jz/
2XhEY88Pn1Fdai+sXcDn22O9WVrwuev/VNwsrX/46s9L4X9fKZc1oKHrYzOn
adKmSUF87tYEPfedunc3Nacu/5see+hlHDeuK/J78cdhMzgdO+AjX5/UY8k1
6Pi8ohj9ajkdPm/SUs9FZ2Wg3r29OvSxY00uP/xJ76tst4fofYc9BLvAPrAT
rgP4fYnaejg+X7ByQQGTEauZV0vqLCuYp2X4/HAY/dzWn/t5rFC/7ivYw5Vs
ItQWeNy0o2lBfO4YvasyGXlKgVjNhAlGQ+caIm5HfJPrh+NCvAY2c3sCn7NX
rFy3LkiTjwRGn6n3hKatWpmZ7yaGE6/HiBr8adPMnkivOO4dXAv7dA9BPz5h
9xAW+wl7y5AFI+WuYXfJPaPuMbbg8ttrL/b2hkAv/z1eb4pA/bm/P5y1h0D/
dtc/0vXzL6Z/ZGlqHtDQE95LMPn4jtFZ+EdcK+ylJudf77epVkN3MXHiWbxe
c3/QvZD4xHnfnsC9gbwUx/wVwejRfPeolh5pjF4RnP7cW8/42LziGT3jYsp3
Zebzkue7fz7iucT/uNY8Hu5Nmfuh0vB5WRi9YM5acav8+HxN3oIS8XmkMXpU
S684Rl+xYoWZdQVH9Le9rGB0aiTJU6WWFL+BelJYC/8BxmTGMX1t1m3fbvIV
mffsz50vKZsfOnRQxrauJbNjbpRlyudZyuc5ls9PWT5/0sfnJr89tD9c6Oxz
ctynhs4+D81xbx7cEy4sn4fMWzMz0Zt4fK7/67sx9eWtoQ1kx5ZNQXwOl+GH
0RsJDR0fjOOJD2ZiHnrs6JGPL4puhv/Nwj9Ha6Quda76r+F6z10th9NvbhHz
qYuoay+KzwcPHSrN27Qxs+vJ1U5R/5pe7mhg9BOEwdB+0Mh5XfAWNoKt4Hej
EU6fP1+O6msqCZ/PXjxbqmQok02o6vVoXlDbzFBCI/PzeZv7g/Pb/TzW52M7
P+nvIfOTrtL/Dsfn+OFwPzO7ur/R3dhyKJ8zP7BNx47SuWdPc23RQ23K3Lmm
fzc1Alw/HCvOOdxKL2/yELAJwyZ6LOnrQH57aG17efP5ar2Gl61cqdfjoRLz
OftSJ7VzZtrD6Nh7wuDBZrYzjI6OTh43DEbOAHbt7AOtkLx27GNNGD5nb2ox
vIXHZBN8fL6kTqCXf+NdBfntfnsIO0+rBPPVSlJzHDbHXd+NjT2dJLn5uYUY
nbmS7LHEQdGRk4cNC8zXglHpFWd05Lw8E5tjH3B7ApzK9xfpsQzNm68sLZ19
YMWqVbJKzxO2Uho+j2nSxDA6OnqcjVkOGTXK7InE+cgtIn63ee9eYw/uHoOd
cEywj6qDq8ldwy2fj/P4vMacGiZ2Z3pTZDWQmC0xBf3hbD6FsQfmq12Mk66v
6LF/s0fBvL1P+0n/r/oXOf88dL5aqXoS/JAos3fNDuJz9tg4Pf9o6MwSdPFb
c7+dPVvm25g48azd3B/U53H3B7cnsE9k67EKrWu/1ox+Qs8VfTKYHRfNd49q
6b8ERt//yq4wfJ5WYfnuIy4kXXmuWnlp6ZeS7r/WHF7UmzL2xNLyeVkYvWDO
WsUz+uS8wSXm82i+e1RLdyu2eXPjN5DHjL5DnSD+EwxGv104HR8KvRRfEn8b
DRDfG51sotXOQ1dJ+HzW+NEyqd7vDZ+jn7v89gOdnH7u5bdfiPfqz11/uE+U
z79SPv+nma9W35uvNj4meP55cRp6uD7uoT3cg/i8aQGfU4M+McbkuH8xoq5s
S+9tZsM5Pqc/HMwC09I7C38U7XQOMQ89Zhv0+MFm+GH7cnONtogPjl8K565V
P2fyzKL7w5eUydetXy8z5s2TNer37VI2IucBf/+o2vwufF/9OXPHi2P0dcpt
rWNjzeuhlpTXQ44uear0NyLugA6Ib0msBvvg9eFXk8uN30kf5xLXnY9P9DTT
CZ5+Tv05PngQnxc339jNV/vU4zHjf//g5biXpGd3OD88XL9mw+fKZORMo9ln
78ouxOcr9bVz3NAPu/bpY+ZMoZ3S54GYlslR2bPHzFeCR5i3RT0uue+wLNfb
ImW4onrDl4XHsSNiajB0ltob/x/7oJcf+t0G/d4utePi+Hy77gGZ3boGGIyY
lMljVkYfkZlpbB4GJR7BXoFds3dgI9gKOSWz9ec7wuS3L1q5SO4a6tNMp/k0
01X1gvvDnbT2cN7HYy93NXGTXu+qPXyg9vBJv4KeBN8V5rHSxGzC1jv8mGTs
bWbOzEJ8vkbPNXtsq/btpWO3buYaohbA6chcPxwPZluSa0CvMPYDFnEM4l+H
dF8oqj98RTD6aX0O83X/X6A2vF6f2z5bj4HGfUzvbxuys8293s/jD6jtMGeT
eXmb2Q/Utlro68Y+0I5h9K42z4JcLeJ81MuQr0WcgnvMOneP0Y/EM8fOnypV
0qoYPq8yqoqpP6dXYI1ZNczeYPIpqHfI9uI1zFejX6CzBzPf4UKcN38xXI+4
kBnoV5qxdqV4jat9yTiRYY6Jn9GH6b7ZqFkzc69t17mzyUlys+eIZ7FXck2Q
U7HNxirYC9gTsAnsY5P+PFzvucrW0vfs3Suz9NwtVtvm+fI82TfImTqsdrFD
v8fMAWyBmEIO8UhsXD+SW/DI+Ydlu947dqqN7NLXfb1yeiQxelRLLz9Gn//8
tKL5vJwZfdTFtMvlyuZXZPSE8deaw4t6SzrVrtbV8HkhTi9xjnvnH67M5+XD
6MPyusnR/EPXBaNH892vby09V++naxYskJxmTWR1/XrSTH0ox+iufw39x/Gx
qZGbvWyZ8R/gcXJ04TL4nXrT2epbFDW/7Up8PrJdA5kMnze8UZYon6+1fL7f
8vk52x+O/u0vJVY389XeG+zNP/9iRB35Rvn8B38N+oQwM9ADfeKKYfRCK8wc
dB+fk0v/89gGJsf+7ZSa5rU4PkeDbKnHEjYjL4Habb9mBK/QwxhfFN8b7WiT
LtgF/4xjO2/qVMP5G5Vr8MlYzOdxjL5//36Zg3+kjLWWPGL93a36PdZi/fux
ys/o2znMUlc7POvrRUbvMXoPUdt4XO2J/+NndD5u1sfNUuY62jhWJjeoLw0b
Kwvp1/AFOjq1pOjBY/V5wulwBqyHfbDm6ue81szJk00edEnY/PCRw3Lf0PuM
H+7PaQ7w+TZvnlaL4y2k9RnfvGvnf79h/e8P1P/+pKBHXPwVakzDMXq4ecdO
IzN8ru/44eix+Popu1NMjCaU0Zu2aOHlgCuj00eN40bdKf64i23AJTAJdsDi
c9h9vl5z6/SaozbggPrm4Rh9G3EyPd6LyJtHf9NzuU1tYJv+/jplHuIvoWy+
Xr8/XtmQPgL4/ORW5/tm5Tn7oIfAZrVR9kc/l+9Q213WtascjG0kj9esLl0b
NTL24fJ30dEHpqQYBmPG4KTZs81eweudb+0DWzHzpfTzsNr50BZeTvPIe7ye
YFPukxqzaxTUO2xsKI13NA7Ea4w9PKz28GRH6fxcZ+nyYhePx3w1D+Fy3P19
u0trD4X6EXwzUAY+PlDuP3d/EJ/v27dPmumxgdHR0V0/B8Ooev2Q607vQOJZ
cDrzGM2eoHsDeRZzli6Vs3oOipvhduTIEZmnj2PsAD6G8dQOtuv1T//zU8p3
JeFynu/0WbNkki5sEz03MG9A/w99EuiRgH3k6T6xkd6X+pynqj3zv3N0j8rp
30+OtGwhjzRpJFvr15UWsbHGPnj9MDq1ELx+covS9VrgHsJsiDm+ewz2wX2n
x8ieckfqHR6fj1Q+H6t8Pqmaid2ZHnFLCuodjD0c9NnDQ+2kwxNej7igGvT3
egfluA/81ovhmb6BxcRsirOJ0Hno7DvHTx8P4nN4tYEeCxide0NQPGvcOBPn
nq3neklWlrn+uR9ssnsCn8/T64c9paj+8PD0HrUZesEs0uO4BjtQW9qu1zgz
DGFm9oyyMDr3hvG6p0+dO9fsHzw34kjo+/QMoGb+WWsf1MKZfAgb+zure8zO
jHTZ0Lyp7G/cSJ7WveP1urXkPbWRJzp1lENDh0ju0aPXHaNH891/XVr6C28/
L2PIZS+Oz8sx333kxZTvK4TPi8h3H3oh4b5rzeFFvc2YMeN/Jue2f6NcGL0E
nJ6a2+GbkvF5+XD6+vxlpebzqJYeeYxeFk7frff6hf36yplq98oLtWvKBw3q
yu7YGGnRtKk0V66EwfAb8LHhdDgMvRQWG6+MiT+F9gO/Tx4zptj56sVx+oas
NTKq/h8Nn89SPl/c+A+ypsXNsqWN7Q/X5S65v0cVeayPN//8xYT75I3kGvJu
Wi35aGhIDbrLcS9OQw9ldJfrHsTqvq8dm8/29Yeb1tjyeSP5Sfmc+ADz2NfO
mhyU475ZfW3DtG3amL69fXwxD/ww2BUfdNGaNSbHk4/4pjOVWTYNGyoXmjWR
R7vEySOzZsjZ3FxTlwpLr1OWm4ofpzycrf63mZtrZwjTExsf2jy2PhZ+Pr4T
vjU/p8fQ83YGNXN7mNlDX2B6MMH++F6cl4X6PA9UuUseq17N+E/vNqwv02M9
BnN5Aa4nMzOjyLegzh7WGOezjwz1OWF/p8Vfic9HTx9tmMzwuc1jNXOOl9Yx
Oaxmvto+b74aPaDwvzs+0dHzv18M7gkWlOPucpp/SirS/y7OB3ffdzwW4HPm
Xyvr4edT/05/sFA+H6/nu5FeV42V010OeHxamplXx/GaOm+eiX3BZ8RTiN3A
JzP1/B5KTJA3O7STVwb0k9PqC6/TRZ2AY/Ol+nfERfDd0dfIi37Y+sj0euZ8
U8e+QfnMsTk5FaP0XJm5f8pVbgY3dc7Yj5v1xow3N+dtu9oZ+wb7+Uo9v5vu
qSK5Ve+RZ2tVl7fr1ZFXYhpID8tgTVq18urRe/UyOjHsAYfCYfQu8NtHph4b
9rFQPt+8dbPcnny7Zwt+JptZ3esR54/X+O3hwXamZ3dQDbo/xz1MTrOJ2Vy+
envgb0xfMFuDzv9ZsXVFIQ09Rc+5YTO1BcfoxEFhVOI1xEGJV/j3BHKXYNat
aalyqldP2Z2aIqf0/Pu5nGt2GvuJsjlxHmpM3BxHes09be2Aa3y98hp2UxSb
E3uhjwi69lz9v+Q7oOdTa+GfC/mSnQvJYj8hLx39e+30abJRuXy/7h0P3VdV
XqpTU/6q95ZjjRoGGJ3roLWt+aAvA33S6M2Ahsz8Nb99kHdzW/xtckeaj8/H
3Gtya8zeMLum1F7k5VO4/pEmfnfMzljz1aCTY0OOe/c3vZyKQAzP9qkIqoMp
JaOH7g3EfIgJTtgzIYjP0dNTrR00tDkn7KVu/gH76Bgb74TTA3uC2gPX68kE
Zf74gZJre8T5F/fYJXrO2PuJ8VJbRFzW3BuYf6nXNnZwSO8Hu5Xhr4bR2aMz
iMnqueH5kd/AuXfx38f0NbrZ7cyvxz6YS8FzOLp/n2zS+9nWO++Qk1WryFM1
79N7S235uGE9+Sa2ofzUpJH83DRWPmzdQg5vyY5q6b8iRr/etPRjrx0sAZuX
n5Y+4sKgbyqUz/2Mfinptettrlrom3L1+rLweakYPbfdVyXLcS8fRp+aN+yq
+Tyqpf/y8905x/NjGsqxe6vIMzWryzv168iX6l//2DhGDjeJlWaW0fEbyEVE
K+2fnGz87BT1JcnLZOFTEePfN3eO5Azob/T40jL6svlzZUzt35r89pnK5wuV
z1c3v1my7Xy1Y128+eePKJ8/3b+qPK98/togN2PNm4FOjjt92n5EQx8bRkM3
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
2HgnfeOYleHuDTP164/0+IXuB8937igHdu+WRD1mwzIzTc0Mejt1EdSD+/cE
/3XNekm/3q/3kJKyOb3feF7Yh8ltWLbM43O9xxx1+vmLL5raB/IrsAl3j8Hu
Hn/icVmtfM695X71PS7UqmH4/As/n3O/a9nMvL5/tGoux/V1ROvSr09GjzRO
L3Fu+1slzW0vn3z3kRdTf6gUNi9Yna81f1/pLeFI3P9Jzm3/abkzehGcnpbb
8dvS8/nVc/ravMVl5vOolv7L09Jn6r113h9vkh133SEP3FdVXnR87vcB9d54
uWVTeVJ9qTUtmsn61i1lXZtWsrxLZ+PTkzvJfZd7LvdhfDb6jX0R00DWz5tX
Ij53jD4ktoqMVj6fUPd3MrX+72Wu8vmypjfJhpa3yI52t8mhznfI6W5ejzhq
0J8dUM3kuL8+qIadg+71cXcaOnXoPykzX3YaOoweTkcP1dL9nO4+n21/PtNX
d+5y2/UxL4+PMf+L2AC59pfiq8lR9VVC+RzdbPSYMdJC/VG/btTNx7ST1Ec/
07SxfKSs808fCxs/zPor7+t5GK++Oz4YvbboKWbyTpVnniT38OWXjfYGn1PL
CZ9vc7mHVk97zuYe+tmNj/A5fjca2Za+fYw++ojRR2vKh377sM/psj6nPWof
a7GPVi1ltT63pVlZJieX53P8xAnZp759Sear+/n89qTbPT8cncz1ap7mzb12
NcemR9z+Zl4Nehj/O0hD/8Bq6H7/2+U1hzB6qA8e7t3lMhse07/nseA8mI+Y
QMq2lLB87tYCPS8d1Q93vbIcm8DpcGtGz55yoFULc8y/LcIOPmjdwvju1Jqg
lVHDEOqLvxjC2HwkxxQN281Q5Fz5/Xjy2532/opPH3V8j256Tn3wDfdUkWPK
548rn7/q08/9zxX7eFjtI6tFc8lq2UJmqz+PXs48ePKrQ/vMhfJ505Smhs/v
HFzAZPdkevEa1zPQ5DRbe3A5za3ygnMqjIbu70vgZq19ZvPc/Yz+czCjh+P0
UFtw2jl2xGPEfxNvbKH3E73D8jnrOb3GmGkJnze29ejkKsFm5DmTr5Tct688
HBtj6o6+KcIOXtFrLpUZ2sxqW7QokGtMzA4tM5Avo3z+po3HOZZ+gFqZ48eD
+Hz6zJlGv02188+oj6HHI/ntAX1U2ZI43ovwF/blciysfZzYmmNivy5/+Y26
tU38xr+nXbb2sc3sH81ljDLf2HHjzKyDtWqT6M2wObGMloNayq0DbzW1DtiC
qXcgdke8hvyaKV6fuECOu7MHah6OtijIqbAxvM4XPA3d1aGbmM2Htneg6xXn
GP3n4hm92L3B8jl7Tzg+P6F8PoS58Hr9k1cT6BmnewN5/9TAkPuf2aO7HG/e
TO/R9bw92NlBS2cHTWRnx/Ym1uvmrsDn7AnE7FzdCj1HiMv49wT2feI3JalH
x26Tde/oZ2u0iA26PHr6mxDjM/0J1I7Q6k2Ohd5T/PcY/v/e9BGyU30P6urI
3fuzy6/wxff8r+1cYny59XyPaulRLb0knH7otb1XyeZXp6WnX0yu+Nz2gvVp
6jOp//ta83dJ3pSrc8uLz6/E6Kl57b+6ej4vPaNfTR/3XwKjR7X04hl9tPqB
js+JYV+qXUP+YvLbbQzb7wfaGL3RPfRn7+vvvLhrp7nXsvDP8NO4H6O/PZY+
XA517CCnTp4sMaMPbnS3jKr5WxlX53eBGvQltof7NjtjjRr0szbH/U/9qyoH
32f6uBsNPc3T0D+3dej/dHnu/l5xQYweG9wzznG6Y3X/clw+I4TNrXb+sz7+
D2PqmxlvxAl4XuH43K2TelzIH49XHydR/alejWMlqWkTWVurpjygrPNyGK06
4I+rz7KtW1ejsZPLSg946guNL67+FXmFnANYn99hhhf57eS70hve8Rc1iPhk
rn4UXx2fDU0dXx7/ilqFvXffaepHX1D7eM/WPxRlHzxXfv7KsiUmd5LHf1gZ
a/WM6SXic8foAf0cJhteoJPhg1ODXndZ3cJzjn3+d6enOgX8b6Ohv2VzWN0s
Jb//HYbRQzk99N39zPEYPjj5sHA/Ghz/r//+/pKXn1cso3ONLli4UBKVS/op
m/dpFGPsYGH9unJWfVZqdj8IExNxdrC6e7fAHHr6Fbgc5FO+HORCjK3XK7+H
faTYeX8uD5b+TcR54C+TE43WRo8C/Xtsg+vc5UZjH+uUzw+Z/HYvvkdvp68a
efUxAY3XZx/sHa8MHypr1q274ry2AJ8nN/ViNWkek92dcXdwH/d5NYNymo09
HC7o2236BoZq6MRsfJqp601AXkWQjn55UKE+/1eyBxOr+cGL1fDYvR8vms/d
ul/3/356PkwdUcuW0rdRIxnUtKlsrFFdctUO6Avyvh7bf+ixDdJN1Q6Iny7r
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
5u2SfmRc6NgwxOelz+mZeYl/ix6fX5vTV1+cV2p8HmuMXqGlP2EGNm+mPgB1
brOFwdZXraIxetgQ3Y5YNv4g90o4EZ+b2D0/w084OHOG6ifE4+Fy7sMwAX7A
7rShmtO4c+vWYvN5StOaJqPeLaqhe3Xo3iz0uS0qmeVWQ98RV8UcSPTq0M/3
uNc83ruWeaZfbfOC5rnXM2+mNDDvpAmjp1tGR0e3ue70jNO+7rlo6c08LZ35
a0E93bH65JZhy/5soqeZ/1t+7x+WzWF/6s6JBxAbeH1Ifc29P3nieLH4fPWy
ZRorSZc1udIdZlWVe1SvJucPNmM2LP3i0JbgYWIm3Tp1Up+OWcHDyYkUvwgf
bL0ce3QSWJ2+4Mw8g+Pp8zRmyhTNQaSnLz/Hb8eHpp8PNcforZxDNBbyYtFh
c9q3U17EP0TnOGDt4ylrH1cC9sHX+FboqAeHZ6nfznPxd7YOGqg934rN56OF
z/vcHeoHlR7Kc9e646n1CtdMA3Wmmtf8XBiju1z3Dy2T/T7AZPjgXw7yuAw/
/BvL6sH1TbLHbH+2LCZsD5vzPDwnz4+/Ty389r3bi83nfevX07xW7GCS2MHK
KndrXgvXEfkU6KfwLZyOHbwgfmsvOT/0ecZHpk+c66W8fPNm7feGjs454Fxw
ncLZLOxFZ7uRxywshkaKL0+eBXnM5GPA+Pjz6GDEWLANtQ/5muscW0uX10nN
/MK7PUZHJz1f13u9L/j20UhthPp07OZA10QzX2y+uHyuuim2MLBKKF6TUcPv
D5ZPQ7d1x8232N7dLmZz1ovZkFfh8podo+uMLWF0V4+eL27zWSi/ghwJjd18
k1zAJvi+xmm+HOixOXXnv+6jtoBmP2tD0XxOf0B4J1H4qut//VD35Qyxg4mV
vPpjYjXUmLD3UvtCDgs1RuwF78lq3a6dP6dPaxZyc714i5zLYLyF6xwGowYJ
OyCvnTxk8p+Zoe74vHvPnmofvCbycFQjHTVKuR9GpxaC8697iNgCnO72ED5T
X7N45kyTcdtPfAbbUt2L4ZCnhX3Q7wT7oCbC3Vv2PdiqAJs7Pr8j4Q6N1aCh
3zPQxmsCe4MfvwuvQ1/b1OvlvrOV1j34MZsLHUP93J9LjMzormeFy60I5tuw
P/wlwh7xTcAeXNzut33VFobtGJaPzxOEw1szo9LFQshnEf6N+8H/Z3oIu6sd
/PRWOYZ3mKVyDKl7IVZDbwpqX163cQ7ymT4QOxjc5iGN1cDN5FPQv436JmKz
5D7o/eHoUd3zT4i/AjfnWVvALtgvmK1XFJ8zg4SZgGof9m8xD488HOLA1MoQ
L0ZH9/eQs2e9PcTaB7VYC6ZNNVm3eXljyyyjYx/cP34m9z3s45XG3r2Fz+T2
v/HGGz6flyanxxKjV2jp0Wf0fW/vVD53q7QZfdQraX8rSz7PujS4bnnzdok/
zH/778Lkb5QZo5+P/3p4XrT5vHBGH39hiPYTLk1Gr8h3jx0tfbncs5PEBxwk
PsDo2z1GJ1d1V43qGsuGw+j79ET9OuoXkmMJMx6Rn229r7HZI74Z91kWnEd/
cO7/9IzdEh9ndjd9wCxduNBs2rSpWHye/EANk1b3FtXQsxv8RHu5T7zvNjPT
9olbbevQd3euao4kVjenu7k891rmF/3rmJciMDq57swj/0QY/XNhaHLQv7F9
43T+mnA6evp34wOsbnmdmWnf6efm2p8dLmeeOo//Vn4PPf4b4f0v5Tk/GdFE
Z7Dzd9Hyn+hdq9h8zur6058omw0Xf2XGXZU0n5G6vFNyDjjuz6i/0kAZ55J8
TmnVUn2jpN69Vbsg/3TaggV67PHHYTOYixlu8JvOaRo5UnsGkaeK/0StMrEU
cmA5d3D9dlnUD5IPiZaa0ry5SfnJLX4dJHnXu2p69nFO/ChnHyy0MV4vP98r
fhm+Hs9FLvXKkSPMBrGDvdeYg+7WefH36des/aCCuulwzwcP1h37GtmOgEZ2
Whg9r0Morxn/O4zRfd3UMVlAO3Vcppo6bBa2+D4sz2P5HdgcHuM5YT7+HgxQ
Ej5fLucFNusvdoDfOl3sgFjNLuuTP+rbQX21ATS0YS1b6Lxk8ps5xxnZ2cpQ
MDrHfYNlKHrG4SMfElaHpTjXzJx2jA7f02cODWzSnDmqvZJrsXbHDvWxeQ5+
h4W9rJPvT5s2zfTRHJxbzXhhMHTS9dWqqN3Sz+K8tV32DuwDv5s81nWzZpkl
8vzF4XNiOs36N1PdVGuPB3u5zdqXwOVU5NTy64793t0bmnl1D3sDMZtgXrOt
fVBGZw72W16f/yCT0dudmdU+p39ehD2IrRCnQWfFjoj7EAPCFrqd76bvoyg+
XykcDWN3lOs1TvaCJOxA9mX2g2l3VtIaExiduCh9wojbvWDt4EXZE7qLHei8
Rls3rnrmuHFm8ty5Wouu8RbZE2AzOB0bIG6DTZBrs0DOB3zuGJ09u/mDD+pr
0n3G5miQx0wtBLzHTHSel3x3+H+7tQ++xj5G9++ntkztDvGmRXdX1hgfsUfs
GXtw9sFnckW2LF5cKJ/f3vl2jdWoLfSzee5D7N7gGH1kTa+3/6S6oV7uK+73
Y3jEbB48aHsTnA3kVdh+FUFG1z3ivVBuhR+3+VMolhfRHr609vDZAD+nhnkO
2ELmlsx89ee969c3zVu29GYs2lgIuek9mjU1nYXdu1tGz7L1T8vvuVt7ErD/
XrBxjhcC+0FfsYMH5Zwxp4+aCbfvE5vlnBHD5ZrmHLE/B/cE9oilK1fq8X7r
rbcK5XNmsMWLncHo2Ec7/laPHvq3qLOB0YnzkaNDrgW2wH3A3WPYS9aI3Qxt
2tQMvtXTB8jho85uc7Wq2iOVWNQFuZ887t9b6pgt7drq3w/n81jT0mOJ0f9T
tfRZr07Kx+elraULM39dZnz+SsprsG554/b1fKSf77y4IJ+XHqNn5XX9tiwZ
/cCF3aXO57GmpccSo0eb0/s8cL/pIr7goFtC90m0DrR0YvX4Umim6GLcN/ER
YbTl6WmqwaKxwgDwHDXP6DUzhBX53X3jx5mLzz+vGs128elXij93SO7NhfH5
wPtrmJTaPzYZwujDbZ772Mbymu73NHTq0Ne383q574uvpnnuZ7rXNI/0utc8
ZWvRXx4UYPShDW09ujcbndrwz0ZaLR1Ozwlx+reW1XVeulvjPXbne9/a9Y+x
Tc0/5LHMbkM357lgf/La+VtvptQ3Lwyoq3GDE8ePqdZQHD7PFd830eY0ch6m
W598a/VqevzxV86J/4pPi/60smF90+YhTyvp3q+fshX5zZMtW6FvoXM5nSMB
fhs0SDVWHjdx9mwzS3xhGJzHcu7gdWpWl4gPx3OMEtZLEL8QHzHF5lkSO0DH
Id8dW9hn7YMFl22RtTbNsw30E55rlvytQ1u36Nz143INYwuwep74hYXxOcfk
zm53hrQy64crk+GDu97dc71e7v68Y6uRuXlKOgMbjUwY3dfRqUd3ummAyYKc
7vxwZTPL6/6CyeX7yuXyWFiO34fN8eupb0a377uhr15jzG4uDp9vl2uod8OG
ej06O4DN0E/JbSW35USYHawSTmshHAVr4yOjc2bYmcT0hnJxGM4HMRv8ZHib
PsvUpzofmzwLl6eK9grjE8fBx8anxy5Wio1gJ+hwc4T/BwgLxIvN9rGa/5g7
bjOz7rrTLBe7pS/zTuzD7h28dv6/plcPs0aei/lLu8VX3yCv7dy5c0Uyeov+
LbQ3WOU+lTVeQ25z1dRQD2/V0G1OhdrDkiahXnE78uc1a15FgNFVR6ce/dVu
HpP9MsBk9ClwnH4teyB/Qh7DY7EjbAr74rm7nuiqLMYKMvlLL71k9sn52C/X
wzw5nvFJSXqttq9b18T94AcaqxkodjDC7stcd/Rq5JgS/2CuuLODSU0aK09r
vIVzafcEeoTRl4B4DeeNaxKeflhsAFvga67/7cJQjs9ZzNDqJUyOfbhcZvIs
+tuZ18xZh/1nL1umMUFiQSusfZCfM0P2oSSx2y423pQp+8h47YF5p+aF8D6I
4+23e8femjXMmtatTJ5wYiQ+f/KpJ02tpFqmUmIl1dB9W3CMbvvFaX//Ufd6
sxinBuahU/dADG9bS9NqT6gW3TF65yc6K6MnPG9z3alHZza6rX8gt8Ll26g9
2FheAXv41IvR+PZg9wbsiufdd3SfOX3mjNkp98yFcm1NFnZ+qNa93j5tYyHM
PO8r56+THLfOYgdJ9v48wvYkgGM32TiH2oHdD9gXkuV+7s4Zue4u94E5isxp
QNumHp3rGW729wT5jG0w9xM2d6swRmcmZLNWrfRvuXnt2u9EGB0dndgQdVcz
Fy1Sn8DdY9Q+5Ovxo0drjkA3eW+Db71F3ttPNFeEPC1i0+Ra7A7cW7bfW9Ps
EDuLxOYVWnpsMvrNqqU/++7PC7B5aTJ6Ln3bLw+hn3pZ1Z4vLG/Ovt6PtAvx
LSPzeelwemZel78qn7tVyoy+9MK0MuHzCi09Nhj9yOHDprf4dl1+6DEBflSu
+Nn0pEEvxSfEn1ol90w+L767spkij59u6xu51+PDzxE/jdrX8dOmmdnCjbuH
ZZpnxM+jHxWzd658+KF+fVSYbLkwA8c7nM/HD083g+79kRlaR16HzXPPsRo6
degLWt5pVj0kvkn7e7RXHPPWjnet4deiP93XY/SXAoz+S2F0+rr/2s5eIwcd
rZtacXTvP1s9nbz3v+V6Nerwt2P2f9rF9/n5N8rl96sOz3Mwy43nRau/mtpA
tXNy2w/1qG9Onz6lfF4cRj8qrNJD/HLyHdHN0JzIC3X+LLoT+X/EPVj4t13F
F2tpGR3NDL2cOmLYjDpActnpHeYY3eVB87iMUaNUc4fD8LPR3uE5mIz/o4Fs
ED97iHCfy7WkbxW67ljxs9F20Uthx1XYR5V7VNuZVb+e9gjCNogPUPuIXkIP
KnoQvYItyKIX0ZY9e9QOCuNzzWfteVc+rUyZTHxwV4def3pYL6gtAY3MzTy+
4PUH01rTZ8N0U6eTvZuf0/t85LG688XxtfWzXXwf3xuGw3eH83ku2J+/QW57
8qpkZfPgCmdyvnfi5EkzU445WuTCGdNNovjhifZ6DNoB8ZoNagfVNDaCHawV
3zVJOLl5gNHxkYnDoIXjI6ObcY1SF4rmCbNzfsbKOe4iNtEMRhd/Hu3V9XRH
B6OXNLZEnjR+fdA+hgj7tZFz3lFsA5vtLSyR+pNblCF4vXA6eunywN4xv0Z1
M1vsklx7bIE9gV7ip2SfZB465z0Snzfv29xU6lrJswUbr/EZPd3mVOSE2UMg
r1n7uVOLfrQgo2s9uu0Zl4/JiNtQA2E53emn+ezh44AtyM94TJ8PPd2c5+D5
sIWEgwk+nztGPyLX+1ThZrgWTZs+AVyXylZyLjvI9dZJjm0Xy+jYATkKc6wd
BPcD9NQ5DRqYDnKNu3iLY3SeE82bvBk0zdlyTcJL2AFcjV1MkfMbZHO3NgtL
PSh2AYc5Rid/HvuiZzdxHHKn4X/qJbANtQ9h8x5iix3FhnkPxBn6yXsghjPq
9p+qls77gDN5L/DYqtq1zNmHN+uch+eeey4io6eNTTN3xN9h7ux6p2cLfe7O
z+hDbS9Jl1Mxoa5nD/MamSbLbAyPmM12sYd9D2peRduTXo//oI6eL45ncytc
3Mbn9N8EYjfh+8Pv+3n2QJzmV700Vx5NnueeMG+KmS/XHvM2DgoLU3PSq149
07xZM+/cC+vqft6nj+l6//2m43+FjuFAq6MT5+D4LQ/bD2DaOXLdt5Z7Aues
hXxG21ZN3u0JcPOMGXqvZg9gL8AWsIlZco077Tx8RWL0MbI/8Jr9vyWM7voV
+PcY2WPoUYftOfsYK/tSouwN7B0uR2CQ+h5eDHiK9T2WWd9jhewbqydNuiab
V2jpFfnu0eD0bW9uLJTPS4PTR11O/avH52XE6K+lNi1vzr7ej16He/1P4eb3
y4rR0/Piv8oK8nkpa+mjL/QzeRfPxzyjV2jp0WN02LBXo0YmSe6R+FH0JiKv
knslPiH3S3h9wp2VTKbchzPJg5X7PL4ZuY4s/Hh4YPyA/maf3IPp84zvzdyW
q3buMjN3mesDq60Q35D3EOTzpQvmmX41hANr/dik1bnFDKt3q85bQ0OffP/t
ZnbzO8yS1neaNW1Dee6HqEUXRj/XI4zRB9Y1V+xsdLj5PZvvzvy1IKejp1M7
Tg85mJsadfj7m9Eet7P+Yr/Hz3gcj6emnef4KMDmrybXM88NqKuz35aPTvXZ
vDiMTr++XGHrbtWqqo7uekShoeKPoafjs1Dny5opX+d076Z5jDB6e3QX6zsn
i++MTw5/j5Xzgn8Gv5H/ik5KTnwfO4MHDoPp0dmy5fGcQ/yqxeLHo6FxjgaK
zxgvdtHD+lHp9nWhl6J5YB+ThdfHtG1jcuT5nE0wc4dcaJ3BLffhfLYgn5nn
s1P88aeffroAn5MPnJiaqBo687U0t9n2bdY8d3zw3EBe86JAXrPr12xrj31G
d/XoTjd9uWtISw9yuvCV+uHCZvSIUl53S1iN7+Gj8xhlMfHd4TqeC9ajxpm/
OWTJkAJ8HmR0vl6xcqXGRtCuqBGhHjRHzl+nH3r6aX/bIyobO5BrkfwFZwfz
xX+d2S1Jzx9+smN0ct2Jw5CPTF8vOBvtjFgMvM7i3GwS/kIvozeZi+F0sj3j
8LH5fbQwbInnIO+C6z4zO1vzYAaIDbUVRu8krzPR6uhDbr1FY3xwGHXpzG+m
H/3E1q1MjtgbMYhwW3j7D3/Q2N26QnrGjZ0+1uOybqHcZsfo6KbkVGhfgjG1
8+W554vZuNrjMEbXevSfB+ofLieF4jaW05XL3rf28KHl9YBNqD3Iz3iM5lAI
z8Hm2BjMl706Ox+fHxUeJ44JH6NdUo9LTzV6ZsFR8E7rAJslhdnBBDmuM8UO
5qsdVDZzhMsO7d1rTp46ZToKIzlGp/8f1zr50v6eILzEtensYJxwO/foSHzO
IqejpdiVe84Otk4a+yKOA6ezXwy39oGd8B6www7CnbwHp5PyHuh/OPyn3r1l
gr23TBe2vCCv383g3n/8uLl06VIBPh82YZi5Pe52jdthC3f1isDo9CZwORW2
V5zawwJrDy5msyPA6CfCct3JtXlW3ueLNm7zqq2JeauHsravp1t7CN8jfHtg
b5A9hf2FmGDchTgzbfU8rT+ivwf97Z8Q+z6dl6exGvJgOPfo0W4/T7yvieko
15Z3DL1cdxfnmFjpdu3dOZ97QtUqZkaHduYXsm+ypwSfC0anRpzaduaVk+/O
fk/MBnbGDrhPnJDXFInNi8PozW2Mr739W64f/WDxFfh7zHDEPpgDyWvo1q6t
5ge4+F6vAveW2zWOM11se+mE8cVm81hk9Aot/eZh9Hc/eNdMemXUNfk8mow+
8vKQr0J8blfp8fm7MG55c/aNfKSdj9tQNJ9Hl9GH5XX9tiwZfceFjWXK57HG
6P+pWvqyhQtN/6ZNtafsQOtLcb+kT9Eg4caecq9Hk+G+C9sxf5u+Y6xB6emq
r6nPIb4V+uirv/mNeVt88Hc//dR88MUX5v3PPzfvfPKJzkunZ+ySFSvy8fkS
4fNe1X9oBtQUP7+2x+jaz73RT3TeGvPQ59k893Vt7zZbOlYJMXqSMLrV0cl1
/0W/OtozDj37Neajq5bucfqHGSFOZ1b6Hy2r0+sdXv/cMrtbn9vvw+To5XA5
v8tzoM07NufvER8gVrAkuyCfF8Xp84XRtPft0qUmt2+fArwz0s7CYw2vXcsM
TRIuE3+bXGZ8YfQtfDrnO7tzhGZCPip+Ov611qgKj8HsPA6eh8N4LCtNzunq
1auVj1kwOmuLsFNqp47KCsQO0NLTrG0MFd9wsDwvudHwHPaA344fSg93Zu/B
4nBY0Bbwx/n+1n379PyHM3rOlBwvn7W7l8/qGN1nMpfXPMXmsS62/ZrDGR0d
/XR7rx49wGS+lm61U8dl5CUrq7/j+eK63gss/i9+OvzG4/k99HjYHP7n75BP
ffzk8Yh87hh9CedauJn6YPKN6Z8Ep+GzJ8v5cmxGXwL6+6OhZt/u2cHoe2ua
kcLm8BB8NEl8bXxydCzq0cmVQIMjDoM/zLWKn4wtYBNbt27VOlJWnvzdbLEl
F8OB0RPFPqibwD7gMGyD3tIzZ8/WvGy3YPQWwpLthNPxs/29Q14vtpEu/JjW
vp3GgVaIDdEnmvyJt8JsgdjduaefNmfOnCnA51u3b9XaY98WeltGt7nuPpO5
vGbsYXZDP2ajtccw+q5Wno7uct2pR7/YKdTH+9mwuA0572909/RTsYce7/SI
bA/vhOwBjsOWsCu1Bfkbyx9eno/NR+Tmqo5Iri+9s8gn0OtE9kxiWf3k2tV4
iezFHeTaipPjGuLbW1RDHWXtYFL3bubAnj1+zvzp06dNR2EkPZc2151rnR6R
9JIk552YDXaQJXbDfakwNneLXOyB5OHY/HnXy6y7nX/t7CNZ1lRhf9VTbayo
E7ZYv57pbBk9uHdkCVtumz7dvPHb36otYAcs9om9cpzCGZ3/w+dqC10qeYzu
dHR6utv+gW4GX9AeGsy2MZsVtn8gtTA7WuVndNcz7rG4fLkVxG24vpXTA7E8
1dTD7eFdzx74OXaDDZHXDvMP2pWi+WbUhFH3TTyGPvrMN2MGOXUBLmc8GAtJ
uP8+X2vuYa8vYrdBO9i9ZYtf185ihn2+57J93PSaDrs3sC8cO368SDYvitMn
TJzo/a2AfSTYeYG9A/bBXsLPiB+yNxEvSGr6gImT90S+UK8wv2On2NILcnx4
bSXl81jk9Aotvfzz3S/+8lyx2DxajJ5zOf3bAmxemlr6Kymry5uvb/Qj/WJc
3LX5PHqcnnE+8a/wuVulne8++0JumfN5Rb57bGjpHE96c7lFjfBs8cnJg20j
vlZc167q73Hvhe+431PHSm0jmgB1pcy+ZS664/P3PvtM/fAPvvxSv37L6mXk
9+3fv9/nc97HgAebmD415D59r2V0W4vuesVN1zx3r587tehbg4xuc90fsT3j
yDN/boBXk46WTl/1t1K9nHenp5P3Tg85dHBq1OklB3+z/mg/0wOe7/9Ofk4P
OH6HWnN6wcH9sPmLwubMeqMWntexZvH8Qvk8nNF37NihPjv54NTy69xYOQ/T
UoaY+eJPT+nT23SrUcP0FC7vTozEchd1hZqLTK6pnIMk8eWUzeQcob0QS0EH
ZWWJH8axpqdXGrnJ+M5uppM8H3y2Ts4hOr5j83BG53VzjtBOU+TvPiSvpRPz
fMQ24H/9e+JzodvTC+iU444IfO5s4c3f/17nMW8Vlg/n89XrV5vKCZXVF3c1
p5rrPriK5rIyYyvYr9nVHudj9F0B3fRku1AuK0z2tPXB0U6Fp/Cj1Q93rA6b
vWnXW3bxtXwfPx1/ncfzu7AdPj157fydLuu6aC/OwvicvXCYnBP0q8Vr1+os
InqjM3voF+Jf47MfEjto16yZ6Vitmuly772mV926pl+DBqa/+Nv9LTePysnR
awfe53PumDGmvdgA5zfOshkcxXmB+yZNnqz5Co7N3eL3+X6mcHxfua6xI2cf
g/g7Yp/sBTwuyOfkIu8Sm4XTyctuSz9C8qBhAXqJy+vkPcIkzHgjd0b5XM57
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
8GemIO9R8ylyc33bpv5We5bLuaYGhvfI+8tnC2JXHIdo83l5aenEMJmtx7WO
nhrOqeyVMDqxGfZzWNXt8Y/YPZKciWjweWkxeiROh8+ZH4aOzJxR1yeOPu7c
35gnt13Y++D58/79DXtXW5DXiS1g89czZ6288903yPXMfPM4uQ7YE8mToucE
81moAyP+Tm4RjE5sxt0j3R5PjG617J08V2kweoWWHluMHi1Of+adp0uRzSNz
+sjLqd/cCJ+XlNNHXhnycHlzcnl9pJ3r3L5EfB4FRh+W1/WG+8SVhNHnXxhf
7mx9MzN6Rb579Dk9IzNT/Rju466386I1a1RP3Sb+Cf4bPi2+Gr4Muc34c9zf
4TT8naJmt5UWo4+fOFF9cfofpdrczTnLl2ue+xbhbvxsXjc8CXPgh7DgTngN
DoVNHJ+XFqPfjFo6+Q7thGnRWMh3htVg2iXr1+uMYPIn4DG0dI4f553PcPsu
OW7zli3TuV3F4fPSZnTOX3fxQ51OmGIZBL2IvH0YnXON5o82Gm4LvEf81a3b
tvnMHyuMXhJOXyXXadtOndRv55rJd5zkOiD3hFx3dEWu71P2vHPdH5DvwbfX
y+dlxenUvLTp2FH3M2yBuh1qj4lDEK/hPQTfI+c/aAvsFyvkWJQGn5eHls5e
2bJNG9M+Pl4Z3dW0EIdlr4TRmd2w+8QJvT7Id9fzLotYzVbh990lmIN+szD6
IbmeYVRiE2oLYu/kCrHPUfPg7m/UotPPnfsBtQ/EKJwtUON1QO5v0ebz0tbS
iac82K6dXgcuVjVA9vjhY8bovZ1ecTA6sRntI5KXp/ui2+N530ePHfN5P5YY
vUJLv3kZff3ry8uIzz1Gz7mc8d3wSzfO5iVh9OEvD36ovDm5vD56He71P4W5
r5Ylo2fmJf49Ky8p6nxeGKOPvNjTnLx4vNzZ+mbn9FjS0m92Rp82fbr6Mvhv
/VNTQ/fxlSvVf6PvmrK6+Dz4tfgy+G7c21fJzycKFzPfarb4PfPF118ga6Nw
Ed+Dz5nlxdcsvr5eJudYuudhkceXIL6XagSDBqlGgN9JPusK+ftowfhf6KfE
EvA/0UuIN/B9NJTJ8niOQTBvPpYY/Xo5nbnxrcWHQ3cmd0L7CE2YoLmv9A3D
f4NrOeeb5bNjGviFY7lEHsN1GGRw/s/s6SXC7otkLZbzwPnme7z/SJzO6w/u
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
SWZmybYMMktmkJmZBE6cxMFOxxRyYgc6fTvppCHppJmS3rPeVXuXj2TJFlSp
dCTV8+ynLHCp6px19lnv+i3w5r7iTyt/Wfvga+yjIC/PrH6qvtknfuJrV+Jz
G7/B9/50/Fh9Xf7G+MmTzXJ5rxVlcj8z+pU4vV9srBn04APK5wttnObFYD7r
k8F81qAdcP3JWtXtmYD+Rl76/Pnab4/8dnJn6NVHzTixF/RyziXXqNO+Oa/b
5HeZ0+dmlbvaYvqoa+257WvxpifG5+V8WI/v74fpPXz+ka19+FtJfI4Ny+d4
6ZnOqt1XlM39rKW7NW/aNNP9mWe0/wDxs/GTJpnU6681k28mThOwg+c9vShc
nUPADi5qp4N69Qr2HtMYi1xnGmPxnMPicVqXR8X1uXX/frXDkhh9ntxTtPf6
8OFai0B9OHEg6h+cnb1m7Yy8dsf/2AevT97F5oFxmhtU+NADWrtD/OarhoHa
h38Xj0PL53mvcwdzwvZujySnh6N33HPiG8Vd8xPT74nHg70nOLbs5dpPb8sW
k3jH7Wa48DlxmiXy7+3WDs6KHRSJbRSzg+/kWG6fl1Vre7z7SUuvCkbPfifL
jDxdtXwe6At3JT4PpZYemx1pHq5uj/gjbeuHjM/LyOnJBZ3+WdWMvvfYzojz
s585vU5LL53RDwlDD73+OjP7tls0b/i4+ONvPxGo27yk/hzekfsv/Z6ZUTPV
9fjdt0+1Sa1dFW6nBhX9POiji/+L7+Tyl897fTNqEOVr/PRXxL/ZMmZ0kAve
LYkLvDmVrWwes/jfP09J1lxGWB8OQKchr/7QksVmf8vmwXnpoV5+0tIvx+dz
hFtHii8257Zbg/W7Z1VjCvSG+3uTonbAgs9VN50yRXsRaI9k5t7JcSlSLyyM
To/A3mIf+IBoNKqtWZ5HVyd/2fnu3vxUVwPB99FQ17VuafYKn78sfH6u/sXe
BCXah82v+LUwGP45Nsi8oFCxeU3Ld+8rfDVIzv+oG7GDW9QOjlmWIRf4d5Z1
vXbwpZwP5lbh33Ptu9pl1U3lnHvPLdc47MT1zzml7kB7hMn+RJ0B+4eby409
oY9q/rIw0vOu36DbQ+T/e3PcOb/UC6+66w5z8IH7NH7jepkVqX/wcARfE9vZ
smJFpfncb4zu5fRBvXtrPXJv4jOpqWZQ48Zm8HXXmrE33mCyxB423XOX9iF4
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
wVlrtUlLxw4Gy3Emt4F8BerC96OZys9eE38d7Rz/GzbHDlgcN2bQLx421CQ+
+IBJadHCLBQOYl9z/d8LCgpMhuwd8LnWstq5TeicxGGobcYG4uU8k0/NsXVs
7tZ42RvYO1R/FVvSnoLF4j3YMFyn9iGvM05WnNhPC9mbWtx1p2knHNbFMjox
nJT77jEj5H3DHuRiMI/rgPu8lj3e+/xztQvv/rFSfpf3WBO1dOyAcwDXjrOz
yoI1DrKXELdg9hk8yvFwewLPfC9DzmtawwYmS87Ds3IfZo66W9h2Smqq9iPR
fCrbM46cCuI1XOvYAdd7dk6O7l1XYnMWe2f/mJiLjG772bHX9LKz0fk8xPqI
B7J3EAuiJ3nbNq1N+8ceM1FiF8T3mB02QPYO7i0pjRqaEbYfPDVWxH+JV2le
kfxd4r/sjedtnOKCHA9qgELF6JHuHTeQa1LuuY7PuUZcbnsRPvfsCdwb3pHv
LZT/O6xxI7Nd7ifYVXnZvE5L96eWXhqfHz9fWA42Dw2jDz+dUMmZauVn9LQz
cQsjzbt+eyQda3NPQl67bxLyo6qM0ZPyO/ylcnxefk6fVDA44lxc3ZZfGN0v
+e6s9dQNT5tmVogPxSw2WIZeupmzZplZrNmzlc1Wio+fKd9vhz8uvNVFfDdy
VdE41DeT7+Fjk//ufHRqS1n43LyeY3O39gozjBefocedd5iYRo1UWyVHUbVR
zrnV+mAGfGvYHJ8hyJXiQ6GZHpDjvWnz5gozek3Jd+d8DpLjjm6JpkTe5w74
XP7PSyX54t9+G+Qyvv/sq6+aCcJFc8V/y7ILHvPOUN+5c6cZOmxY0A669upl
egib9RJOHyiMvmLFCv29XLGrVsJeTYXxiOugkxLrKe67Yx8J8rxT/GXY3C2u
zUxhs25iGz1vvsnEdemiviV6GT2ig/Eb7+cS39obd7hg7YM6iSvxud8Y/XKc
ju3FWT2aPGN4RPnck4/itDLO/SfwudgCx47vkY+wWY6xd2568bVmzRrTR855
VHS06ci8LeEnYjA95Xtjhb+JtXh/vzijjxVWamFjfK4eXeM9/furBkvd8UCx
iwSxj+GjR+tn4v8tW7ZM7ap1/fqmrXBXZ+Gv3rffZgbGxijH0+eA2hpq16mv
ps6eGVzEb1w8AttguXjEvv37a2TvODTTXnYeHnsrtSUr5Lxud/q5N6fGe+3I
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
5mateeN2HJsDcg+pLJ9XN0ZnJiExKurup8lnJ77n4jfkm70kx/ZksXuMs49N
8nsV4XO/ael+YvRQc/qFDy+YWWcmX8rnYWb0y2vn4dLSY76Ifz3+qkjza214
JOZHzU/IqwifV5zRk/I7lE9DDxGjbyxcHXG+rQmrTkuv3lp68VW8R7tbc8TP
oA8t+jn93OnNzHwt5284vQhGccyiTCs+ByyDv75w2bJqMYeNGvok4U5iDbOX
LDGrPZ+lCFf85jf6OT799tuLjCk+N7+zQti1PH3f/aSlX25WenpGhvIYfcHw
PZn5Tn679ggUbqMuADbhOLlah49tjjvHlJ8vWbq0Ws9h2yh8PVD8a8cb1Ne7
2ocXhN1KjEGIjTj7IH8b9iwpZ76mMDp2gBYKl40RBmNPoHc7cS5yKbzHiTgG
59/VvfD1G+JLr1u/PiR8XtVa+kSxi4EePtdroCQ+t7kDn1j7YC/BPtYIv/qF
0a/E6SNGj9a8CZ25JzxOzA4OJ05DvkmwJ4XsqUV4lD1B9gdy/zeL3YSC0atD
vjt9Saj3oNaDenv0c/h8rXC3u8cUjwFrvELsg9jVaTlOHI+KMnqdll79Gb3g
/SMls3mYGX3Iqbi/lJ3PQ8Top2LmRJpba8sjPq/9zQlHo76qOKNXjNPLraGH
gNPHFwyKONvWlOUnRq+NWnpZGD0uPl5rTOmFxTwl5tky29jV48JdLufX5XSy
8Ef5Pj7JsnXrQsrnFeX0pcKHA20uALn6RWIN+E5yLyYH9wPrS3o1YNgCn3KF
sAW54OWdz+YXRi+N08cLk8Bl6KX0EFywYsVFbUjeC7mbcBm57Jx7rQ+Q44hN
kM8JuywUluO1qiujwxzwBvqX8vmGDYHac1tjr/UP1HM4/rLaMH42nxf2ZLZc
af3m/KSll8bnvfv1Uw5BJ4RTtQZbjlOwxlaOI1wGh8Do52weL+udzz7TPIOl
wnGh4vOq0tK5n/WJiQnOgEcbVv0cHpWfeXskvmP7cTi9GDuBxwrt9eV3Rude
2YnZFX376r2BHnDUC7l87u3EamR/Pm77ebj+oa4mBJsgH2mD3EtCxeeR1tKH
yL7orgt6MHiPhzd2hf3TL5Fj4XK01D7EXnYJ41eGz+u09Oqb737+wnkz48yE
y/N5GDh9xOmEcmjnIct3/yr1zYE3Rppba9ND+Hyj8nkVMnqFNPQQMHpu4bKI
s21NWrWd0f2spccNGqRcRn2hy+kkh5EadPJZXxSfA25BJ8HvwCdn4ZP9VO7r
zwk/ZMv/CQefl5fRk1NTtVcRfZWZGbZqyxaz/cgR9Z00f1neL/yl+amefndo
gGhiMAd1hNQYVmSGul+1dL4mx51+T/ifxDc4fvQKhF8PWC4jnwJGP/3xx2oD
b8vCJoh7wO/o7RyHUPJ5qDg9Pz/f9BkwQHNF0APJb8/OzVV9dJ/sC3w+en85
PTCYL2L7nxGHgM1WlZDjXpO09B59+mhvSfp+uf7UqhPu2KEcQq6B9tGTY8V5
53pyewLxuleE78LB5+HW0mcIb8Gj2pN/1CgzKTNTY1R8bldfrPwle8hZG8MJ
7iFiH9gLtkP+Da8XDkavqnx3avCZL0mPQHpSDCLmOXmyxmpy7DXj7g8ck9c8
9wf2BGzidTlOzN0LJZ9HUksnjs3+2D8hQe+VzDCYnZ0d2CMPHAjOIi2yhxAH
tr00id+ckGNFjldtYvTaoqUfOXdA2DuhbHweQkYvv3YeAi39TOy6SPNqbXvE
57erF+TzSnF6OTX0vM7fVzWjjy4YYAqO5Ueca2vS8pOW7idGD7eWPiAuTnv8
wLX4HOjOaOibxefYJ8cf7Rm2xe/G54LPWOgm+Gb46wuWLQu+XiQZvW9srNZQ
w1/TrT66Gd1Pznkhup/4omjk+JFBDZgePsJe5PCjfeTJ52UOdkX43K9aOu8Z
O8AfZ3YYM7XQDxcIa8AnxDjoX80xhMPRyn9q7QCbgNuxkxWbN1e6j3u4GJ2e
DK6mWrnT9ocrwl9i5zpPsFi+CFoYX9P7iXyCssxU96uW3lVsoGO3bsoiaMnM
ZiSvhhlSaMl8fuJdz8n/47xzvNyegF3AKIuXL9fX8hOjw+fMuCcukTh0qBk3
bVpwL4S/iuQOyB5CPII4XzCf6LPPNL63XJjUq8v7hdG9nA6f06fdzQFxdS+T
MzNNluz1K7ds0bhdkfuDcCmxC3JM2BO4N2SvWBEWPq9qLZ2+BF169FD7YH9k
3gU5OMx9pwYid9cuzdNyMRzvTFJvn0nie9tlv6ksn9flu1cvLf2DCx+Y9DOj
LZ8nlJ3TK6+df185Nq8Yow890//hSPNqbXwkHI3KCw2jl53Tk/I6/LXCfF4J
Tl95bEHEmbYmLr8wel2+e2D16d9f/TA0dOWy2bPNfPGrqDnFL9WZruKPk9+J
bgbD4I/hh/N92C1T/BSvJl9e/p6TlWXmyGvMFw5YuGSJLnSo8nJ6b/ksfA56
kNOfe6HlS6f7ofXrfCS5r+M/vWXzAVQDlvssvjd5/ZXlcz9q6WPGjtXZ18Rq
4DLVyxYsUP+TPHfOM4yCZsa5Jx8cW8Am8NHhtnkLFxbR5UvjbK5p5o5nyesv
kHPNHPoldoWL0eFz+k1TU8t8Qfpb0aOAOefkbqOh06Ob+EMwX8Rpw2If5Oti
OzvkOJSFz/2qpTNHjpnv9PanZzuz9sjlnSvnhmNFvzRYhJoAjtdznj0BfiUW
NlfswPG+l60XyfHmGl+Uk2NyhOHpiZ9jZxtGmtOnz5ih9tHT5lgMHz9ecyzI
J8L+ieGUuId48oleE75btnr1JXXtftPS4fPGzZubNtHRGqvpbmM11DtQh86+
Sl43jO7uD5z743ZPwCbIf6cWhL19gZzzJcL1y1auNCvkeyw/Mfradet0bin2
oRp6fHwgx0KuC3qqEpfcXNoe4s0pkO9tCyGf+01L9xOjl4fTd7+3tRibl4PR
K8HpQ08PrKR2XqF89wOR5tTa+kg8GtX2Ej6vAkavlIZeQUYfVtDTHD12OOI8
WxNXnZbun3x3crnJZezcs6f6pfS+Ic8dRsfvQDODSfDDmFMGv6Klop1Qp06P
dOYh0+978759mvfIz1nrtm83ixcvNlvlZ8VZm2M/btIks1D+ziY7Zxu/DkbG
j0GbyxPOxacvK6P36N1b54UFc7TtfFqn+x2W36HXGTXz6P8/tfkA6D38XebX
4ofnVjC/3c+MPmr06OBsdBiWOnTyKdBOYXRq+cmpgM3wQzlf2ALMzjHj5+hI
h7EPsRNmyh+Q3y/O1/jrnBd+f7fYivNnOR+sY/L1MrEJznUoOR0+Z6YcGhj+
NX3qXQ9mWGPb4cOao8r7ecHqgU4bJleAr2Gzjbt3l4vP/aalp6SmmmatW5so
YXTyDcj31nlSs2Ypo1OLznnm2uda55i5PYGvqY0h3sJ9wPWEZ2Z0hpx38lmY
2YeNwHLuGPNvmC2SjJ4xfbraB59ZY3xi/+Ple2jovG/iErqHiF0W2UM8+UTE
qtCMS+sP7xdG53WTU1JM01atgoxOnjt5Beyr6MYwOjo6ue7EP7kfHLT3B/YH
9gqOHTk4OsPwWKCGn+NGngXXWK5cd1wf1ZHTi/C57H9cE9gHOUbEcNDQ6alK
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
IubUvP/FF+btX/7SHCsoMNlJiWa8+C/o6cxfo09QpvhmYx+tZ+KEuZj/OjA5
2cyeM0f537G5W7niM82YOdN0EB9L5wv37Km+Vld5xgdjOY2EnFb6L8P7o8Qn
73bnHepHJdve8gvFHyRGsOf+e1WzwY8ir/Z18bNfadTA7I0fZHZMmmR2pE8z
64U1Fgv74bunz5gRcjb3s5a+dt061bRgHWIY9G+ix7LOFP74Y/POZ5/pvHFs
gR74J4TXZrZprVokdpBp7SBDuGxodHuze/duZXO38vLyzGR5/dawkpz3TrY3
dy/mBsfGao9m7+/PErtE73LxGmcLycOGmRETJmgdMjnR6How2hQ5nz0efkj9
7H4eBoMX4IR9D9yrGr+zj5+KX/1y44Zmy5jRZvuUyaqdz1+82BSIfWOz1ZXT
w6ml855hZdeTDy0S3Zx4HbMY3BwzZtphB+wNx44eMQsH9Dfjb75R6wqwg1m3
32ZmxMSYXdu3m0VyrXWkDzy1v3LOu9lZ0b2E0zPkHHK8S2Jzt5hVBZs3EEZ3
8RrmZMH45N2QVwGnk1uhtiB2RM7NePkMkyZPNg2aNDGNhcla33G7ib76KtNN
GD2QgxPoFQejE+PbL/aB3nvC1mu8LuxV2LGD2TJ2rM7PXiDcR5/x47JnXq5X
nJ+1dMfmr8u1nTJ0qOY4cDyp76a+iPwJ+jK6mfPvfv657gnYw0uvvmLShdHZ
D6iBIYabefddJrZtG93XibH1E0bPkf1lt513Xt7VX2yK8+lsAUZnD3Ez04jl
jvPagixsYZHY8tHDh020vL8GjRtrvMdrS8wniLrqv02nq682PX4UiP+S5068
AUZHRycniPwgei0wT+7Vp580+2P6m83jx5mFxARk/zh48KDuqXVaur8ZnbXl
ndwAm3tX1Wjn3we0cy+fl5HRK8XpA07XzTv35yOxIKp3SPi8nIyelBf91wCf
Vy2jp+V3MweP7Ys4m9at8HK6n7T0cLA5/gS92NCmqfEmp71AfDPmEjOfBv/7
wm9/az7++mvzye9/bz783e+Uzfh5VmKCMhD1nPi6ferXN52FtYcJS88U9i7O
5GVd69evV39cc91tz158ebQXNNbe8jP8bHKZyUWcIP4gucz0ZEYrJe9+a4vm
ZqX41dQq6xwm4S36+hJ3YO0U5liUnW1OnDihq7Yzeq4c89SRI81U8WuJX2za
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
u1hOz23xnJPUn+5du7Z0UZ+qT6VbbCab1+r798LrpIcRvrXnCnxJ0+aiBVA/
846sLDlw4ECRMnpJzaVPmDjR+rSRN6Vuk55rW/VYwK53Kf89or7kWc8m6nNi
A7A5cRq+h6++IiMjX/PaLoXR81qezcNrybx50rtuXel05ZXSTRksuUUL62EA
b6ARIPdlvRZC+cBwDOJNF4siTrVm/fpC4fOSnEtPTkmx3CNcRj999gSuI/T/
R10O2eJcer1Y3YseG44V9kD9MfvFcrWD/Mxsu9Rcem4rHpuHF3sGefghynS9
lck6XXedMXqPG2+Qvvr+babjwoV2DWxz14D1YHDxG9MOoO0P8Si2U1Cte0nV
u2NHxEDRivd1ffLhUeJZxCuI3xLPtD1VeRT9DNeM3xPQ2HCcNm/dmiefFyan
x67cmDze4j7Cvt9Pz31P9PHJyZLcp4/MGj9eulaoYBqcrr//nXRv1ND6U7J/
+PgN2pLY2JXdY5ymwNvHPr1+OK6lndH/O+TSX3zlBZl2dnQUn1+Q0wuJzdPP
9P8x/2xeiIx+LulB2C7ReFn2uPRHyolmzQudz/PB6QOzWnyZk8+Lh9FXnJqT
cBYtW6Wf0UtaLh1/HE0oPpjVGIb0euQU6QuGz2E94ugDpD44fjg+CN9/QH3M
1Zs2FWiuemEzul9TJ4yXvv37mRYAbSq5jX34TupLWu7L5f1ec3yOLpfcHzEH
fG4Yk95gns9LG6NfCqePVz4nX0bdJr3RF4dyQ5E+/upH4Xdz7smZYQvYBLEN
tBYZmzfnqW8vDk6Px+is27dvl5SePaxf+OgpU2S2s/Woetown6tNmIbfabd5
v4d0r+FaKyxGL4m59G69egXzDpVdqeeftXSp9cCGU+kV6LmMPCHxOa4nvyfA
abD7auXa/M5VTxSjh9fhgwdl/eoM6d6hg/EXfE4/MWa22ft2MSrfI9Fr+99y
9gGDcQw2qD0VpGdcSc2lk3f2Mw25N9CLkT2BWeXEana5Xg3h+wPn3u8J9Ivj
e/nl86Ji9IJyerx1r577zevXy+QxY4L5EaEZj/A52pJ9rp+9z59H1QGF7CNT
96Dc+ruX6d1LTi5923MblMVT4vJ5UTP6sDNJXxaczy+d0Yed7tso0VxZ9ii8
x4ATLe5OBKMPzmrzfXxGL1pOH5bVUQ6c2ptwFi1bxcvppYnRL4bT+6r/RZ6E
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
nNXiRmXojxPB6Kkn2v6cN6MXDaePOtlTjp06mnD+LFuJYfRfWi59u/pZ9K3F
H/dsO2XePGN09M34HtSj44fRxxg/Fd7FH8E/W6k++4p85s8XZyyW0YtGS/Ot
zaXxkcbS/O7m0uqRVtL2qbbS/pn20uHFDtLptU7S+c3O0uXtLtL13a7S7e/d
bPF51791lS5v6vcf7ioT1kyQpeuWRvF59969IzOBJpP/cvxls2nJ+anvSJ7H
Zmip/2QabeVydJn41vA7eoDN+p7y4vPSlkvPD58vXrIkmFHUtq107tVLUoYO
tZl7aFphdOaQ0escPQL9kLABFp9jH6vVVlar354blx/Yv18WjxkqWzveKkc7
3CD3dCknj/S4Wc70DnKk5MXIh+F/fzQs8L3xu78bVV1+GF1DfhpbU34e51ct
+Xl8Lfv8xzE15Rv9mZdHNJDNcyYq/x+Ny+jwOfP50KjiX0e0Ivq6sWNsO0uP
A33iIvUc6HXVPrx2G9vZfeRIVF6+tDB6fjl92fLlkXmGbbt0sT1h6JgxMmn2
bONV8uhcUzsOH7Y9wO8JaBCYU8es8MP6f7kx+f265yxMbi8bOlaRg+2ukxOd
bjAeezSOLfzTuLyKfJamtpDubGFMfFvge9+rnfwtvb7snjpUDu3fVyBOnzFz
pu2B1BiTQ0djQQ069T6ZoT3k7nh7iKv3eUT5L+MS8+clRe9OP/w6DRsGjO7i
t/31e742H0YndkG/OPQ1+0J7AvcKmxmvxy03Lr/z0EFZMnKgrG9bQfa1uVbu
bH+9aSfuU1t4zGknXnC2gFbiHy5G82laEJ/5NrwvjA3Zgn7ke/8ZVVeyxveW
Azu3XzKjb9i4URo1b2720dnV5KMnmOT0BJZD1/2Fa4EY1X1uDzkd2kPInfO9
/ObPSyOjl+Zc+nOvPCuTzqZdgM+LRu8+8mzKz4XL5vnj9GFn+nw8/Gzy9Ynm
yLJH0T1SjjdfU+R8HofR489bKx5GX3xySsLZs2z98hg9Ebn0LPWluvXoYf5H
e5c7xTcljz5XfXXyA+gZ8cnxxag9JIfGXHH6G09TliffnBuTc6wyNmRIuyXt
pOFO9ffubCzN7momLR9sabny9s+2l44vdZTOr3eWru90le7vdZce/+ohPf+t
ftBHvaTXJ72k9ye9pfenwer1cS/p+Z+e0v0f3aXLq12k98HesnbzWjt21M4y
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
UJzrUyFH3C7XvWFSaG+Ax+PZQ8gW4PTdqxbF7fd+IUbv0auXxavQmbEvmq6E
2o/Ro+09o9WC0SN7yPHj2XuILj5fo7Zxj+4lF8vnZbn0wmf0F19+QWadG38R
bH7pend+f9iZPl8UD5/HcPrZPhMTzY1lj+J5DH2g/v8ceKLF64lg9MFZrb9L
FKOXzUQvnau0MHpx693XK5eSO8UH8X2B4Bj04uRRB6k/Rr8o+idNUP/8pPqo
4d/3fN5jWg+pubam1N1WVxrsayCNjzYO8uaPuLx5HDa3nPmXSUGu/Idk429Y
POV8igzQfwNj/vG9FP3Hz8Dx/F6nBzsbT3hdLrNwYEpq0dGpwmD0NYLT6dtN
3yd678Jc6LbJ/4xXX3OK/vwq9aV2HTliPX9s9rf6GmdcvamvJVy2cqXl2H9p
end6BhqjN21q9ehofqnbphYZZhk4fHhgB/qRut3Y39+za6csbFnB/HDLkVlt
6Q3WC873/4LH/jYw6P3lc6XfjwpyY9Fs7lgMLvc+96wGIrN1zWE1DD7yNd+f
6fxx8mYTasszI5vJkTsPG6PDnPjYjV0MCp07OhHYkpwfuT8YDN02rEVvQeyD
vCl+N7USsLmvK/V2sGrt2lKrd8+N07E7evrDZmh7m7qecfQ457hxbaF1JsYx
SO1gpx6z8O+bnn3pIpnZsV4kX7q3TXa+lNz5Y67G4cV4PDZS2Xx0yB7CbO7j
NGYLsfYQzxbqyCdj68n+27flyeiNlT89g7H/dUtKCvTczLueNy+i56YXA3sI
HIZ98JHc6dzFi83O/PMVBaMnIpc+TM+vj9U0cvXoaAyI4VKr318ZHjuA1zNW
r476Xdh8767b9TRdK8sbXCHrm/zV9DR721xntnA8NndOv/6U6FjN5y5W85Pp
KJym3bP51Jg4zYVsQW1o14oFBeodd+LECRmj1wLHoDZ6f5dHt3mUeh3Qn2G8
7oNW+6F7AXot7IF9A/ugNh39/zzdYy6Vzcty6YXL6VufXX8JbH5pevcRZ/t9
V7xs7tbZpDeGvtTlfyaaG8sexfcYcLzFoGLl8xPN8zlvregYnZno++7alXDe
LFslg9FLYi59vTJpQTh9nTJqivpcLdu0sX7ecAycTt8kGK2/sjr94OL9Ls/Z
dWpXqZFRQ+psqSP1d9eXRocbSdNTTaXlwy2DPnDPtZdOr3YyTXr39x2bf5LN
5uTEyY/D3mEuH5TLP8/q/E7yt8nSen1b86FgdF+LTo6DXB86bNNiqg+Fn818
rdsyM43L+T4cz+JrfCvypuibmWkLl9OL95UPPrBZOXxOz7AMfZ7SqndH+3CH
02mHF3+LuMNA5VnPZmhb8ck7OztIHzVKjh49aj8b/t2dO7bL/GY3yYYm2fnS
Y9YP7kbrBxfWtb9PzbnTrlJXSq4U/zuiaZ8SypN6Fgtz+dyY5Vkdfxx/3eVP
nx/VXA4fPGA22la5C/to5OY7w5pwBflgZsqRB2OuMbEceqGx6I+HfeBzE6Oh
Vzfz17ADejPzPXLpxVGXXpyMTq3saj0W5FCbtmxp2hS4lXiN5VCTk2X02LFy
++235/hdahtm1b5cVja8UjJd7nx/OHfejdz5zdaf23LnAx2PuVjNd57HcsRq
wmzuWSwPW5idbQvfTqgrd+zcnuscNuuV2aRJoOdu2jSouXZ67jSn56bGg5oO
9gizD91Dlum5p46GGQDb9ViEdfOlidFz43T+3p26V6ToXuoZHY0B1w+MyjEa
N3Gi2Wfsc8Dm02tfKYvrXSGrG10lm5oFtrBP+fxO14PgvlA/CmI1bwzI7kHw
ietHETd252tdwmye696QbQs/qB3tXjY7X4zOHpfidBS8XxgdLQFxbM/oxCgi
9WDz51ssGL0/9xh6c7CXzFE2J55dWHxelku/dEZ/9KWHYmadFx+j6+/8XHjz
1Aq4TiclJ5oXyx7F+xi0odL/OeB483PFzui6Bp1o9U3B+LzwOH3iyQFy8lRW
wnmzbP2yGT2/nA5fT1fGXE7PGvU3yQFvU9bcun+/LFG/YaX6keHnyi2XTn0t
taSRpWzCR3IJ8X4e36PXlF5SbUU1qb2xttS7vZ7p2psebyot7mshrZ9oLe2e
bme94OjBTk92qzf/ONC0U1NO3tzYPJQzh8EHu3+pMf/89z2n83u930uSep0b
GoPBlX6mFv3IqSfFh0KHSX+j6QsWmHYVLqMPGj2wqKfMCOXO6RsHh8NkzDt+
86OP5K1PPrG56cxVom/YyoyMUtE7Dv6gThxfcSVzgfbskR0HD8oOPdfYxxq1
mbvUfj1r8zvofqOW2hIrXt4dTfvMxuXMD9/S/GrZ3Zpa4+utR7fPnTPHOMxj
4dz5T76udGJMrjSWzfG357Eaicx3a55b3h+f7XJm6r+ja33GMfoi5StfUwtn
+DliyYMHy9BRo6yvIBxGvjRsH/jcD6u/TpyG887M6zc//tgWnE7//wz1yUtz
7zj6VC9S21hATzRlT/YNFjaSQSxLuZTe7LbuvFNOnToVl+uzdI+Y3KGBMtnl
ljvHFtAzHzA9c3a+lH7tvkf3u7E85uuMY3XtOeyhYR72kNMWPhrXQPZu3ZQr
o8OgxmD16kkDr+d2Pd3JEY+YMEHGzZhhNoFtTHf2Qf0Ds64fVRvZsnVrjv5z
pZ3R2Xs4/5NCM9DRmNBPk972q9evN4YP/87tWzfLhDrXyNzaf7Hc+VpnCzvV
FojVwOenOgXadvYGP2OR+ebvpQb9In1PCnrCnQ/XOfh68+kxsRp//fv9ILw3
zHNxG/35b6Y0kN1LLjwvHZ0Y9w76LoydPt1iVN4+jNHbtjWtlt1jhg2ze8xY
7jF6D57m7jHYxwK9rxQ2m5fl0i+e019+5SWZe25SIbF5wfXuaWeSvx56GlYu
dj4/PfOB+v9Honmx7FH8j4HHm7dNBJ+z8t8rrvAZffWphQlnzbJVsji9uBmd
/leT1H9YqoyAbpuaN3rT0EOW/C/8QB9Z8sFLV6ww37ogc9jyWjB70qQkqbK4
iunaLXe+p352r3Zy56ddP7hXOwV92r2u/bPeVm9O7zdqzeOxuefxIXH+hTnd
cunnB0jPV3pJw9SmgdademPm4qiPzVwccmH0uSKnTo8j/KlU9bvR66ar741G
EQ08NcjUnMPfZ5TPmV/7mvI5bP72Z5/J259+Kq+pP85c7L3MXlLftCTPYWOG
72T1rcnnYB/URUZmRTn7oE/5DrTcymn5nZsezptPbniTLKsfaFi3m4Y10Laf
CtWdx/KY1zIbj5n/Her5FNa1x7K557AFMWt+PC4LtO5Pu3r0Keo/N2/VKqJ1
b60MRp19z+Rk43Ty6WH7gEfoQcDx8XxOfAYbeEdtAUZ/4f335aBeU5ybWEYv
6bn0I8pYc5UlmOeMfaDHZb45Wn5vH8z8fkCZcNPOnXa951a3furkSZnQvr7M
cUwW6JmDOgf6wqFn9jO0omqNQzz2TRSP5aKlyI89+O/5/OnMII/+3piGsmfL
xrh8Tk+JfikpFt+r7bTuvmccs6/R41DXQQ0+tkGPQa4l9gf2BnQVu/T6wg6K
g9GLQ+9OTHeMcups5mF4+7gnmAdP/PJxZx8n9D2v1f/HNrdtypQxda+XaTX+
JAvqXC4rGlxptrC1eXbt+RHXkyK7D0FFm3X+tvJ5uC/cN26uXk57qBezP4TY
PNe9oVHwc7Pqy9eT68vupbNyZfTlt90W1Dgon4/S90+vdvQ1xH2jtO6+Bkh/
ljgOP08+HftI1z1khu67nH/P/P/dGb0k5NJ3PrulCNg8f7l0/ZkfI2xe3Ix+
unfzRHNi2SNxjwFZzU4lgs8HnmhZwF5xhcfow7I6yYFTexPOmWWrZDF6cend
Fy9eLOOmTDEdLrWQ+IvMcqFmmjpZcr/osVnPvfuu+durldeYT1sYjN5vYj+5
dc6tUu22alJrQy3r195gf4NIT7jWj7WWdufaSccXO0rnNzpLt3e72Qw1erVH
cuc/JkfqzXNj86Fx/sVyus+jw/stl7eW+h2aWE8w8mD42MzG6aEcRs8zVj/1
t9esWWOfw+dzHJ8z59vy5+qrMgub44a23XMZixzq8+qXM1tp2YoVJXZW+kRy
wjNmmK6fnBf98GBzaqfRZvPeXlS+xD6e1c/vcbnU/LI5PQcm9Ggj85TJ0DNv
9HrmNvjgN8jdXdCv3hQ9Ty01F217PO1qjlxp2P9uLLIwtPh6QYjLQvpmesbt
nDTIXvOxY8eks/rUfm4BNbX42NRxYB/EcmB16iLoBQarPqLHi5pzjhWxGbgc
O+AjOndmYtM3MB6fl9RcOrlw4lNT3Kw56qrpdUb/u4eVzdGOEIMy+9DF5wf0
eOSWOx/Ttm7AZHUDbTt94ZijtVf5/JDyeZbTUjzutBQv9w/ype+nBvOtrda4
IPYQzpsvaBxtD/5rH7PxjD6ljjw8tqP1MYzH6GN1H8AWqO2I6LnbtZP2XbpY
nI+eHNgHjL7vxInIngCfo7GhP8HOnTtznbVeWhidRT25zSKcP18W6+fMU9yb
lWWxS9gcLme+N/Gpl9g/1D42btsm4zo1lYnV/igza/5ZFtULbMH4vEV0b7i7
lc8fiurbfqu8Myjg83DteXafwDh9CLw9hGM1ue0NYUZXW/hiUgO1g0dysDl1
82PHjw/61aemWn0Dx4B7LIuZFnC62YfrGYf+nboP7IOZhGjiV+oxi1fTXppy
6aWJ0fPD6U+89JiMOTOoCPk8d0ZPP50iw073+SIHnxcLoyedSDQflj0S++h3
omm1AcebfTrgRLNiZ/TBJ1p/N+REYhh9ataQhDNm2SqZnF6UuXRyWeljx1pc
nx5n9CFnFhR5c18rC1eaHlf9SDSY+NlP6n2K/ma8voLMS49dmZszpeaEmlJ5
UWWpvqq61M6sLfV21pOGBxtK06ym0vKBltLmiTbS/pn20vGVjtLlrS7S7b1u
Nt88UndOr3b6tOu/eLnzWDYfFvoX5vQoRv85xWaydXupu7Tc2FqShvc1f6qV
+lG91X+arry6eMkSy5cNGTbM/G3yHbMWLzZ9++3KLfTuvtfFOZ5+6y3zQV91
x5LF57AtnMtM+JI4K33z5s2Srr4k/c/oW+R1++RCyZnjT8OW2AWc8Zqzj/uV
U5gzlx8+37FtqzKZ+uHKZKsbXRmpMQ3PVKM389MRHqvkeKyK9emOW2scq12N
zZXG+t+LYn3xcK6sQaRP2Pfq52cunhOZuwZ/TFcG76NMTs8C/Gz4nP531Dpk
7t5t2mV45AFiNaFjxrF6Q+3AjpmyCf93Wx58XtIYndczYuRI4wjqqi036rQV
Pr5negF9b685+8Du+Xq/7jOxjL4+Y6WMr3G5MRna9lWNgljN9hbZs7ROmp45
um/72wP9HK2AxwJ7yIvPG8TnsYW52IPnski8pp6cn1Rb9k4aFJfP+w8aZD0W
iM/00L2CfDm16H7+NXzGHsF1H95fWa/8618Ww1m5Zk2ufF5acunE6PrqMaDm
g9zxcn3fzDCgF/kp4lXKmWf1HoN2gLiEtw/2jz1rl8jk6n+S2bX+EthCHD4/
Bp93Cc10gM9Tbg16w0XxeQ3H53H2h7z4PFd7cHvD7IZmT6fHd7DzHuZz+hty
vru42gby4cwqYBYIvSLR9DMLhL4ULPYOYsDEMtAXsGdwb9iodpJXX/jSwui/
FL07/7fg6WlFzOa5c/rw08nfDYnH5kXN6Wd7f5J6ps8tiebDskfiHynHm20M
+Lx4GT3lePPPU4+3/fniGf3SOH39yWUJ58uyVTIZvag4fZT6A+T46GlF7gvf
6S6XGyV3DjfAXqbLdnlffG18B/IfC5TbCtLjPXbVHVlXbp11q1RdWlVqrKkh
tTfXtr5wEW37Q8rnp9tE+sLZrPP3s3u224zz7/tav3bfE873fouXOx8W518s
o/O71jPup/72/Gjp09elG4vHW/A5OQ907+QR6efDrDXyiMQ6LE+k93ZYBX8c
PmGROz+nvjgaYOp0L8Tnicil09uImnvqpyPxG6fbj6qrd7lgrwvAPsixX4jN
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
o5vW3eURYTO0COhVmGuIHczolywPtGwuX9WpJefxx8N2oJ9/pb45/rufncwx
t5ypnivy0dQShGfQYwc2/1AZHZ0zNcrxmHuXcjYzAmapvS7Rc75KbWW1stYK
/Xyr/g3/cwv0/4kN+PlpMDUccEK5sJu+p7Bu17T848fLZOVINAG+thZbINaH
z459oM2By5apDQ1pXNn4HFtgvtrEaoGeAiZb6HKmxGu2tlB7aHOt9QSzHnHd
s3sSvBThsUryryHZPPat47Hzkb7dcXKm8XQV4bhNrD2EeSyUP/88vZqc0vcW
O2stuVcvi9lRj05NNj3j0Cyhr4HTyadzXU0akCLP6Tn/sm4t+TmOHeweOED6
6f5Br8Zpbm6fzRInZ+r3hLfeyrEn0NfzsO4bBe0dx3w06pbm6VquewF7xxr9
3oKk3jJN7YHZgewRaPLpqRGZ+aH2+LSuY5kbjUetH4MyOjEc7jHkjIlHwOiw
3Bq3h9Azbo+7x2An5NZXrl1tsbsZNaPjNfQM3GY94qJr0B93Gpuwxv0foT4V
UXUwedU9eF1FvDhebvZgsRrlc33ObeMGSPLvfis9K1e2a569n3ssbO71FC1c
zzh0BhyXvu7eMEf3g9PNmshXcezgC71f3DZ+XHYszNULrHc1DuwJaGfi7QnE
cLe5WYaXyubs35PUfuep7WYsXCAb3Nw8X6Ph+//d43L5xI14PexJ9NZYN2+e
7Nm8SfbqfvOoMntJzKU//9LzMvPMuItj80Lg9PQz/X9Whv48/3xeiHr3s73f
SHuy1/+TaO4re5SehzJ4v7z5vOg4PWomegJy6ctOzkw4R5at0sfpuXH5EfWx
MxYskIzmTWVw7VrmL+Ar+F7MxPBhMLS3ViO5fbv52cTF+YhPRZ0pPvtM9REK
om03Ph+kfD5c+Xz0TVJ+Qnm5ZeYtUmVRFam+qrrU3lRb6u+uL40OKddkNZUW
9ymfP9o6qEF/rr10eqVTtsb9X9E5dOsT90M/Y+p4jB7L6fH+RXLn5wNte/8f
lau/DerPPZ+3P9zeYhK5MTrsO1/91zbqi+OPkzcjX9JV/fKByjTLmjeTx2vX
lA9qVTcNa4TPm6gf1qShrUfatDJ+Q9MAC5u2nfOnPk9krrT64rAYOnjmBuOL
4Y/jr8+jN5368L7fOjk2X6NAbnXb/v2ySs8vtaKezVeuXClpev7njx4tu1o0
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
L1nvfu/MmTP/t0TzXtmj9D0GnmhSUfn740Qw+sATLT5XBs9b516EevfRWb3k
+F1HE86QZat0cjr8tXLxYslQ//rOm26UpypVlLeqqx+rfsAzem9s6HR3MBia
O3paRWokJ02yfAc8xiJ/Sr3kq21byeq+fQrE520GtZFrB1wrNwxVPk8vF2jc
qUGf63q4rw96uEdq0E81k5YPtAw07mfbBXPWXnU59He7Sfd/ullr9HL/IrtX
HDp3Y/Sfg35x4Zr0vP4Zm+s/y507bTu5eWIAxAPI3xuf37HPeCd21lq8NVfZ
atSf/igLrrpSblcf5Z4KgR/2bo3AD/vea9zxxciX6ILPfd90uHej69dN7S75
b6sxdHXH5Erxw9CF8vMwMrlK77uH69VfdvXq1htef/esMvuGHTtkLvPgrrtW
tuvru7vCTfb63nO8sKlenYhWtaWrq8fHRqMNL8COY8L2gb2o751b7nz0gD4y
UPl8+C2/t75gnsnwwcmZLg/VoDPn+Kjzv03j3it6rlZY0/z5iOzZ15Gcabg3
mPe/o5gsxg+PXZ7FfO58SuCD/6i8h69Pfm7tzIkX5vOOHaTflVfImD//URY6
O+A4n6t8i7yt1+FHagffRXLogR38q0kjy795397qzzdtMr24z5tarEbPYbgX
AbZA7gyWIj6Dlh02G5aeHsyhpmZVzzl5eGpE0VU8FapZxZ68feBzU7MxVZlr
7bVXywHlr0duKS8vVw3864/q1JKhjsHq+9pafc3h2lp6JMbaB/3rVi5dLEnl
fmOxmmFqCyOdxj2cQ6fumJ4E69UevKb5SGQOerkoTfNrymM5YzbUHddwOndn
D3ky+oXsoX50rEaf5ye1M2JDu0f3zsHn/Xp0tzypPyZJ1atJ6h9+L+P+/CdZ
pHawXfdjYqXEO95UZvnQaWoisRq3HyQ7roXLqD+J6Jpd3pScJfPI4KMXXS8C
7IDzSBwPvn5Y947cZqUfUr4b7OaUe+bzcaB7/XMrc/nn9vbxkP7u9Lp1ZOlf
9fzAX/peuLe8oTz2Ya0a8mLd2sbovj+a9WNAO5CUZHoA3g+agNGuDt/sY+Rw
GVn7GovX0J/Cah6qR9c8BBr3oAYGjQ2aikgMLymUQ3d16LF7RHxdRS5am/za
g6t7eWdAJWn9m19b/wl0JVbP0KeP5dCt14Beh8l6Pxj2R31/f/mTLP7rlRb3
OumO3et67P7tNDVhO3ixaWOLodu1lZpq8Q32BPQHxFLucKxMDptYil3Pfk/Q
xbV9TM8nNS8FmZeO3SS7mBs5e+Kxpr3xPemY64B+w/U/IA7wmvt7+zJWyRzd
99bp3kFM8t4K0TGIH4hBeN2Qvs8X1Kd4QPesROndn335GZlyJj0OnxcCp+ev
X/v5i9O1X3oufdjppI+HnOtTPtGcV/YovY+Bx5svyR+fFz6nDzze8ut88XkR
5dLnnBydcHYsW6WT0dExz77ycvUHr7N7JHm7f9TI1tG91KCetHSMDoOZHtvV
TZP3sXpZ9S/oSU5ull7hB5cskcMNGxScz/tfK9enXm816OVGlZPyE8vLLbNu
sR5xNda4GnSvcT/RNDJnLZJDf7FjUIf+dlfp9l5I5/5pDKO7PDo94+jz5hk9
t39G8S5v7tnccuef97YYAPEA8vetHorm8wsx+hzlV3yxGVdcLpnXXSPHbi5n
+r5XlXHIocPA+CnnXV+o+0Nc5mfTkzf1dX3Wh4lZ6S6fRc6M79Hjz3Jr69aZ
7tT3880tn/LmRx+ZRp4c7PxRo2TlNX+VfaHc+Qc1s/X3x9U++jaobzmhSO2k
2kdPX0+tdmG19WonM2bNypXNPZ+n3HyZ9e2m7jicQ5+tPviSepfL6kZO0xzR
uDNnLVvT7PvEhfuCfRLVB8rlTOMyekwuPeyHh5f/P35uWjaP4YN/r7xHfhaN
PXzu547lxucdmzeTPr/7raSZHfzF7ODIzTfKo3qs0VK8p9fiZzB6yA7+2ahB
xB/35xa9+EblbWp10biTQ+f8wujkrdCw+jpP8uHYRYb+zni1QT/jalEo3hOJ
3+jvvxDOvX76qX3EPu7Xv7NMWWujvuajartP3ur5q3okppBRv5662Gofrh4d
/XbncL29sw/6TlOvyqw2+Lz3jb+RATf/1mrQ0VOMcjl0z2Q2dy+kcfdz1sih
3+v6Bp72OXQXs/F1Dx/SO9DnTD2PxWP0vOI2kVU/msWwIXLnxGr0eeG+3aN6
W184z+a379xpvbysPqR9e+uz2K1yJUn5vb7XP/1BZup+sF655fBNN9o1R86Z
HPonagffejbTY8vx7dOpozEtezHaplmuNxuxGnLccNkDbtY8jO7rfTmnXPvE
9GL53DP6AX2O3sr+XjON1gHN9O5Qb3jiNPAeMSBy8raHuHqao/qzK6+9xvKj
d5UPYk7vVK9i74N97S19/TPVPnyMj55xvh+DxSx0n/N1+AM7tpDUqldImsVr
/iBjqgSMPinUNzBS89AssAc0Nsc6ZveJI4d+jhx6TN2D7RFpTufu4nhRteix
WvdYvU2sTcysn0NXw6y9t1IqSbNf/ZfUrVLFdGktXc8B7qVDx4yRlLZtpOdl
v5FBf9D9TzkdO4BfD6odPOi0FBy/j/Sa+yZkBy80bmhajM6upj18PVMT4Oer
RfQw7v6ADfg9AY6mN0bsHPW8+HzZ8uX297x9zNX7ka998HXm7EHn4txjsI9d
I9Pt/XFvuV/f3/OmFWG/qyk/hrUirvfKw927Jax33G3n5ufB5kWfSx92us/X
hcfmBWP0Yad7zU8035U9Svej/5G2/3fKsWavJorRB59o80MiGX3jqRUJZ8ey
Vfo4fUKfJIvTh/XV/yJG7/tS6T3yU70/blLent60ieU5Wru6aT8Phnp06snw
+9FMH121Sg41rB/RzueLzwe2kWv6XWM16D6HTh9307gvrGw16KZxv72ezVlr
fNT1cX8wyKG3PdtWOjzXQTq+nN3Lnby2n7cWYfSvg57u9F63XLpjdM/p8f6R
Mzc2/zGbzZmrRu6cGACz18nf07MOfXuYz/Pi9NnqTw9Un5xcyYqrr7I8AlpG
/Ng3qgWMTi7hazdj7ZQeUz+PiX5KzN9hvhq9d8iRky/DJ4Kr8MdhK3o6D3Uz
0Min4LcfCvlO4X5yvl4dBiPPgQ93hLpxtYuDN90gjykrvKqv69/KX9+G6qI/
UfuYpfaR2iSwD19XT28w6/s0aZLN0MmLzT2f91c+p+44W9f8h8AHrxnUmXqN
u5+DHvTtjs6hR+rQyZkOCTSs2TnTQNf8cxSj58Zkjss8m/l8+Qz3/yE2x4/H
B/9OfXvmNpGvDfN5mNFvV595+qxZskivk4FJvaW7+eRB7vS2q/9q1+JdFYLc
6WvUnarPCtN85ezgb/Xrmm9v86mUy9Ct+NwV59fPj/Y9ksmBw+nksbhG8dGx
Ffp8EUfxPZ+Z4YQt7XP5toi+wvE5frWvY3/d2cfuaVMtpmD61EoV5c0Qn0vI
PtY0aiCdmjSOtg/l0oGpqbJR7ZIaVtjc83nPG34T2EKF35mewsdrYDL6Bs6I
qXmgbzeaikifONcXzM++ftX1DgzXHX8Rypn+FKl9CDN6DJNNv5A91I3w2HkX
q8Hudimfs2cvUnaGYejDQEwN3b/1htPj0aFCBUn63WUyWO2A/WD5X68yLQW5
U+IeL1uspqp8rGxG7PQ7N2+vh5ujQLzDuGzOHOvPRg6d/p2HXQ8BdMaPuz2a
GhgWe/apJ56way+Wz1mjdN/wvEf+HH15pKbZ11G4OuKXHZ+H69v5/saWze19
YM9n1Z69Nut7lx/9Ue3jHbWPGbp/oLMI3186dusqXVs2kqSKf5aUm38rgyug
p8iO13hNRWwNDH39t4f6xDELPcih+5hNRYvZ+D3in5E9oprpHSJ7RDxG99qK
2D0inj1MDWI14mI1H4xvInPGjZUG111ncxYb6bnnOuY+Sh+4Xs2aSqff/Fr6
/u63gZZC7WCp3puJb5zQ6+sxV5tNjplrDDvABs7pcWzmer8TOyeHjhaFWA17
Pnrz2PvDk+7+wJ5ATp1Yy+44fJ4bo2MzfdQ2In0Dpk2zOhvbgw4etN4DpuNx
feCIA7BnsIf4niiPP/iAbNT9wt/3nlU+/1uNUP48UssR9F75tnFDObh1a7H3
eN//7M58sHnRMXra6eQfCp/N8613f7WsJ1zZozAeKcebdxlwXLn7ePEzOjr3
1BNtzyeK0YdndZYDp/YmnBvLVulh9F079b5z3bWyRH2AvY7PX1Q/8B/hPjSh
escfdb3ROFjk1R/o2lnuVvYk/s59nroyy5+rH7erfr2o+vb88PnVfa6W6wZc
J9cPCXLo9Imjj3tE476uptTZGvRxb3Q4lEOnDp1Za+eczv2VTtL5zRhG/zCa
0ft+2zeSS/ecbkuyed2+4ns/97efgen5vaSvkuy5LHf+XjerPW/3dDuric+N
z+Mx+pjBgyTpt5dZDh0NA3nIwy5XAqO/VrWyad3RC+OP3avnpB21muqP91Eu
G+36NeET0SeOvCd+s80dP3fO/HNylPAXLE9t4NZYDbSrVw/nR31fX84rfv2m
xo3kYLkb5RHl80C/XN36isfax2fYhnLYa+pzP6V++Z36t8izLVXuw17pNZcn
n6foebnpMhnk/HCYzGtZp7ic6bL6V8jaJtl93H2fOJ9Dz6lhDXKmHymPfeb8
b/q3/RibR49lsqkxfnh4eS6fks3msB2MB+8x2w3ff/XMCVF8zjVHH3xm1Fms
RP3YjZmZ0uOqKy2H7u1gg9oBenHqj2H0V/SafLd6YAf/UTt4oXZNadKyZSSH
jn9M3Tb5MvTp1JySO2VuGf44OVKbo6SL88m5p7d+6ogRxnXEUMh/LXIz1MnB
e317ZCZTOD8amglAX7kNLn+O9gObpb+h9bWL6p/QUN539vEieXVlB/T1YS73
a4Xyeffrfy3JagvUOwz1OfRKjslcDn2utwffFyw0+/peN2uNOvRnXM7U1x2/
H8qZekb/3jF6ZMbWxFD98ZQL2UPdHPZA/Af9PLn6Q6ktZdzUqcEcOt1z/TxE
rk36t9MTrIVeX10cm2EH5E7XutwidS/U5hI7fcf6BgZ2wOqkv+tzp33drMNZ
ixfbtU6sBZaG0dFDwNPo2bEDGA3tO1qa3Pgc7vfaeeoQYvU6fqY2/ededD0v
LIajewi2wr5yaNFC15vAa7Qr2+v+Jqbv4XndP15n72hYX1Yr6+3fv18yN26Q
ztf+Snrd8Bvp52wBPYWP12T3JQj6SHp7yM6hX2sxPKuDcb39fczmeRezCe8R
nKvsPcL1Jxh7oT2iXk6bmBZi80lBz8gf9Ln+NbG5nNLz0O2WilKrdm079w1d
Ht36EOixbvv730m3y35jfd6xg+lX/EXWXHO11aGfcv3T0FNQ+/IPZwcP6X7g
n6e96zuX6q5p69e2ZYvppsL3hwfo+ag2YHuCXuew+67du+PyeTxOX6q2QO7f
9wzwMzb9zPtw/Tn8H+lLxx7iNDjYzL604bIrFL/x8b1vc/TFDOYVPHiBHHph
M/qjLzwsY04PKgCfF67ePf1M/0LWtReM0Yef6d020VxX9vjlPJTN7yw4oxcO
pw863uqbfPN5EXD6+Kz+knWqbObaf6d1KXy+Y/t2GfmnoO511w3ZfWjedVrK
ePXPLL5HLg+t8xN638eHJxd7r/P3bl+wQDYov8XrEZ8bn7dKaSV/7f1X07hf
Nzg7h15+vOvjvriK1MioIbUza2fn0F0deov7W0irR1tJ29Ntpf3Tgc7datHf
7BLF6D0/dPXonydZ/jvM6ZZPd6wetX50XP5dX9PH9/myT8Dm+lzd/9Hdcudo
29HYNz3eNE8+94zOR/rbpyYlSWf1w/DFxvw5qDfcqr4sjM65IG+GppHjjF9L
7rqvsnIr148NbbP10F650nrmUmsIW3EO0DjDavAb/jU/F+4dFendo+fuGeWv
l0K1qVanrDwGl+HDbe7YwTjhgYgGMaY+PmQb8BjaRFjykeVLJUv90UW33Rbh
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
DaO7nub2Qb3t5NGJzcJg1MlgD+wb7B9oxqM7kSK2jha566Emj06N/lxhMvRO
qMXZKfbh7i1nEuLNh7JXoFt5XvZC+JzXMH5QH7UDV+eujO7Lo/tno6s9PO3t
D/PFHtD392I2vrqKPvWKZPTXbRzP1VZ86IvbcJ3/ZxF7RHH2wOOwIf4/z3dw
doL2FJFHpraAmBsxOa5x7pnsldjBJtnbi+Lz8jB6aVd5GZ0YO3bhtA/cXBEY
nV4I7m/YPHEpcun+ewz2MYoZkdTv3yfn83vf0Tx6+iMP6cx3Zo3Sk+58j+0N
6pttixdVKJv7Gf2ND26a2TdTPDZ36x4zesqNUX8rNZtXAqMn3ogeGGpeCx/f
vmPchZ5HSmT0Sqx3H5fT8w+JOf3KX+deAYw+Ly/J5F3OCzkjhlfoV3GcPllY
u59w11DrZ08QP5u+sNniay+sWUNrV8l9zBHfakjnTlrriN4Vvju5E/KAgV5a
Ow8X3SM4jBp3lpuZTJ5AfdOguWus8ZPHm0f6PlKY0WPrFNS5pz/l6bnTi768
RSFGp9a946GOpvPxzprT7n6hu9eTTi79qnD6K5bTr0eayJvi+7/ZT3PhcDe8
Tm690HrHY3IeA5fz/8jH81zkzZXNj3U2nbd1LhWbs+YJ81B7Sr0hOXTmYePf
ulnF5NFPyvkgp8rnSU8nX6mDpl50sfB8adncrbnyN53Gcy/xt6l5pZYZH5s8
x9T587WmmVm5aIqh9TtN/CrybS/J6zgqr2vgEw1Mf2H0qO95fjYcRhwHX5tY
DvaxUPyq9WmpOvv2gvw/OIM6ALQImKfzcZAtYCPw6O7MzEJ8vnzRfK+22cfo
Xq27V8uaauvcZ/vqWDfYGVuO0cmjU+tOPzqaceRNX7VMBke/bX1wrXm3uTLq
3vHDf6pshi/u+eMFy/PRYXmYnv8D0/E85N7QCUePLHtnRiE+XywMo1pbdu6R
zqheuNDr0dyzR3NJ6CgxA+GCnVHNgt24TnYcOFChfB7M6eTZAr3LffsqgxE/
ol+eXDr9ysRy/PYxZdYsnUXA3jGs5dOqZ1agneBx2HTZT/C13d6xb3K6V1tj
Y3fOFuB1+m93Cr8wg9nx+alTJwtxGYzu5zJq3Sf4+h7Q714o9rCiA73HtbT3
GL24fWIPR2ytO/3oeYML501hsrds3IYaCM7pJ7YPwtnDfxZjD9gJv4fpNU5j
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
XJl/1laqnY/u6lld7nSl7UPe1NXjdPXDI+qY7F4eq8Nm5FHxrWH240Wso5Ee
h/FY/g9+/Kq+TYvNm6Nzx/lfJ+9/A3Ov5XooitMraoU6l07vMXlTf7wGLiN3
Sn0zObUl69dr76nfFojjEJv73M1El6+3vvzSHJc9wc/nvMfors/cxmSuvnmo
rx/daQg6e5hRnD34uCwzyB6OlGAPx6wtEOMhB8//3bBoTrFcjt7DBtn/Nsm+
uVneP++nIpi8KubSiatQ4+6fydbfNzedvntiuVz/q+zcdGcLfGX/LInP2Xuj
OjQrls8HBDG603VPaurN4ptSDns46PaHyKLtgZ/ze2xh7fgReh4cn/uXat3J
+d/KrDXhV3Qdqgujl8Tp58+fN1H0ZyUmas0+9XScV3oaOllbIHYXsIXRo1VT
FJZn7hqPW+mzBXyH+fLz8rB5SYx+9d0rZvKNOOHt0eVi9Irg9LSbY/6ZdCP6
D6Xn84rl9KQ3Yr4a/4PoJ0LNYeEjfBR3jLsQMb3MfF6BufT43N5/qhQ+LwOj
p18cYc5fPhNyFgyvqrnuxOj0ROOHwej0VKrG84QJyt3okZM3495Ljpx8Ktpn
Kenp5vTp02Z8UpLOGuK+TK4dTnN8joavzkj+6ivz+W9/a9766eembVyHAkb3
6boro4+s49W7x9c3jyd6felw+lNTnjINpzc0jWc1Nk3m+Vh9eQvTYqXldWFu
Zfb1rZTbCy35Gb/jceTMm89tbmYtnVUsl1OTPF/8kvXidzEnixo95tpSs5d9
7JhZK5yG71mdGL00nI6tRIjf5Rhd+2tjY7XXcIK1BfTPnC2giUXdM/kSPhv0
oF4T34nadrjsU2FyOO3Hv/+9+UxYDVvYsWmNedbOQPbnTV2tO/Ws4xqSK3vA
1rsX5E7n2r5T54eTP6XOeYtj9e6PaQ+q8row995edXWRQyM/jn/OV37G7/Hb
6Wtf3eMJs3Xd6tu4HJ97jrxfZmS5uQboLjDX+oCwywbxQ9HhrwxGD3Uunbhd
F9kTgm0BXQW0sWAzvy0wY476GeraP7N8zqKGAo2oHfI7P6Nn7d5lBjWtXaxO
WEAzjpiNMFmi2sP3tf8hYA+tvZlby3z2sNFnDzvuYA+6sAVhNx6zXR6/du50
fX1+Judap49ngewJaCCSF0Q/E73qg2fOmG2ZmaqDVl0YvbScvllsgNp9cqbK
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
AVDtK5sXzBR+uyj8Vpl96aHKpbOYF6RaSLNnm9lz5pgEOddu5jc+GvOQqWtG
Bwhdf3LoL/7gB1rfynnmfHPe+QzJN2MT64Rl6enmuaO7tlY2K6q22eVNExo5
Ri+cS3ecjpbzPB+bwerk1ZXXO3hrpV38fGG7GmbG0J76GQSzOTW95H7osUYX
CVuALZkreM321t8KsgVsg5zZEbH9ymL0UNa787ieNkbjdAmIzeCzo92Nnr/W
mQjLUGfCdcF5Z8Hr7AHYRlF87td1d4wePA87ysfocX5G9+VO/Vym9RXCZuiG
kUN19rAy2BY61DRz+rQqUqedmvZR8fFaG0Dscb3YuNZRYAvEHsUWXB/HJ199
5dmCrRHZJ2yCHVRnRs+Sc+u0B4jBUkNFLIaZi1zv1DCjOUIMi2ufOgI+j3fs
Hk/s4oqc16Lmn5e0Vi5eYPrX++5tOXStcw+qqSB+F8zo1LtPsZr/ujcQtwmK
4y0rwhaWtq9p5sf009cQXNM+Z968wGw53jPv3+0LV2wc+gdi87es1oqrF3ou
P99cqIRa98rMpbuaqcF2XmSiLz618+BBrRmgv4dr4DX61WXf4/NwGoHskfsP
HCiUk68oNj/99rFSsHnlMvqdZ6lVPqMnXY+ODzVvhY/wUabD/Nu/C2efCiWj
J+T2+XOl8nkpGD2sFxdepV1lnZdeFJ+TY0cvCD92kY2zZ9v+THq2qf0jv8B9
G98dbqMulPs79ePLNm0wo1NGax6dfvRH+z9qag6qaWoNraXa7tqTPtqXS0c/
bkIDL58+8QmP1VOf9Hh9kl3yb3Tgm0xsYuJnxBfi8qIYHSbDD5kjTIavQQ0r
fcawJDnBd8XfJPfv76uFy/DH8M3QCSqtvntV4/SyzmFjvhT5EnIl5E/JM1Pb
TG8DM27Jr8DofHacZ843nyHnn56HnFdeMSvlOeBzt8ilO598QBGMXrQfXsBl
fk6f+4yXN1uguTNh8baPKrfjn8Pw09vXNdmZu80r8jrccmyuvbCjRmnfJUzG
LDH4k3pm6gKu21jND632HX31zhbIndF/WpzGe1Vm9DtxOr932hTUTiSkpmp/
KfpwaA8ctBoN5JWvCt9Q66vXuizicMS59gXNQi9qnTh+zAxuUa9QHj3A6A2K
ZvSJViss3cdlfk6fK3Yw3+ZR1R58trBxxVKTLwzllp/PiUuqhvWMGWa+zxYC
tUFOBxGdhSAdRDg1Kztbn6c6a8fFyLXg5n3Dau66IH/MDA96mc7KvsQsTWJy
7IVuj6cniJ4QWK0sfM7SGQLd2xSpHUgv+gg/owfl0amrSCtib5jj3xuCbSH2
WXPs8CHzA3kPwWy+Xd4rNf7EJ9DfgM+xBReroecFe3/Lx+cB7YWvvjIn8/L0
eaoLo6MBx/7OtU7dHBoDvG/617g3osNxNCdHa6W4DjjP7ryzx7NP8tqK6m2/
GzZ/8d3nzZT8uDLwefkZvbh6d6/nfOSfK57Ny8Do+dHnYJ1Q41b4CB9lPcZc
7vGIcPYXd8Xod1nvnpDT92+hZvT0i1Hm/OWzIee/8Kr66275XFlN/Df8F3Iq
9ObBaviy1IJyH8dv517OvZs8JN/j5zKTacXKleY58XPoZ1+zfo3pGt21kG5c
reE+Tnc17+TTLatT+05ePbDk+34T+5mE6QlaW1kcm/vXmPh41TkiZ4rvBWeS
I/AzWbAfDqtT30zte8aePYE69+rI6GXhdM7V4KFDNceC38rnNsfmV+gL4LNT
7SzhbnKqsBkxGvJMsDk+/SL5nP18zuLzSxsbYwY1rhlgdI/LvmNG2npWx2Wu
3r0oTofNZlo+Y82Uxc+mdGloFqYnaa2Dn839jL5z585A3f5cWxew1/aeY7/X
XM7U+uGf+2yBnxGHQs+5shk9FLn0AYMGBWpfyZ8Tj6PWl35U8mYwOrGZHDmX
8Jqed1mX5N9c6yvXr78jn7O4HhfOnGaGt210e/+x5TJX605dRWKTAi5ztuA4
3bHZTGsLrOlta5vZY4ebK2Kj/D0/n/sZPWbMGNVbQPvS2QI5U94j788/R/AT
q3/pbOH9n/3MbM/MLMT71YXR/ZzO7E3Npw4cqPnUsRMmaA6Zemc+D2qluJ5P
W/1MWJVrnfPO9xuFbflMea6yMjr2uG3TRhMb3APjY/RoZfTvFGL0JNcLExSz
CewNrR4K7AtTuzU2y2em6/mBzf3L8Xma7G/sc9SIYfPYwnqxea1vv3TJ5Pnq
2+l1+dhnC9wv6IPK3rev0hi9ojl9yLBhplOPHlov4zQh6UOnPg6tEeLvvHfm
tBC3JBbL3qh7vJxrrvXi+Ly8jH7jvXwz+0ZKGdm84nPpKTdG/bXy2Lw0nB7z
08RrsQ+FmrPCR/go7xF/oUf0XfP5XebSK7UXvZSc7unFXQw5/4VX9Vjl4XOY
il51ciz0q8FqaGqh88p8ZOoeqYfDjyHXcEbu53ylnxdfF6ZDJxrmc4vnzMzK
NBk7Mky3mG6m+6jups6gOl7d+7Dayur0p8Pr1L+z2o1rZ3qO72lSZ6earOws
k5eXVyouZx2X1xhj57g6PbC9QbkR6rTf9+udyYLPYDLqOPFFDwiblnVWelXj
9NIy+rj4+ICOM3PSXQ0w5xPdJM4tfjucjr/GeT8p9oItELvJFtsI5nO3jh07
aiaNizWjenYI9J0OLyJfNt7ni2vOzNa20oM62a70lo+Y9Ge7mfmTks3p06eK
5HL/mig2QC2I1nSKLaxzfaZiv4E+Uznf6CnQ36C1rNYWqGsmlrN248YSZ6VX
dUYvjtPpcSC3ht+OJgXzHSbPnq0zsGF0YjP0oeO3c64573AbMTpmITObrjR8
7lauPM+iWdPN6D6dzcAnHixkC66uoiBm84DGbPz5U7WF5gW2MKV/JzNr3Ahz
SmwzmMmDF3vSoOHDNQ6BLVArsNZqWLN3cb2/JAxHTTe9Gx9a/Uv2BlgdPqe/
h9rmymb0ysylp8j14DTbicexx1M7QZ07enkwOnl0YnJ8Lqd8ezzX+ip5THBO
vqycznV5Us7Z1MSxZnDzuoX60YdbRnf96BqzaezFbJjBlhKI4RXsC+wJ04b0
NKdOnjCXLuXdxuX+dUmue3RY0FqItTFcbAH9UGJS2DpxSGqFXBw30O9g9wX2
iu27dxfKyVdlRl++fLlp26mT6SyMHuGLxxGz5L1TK4XODNcC2vVc3+7ezj65
mRkO75Y8Z70sbP72e2+b5W/Mvgs2r5hcemr+6H9MyBd2zr8XfF40oyddjx4W
ar4KH+Hjbo+4nB4HQsro96IXvRSMvjRvirl0+VLI2S+8qscqD6M7vx3/jdxj
ktzHmbtFrH2DsC4z17iXw2zwOjlz9L7JM66YPNnsy8oqxOdFrc1bNwv3rC20
1m1aF1gnT50sNY8Hr6VLl5ohMTFmbFKS5v9dD73zw7WX2upeqd6Z+F/UN9+y
elD8jrxwcXxe3Ri9NJy+X84pWv/k1qidoAYylVm5y5Zp/QQ1CDvk84BtOe98
5TPFFhaK/7dXfo+9FcfoLF7H1o0bzIyUCSaqXRMT3fpJ1YfSfLovhwqrq08u
jKZ+eZdmJql7C7Nk1jSzM2PrHZk8mM8DvbZiC8SZqN/WmQTyvl9AT8Fq3znN
Q2cL9NxS57nH9h4XtaoTpwfz+VnxxTt166bXeq/+/VUnME4+J+3JXblSa93J
rcEtfAbU/+49eMDs3LPHrOJzlL3giPyO5y4Lp7P27skyq5ctNlHtm5roDk3N
kPr3BzgdNvNswdP0TnB51I5PmeQeLc2cpHFmd8Y2tds7cblbK1et0l57eh3o
O1atQKvZDZOQN6QehNid6oJZvUBswekg0stBfVFwX3t1YnRmYTN3Uxndztgj
foVOHIxOzTN6HcRi2dPZ3/fK9X5g6xazQz4vzvkJep1OevtzeRndrTOnT5nM
nTvMyC6tzMiOzU10m4be7LUg3Tj2hTi7LyS1rmdSIlqZqdEDZd/ZZQ7s3VMi
k/sX7x9NRPY4tMmx9ylz56om5hZ5z2ihwqbUU6iO6Mcf67knbutsAWY/JXtd
cN18Vc2lc566RUQoo7tad3qZqCVJnjpVNVqWyPsnJocuqLu375Wv+4TdN8q9
n7o1XXKtMGuuvJz+3vvvma1vra4ANr9LRr8x5l9J+TF/DPB5CBg9MT/6cKi5
KnyEj4o4Ei5E3h93IeLTCmH0cta7V+pc9DIw+pZLK0LOfeFVfVZ5GJ05ydzL
0Q3DfyPHgh+DdhicvkaYl7yp612jRvTcqVPm+bVrzOsjo82ekTHae8pz3YnV
g1d5udytJcLnA8X/Ig/MHF/VI6eXWvwL8n9+3Svy6Phb+GCqd/bJJ9p/R66w
JD7/JmrHjRk3TuctoeOM/0p+CY1n1Y0SXiPPsnLLFrNW/DjmUhGXOZabq5oD
V4WXti9dYrLELrC5kjjdX/++fNF8s8K3VupaYFYtWeitxQvVJsrC5G7hRw4a
Nkz1DrEF+o7hj01WT4HXrdp39McKozvNw4AtiG/O70ri8+rG6MGcnjZpkrIa
Wu69hdE1rjVhgtZPkFvj8yKmQa4Zbtu8dq3ZsX275tU13nX4kNki31Ozwmde
Vk53a83yJcrra+xaa9e65UvNuhXeOn/+XKl5/DY+F/vtY2u6sYWUadPMQqsL
RqyJ90Le9AWrf8k+oNpoPlug5rcoPq9u9e675D0z+5xrXTUIhgxRVkWvPV32
S3pbyKWv3rzJbFq5wmTHxpjNiePNjkULNR5Hbp0c6y7ZHzfLXsB1zPu/G053
iz11/arlujbYtVHXCm+tXmGOHz1Sah4vis+d7gK2ji3Q7xDowT98WHPo52wv
ts7bk3PvtwW+dz3o1YXR0QHlOmeGGvP06GuB0Xn/1JNM5d4unwH39rVyvWcs
mG8OD37WZA0aaLJSJuq1v9PqUhDPypA9dI/cU7l2y8Lo+36wqwLZvPycnpwf
86dCbH7POT3ms8TXR3431FwVPsJHRR3Cy/0rjM/LmUuv1LnopeT0pIsDTPal
jJBzX3hVr1UWPseHc7k1/NohdvYSfq2bV6aa7jYfjU/rNMPwca9m7jZftW1t
tsyaWWY+v1tGX7xkieb+tc/Op9uN7+X0j2B0XrfqXvn0zsiZ8DtqOUvD59Ut
l14Sn9PH3V8+N8foLt8Ir1FDMX3+fM05kn8+6moR6Cu155489IvCOAcmJpeK
z0uzysPl/jUhOVl98aFBGmjY7wHxM8mVqQaa1b675mzB6mHB7+gYl8Tn1V07
blJ6umljZx/3srXu1L8y8zhFON0x26otW7zZdPa6v+o792jGZWRm6vyy8jJ6
cau8TO5faGKQN8Wm0cPjvc2wc6+J3RFvoJaXuhm//mW+TxsN3Y2zJfB5dcml
c/7pSfYzumpPCK+yx8NrzOBa+exAs7Z3r4DWN/vnsSKuez6rjJ077zqXfqdV
XiYP5nP4FDt3OvbMeZ8qexv3NepFNO4o7xMdc2oqiOW+7tNCpY6CGEVRfF6V
693nzpun55zVUT4DV+s+wu7xyZMnm9nx8WZzl84m++nmZrpcI+hRrAnqA3Hn
ns/jmHye9OKXJpd+7u2TZtL1MZXE56Vn9InXY/9aLJvfI0ZPfiOqd6h5KnyE
j4o+4i5EZISa0RNzI/8eakafeHGQOXppf8iZL7yq1yoLo2eKvx0tvqzrUaUu
lN5UZuKSY+Bejd/q5kejq0QdIHXC9HHeEF/+N106mi1Tp9xTRie2QC4Q32Ok
+Bvk0BevWWM2Wv0j2Bsuwxe/jP6R+L+qcye+GDx2Uvx0zROVks+/Sbl0/uYE
Oc/EZvxzecijoyHFuSfGwWeHn8p5Jq9ErzbnHs3zfPHNjgij85mEmtGZHec0
0FxfvZt3rBpowujk0f3ad84WsG9iUBuE4UrD59Utl+5n9GnyuZBbc9c6HAuv
cf2k2XnJ1DyTP9P+XDsbnXxi4NzLHnBJnrcyGP1uOX3FihWBOn7tv0W73OrE
qcaCXO9+/Uts4TlnC2ijiS3BZPQElMTn1SmXvkfOJ5zWvksX7UcnDkvdzMhB
g8yMRk+ZeNn7qZlavG6dxqiIZ5FXfsH2ZpNTdueePWCnsO3d9KXfC0Znf+s7
YIDpEhGhGivMetceLtnfZvl0Vqjv5toP1kt7zmpirpU9oSQ+r6q59LVyHUfK
+3b96OyNGr+U8z5ebGF17VpmY9PGZuL48Vo3tcTGLKg9I66t80nR1Pz8c+0N
49yzB2TKZ1YSo7/4DlrtspdcH+2tEDF6av6ov9+RzSuZ0RPzozaGmqPCR/io
jCPhQuT/F5fT840KZfQy1rvH5/b6wz3rRS+B0dMvjjBnL50KOfOFV/VbpWV0
cqrMzR0o9/Dlo2JNZlqqOTN/vnl+zWrz2ratJh9tV/HN/LPEnc4a+jK7tm5V
zt99+LDJPn5c1+oNG7SPsTI5vZ/4mvgesCX5Eb/+0U6rf4T/RV0+rxPfA2bn
Z9Tsz1+8WN9/Wfj8m5RLp88wKTnZRMfGqv/K54fvunveXHNamOa5xYvMazNn
mHf37zPvyuf5sXD5p05XTc59vvjCm+bMVg3/JfL4pfLZb9q92+yWx2ID1Iyv
FTvg95XJ6AsXLgxwmepV25nHTgONnnq0A1UDTa4Lvy0cuXDBbBHbz5RVWj6v
rrl0XvMJYZJRY8botd69Tx8zWJjNaTjQ26C5c9kPci7lmUvCtNfkc3n30EHz
w2NHzcfHj5mPP/1UeQ2992C2zt6712zassUsF3/f2QF9zZnydbvsBYdlf6hM
RseG+sh+AJdhC6qHl5iosTviNTA6vbf0Wwd0EH22wM+Wi83wWZWGz6tLLp17
QbqwaYxc512o+xZmS6lV0yR36qj1JtOtxjf1JoGYrLBnvjDXVebNyfm7vmih
eTdjm3lHzvEueXxJjL5VPudl8nkvEzsgXrrr4EGzVz7zzWIDu8We2Lsrm9ET
J0ww7Tp31rqB3tYWVG8DLfdly7SHh3gEfQ/Eo6iroN8JW0AvjzjFDnntd+Lz
qppLx4bXy+cfl5Bgustn0FNWbIMGZtojD5sFTzYwo2WfTExP1/qSpXLuqS8h
po1eh8blrIYieprvyPfXxQZelmt618IFZv/6dbp4347RVas9f2IBm/vXPeT0
1PzR/0rKj/5Dqfm8Mjj9ZtSN9GtD/neoOSp8hI/KOsZeiGgsTP1V6Bg94t72
opfA6TMvjjMXL+eGnPfCq/qt0vA5mjDr5T69q80z5pWmjcytp5ub/2zd0nzV
9hnzm3atzZd9eplPly4xPxRfT2eJ//73mlMlz4q/e9je17VmVO7V1MVRU87P
1ouvBp9VNKPvFI6cGRdn4jp1MsPFJ3fzZIrSPyJPQt6MhW++ff9+9dUXCp+X
lc2rI6PfidPXyOdFfGPOlMlmV7u25lzjhuZ6sybmo1YtzM/atDK/Fjv4lawv
hg0xP8rNDcyLxn/bKD73nCVLvPwLuUf5bNDPd/N1sYMTwnsb5HxVRi4du9ku
vmJM27YmvktnM0B8cWqbeT+qgbZqleo200uvGmhy/p0t4Jvjl86X119WNq/u
uXRiclvlnMQMHaqMhp8Os9B3vk8Y5qiw26VGT5k3mzc1n7V62nxp7eCrIYPM
TzN3mXfkWt8qj+W52GemoDO4dKlZ75tn5u8vwRbOiW3szsw0z8vXymD0i2Kb
s8YnmJHt2pmELl1MtOwLgRnYwujoahB/Qsea/o2sIFuA11bJtVBaNq9uuXRs
4MiRI2YqWoqNGpoR8tmgGediM3wmjs/P7Npp9nbvao490cBcbdLQvNuimfnx
My3NL+Ue8aXcE16K7GMuyPXuZ/TTch9ZIHvqfNvnTQyUWgXXJ/Ga3BvokTgp
trdTWK8yc+m7ZX8f3rq1iW3f3iR07WIG9e+nvejML0CjYo4wOu+ZWC73A86/
3xZWyu/Yi0rL51U1l85CT2HT2rUm7vsPmCnC5+M6d9Z4LD0O6Gk67RbiFNSV
0AdE3cyr8v7Pzp1jjnRoZ84+9YR5tWlj80HL5uan4htwP7g+INIckevptWuv
mKU3ZxbN5veY0UvsOb8njB79q4lvRjcMNT+Fj/BR2Udcbs/UCufzMjJ6Qm6f
v1QFRl+Slx5y1guv6rlKYnNqORcMHGCOih8Gm3/UsoX5lfhgf+7Q1vy9U3vz
z84ddP2lYzvzs769zYcvXlW/C76FyQ7ZWtgXbS0s9ZDUvlMXR86d/jV0Zvg7
d5NLhyd2ii81Z9Eis2z1anNg7Rpzbstmc3HbVrNn0yazYvRoM95y2SS//pGw
GbPX0CbHF4Pb8Uemz55drtz5N7HefSyaAxERZov4X2fED4PNPxUmIz7zP2IH
/7B2wNf/7h1hvsi7qHx+WHx5mIccNUxGDpLaUFgMTT74HTvgK/mYjXIueB0V
wejM4psn53ru/Plml/iYx9asNhfEV2QmEpyJ78nCF6emldpteqt5rc4WsOEF
whLlyZ1XV0b3c/pauY6GR0WZhJQUjWstR8+99TMm6/F65kLDJ83N5k3M5888
rTG6v/js4OuO7c1XI4aZ08Ix+P6p1A3T8y+fL3O7YDL6/YnRoLlGbSx2wL7A
99uEj18QO6+oXDoz3Zb06W029O1jtk5INFnz5prj8l6yZW8gRkcMkbl76XLN
o2OtenjBtiC2OU/eQ1ly59Uxl875HytsPvKZVp5enJx7dO7Jn1P/Tw3ButiR
ZnOTxmZ/g/omr9FT5gctmgqbP23+S+zgr2IH/7R28EmfnmZf+iR9Tmoj4pOT
Nc4D9/KZc2+gv9vNMfuBnZ/AuiZ7xO49eyqc0ffJuVweGWl2tm5lTrRrYzan
ppg9c+aYtXLOuQ/wuojZopOGzVJjQ8wGW9iALchjVsjr3yJ7Q1nYvCrn0lmT
Y6LNOOHz5Fo1tK8FPVjOPTFM9kbil9S3U09Cr0fO6VNmZYvmZlvdOuIbPG6e
b9LQvNOimfmJsPlvsQPxB7CBv3fqYJYcjCmZze8Ro0/Mj/1Ludm8whg9OjHU
3BQ+wse9OBYuXPh/xOX0PB1qRh+fG/l1VWD09XkLQ8564VV9VzCbo309q1+k
yaxfT/0w7r8/E7/mv9u3UV/cdOloTNdOxnTrLF87Kq9f7d3TTJF7Oj4NnE6e
zDGZ9ir+/Ofm41/9Svnt46++0u/Rws2Q+z9/rzyMDpfPmDtX/atsO+Pc5ebQ
+2LRL3l+e4bZNirWjImPV8049I/IDaF9RE0jORP889Rp07Qe/27ZvDrm0oPZ
fJ/4q7FDh5glwuX7hMuea+zlysibYwf/dHbQzdqB/PtPvXqY4+vWahxkifh2
WkPh61e/GTRrnMWsabTTN5WB0Yvj9NzcXDNT7MHNUWO2APXW9E2iY4U9YBv4
m2gikSNMc7YgnKa2IDbB96vEP78bNq/O9e7MTCa/rP0AM2aYGc2amg11HjOH
GjxuXhB//L2nC/aDf/r3A1n/Et/8y6GDzYTERNWXo34ctqGPAB8/0MPKbGn2
BNkLPhU7+Ehsgjl3u+T6q4iedGXz9u3NMmFK4nbEDMmBuhkOL9k9glgB9bu8
TmYKTvPZAvsDPdjklsvL5tWF0bl+or73XdO3fz+tOSKfzD6Jdgf1A1vks1gs
53+r5bIXmzQyHzzd3Py8qP1A7OBv8v12sSN6/Zm1zWeJNqPTmaOv2+mXvPfF
F3r+3b3hbblfZGVnl7qPvSQuxxYWxI0zq2T/2tmsiVkxMiagQaG6Z7JnEEd2
uoDYBPsGfE5sKmALwuxb5PWXl82rai59bMcOZtQD3zPPNm+mWv7DOfdy7apW
x4oVem+ltoiej8P795tZct6X1a5pdtSra04+2cC8bHPnwXZwdmWkmfzicJP6
clTpGL2SOD0lP/bru2bzu2f04/9m/u3fQ81N4SN83KtjzMVe3xFG/7hSGL2U
nB6f25Ne9H+EhNGDOH37pTUh57zwqr7Lz+eLpkw2K2vXMgcb1Fc/7EO5/1K/
SK4M/zvA5t276NcfRXQ3k8WfIx/J/Rw/+Jyrh0NDjH414TCtgf/d7wJ10OTO
8IdWiA9YVu046mHRFMfP2uNytOKvao5WeI8cPSzIV+IA18QPOz98qEkbPlz1
qWEP6ncnpKdrPjVFvu7evbvC2Ly659I3b9hg0oTJ1tWpbQ6LP/6ytYNfiB/2
P8XYwZc9upnR48dr3m35pk2BnmVyppxncuf0KH8iPvjnv/2t2gE2waxpap3J
tZVXO25bRobmQbUm08YFtH7DzruH/cjXYxPk6+gr5XXGxMWp9uF4awvYxJq1
ayuMzatjLr2vbxZZ8uDBZnaNR8zmuo9pLc1LYge3rB382W8H3Qvs4D3ZD+Ks
NiN9BJtsj0NAX0zOB9elf0/AHmC054VlDws33Y12HGw+u10bM01eA7MByYFS
m4zGAGyus62FC8nfuz2CGmtyvGoLaWnagztV+BSbvFs2rw717lxDg79zv/bp
D46O1usC3TTYdIGwWkqNR82imjU0b3pcuczbD+hv+HP7ou0gO7KPN8Ns6lTl
c+Zyutp29gTOQ1F7AvcG+qTYh+5WO2713Llmobzu9Y2eMpPEHojDujw+ddvY
JGyORrt/j2C/4l7mbIH95W7ZvCoy+qgOHcyI733X9G/WzNMD5dzL/ZH3zWdF
7QuxTnrV0p9ppXXw8Pn2enXMqSe92rpbls//JHyOHbw+rbeyuVspr5Yyj17B
jJ6aP+ofSflRf5iQP6Ji+LxcnB79aVz+iO+FmpfCR/i410d8TkS3uAsRvwst
o/f6Y2Ju5L3ViyuG0bMvbQ8554VX9V7weaow2ZrHapkjAS5rYX5pa5pv4zJZ
r/aPVMYlD01dqPPFXb+a+uLie/v5nH/zcziJGujl4sevotZY1mpZJfE5Gu1p
4jNSp54hfH5k3lzNx+DvkYvVHK34/vh8LPTr8L1ez7toPhzQz0wQP4SZcfQj
R40aZWbNmRPg/srg8+qYS98in+20Rx826x6rHbCDIrnMZwerBw/SuAfcSw6b
XNlxy+fqi1sNsY+tL/7j3//e47Jf/UrPD/XNfv7eu3evWYFdoBsg3I2mHMuf
Z3c17XA1uW9mdcNi1G9clr97Uf7/mx9/rH/3I1u/wVdshMdQz0n/KTnD9ClT
9DPlOSuaz6tTLr2P1Tmnxn38U08qn2+UPYG86Uu+vOmf2ns1zdTQODv4p6zl
g57VOA09BI7P91kNAvLn1DTDxlyX6Aq6PYE8OnvCFuGi0nA5+UxiKevEJjaK
vW0UlqA2P0U4IlFee0B/PDv7Nv3xd+Tvv5K529wS23B1HDDh5NmzNee76C5r
2qtbLh2b73vff5gePXsGZo/ptTx/vpk8eLBJefhBM7/moxqnOWbz5++LHdxW
RxHYDzqbaUMGK5/D+bBe8Jw2V1NDnJbaKsfnfKW+arvsB+XVeCdOw14xb+gQ
sz46yiwWW1gmXM49w+Xxj/peBzFc/33j+vHj5rWrL2h9Fp9PRbF5Vat3jxE+
H3j/faZ348aBmWvcF7l+ia/R88E9fcm0qVoHn/7wQ2ZRrRpmi9gBcRrs4N2n
m6kuzR/EDt4b38NMvTqsEJ+nyyo1n1cUo99QPbg/emzu1r1l9KQb0b9LvBEV
EWpOCh/hI1THuJyIlZXG56Vn9D9NyO0XGj73MTpz1w5f2htyxguv6ruy5F6c
XrOGWVW7luZNnR/m6tduq2+XNQk/Pi1N+YieTeYJO19ca1ldfbv4PXA5OYpz
wkFOmwvddPoRda6RnXOGri+zrWAvP5sTP0gQf2tD/37mrPiGrwojvNuyhfmk
Zw/zaa8Icysp0Xwo7wOfO5CjFQYgR4v/fWXfXrMrarjOgWKhUVdUX/u3ndHH
t2trpj7ysFn9WC1zSOzgqq1r/sL6YX/v2O42O1gt/ji1kfQu+nWlqG8nj40P
/K6tpfjU6v2z4GVsBH7Ksprps51m/JEjAfu4LEyGfRyT51TNZ/HfsY/xyck6
L4ve0Q3if+9NTTGn2rUxL3XuaN5q3tR8Inbxo769zKejY83n8njsQutohdG2
ir1jA2ghBtfLVydGr0hOj4qJ0flTg/v1M+Mf/L6Z/ujDZu1jtc2hBvXN840b
mrfpN32mpfldu9a32cHfZTGnKzY+3iRPneqdE6cNJ9cv5/DV99/XvKnjMmcH
XLMwUlEa8MFcPlt4D80I8rHw3gVrH5fkczgr35P7JE601PVPnz9vzsm5P7du
rTneoZ15vmtnky/v44c9uolt9DafDRygOvTZYm/Myfbn4yuD0ataLp3/mz5m
jOnctavpI+eec4hWWHJ6uomR85/80INm1qOPaD0NdVVXGtN/3izQf/437MAf
s+vWSfmc50iw+pzMm0dzjX4Crmfm1/ljNZ/49gS+3y/3AK6XsvA5e/cM9B+t
3RGrc/ZxCfuQeww9DsRr/HX2N+XecPXAfnOse1eTJ7bxitxT3mX/kO+vdels
9snzvSavpTowelk4fQ/zSO/7D9Ptqad0vgFz9gbKuWcuOjF34irsw/NlTx0r
fJ768IMar1tn94PLaEW28LQi3xnW0Uy/UpjNAzn0V6LLxuh3yekTb6AH52fz
SuD0OzF6ftSSUPNR+AgfoTxSLvb6X+MuRLxaqYxeCk5PyO39l5AyuuX0tIvD
zMlLR0POeeFVPddU8afIlSytVdPstffft+T++yOfHlQgV2JXnPA5Wsjcy6k3
d7WkTgsKLiMvRr8ptcWqx7ZtW0HNqfhNr8jjyLWTYyWXSl6FvAazZl1/Olpw
C8RvyGrSSPzDAl0aXhe5PLRpyO3+pnsX80lKsvlcnsflaOEA/MDn5TU9Hxtb
Ki346pRLr2g+H9esqUl7+CG1g+zH66lm9xtWsxt9uD8H7KCD5k8/k8985LBh
3pzxGTM0b7nV5i2ZTRToPRAug8HIV8LlLGI3/Bx990VoASxcqOyVJexFfQV2
hC3gy6t9yGOxKeZSr1i9WusxU4TPFwwbanbI6zv91BPmtaaNzQ/Fx6b+9vfC
6tR+oGX4B2GInwinf3rrltojTMes+5I0575tjL5y1SrTrVcv069nT9V2niR2
QE3rHrGD3EZPmhvNmpiPW7XQnheuu3/49oO/C5+Rg6MugZgdWltrbN6UOIvG
apjLxPx0O0ObunauT2yCfeKifD5FcfnJkyfNfNlj5omNBPqHXQ6UPgaxD+pn
sCWenxghj8vYt89kCKtndGyvbHm5sadtxp6GLRN3/EsHb+/4WdRwc0DYPrhm
vjoxenk5fdXiRaZdx446D11rnWVfH5OQYIZ/9zsap5n8iGcHWfU9ncBrYgfu
GvsjMTvsAEYXO3hTuHbo4MEFveyzZnl6Y1lZGr91Ov6u14C4HUzu9gTX+4TO
YGnZnDqbNNkHtL9c9g9/rh6deGLF9LtjH9fEVvj78PnpQwfNtogeqrdyxuqR
Uyv0hdU8071D1s3IPubg+vXfqFz6Bfl8I2vXMl3q1jHtO3c23eXcw+jPjhih
MTb60ImxRTVuZGIf+J6Z8ND3AzXu2ME5sQP22uu9njGzcwab9BcrkM/LyegT
80f+pXg2vze59KQbUS8POT7k/wk1H4WP8BHqY/SFHo8Lo/8i1Iw+PrfP1x6j
hzaXPjUv1py/fDbkrBde1W9NYb6K+GJzajxqdtSro/NTXivCXyFvBp/hm48R
LosVP26KzZtut3q/5EPhMnqL8cHwn/m9m6mLvx7IX/gYnvwqvho+G37Uus2b
Nb85b/Qos7N+XZMjPgHznX7ktIPltfyrcwEjUHuNr/2jMaPMZ/IcLkfL8zO/
98WUiebM6dOlntlWXRi9Ijl9dNMmZoLawSMmQ+wA5n1F7IBaCubo/KZta0/L
39rBu107q/4v2s/kXdBvJ4dJDMY/S4nziX/s9AFYxE2wjQNyjonxuLk+qi3n
mwHA4+A5tQ9Z2Afcjo5RWr9Is76u1TBrfHuu/1+WG5Qh5fV+OXiguUVO/6OP
zPotW+6oC1+dcul3y+ebNm0yHbt1MxFdOpvY733XJD30oJkr+wG9xydsTSux
Mce3MPrX1g7+Kity0CDVl6OWgj2BHDaxGnT5VMNRWJtrHm0K6ibetXMdOJ/s
E3nCTfT7+tmcGN1YeT5y4kvEPgI162Lz9A9rnc7nn+vzfGjt4z15PvafjUuW
mGWP1ze7ZO+Av14XO/5I4wutzJ+C4kzYycc9upnDmZlF6s590xm9d8cOpkPX
rsppMPqwmBgz6Dv3mzHCZsnWDqhtPiZ2gFYgOXRidsRqYPS/WTt4QfaDPlbH
gBw62g70sq+x3OzuD8/b+wPc/I7VA1CNCLELru3S8vkqOwuSPD017MzKc3qA
xP1eszUbGhuUe4vGgsQ+8q5cMUufaWU2yXs60KB+YHagzidoazVXfPGnr7p1
NofkHlZdGL00nJ4l+3TEff9h2nQoOPecO/p+VCNy9mwzSFicOA017hPFDuZY
O6D36Xz7pmbOyYFm0tVhJp11G6MPKz+fl5HRU2+M+vrObF7JjJ4f9fOkazF1
Qs1F4SN8VJUj/nzE0Ern8zswuqcXF/mPqsDos/LiTO7lnJDzXnhVrzUlId6M
sX1max/zNOLwWW6Iz0KuxM0/JydJ3gmfLEb8uOGjRqlOL3pM5MfRfIXLyJfh
g8FmsBd6uOS0dO6W+E7UK7sa+Fu+GngW/1atHvGt1jCnqXYt9aGuFuqBDe59
9GorVU9cfKuPN6z3cnPik/E34ILzwvurJySWaa76ty2XHt2ksRkrPjl2QI07
M5Uuih0wY43PnvrmX6kdtFY7yO/UwfTu31/98dHCUTqXCx0m4Wz0CMiXXRT2
03nHcj7hYnxyF7chz0WNutMk2nXkiObOyXG9anvXYa+P/PXQ2If87Krw27w6
tTWOcIp4UrPG3jzAtkVoGurMgU4aV/ps2hSTL3878+DBUs9Vry6MfrecPkAY
u1ObNmaY9cmxA66/bDtj7TUbq4HRYTNq3dkLfierZ79+WiNLDp09Ye7y5XrN
B7hMbPSyMBP8xbVPbA5bwCY41zC8XyOO1zNHuNxpVmmd9IEDxfdO/OY3herl
j4k9rRGWIP+f08g3H07s428uduOzj3/J3vHiwP76Gd4rRq8q9e4nTp40XXr0
MB26dPFqKGRvpy8dbfc4awcrxA5c7hR9MGI1nwujo03xW7sf5Mh+0KNvX43Z
DbXzxafY2Ao59MD9wc5XIFdODO6m3ROwC6790vA5NkJckBgAGn8uHuQ0B1z8
hvjeLV8d/afWPjLHjlHWPNzg8YL+jdZe/8bXt9XtdzY/i+imdvBNYXTey5iI
HqZj40bK6O3l3Hft2dOLz8TGmviJE80Y2Q/oU49xdvDIQ2Z57ZpmV8P6Zm52
X5N6dahJkzVJl8fogSXfT7wbPi8lp6fmj/pngR5c6Bg98Y2o4aHmofARPqra
MS6n57Z7wuglcHqBXlzoGX1RXqrJu5wXcuYLr+q1hokPlvDgAzZnhh5QA60n
zxe/Fp+cGdjkUNEGgteHiB9GvyI+2DRm5gqX4R9Rx4gPRq/hTmEgdIKolduY
melpyImfTg+i5kZ/8pPb9KKcpjP17rnCats6tFNtolfFJ/yhasoXoyWu+sGd
lNth+A/kuZ2OO77afvH9lyeOLxOff9ty6Skx0WaEsFnCg983s325EmI11LWS
n1Y7EE7/QuzgubatTVf8+cGD1VcOcFlGhvahHxRfGUYnj35FWIScOLESGI1z
grYg/rXGb/wab/QrF6X9HqQtt1/YnnqPc3ZO+yetWmgcibnM5jb78OYCklvP
v5Rndt2hvv3bmEs/Lddnr+7dTT/xyWGz8bIfYAcb6zymMTvq3GF02Ixa959Y
O/ixLPpYnQY8e4KbpUxOk/MKV1N7Tt8C5x4bwBawCZhs74kThXLnWXv2BPhL
+2GFt51uRa6d3ef0vT5yOpRiH+whxPiI7Wzv2kVjCxdtnwZ8/l+Oz8mdE9ML
7B2dtcZin3BeSTPcqgujl5XTJyQnK6e169TJdJVz2VN43LEZde70oa+vU1tj
dhcso5NHpybhx2oHLc3rbZ4xA7t1M72s1iDnj/2f65t+ZuJ2zNxz9weuc2J3
1DfpniCvmfjc2VLw+fQZMzRHj846sxGpv9kqzx9cX1GUJiGsjg4gunforfj1
FX7r+DzYPmQvuTxsqP7tymD0UNS78zfnpqWZDnLO3bnnOqYWBkYfJns7fepo
/Ds7mFnzUTN9fQ8z8YUhJkW4PJjR/atC+LwkRi9SDy4UnB69IdQcFD7CR1U8
0q8N+d/jLkRcqwKM/qcCPg8tp6/Km2UuXb4UcuYLr+qzYtq3Vzajjo2ZOuQl
0W7Gt2Wuzg3hdPo30W3la5+uXVVPivs4tc30nOJDw+jZx49rnSH9wcnin1GL
TP6EWtezzneyGkEut+HX9sa/flfYGp9tT3SUasa+qr3FnpZ4gYZ0EH9182Yx
/65dG/Pmgvmam4MB4EN8w0vi+5WHz78tufS5s2aZ+M6dlM2oa2VG0Vbrw9Jf
gI53fjPPDt4RO3hLfNrEjh1MRN++ZuCwYWaU1f9Fv3vd9u1mhzAwGt7kyc/I
Z4heU46cC2agkUuj1xH+mmXrKzJ987Betbr8/vy537+Gy14Qf37nU09qP8Y1
mz8nr1vcLDid0Sy+97tjR5ttwn9l4fNvSy79kDDwaOHs5L59TMz3H1A7WGA1
vGH082IHV60dvGXt4A2xg3a2jzXS1tUwuw5uoq8FRs88ckRnWyl/iY2SA2eR
6zxmtd38fD5S2M71szOf3M23dzP0rtr+B2JwH9r8eUATXv6NfZyXPSeL/HlD
r3/+Uxu/KW5mJDn0/F4RJfL5NzWXzt9Pkc9aOU3O5YDu3U18r54mvl1bZTPs
YJ7YwaY6jymjExOjp+SatQN3Xxjeob3mYamrIX47KiFBtSmI26Ghzj5MHRXx
Gmomzvv2BGJzazZuvOMMdPZj+D9a7AMdOqfZj/Yo950zQfXt/vkRbo4I9nFk
YrLWZqFN4HQ2fl2kfXj3lq/lnsNrc3rx1YXR78TpaHF0lvPtZ3TtU6AfXWwg
QTh95BNPmJgHvmuS5rc3ScLmybI8Rh8SYHRvDdOVyteKYPMSGL1kPbh7xejR
r4x+cfT/G2oOCh/ho6oeoy72emxcTsQXoWb0Ar240DP6hkuLQs584VV91hph
6H4Pft9Eiy+GXitsRv503+P1zUnhY3xcdOPQ8M2Tr3OfbqE1kcTaVfN3yhSd
d0sdKv4484eH05cs/KX58927NbeOT3bZ5zvBX8xhc9re+NZ8j99NDjU7Jlpz
uJ6mvNdfTJ19UTWI/Bu/6g/tWpsfzJqhNbD0teL/LxZmLC+bV0dGLw2nE69Y
L/y0aPVqsz4jw8ttyWd1VL5umTvHzG/bRu2APk3ykPQhX/DZAbGbdLED+pZ7
2hnKaAbSuwijM1uJnBZ623A6Gs7wFV+xFfJr+NfUp66284+cthPnjl7ld2wM
x/VAYB/0LlDXjM5UhnDCSTubmRp88rkFWvNB9iH8hd18MDLarJO/Vx4+/ybm
0qlvXrxsmVkk52y9XLfUucDRx06dNFkbN5glET10ztaGOl69+HFrB5d8dpDa
8mmtkUVnjHoK13/stAU2CH9Tn05chhwndsDib6G1jj6dn89jxDbQk1Z7Yk6W
2Clsh14BeXjqMdAeRDfwfas3F6hxtz0Ql8XOMls00/5z8v7MjPy5sw+na+bs
w+4dHwurn5PXdCdG/ybm0pmNMGn6dL122a+5Zo/KZ3j05AmzYfJks3LQs2Ze
jUc1j07cg7qm8z47yJV/j23ZUvkexiOPrv3MEyaYtJkzldGJsxCr5VrnfkDM
BjvgK9p/64XP75Q7z5TX6XQv3HPzmrXH6tgxtV00TrTGgj3ExnBcjTtfYfbL
ci/aY+M3xPecffyxqJkltj8mW/6Wf9b6NyWXzv2NGgr4nHu61r+sWeNp+8n+
cPDECbPi8iKT/Gq0SX5xWGFG9+XS3aqw3HkxnJ58PaYUenCVzOjXo382Pj+q
bqj5J3yEj6p+jL3Qc+C4e8XnJXB6Qk6fv1UVRt+StyLk3Bde1WdNk/szfYfR
qg/l1TTSd0juDJ0lGG2vLHyztfXrmX7CZfhh+EroaVPLSM6M+akLxV9yfWzU
N5JPhdOobbxo+Qu9ZfrDnb4TPjZsju+E341/tTs6yuxzM11sjuNXVp/Krx3s
NOLgL3Ig1+PGmQvix+Or4fetqAA+/ybVu2/essVMEx9sja0rd3lr1x9MbvKq
+Lj7V6wwK+Szpu/Qbwes3fLvpU89qbkXNIbwx+k7HZeUpD4zs/fgKnLj+Hnw
1bZ9+8yWPXs0z656YvSo2jnFaG7jp6v2u7CKakh9+qmyOIyObWAjOhMALSnx
OfdMSNT8Pr0Yb7Uo0JpHh+AfRdgH+nbvDuxvFi9cWG4+r26MXhynM0t+tnz2
M+bP19ymqx8nn0l+Gv7FDl6Vf5/MyjQLmzQqZAd7rB3skrVErvM+/fqpHjQ9
zOQ32RNgdHQJ4CfYDE5H541zTeyGvPk82R+Y00DNMWvHjh2ah8eWNP8qzLhw
9WplRvg+wF/EcOwe4jQEsQ/qmanNYY/JGtBP64CoYf6B7Zl2swiC7YPvf922
tdmxYH6p+Pybkktn72em/Aw7D41zo/PQrJYbcVL2ajQj9syfZ5Y908osq1VT
c+k7ffvBlqaNzbIZ000nuS/AeZ179NA8LNc5HM15pFYGLTf2HeK4W+2ewP5A
nJBr60758/jx4z09QrGPkfHxgRp64oE7bY2FX6f0TbuHqFY89xinMynvfXu9
OhrfY5bk2z79w9vtw7u37E9NKcTn36RcOvtBvOzd02VvREeEfZr4GfUI265v
MynXR5lUYWO+TnwtxiRdLWB0/4LfU6/FVg6fX0cPLvZvFcfmd8Hp12P6hZp7
wkf4qC7H2JyItVWB0RNz+/79dka/95yelDvA7MzbEHLuC6/qsY4Kx04XP7v/
g99X3dY4O/t0hnA6+bMltWqoX7ZAeHla375m1cqVqimEH+Z6kOOE8fHDRosP
NSgqSv1r9JfdHFzlL+FRcugvo1Mjft9bPm1v/Cb8bXxBGC1bWH9Hvbpaw/yq
6lN5fYK/1hlJbbVeGT8KVuff5D7oj39u2FBz8ORJZfNl4g8ePny4wvi8uuXS
g9mcWdLpwsc6r/zAAc1Z0xfMvDunqQ/vMANN/djr183yvn3UDqh1Zv4adjC7
cyezbf16s1MYq6PwuWN0epBd7Tp5GHxnNATpR2YxCwnbGDRiRGBOmp+/jgt/
qfa7+OkwIjpi8BavhcW/ya3jf2fOnGEyH/d0q161+mUF9tEmYB8sNP+Zy/dy
RHezR/7W3fB5da93f+mll5TNJ82cqbwEM6MXoDOq5XPn+nOxM+yAa/NK3kWz
cdxYM7PGo2IHNcQOapglj9U2i+PGKVfDePB5O8voLsfJnpAiewKxOzT+4TDs
gHNOfn23nAvH5qx18noiIiO1Ppoa98S0NI+/xG6xV/aQM3YPoYYCW0CPwO0h
fMWO2T8yIvtqHIE87+vNGpsPWjZXHbBf+zTodf+wcxqpz9k+v/R8Xt0YvShO
j0tMDOSgiZdwDZ5ydU7oQFi+xQ6wh5fElhbLtT9T9oOFdj9Y2KK52btjh7L1
5s2b9b7QpmNHjd1prXR0tO4J9EJRX6N7gvw97IB47uzFi80pYUH+v38Vxedx
ck/pZevnh9sai6liy06Hjvr54vYQd4/hPT0v+9o621Of47MP9DXc/E5nH1/b
e0t2ysQi+by659Kxt+lyT6AXgWt0tW8+4q7XskwqXJxfeKUIgye/NDyQS08u
xOaj7KpgNr8e+/cJ1yuDzcvG6EnXoleEmnfCR/ioTkfCzub/t/D5FRj9nnJ6
UZruOZH/rCqMvidvW8jZL7yqz1oj9+fodm3NsIceNKNkxT/4gEkSXyxFfPK0
Pn1MhrA2j7ty5YqZKfd0fPLOrmfNztbBF3P+ORrdrv6QHDr3fHIzV6ye8+u3
bmkdIj41X8nfohsFK2wUxnOa8nlOS1x8qB+rhnQrnbVGvSoLbR+04W4Jo50c
M1rj/+iCzxUuqEg2r865dHKT41NStL7caerDOuTJrvs1Ab76yqsll6/UD78o
52pe924mWWxgoqx5SRPM2TNnlPNYu+TcdhA7cLXu5E+pnyA+kyB/j/4H4jZp
4v+hSTBW7IOYzrCRI/X3TgOMGA46Bar9LhwAKwZ0nsU+WLxO7Iae1U3pk8xG
8bEPWR077OOW2kdL7UX/rc8+0O6G3fc+O6BC2Lw65tIdn++Xz5k6B3oLiJ2R
OydOw2dOnMbf+48d0H9C/vH/Z+89wKu6sjzfme6Z93qmu+dNVzmWcyjnhLON
7QIDEjkZRUCAhHIgY3LO2WRMDiaapIyNjUEJcKjU5cqhu6crTFW3y3bZVeW0
3/ptnX05uihcSffq3CPt9X3rU7q6ku5ZZ2v/9lrrv7hXC+6+S8dBfqdOarl8
P89n2HqcXNvOwmXUuut+9BdeUHHCZpzD8PPod+E8Bg7g/GbBwoV12BxfJZxF
D7P5XmYDGL05znCo9zhYXFxnDak2a4hwGLwOt7N+LO8ZG9A5PIXepRMfv9Lx
8UQgPphJQF1OtTD6kQMHmsXnfq53Xy8cxnXhDFXPKidnKvef0fE0a8L7jk4I
sUAO+mx1lZrSubPKv+tOtVzY2Dyn4eqNGzfqOOjs9DPTj46+P/8POLulr8Ws
CfkTJ+o598Fs3hCjp8na0d2JLf7fEFt58hzMcoMrOcPZ615D5PdyryHoCpJX
L5a/cY6jtcLsOOLjgis+iIcPnPj4wPnfsnVMQYN87jdGN5zO84+Xe5JapnHT
pul+NPrTuM82nd6q2dzkzgu0LtuogOdXDVfZwuU5wuXk1C9xebCHpbb9y5ya
5A81n3vL6G/YOefWrDXfRpf2uj6tKPYXbc7oxcGMHqzp7h2j55YMUnvLt3rO
fdb955tlnzVOWHfP7t31fh1GLywsVDm5ubU9h/37ay5HL4z3yZGy/6PGlVpn
mHmHMCGMTh2z1nOWvR21qOyzeUteFO2oA0VFakbfPrrnEZ2yg/fcrRmsSvZQ
RkMaTidfjrY8+sz0IJ996AG1Oe4FXWM/fupUtVt+99dff91XjB4pTs+S68Re
lj0Y9aXsY+EcrbclXKPnVRk9bEdvC0YnJ8l+t6F6ecPoycOG1c7R7ttX75+5
/nA6Zzbso/n5LwtjTZT9oJ7JJXEyfPRozWvk1dkXwor0KFNzTxzAYOTBqGfG
YXb23WhMTe3RXc29xdljS3yccrTm0av6saMtbeID7fl3Hu2k1vfvF1Y+92Mu
PV324uQyX5w7V+elqTM5bGbbCcuQj6aPwGg3Gl0tzmo2yPWrr17e8DVzy1kP
TD8653ZcZ+qcyYcTB1OFt7kng9nc+KAhQ/Q5D2sJOdIsp5edswRy/ZetIcJg
Zg0hltGdoEZ7RtcuOr9LDQ76Ca+54uMnrviAx9AXPNrluRaxuR9z6cQs/eH0
IGk+d+oozIwy7jOtwRe0JhAP8PpmWT/qq5c3XM16kCj8zPkt5y3kvAfEx+sz
FzidNWGcrEVHjx5tkM3r4/Slsq5Tr0N8cMZnemo4w6EmgxoA1pB97jVEXkPi
Qv+Pkbdox++Xr0+44Xq15NZbdL+Gjg9h9BpnVsVPnBkFxAdx8j353+LWh2tr
To8Uo6NBEu/MPR/r6ASwDq8+uUEVVI/SbN4Qn+N5wugFDXJ5eBhdnv+rnJqh
HwXY3O1tyek1yb/KeCflRq85x5o1v1raydiewugfRAGj16Pp7g2n5xYPVvvL
d3nOe9bbp8Ppx4X1Vsv/evIb1CD2kf0YM5fQeTJztBavXasZnbN59s9H5HvZ
Y5MLZW4Sb+l3o4eQPEhB924q/7pvqHkOgxktcfTiahztYPoG8eqnnlBHkxLV
K8mJasacOSpHfuauXbs0B7i9ozI6ukom1wQLG019sxevcfSw6c/8WZAeNvXu
cNuKVasaZXReixLhpqnTpuk+0Uw4UPZ902fM0J/n6zzO5Ej1/HR05eQxWod5
xYra/fW+fbX6VPI9x+R7tM4zmt8SH8QLn0dXLFX218zlXagZ7HadJ2UO2Fsu
jXFiA23pN7o/rw5JfCyS2Dghe3O/MHq4OX2zvL7wEdro1JwH+LysrLbPwaWd
b3SvzWwFYoOvM4utIb05+Jq3rAmsBxlZWSpbrm+OcCD1G3y+IS43zuPpm+nl
nOFQj0PenRwpdRZwJGvIfllDYDDyvcQGMVLoaMIvE54fLWvHRImRxbferHul
OcMpJT46PaBnR77nxAfnNkUD+6tNKcPUWnk9WsPofsmlU+tA/Qr14eRNqTPX
GuhybU84NTUNzSgjLk7JdeJstjFGR+uP+/3FqVO1/lhefr7WiV8qHM3n+T1C
YXM3o7OGk5snPswZjjue6degVos1ZE/w/AjiQ96iYTBtaHLtzLAbb1DLbrtF
62mgfRg8s4T4uPD4o+pwYryuN9gr/5e8YvRIcPqg+Hh9dkadCrVu/J9esHOp
yj83Utg7RdexN8bn+vN8PYKMnlsz9E/1snkbMnrO+aEf5J5P7u0131iz5ndL
LYqdZ/jcy3r3jOLen0YLoxeUxMv/pQOes5z19unsu90+QvZMMBj7J3KkcCH/
++l7pk6VeUnUVxs95wOOtjd6sWgULZA9XPKDD6jhV1+lxlx/nZ77hjbVLpeW
OPn04717qW2zZ6ndWzbr3tRX5WeT6yV/gk73pk2b2oTRo73efeLkyTp/yVkJ
PYar0dSX11rPI7rg6GH//OeBeUTky9x6x9S6rpRr15QuvKl5b8qf79EjMDc7
MSVF17xSZwEnUHu/IUj73cQHM5TQAof5X7jmapV67TVqgjA6+gjrvnm71hPU
MweEw0plb33khcFqs8TSTmE6eI7Y2CvPuUOee7nw435h047E6MNGjNA1DfSF
cyZCTpp7kXoEGPeMU0sRrHutZyvIx9SQrxJGbkwTvin+bsrpSe/saIz1cs5w
qL+lPwJGN3MiyJPuRF/arQl//LiOjwLhr/irrlTpEh+Tbrxea9txxke/8VFn
JkXhs53VnvTRasuKFWqHPBffT3zslnVp3ebNOjaiidHDxelogY1MS6vlssxM
rQ/AmZ3WQD98OKAXac5qvufqdSAWWB/QJ9jaQA49mNPD6TwvZ386PmQNQauA
MxyjUUrPBud85IDRnmMNISb2O2sI/282ydoyqvPTWgs122H0JRIf6MXRS3Xs
vns0p5c+8Zh6WZh1y+pVgb6Kg8QY/6O2bFGnJFb8nksfOGSIvr/4H01NzcTl
U1XuWyNUbuVwlYdrRnfxeRCj87ncymERY/S8mmGfNsrmbcToOeeTZ3rNNdas
tQfrcqbLfxMmP+kZoxfHNqHp7g2jjy1JUsdPHfGc5ay3Xzd8jm5YN9lfoxWl
65jR2p0wQe+fYDA0o+F0ZqbTd4zzPvnThatWqbH0KVPDeMXXVco1V+nZ7NNu
ukHXI8Lpmzs9pFbI870k+zA9u004k7pF049KPhjmLBdeWLVhgzos+86OnEuH
z6kVTqffe948tWLjxkua+pWX5hGRL0MLSuuly56c3Bmsxmv5snAPf2M4GB3t
AjTlYHRq4c28NepUqb/nHIc9NvUWG534gNlhCGb/TBBe6yWxMfjKK9Qo4fSC
669TM266UefC6IdYG9NDLZ82tXa2n+yn9Wy/euLjcEmJ2ids5odcejj4PC4p
Sdc1ow0wxqUPZ7Sa6SeocHTBvufWvRanvp0YWSfXIJTZbS3lc9aPFIlVGKwL
GmMDB+oaXBgdlpwq8Us9Nv3GcDpxQXxwrsf1fnHiRNVXmKvP17+mGR2tS+os
0LVbLvGxQRhs03PPqqXyPHw/8QGXUz9AD0WVEx98vGn7dr1WtCdGp9Yppk8f
rdM4LDVVcxmvqdZAl3uBsxpqmairqX7/fX1u932jkS9rAhoVfG6D3J9NzW2L
BKOTt+8h/1fIoxvNC/TiYEzOH6nX57yBeq1VzswAHR/iXO8p8n+j59f+SfV3
5pWQR6fOgl4ZNOM2PHi/Wjegv1o5a6Z+PGdAnFkQD/RRsG5wXnlMPrdZ4o28
vh9z6dS2U6My2NEGSJuUqbJfT1E554aq3IphtYzu8HlDjB7M5+Hk9PyalL+E
xOaR5/RX4w7H/a3XXGPNWnux7OI+/5RWFPudaGD0hjXd257Tx5UkC6O/6jnH
WW+/bhidGkpm7ZiZS+Rv4UO4gH7SWY6uNzOScbid/NjYSZPUkSNHVFFRkRrZ
u5caIBzGPgqtujGyjxrfvZuaKY+BMbejNyw/65TDFeR74En2kzjvs8fcJvtO
nrOj5tInyOuFntKIzMx6Z5q95uhho59Eboxe9IAe9k9+ovelr8hjec2a4vNQ
OX2CcJSpVWWmFnldZjFRa0EunVggJgLxIbHC3Lbp8jVygHnDhqo+wucviKdI
fGTJPnucMNh44X10AZcLb7h7q886fx9z1bU2uRMfJ+Rv2rdvny8YvbWc/kJC
gj4v07UUwmWm35TXib4BzWXCVfXpXsNk3GOciYXC561hdOI9Tn5P4gNG7y2M
XkcH3MwGWLpUnzEQH6wlfI687myJ9/633KJnRsLonOHkXvcNNeH229SLgwaq
6RJbnBGiU00NNHrfnN3Qc/1tR7ue9YO/f6e8NsRzNOXSW8vn1DYZHUc951Be
T15DzsM473SfV9QEzdnQMxTkc/tlPQhltnokOB1twaefe07rxNOPrvPowpn0
tfM/Bk0LzoLd/2OIk+noGMybqwZ883bVSxh9oPxvSb76SpV27TUq7/rr1KQ7
71ATsrL0fUF8UFuy3zmvoIfdzDbgdTD/X7bKa8bf6DdGnzFzpv7fTB9/YuZQ
lVGcrLLOJqts4fMcw+cNMLrb6+Pz1jJ6wfkRnzWbzSPA6Dk1Sd/LvZDyda95
xpq19mZpxTH3pRbF/sZrRpef+WFmcd8vooXRx5cMtYxuPaJuGD1J9tTMXOom
+4C+wmBGz5n6WuoR2UcxD5seSOpXs2RvdUz2j+b7eS7mvg0ULk+SPdTIO+/U
fXJwG3kz6hbpK4QfL7jqcqnBpDb3x7/7nd5Hsa+inpnnDGb0jpBLHy/Ma3o1
qWOYtXixWiWcFaypf1b2bVoP29FLZx8Ot7NXJ7fWHD5vitGpadBaYhIfzzsz
ANCUgx1THQ0z8qXu+JgiHMH3wuf4vOnT1OB77lYvCJ9zhjPyW89pnSO0ol6i
x55+2iA9arTPAvHhaNQXymMOhLnWPRpz6QNeeEHfh0McbXRyjVq7cedOnUc+
4symMtr5vGZG9xpmZ27Zyibq28PF6PSrozEWqHV3+tGpA6Eum55j1gKuN/HB
WrJD/g76nvGysjKV8MTjqr/EBYw+TJhshHwv8WRmSpAbZZ4Ysa/nZQuHEg/k
id3xsfvQIf07RROjt5TT4fOu3bvrugQ9x06YljVhutFAFybVc+xkDeNcy+SM
zZwNYoLPbZX1IFQ+jwSjs3ZonXjnDCfW6Uenr556LbTv0Ikf48THOIkP/p+Q
7+Z1mCsf9xUmHySxkSwxMvyxR/U9wWONXqW7xoi1kbNK2Jx6EuID5ywHRm8q
jx5t9e4zZ83S9Qd9kweo0ScTVeaZRJX1VpLKFkbPcTO68HkdRnfPW6sZ0SCf
t5TR5fu+qKPV7h2j/zrz/NB7vOYYa9baq6UV94wL5nMvetIbn7vW9ow+sSRF
FZ467jnHWW/fDg/TT9pN+EvP2pE9IXkbamzhMGoSqbVNkbfo+aL/HNzLbnyl
MPlw4QqYgvpnnfty6Vq949a1cukN8zH5P/Ify1eurJfP23sunX4BMzd4lOxB
yaGTT0Injp5Ttx42Gvr0IbMHh2vLZG/KHnWxMG9z2DzUPPqiRYtUf2FzPQMg
SOfZxMco8bnz59f5PsPoOLUWSd261fnbOL8h50/uy31+Q52uW++KPTbxsU9Y
nufyC6O3hNPRaYvp21f156wG7UaJC+btkSuknoL+fhid14x+ADid1457B4al
j2Sh3IfN4fPWcro+42NWF5pgzowIzhfgdBMfuQUFarswkmHzYJ8gj4uX7091
aX1Tu7zbqet/3dFgIDdqtOt/4WjXm/hYt2lTu9GOQ7uxh3NmSl2N4VJel9Vb
tui1lXuHvhDOa3h93nTWBPTyiY9N8rjm8HkkGJ1a99g+fXR8GM048sHU7hMf
nAWnSHxMkzWBtai+meonJAbyhOnjHK1Kw+fUxtN3zv3QkHai0dDk3O/Iq6/6
TjsuZlCsGvVqnMo4U8vnmcLngRx6UJ27m9G1O9ruOY3webM5PXiOWmu9pXnz
88kfyO8x2Gt+sWatvVtqYY+FnjN6cVNz19qe0SeVjlAnLaNbj7Abffedwksj
yI3KXhmN93TZE6LvzN6aOTsNcblxdL9TnXlt6Dib2uV6907w+R//WDsbSvZP
7Lmp01y9YUODfO43Rm8Opy+TfbfOUQ8cqPNL5B6p/+ScA0YnT0TOjL0o+s3o
HKN5zPuwO7nz+QsXtojPQ+H0cvm5S5YuVaOorWBuusRFJjOzxecJl5eWltb7
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
ONH5c/mb4TejO/hD1+tv5vbBv2sk/pricGKhoTluTfH5mHHjdP5vnPCX/v2E
E/j9TsjfcNoVl26m+KVLr55zIzTJo1njvSV8zn3z3PPPB3qLWRP0LPR58zRv
cx3Jj7/inMtx/fWaINeVj3cSB/L689pRg2PmQXCuY+47cy5jrjtvuec2vPxy
i2aymXgPF6dzpqnvgexsNXbKFJ0/5x5g3aqPz83syV86Z0zEx255jaJB3725
nP66rOtp99+r+j3cST0rcUCdu9apQM9fXg/0BzhvYx3f6Px/4Pry/+Ck8/+B
s1fO4lgXOKOrcy4jr9UvnDWe1+2oMDz3o5nr1hoW5/enbsz9PCXvnFQTqkfX
z+YtZPSstxJVpjhvs84mNZvP8ezK5L82yeYRqXevt6b9e1lVw6/ymi+sWbPW
OhtZFHOX8PavoobRi3p/ehmje1zvnlsyWO0s2+g5q1nvmN4cPieXHpeQoPdh
1LTSa0htM4yO9i56ccxk2yH7MPhsr+y7eEtfMkyzeeYM9dMnHlM/fPxR9aPp
09RPfvi+nsNm9qo/cjSdK7dsVitkn2+04citlDl6UW5dcLjup44+PJ+Dz1dv
2qSmCCuiu75QWGqd/NylwtxobK9cvVqVyD4wmNGHjRyp95PjZT+5gLlxwuec
M8AJ5G+px/0OfbBO/tzwOaxg+iM3y/4TBuwoc9j6DhigugijU0+BXgE9xtSr
MiOd/Tg1CFy7XUeP6pnoOPtzzj5emfKi+smTj6tfvjhJ/XDjBvULuY5ce2qA
uV7wDY9lH3/K0R00Palca647zvWAzzfv2nUZc/NaoWMwW1gRjfXl6ESvWaNW
CDeiHV9+6vI5bfWx+V5hxoThw7WmFZqJ5M/hTvKBWhdRGM30P1APYvjLnCH8
0Pm70Htvb3PYWBMGDRkS0P+iZjklPV3lTpyoGR0dh9XC0XA3/QC7nTWBt5zh
7J86Rf2kx/Pqp4sWqvPCS+Tb9wade5i6BF5XrjlviQM0DLhmTfG4+T1nMTtS
2HkxWvsSA6tkbaGugfvUzfnN5fPcggIVN2yYjo98ZwY8WuSseaxbpr79oqtH
I/iMib+Va+q3OWxFhYVq1DVXq4SHHtQ6kjA6efS+gwbVrgl5eVpTlJoC1nLu
G5M/N2sCcVE0bap6NydLnVu9Sp2Rn3/eqa/SNe5yvfUa79xH2+U+MnzeXEbn
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
vXDtNXovNvGG69Xy225Vu529LKxD7ym8A5/B6rylxrGy04Nqu3w8Zdo0/Tyw
udupZ127dq2aKl9PGTVK8xieNnp07Yxd2Rea2dRoMlEjr3W1nblc9KKfdeZy
TXn8MbX69tsu6dfJz2df+KdnO6uPujyrZnepzQGZOc70UlL/jC4zeXtYDE06
3uaNHauOHTsWNjZvL7n0rCFDNJuNcuJg2W23qB0SB9Q3vylsRv70+489rM9l
LsXBw7rWYs+OHfo5YLGNGzdqHyLc/RL58E2b1A75uuFy4yUlJVo7Hn0q5lzR
+0ounJz2Bmc2H3PQYHS47C1nNt9b772nc2x6RrMwYN4znQPnCfyu8Be9GdRb
U/Pxf7o8pwZ967naWnfn7IC6Ds4EyNWS63XHx8zZs/Xv1xw293sunfuVeejd
hNP6fP1rKl7YjDiYcEOtLgX9DkfltUWb4ry8vt9zxQGvNed4W2Jj1Gi5HmjC
MyPiqNxjTXG5ceYImB541gXOXdDupjY+WE+duXtotFVILNBTfuLkSdXnySf1
OWCSc2bD95J/n5UyXE298Qa1RtYO3Uv/wH36jOHnLk2FEomP7s4c+MDcSeZZ
jByp8/HUaHBeQHwUSHxs3bq1QTb3Yy6dNWaorJcwuq6BkXukp7xm/a74umb0
VImD8U4ccI9xVgOj0/vCdf+haz24IL5jzRqdn28um+NbmIs4rrfKeJ38d7z2
LOHh2hx6Ur117gFOd95mOXyeAZ+7a9zdfC5eR+e9Pj5/A0aP14yeWU8ePTAb
3cmn13rilxln4/+cVZ3wx1qPMJ9XJf4280LSU17zgDVr1qLL0k7G9hRO/337
ZfTwcjoz0stPlXvOZ9atBzN6/GOPqheEzUZ/4xo1RfZmK51809H77tZ7Wpi4
SvZjsA9cTt3zQeH3WTnZdZ4nmNHr8507d+peZfbi5LrJm8529Japc6f/Fy5j
L14qDLFnw3o165u3qfXir8rekJ8PG/zO4S/6oT/p1kWVicfRR+swGHlZOJ2e
Sn4OdbewA2xOjXW4+dxvjB7M6a/s3av6XnuNZnR6T4mD5cLo2509eVk9cfDa
g/ep5YMH6dfTPE8whzfm8cJBxILpD9cz99D4Q//dNZuPWnczow29dXLh1GAM
FZYae+stapHDkEY74WfCC793tMzoi/0XiY2Nz3dRAyQ++F4YjO8nV0p8kHcd
nZWlVgtbtJTL20Munf6UnnfeofpqRq+NA60RJq8xr+9hiQPqV6ipqOp0KQ74
3Pr58+s8V6hsjk+fMUN16d5dn7sQC1wT8tfkrtGSoC8FRqcHBj13YoBYQGf/
lf37Vcyjj9aeuzjzzDlnmTZ9uiq45241/aYb1GqnPvvUg7W1N9Ti/6ejfYmW
wrsSG5O6dlGxjl4BPdC67keeD05PkeccJ7EZXNPeXhidtWvhwoUqRv523Y/+
xBOqp8RAP+esJv0btXGwRO6zLRIHB++5S99rnM1VOnGARsGO2Jg6WvHNYfN3
3n1HrXtrRS0DCxtnOFxcJ4cunnsuuS6jB3G65nPc8Dka7vXMWMt67YUm+Xyc
cD4+piFGdzg9U7g88634zzMr4z+6xOYRZvSqxN9nVcfHes0B1qxZi04bXRST
IFz+n3UY3eN692hm9EWlk1XZqVLP+cy6dTdX7xUWGiR72RccNntR9mKLZU9O
TSPavdQNH7vvbl3vfFget0s+N1+Ypr56+VAYHR25WEdPzGguU2OMPpiZz4Re
F2w2VfbNM266UfM5ObwqF59/Ws9c7mPduqpjMd3Vcdkr7hs4QK2S51wk3DV/
8WLNkW6PBKP7ud49XVi719e+puKuvFJlsCe/4XrNvhuIg7tMHNyjnfe33nev
2r55c735+FD4fMbMmepbwsymzp18pZ7RJtcKRiePTq07mlzMy6P/4TC1+Onp
mseSOz2kxl1/ne7LILdH7/n5R+rmz5UrPn4rfsSJjyPiM4QLyZevWLkyLFzu
V0Z3c/qObdtUr2uuVr0dNtOaBBIHC+U1podg1113aD4zccD7y7o9r8rk+gTX
zTeH0eHzLj16qJ5O/zHXWOt3CzfC6GgOmDmN5NKZy4Cm5J5Dh9SQQQN1DMH2
enZ2Xp7KlI+zv3Gtzp+vcGmQUw/0syfRon8ycH5j4uO9bsTH8+poj25qyaBB
au68eWru/Pm6FihULvczp+OcYc6eM0flpwzXjE49hdamQNdf4mDBLTepdbIW
7wzEQe2asF/Wg21ynYLnrYfC6RffvajWnF+oCqqGaw5Oh89DYXQXpxvPFM7O
aCKHDqs3h8+1y++RL56nc+pxX5EnN55VlfDh5VweUU7/z8yqxCFe7/+tWbMW
3ZZW1GP0ZXzuNaMX9f60SUb3qN59RmmWKjxl569Zjw43XH1g/3416N57hdG/
rkZde7XKv/4bem8L+6y47Vb10u23qZdkX0ZufU5WVqOac03x+fTp02t13WQv
rnWXc3K0zjs9p2hzmflMzMzKdPbY/HzyuGeFz6m3//enaudyf651pF2M7sxn
R1OaHtlT8+fpPf0s2WsH83kkOd1PuXR3H3r8449pRte17hIHBdddioOVwjk6
DsSX3HuP2rFlS6O6c03xObXJvSUG0Cbr6cQC5zV6RtuCBfpcZbX8DGZdoeUN
n+HMY6MOd9jNN2mN6dk31/ZJHxdOIJ/3/uOP6t74j93zut3x4cyF25KRrs6d
O6c93Hzu53r3ndu3q77CYrBZ3FVX6BpnvR7cdPl6MLfLt3S8NzbDLRQ+N1pl
33Ly6EbvkVw4/eR6TuPmzVqnDU11HQsHDmgNfvLtsL3Ru6AWY9iDD2h9s4k3
1p4xbb/zDn1+U/3wQ7omu7Y/5mk9g6BufHRRXwqzFyYltJjJ/c7ohqtnjB2r
Yr/2T4Geh9Rrr6n7f+H22jigPmFpQUG9bN4Uo1e/W6UWVk/RbI7nVw7TXB7M
6FlBjE6vt9F7C7h8rPkch89djO7uQ2f2GnyOzrub0evweQOMjhe8Gf9l0zwe
QUavScj2et9vzZo1f1hqUcyU5jN6ZOvdw8/o4eP0CSXD1KunDnjOZtat425G
T+3XVw0WNht+zVU6h8rMrQmyVyenPv7RR9ScsWP0zPBQZrc1xOelpaVq6LBh
tbpurr043KXnMy1ZohasXq1nKaMtP0H3xd+iXrn7Tl1b/96jD6tfPPm4rmGG
s74wM370LN7aGXD0lsJohdOmav25I0eONMjnNpd+idNh9OWLFql+Tq17irCZ
iYOJOg5uUBN7xqot69eHNFu9KUbnupje155OLJA7RTcA/TbObGAzcqjoFPCW
GX1wXJL8LjnXXev0GN+qDt1zl+6VR58b7ao/OPFRh8HkLTUXHz/bWb2ckRHg
80hyup9y6YaptwoLp3Tv5tS6X6k14zgrK7j+Oh0Hk4XLpibE63hsjM1DZXRi
YfiIEToWOK/R60JSko4FNN/QdKf3AU11dyzMQqtd1orOwvZovMHofF/ifffq
tYNZcbMdfTP6Y6jNp2/6V0/Vxgc1Fl+657k78+JOhpHP/agdB1Pz/POnTlVD
HnxQ9fv61/XctZGOrjvnYuTTJz/+mCo8cUL/fY3xeX2c/sY7r6lpVbmqoHL4
JRdGh7/h8wbz6EGcTk5c58UdjXb4PN3weRCj69x5gM+Dcuin68uhBzG6ONpx
WWfjPvWC0TOrEyd6vd+3Zs2avyy1sMfCcDJ6ODg9mhk9vyRO7S7f4jmbWbdu
HKbm7fZt29SomBiV2qWLyujaReX06qXrXg8dPBgSl4fC6CdPnlTDhg8PzEej
H5g8GH3isBl1zuzJ4QLYcN4ttfPZ0a2jB/oHrhk/MNjnzOaWfTUsRl8pc7nR
gdqXn6emC/PzMxvjc78xeqRz6fSjr1yyRI2U65/etavKkus0Xa7N3t27NcOH
wuahcDo/E/3unn361HKZxILR+jKxwLwrNL/gdWICffV+AweqIcII9MaO0/pV
t+ja6xInR8oMqH9zx4cTG7AXs6DQm97kyp9HmtH9mEvn2nBmNyUnR6V1e15l
Cq/ndO+u1i1fro4cOhQSlzeH0blXRowcWSePrmMBPXiJBTh9jLMuEAvjhR3R
H+T3RXcSnX5mO9I/PuiuO/XZUraZEXbbrVoj7tKMMOYR1M6K02d8EhMmPpgd
dzQx/Hzut1y6YerXZR1/9cgRldm/n8ro0UPlxPRQY+T9o/K5U7IWhMLlwYxe
ePGYmlCZVpfNXYwOgzfI6G5OD3iS7kVHJ04z+um4Oozu1nPP5GP4PCiHHlzj
3hCj87mscy3l85ZzemZ10jKv9/nWrFnzoan/8l9TT8aur5fRPax3D5nRPah3
R9t9fdkSz7nMunXjzeXv1nC6ZvSUFD2XC/1mZhCjra01mdLT1aisLJ2zSXd0
615yNNzRD774SCfdhw6jw1rM5qZelZrmD2TPzcyn9x7tpJalDNf9o02xua13
r5/Tw+mN5dFfffVVNUiufzfhK6MfGIiFjAzNZ6OFE+lZ5/Ho/A25845aBrvu
2lqNgjtqZ6xRY/G2MwvMxMeHTmzg/9H5KfWLJx9Ta4Xp6uNzvzF6W2jHhdMb
Y3TuP2b1PS8caPrRBxALQ4eqZFcspEssbNi4MfB9R48eVT169tR5dF3rLjye
YGqyg2bFnXbi40eP184MNPGh50HIW2av7Y+PU+fPn48Io/sxlx5O339hpxpT
OaJ+NncxOn3mmUYvzs3obk4XJ49OXXyBo+MeYPQ34utldD0fXdjcMHpjOXR3
rbtxPpd5Nu6T1vF5cxk9afOcOXP+xuttvjVr1vxpcYfj/jatMHZPyxg9cvXu
6UW9Pskq7vdVtObSl5ZNVWXlVjfOenR4WzI6vnnzZt1/2qd/f9V/8GA1KD5e
xQubzV+wQA26/jo1/Oqr9BxecujoB7/qzHqC0cmj//yJxzSHUc9OXzqz0elR
P/bE42rf7t3NYnM/5tL9xOhNcfqaNWv0zL5eEgsDhNe1blxamlq8ZIlmePdj
J6Snq7grr9A1t2MlTugz3ubMbX/jwdqZcMQHLA6H/Vrig3Mb6irgs91btzbI
57bePbKc3lQufZfct1zz3hIHfdHbj4vTdev5Y8eq5StW6Osf/D2HDh8OMHrX
Tp3UgCu+rpJl7aDOnZr8pXoewR06Pt50ZkdSZ/GLJx7TuXTigziB2zcnJ2k+
9xujRzqX3hp/+52LauP5lY1zeQOcTo4cRnfPXbvE5cNdfonR0Y+rl9HRj3P4
PDOEOvdgzzsd92VWlfC18UgzelXSgTlnuvw3r/f31qxZ87cJo/8/aUWxh8PN
6K3l9PTiXn+KZkafVZqrik8Ves5m1q0bb0tGb8gn5+bqfviReh4zM35u0Qx2
1JnDi547M5OYyQyTf1+cj9l/rxc+bwmb21y6t4weqlN/b/qjRztzB/RMOD0b
8J468UFcEB/ECTPY6JPg72uKz/2WS/cTozdX4z0Uh9G7x8aqZ598UvX82j+p
gQ6j0zM97aYbdJ072uMw+uvOHO/3XPHxXYmPs50eUEcPHQrweSQ53U+M3hpO
r367Ui2qntY8NncxevP9EqNT0x7cjw6f12X0IQ0yerBnnYn7Sx0+bzWjN8zp
mdVJx0eeGfl3Xu/rrVmz1j5sXHXc/0gr6lHcIKN7VO+eXtTz45AZ3YN698ml
I9Wr5Qc95zLr1o23dS69Pu9/y82a0VOdPNjiW29Wm++4Xb1yz13qhOyzmdH+
xkP3a+0n9tzoNG959BG1a9u2VvO5zaV7U+8eqic+/ZSjL32F1i+jD4I86RaJ
j/0SHyclPph7zXkNDrPDZkvHjAmJzW0u3X+MjlN7kztqlGZ08uhDhdHREoTR
OcPZ6szx5pyGmDDxwQy2VSnDL2NzP+bSo4XRT188pWZUF7SMzcPA6G5ODzC6
k0PPcNW5X8boTj+623NPx32ZWRH/0WV8HgFGz65OKhz5S8vm1qxZC69pRi+M
KWk5o0em3j29uNdHwt5fhp/Rw8Pp6MbtLN/kOZdZt+52LxmdPGkf4fLBss9m
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
/0grjDnRFozesnr3Fmi7e6Tv/lLZAs95zLr1+twvjG5z6TaXbnPpNpfekerd
L1y8oPZoffYG6tmjiNHzK7VG+ychs3kbM3pmVXzxxO8O/3uv99XWrFmzFg4b
eabL36UWxRxpFqO3ZU96S7XdPah3n1Waq06eOu45j1m3Huw2l26142wu3V+M
bnPp/sqlN5fN37rwplpQOUXlC2e7PXKcHgaN9uayeVsxenXioZFnRv6d1/tp
a9asWQunxR2O+39Si3rsCC+jh6/evVY3rgXa7h7k0seWJqrd5Vs85zHr1oPd
T4xuc+n+YnSbS/cXo9tcure59KPnD6qJFaMvY/PIM3rzOT2vYugX9erAtQmn
h1LTnrAt452M/+71PtqaNWvWImLqv/zXtMIeS9qK0VvC6ZnFfT7zA6Pji8sm
q9JTJZ4zmXXrwd7RGd3m0v3F6DaX7i9Gt7n0hhm95mKN2lC9XHh6eINsHk2M
nlc59LOsivjwsHkEcunZVQkr58yZ8zdeb5+tWbNmLdKWWhg7ttmM3ob17i3W
jfOg3v3F0lHqcPl+z3nMuvVg91Mu3U+MbnPp/mJ0m0v3F6P7OZf+2oUyNaty
bJNc3mpGD1O9e7N04Dxh9MQ5Xu+XrVmzZq0tLa0oNi+tMOaDaK13F0b/pEW6
cR7k0vNKXtCz0stPlXvOZNatB7tfGN3Wu9tcut8Y3ebS/cXokeT0XTWb1diK
Ec1ic89y6VXDW6YD10b17tmVCR/I22yv98nWrFmz5oWlnYxJFEb/Q7QyOrpx
WUX9IqwbF75c+oyyLHWs/LDnPGbderDbXLqtd7e5dH8xus2l+4PR3zx/Wi2o
fLHFXN7mjN5aHbjIM/p/ZFXFDfd6f2zNmjVrXlpqYUwvYe7fRmu9e61uXN/P
/cLo+SVD1JayVZ7zmHXrwe4nRre5dH8xus2l+4vRbS49PIx+sGa3GlcxKixs
3hb17vmVQz8Pmw5cZBj9d9mVcf293hdbs2bNWjRYalHPZ4S3/y38jB6+XHpm
cZ+/+KUnHZ9dmq8K7Rw261HoHZ3RbS7dX4xuc+n+YvSOkEs/e+GMWlI5Q3h6
qOPh4/NI5dLzKpP+mlUZ98da94DPm+L0yvhf51TGd/V6P2zNmjVr0WRpJ7t3
SiuK/Vk0M7qfetLxgpJ4tb18nec8Zt16sPspl+4nRre5dH8xus2l+4vRoyGX
frhmn5pYOdrF5tHP6DkVCZ9eYvOoZPRf5lQlPOb1PtiaNWvWotFSi7vfmlYY
+16LGL2t6t191pOOLygdr4pOnfScyaxbD3a/MLqtd7e5dL8xus2l+4vRm+L0
ygsV6qXKRSr/XDCXRzGjVw37Mrsi/uPL2TyKGL0y4bvpFQl3eL3/tWbNmrVo
ttEnu12dVhhzNjKMHp5ceqt60j2qdx9fMlTtLtviOY9Ztx7sNpdu691tLt1f
jG5z6W3L6EdrDqrJ5zJq2dx4g4weHZyeX5H8eXYlc80bYvMoYPSKuDNZVYOu
8nrfa82aNWt+sIyifv9TOPhQNDN62/Wkhz+XXlh+wnMms2492P3C6DaXbnPp
fsul+4nRbS79EqOfO3/2Us68Po9SRs89l/iXrHPC3ueaYnPvOD2zIv54zpm4
f/B6v2vNmjVrfrK4w3F/m1oYs7rFjN5m9e69fNWTXtuXHmc13q1Hpdtcus2l
21y6v3LpfmJ0P+XSD1XvVZMqRjfM5iFxetsyuvzMr3IqEj4JsHm0MnpF/IaM
dzL+u9f7XGvWrFnzq6UWxo5NK4z5IJpz6enFvT4SRv/CT/Xu+NyyAnWi/Kjn
TGbdutv9xOg2l+4vRre5dJtLj/Zc+pmaN9SyypmhcXkU5dLl53yRXRH/0WVs
3mxOjxyXy+/3QVZlwhSv97XWrFmz1h4srSg2Wfz30czoWt+9qM9f/Vbvzrz0
TeUrPGcy69aDvaMzus2l+4vRbS7dX4webbn0mvM1al/1djX+3Kjms7nHjJ5X
kfyZ8PeHjbK597n0P2RXxo/wej9rzZo1a+3JRhf17NLiGeltWO/utxlsxmeU
ZqlXyw96zmTWrbvdT7l0PzG6zaX7i9FtLt1fjN5cTn+95pRaUPFiy7nco3r3
vIqhX+VWJH4aEpd7yegV8f+eWRnXw+t9rDVr1qy1R0sv6fFQWlHsjyPH6B27
3j23eLBaX7ZElZWXes5l1q273S+MbuvdbS7db4xuc+neMXpVTZXaVrVejT2X
Ej42b6NcurD5l1nn4j/OFN7ObC6ft2W9e0X8jzKq4+73ev9qzZo1a+3ZMoq6
35hWGFMT/Yze88PM4j6f+a3eHZ9cMkrtP7XLcyazbt3tNpdu691tLt1fjG5z
6Q0z+smao2p6RV74ubwNGD2XevaK+A8Nm0ee0VvI6RVxVfnnh17v9b7VmjVr
1jqCDT8V8/fC6AdbxehtVe9e1PtTP9a755QMVIvLJqvCU3YWm/XocT8xus2l
+4vRbS7dX4zu11y6mZlWcG5YZNk8QvXu2ecS/xzM5VHK6K+mVvb/R6/3q9as
WbPWkYz5a6OLYub4gdHTi3p+7Md6d5xZbFY/znq0eUdndJtL9xej21y6vxg9
EpxeXVOtDlTvUhNDnZkWZYweXM/elHtZ755dFb+EPaLX+1Rr1qxZ66iWWhSb
0iptd6vvHpJPLR2tDpbv9ZzLrFs37qdcup8Y3ebS/cXoNpce/YxeVlOs5lZM
8IbLw1DvTj27MPdl9ezeMXqDnP6H7HMJo73el1qzZs2aNRi951PC2T/3gtGb
n0vv5Ut9d60fVzJILS+bqUpOFXnOZtatG/cLo9t6d5tL9xuj21x66xi9sqZC
bapcqQrODfeezVuQS0efPbsi4ZPmcrlHjP7LzKr457zej1qzZs2atUuWWtz9
1tSi2It+qHcfXdTzo6zivp/7sd4dH1uSpLaVr1Xlp8o9ZzPr1nGbS7f17jaX
7i9Gb8+5dGrZD1XvVVMqMoWHk73n8RYwel5F8ufC1x+1hs1bxejNqndPeC+9
IuEOr/eh1qxZs2btcssu7vNPwtiFkWX0MNa7F/f+s1/r3Wtr3tPVwfI9nrOZ
devG/cLoNpfuL0a3uXR/MbqXufSSqpNq3rkJDpe7PQqYPERGzzmX8JdwcHkb
5dJPjD0z8H97vf+0Zs2aNWsNW5czXf6bMPRyvzC61o4r6velXxkdR+f9ZPlx
z9nMunXc5tJtLt3m0v2VS/cTozfE6W9Vn1HrK5eqgrPCuGeTL7mPGD2vIvnL
7Ao04Ib8sdajm9GzK+PXZryT8d+93ndas2bNmrXQLK2wR2ardePaSt+9NbPS
o4TRC0ri1cayZaqsvNRzPrNu3U+MbnPp/mJ0m0u3uXQ3o1dWV6odlRvU+LMj
63J5g4wenZyeW5H0WVYFGnCGzaOM0d2cXhH3+6xz8ele7zOtWbNmzVrzbXRp
ryeF0X/sl1x6RnFv32rHGZ9UOkLtLtviOZ9Zt453dEa3uXR/MbrNpfuL0Y9V
HlIzzuY1zOU+YPS8c8lfZZ+L/yTzbDCXRymnV8b9LLtyyLNe7y+tWbNmzVrL
Lauo73XC2G/6hdHJpWeV9PN1Lh2fWzpGvVp+0HM+s27dT7l0PzG6zaX7i9Ft
Lj18jF5WWawWV0wLjcsb5XSPc+ZnEz8XLv9Is7nxaGb0irjTGecGX+v1vtKa
NWvWrLXe8kt7/b9pRT3WtZrR20rfnVx6Ue9PW5RLjyJGZx7b0rJp6mT5Mc8Z
zbp1vzC6rXe3uXS/MXpHyaWfqXpDratYogrODmsZm0cJo5MzzzmX8GkdLg/2
aGP0ivjNI8+M/Duv95PWrFmzZi28llrYY6Qw9v/1Sy69VXPYooTR8bySF9Sq
sjl2brp1z93m0m29u82l+4vRoyGXXlF9Tm2rWNd4j3mrGL3tOD33bNIXWcxN
a4zNoyuX/ofsc0PGer1/tGbNmjVrkbPRhd191ZPeXnLpOHPTt5StsnPTrXvq
fmJ0m0v3F6PbXLq/GL0pTufr+6t2qklnR4ePyz3KpefJz8o+m/DnkLg8Whi9
Iu5nOZVxz3i9b7RmzZo1a5G3jPLYa0cXxb7up3r39OJeHwmjf+F3Rscnl45U
O8o3es5p1ju2d3RGt7l0fzG6zaW3LaOj/TbzbH7kuLwNGT3vXPIXWWfjPm42
m3tb7/5W/vnB13u9X7RmzZo1a21n9KSnnoxdH3lGD3Muvbj3n/1e7258Vmmu
OlS+z3NOs95x3U+5dD8xus2l+4vRbS79EqMXV51UC85Nbhsuj3C9OznznHOJ
zc+Ze51Lr4hbwx7N632iNWvWrFnzxoSfE1MLY37jJ0ZPL+r5cWZR33aRS88p
Gai13g+X7/ec1ax3XPcLo9t6d5tL9xuj+yWXjib7snMzVf5bbczlEWL0ZvWZ
RwujV8T9NrNiSIrX+0Jr1qxZs+a9pZ7seacw9nk/1bu3uC89Chnd+ILS8erY
qcOes5r1juk2l27r3W0u3V+MHg5Of72qXK2pWKgKzg71jsvDWO+u55m3pM/c
63r3iri35e09Xu8HrVmzZs1a9FjOmS7/IHy93W/17i3WeI9SRs8tHawWl01W
x0+96jmvWe+Y7hdGt7l0fzG6zaVHF6OfrnpNz0obc3a49zweplx63rmkzyOS
M494Ln3I3vzzQ/+X1/tAa9asWbMWncYMttTCmN/5itFr+9I/aU+59MDs9FPH
Pec16x3PbS7d5tL9xOg2lx46o79ZeVptPLdcjX0rSrm8BYwe0jzzaGT0irjf
ZVbGZ3m977NmzZo1a9Fvo4piH04tivme3+rd04t7fphZ3Oez9sLoeH7JELW6
bK4qPlXoObNZ71juJ0a3uXSbS7e59MY5/c3KN2q5/Ixw+VtJl9xrBm9lvXvu
2cTPhZPbLmcernr3irhvZ1YkPOj1fs+aNWvWrPnHUk/2/0dh9N1+Y/TI59Lb
ntE1p5cOUcvLZtp8uvU2947O6DaX7i9Gt7n0uoz+ZtVpteXcajXuTEpdLq/D
6P9/e+cCHMV1p3u8m4c3r81u4k2cbHaTTd0t33urNt7rm9i7W7dWtTHzkDSj
mdEMD9s4Yh49PZIAYcBg/JIxz8QGjLGNCTZgYwcLGwvNq3umZ3pGuLa4iW8q
uZvNepPdquTGsbGxzUMIkJA493QLCUlIaCTNzOnT/f2qvhqBAQkXmj6/+v7n
HA48fXyXfvTOwVj3vF7mXj4DRxe65/2oSfV8nvU6DwAAAIeQOdcF43YxFLef
4G3eXevShXhdn5m6dC2tqcbLnn6Yubch1glPXTpPjo4unS9H56lLV97IXplj
n8zLr/J0A3h4CY7e0j2/T+z2n2bu49Ofd/9A6Pa3aWsr1ss7AAAAfBPuuv02
6tj/wsrRZ+XpcUePmHCVfhcbB44eS1FPT2uefj/plF9j7m6IdcKLo2PeHV06
b45eLk/PvJEmTxQ3kGWFu0r3ck4cvaWwYEAs+HuixcZTV2IAJy/B06mX/zxS
8H2b9XoOAACAedDm3alj7+Zx3n1Gd7Fx4OhaWtI+skm6l7wmvcLc3RBrBF06
5t3RpRvP0WXq5TuKm6bXl3My795aXHgpVph3PlqgPj6c4vgYwMknc/Sj/v2Y
ZwcAAFApwom5d1HHfoe3efcZnR/HSZeue3rKSzam7yWHpB8x9zfE/OHJ0dGl
8+Xo6NKn5+jJo13k8WI7WVq4c/ZebsAuvaUw/yL18TNj3JwfR39b7PYvYL1u
AwAAYH5Cydq/DMftWR4dfcjTnWfFuGvQbI6upTnlIQ+lWsh+eTdzh0PMH6s7
Orp0vhzdTF1659FDZFPxPrJELbOTG8TRW4sLB2OFwNkJvfyans7cyYe7c1XI
eb7Jer0GAADAOtSoNR8Lx21rqGd/xOO8++WZ9wtmdPThrEmFyB5pB0nLaeYe
h5g3PHXpPDk6unS+HL0aXbr2446jB0h7oa2yTs5w3l2bZW8uzj9fkpcbs0s/
SbM50BH4BOt1GgAAAGuyuGvuP4a6bG/x2qWH444zJc+8c+rpK1J3kWekx0hK
TjJ3OcS84cXRMe+OLp03Ry8eLZAD3XvI2kKsul5eZUfXZtlF7S7z6bq5URy9
2/+riNp4O+t1GQAAACDEa75IHfsgt44+PPNeyjnvnDq6lrb0ArI13Y471JGK
BV065t3RpZfP0ZWjGbKruJWsKCwmreoCdm5e4Xn3ac2yG3fe/bWw4v4S6/UY
AAAAMIJ2V/qRuWKoy3ac13n3ks9559jR9bPkkj6yRVpLDsk4Sw4pf3hydHTp
fDm6Vbr0eHcnebywTr8jTfPy0WHu52Xs0ic8l50/R39X6PaHcac5AAAAoxLu
sn2DerrEd5fuOC3E6/q4v4NtCk/X8kBaJM9LT2OPOlL28OTp6NIx7866S9d+
7SvdL5J16krSml9IWqiLj47hPH2Wjt5cmN8vFv2nK+Lm1Zp37/Yr9M/9L6zX
XQAAAMBUaGfHBbvsbdSz3+fV0S/PvJ8RE/UXzdylj8y+pxaSJ6T1JC4fYe51
iHnCk6OjS0eXzqJLzx9VyHPFneReNUxa8vNpFlyJ0R19BvPurcUFF8WCv6ei
Xl75Lv2EWPS3C28KH2e93gIAAACmw+KU879RTz/K87y7PvOeqO295n1sJnH0
oXvUfWSTdC85JL/M3O0Q88Tqjo4unS9Hr0aXnuzuIjuKG8my/F2XvXx8SnN0
Q3h6CV26vse8GOitqpdXxtGPRY96v8V6fQUAAADMlKa9NdcH4/Z1s76HjXGX
XtLedKM7+jQ8XctD6WayV5t9l1LM/Q7hPzx16Tw5Orp0fhy90K2Sl4t7ybrC
ikmcfBJHz/Pr6BXdY17Nefdu/4daZ74k5fwk63UVAAAAUA5Ccft3wnHb/+Hd
0bW96dFE3eT3ppuoSx/O8vRC/dz3w1IHc8dD+A8vjo55d3Tp5XJ0uTtFdhe3
k1VqqEQvn9rRjevpl72cftxSnN9X8T3mVXB0oej/eXPR//es11EAAABAuVn+
z4E/or68OdRlO8nzvLse/d70+onPkDOho4906qlWnCeHzDro0jHvbvYuXS2q
5KXi82RDYTVZoi6cgZfzO+9OvbyfuvDM7zE3zrz7Sfrft6/8+aJPs14/AQAA
AJUk2Gm/nTr6L3jv0vU+Pe7omfQMOZM6eizlIcvTd5Bt0jp06siMw5Ojo0vn
y9FZdumpYpzsLGwhK9SmMjg5X/PurYX5F0W1sSeq+qgD+9g7+Ky69MZ/EYuB
f2K9XgIAAACqRbNa8xnq0T+Y1b50gzj65bPez4oJ14CVunTN07U8nG4lz0lP
kZScZO58CH+xuqOjS+fL0SfydLVbJS8W9uj7ylt1fy63lxt73r21sGAwVvD3
6l4+PqwdfLqO3u3/SOz2b0FnDgAAwKos7rTdSl37f3M/754YdYbc+LPeLeDo
Wpak5pFN0mpyQH6OSLLE3PsQfsJTl86To6NLr6yjdxZf1c9gv0f9XoWd3Jjz
7rqXq/5zE3o5T45+xdN/Giv4/xfrdREAAADAGu2M93DctmZW96UbyNGHPZ26
+Qw9nV9HH849qbvI1vQj5HX5EHP3Q/gJL46OeXfrdulSMUmeLWwja9QoAyef
+bx7OT19yMsD56f08jGObmhP/0A7m71Jrbme9XoIAAAAMBKRLvt/D8Xtqhnm
3cf06aPvZDNtl361ow/ngXSMPJveRpJygrn/IcYPunTMuxutS88X8+RA4bky
nvXG57w79fJLupfnvaen5eZG7tKLjW+Ixca/Zb3+AQAAAIxKjVrzsWB87j3U
t49X09Er6emhuP20kKg9P+LppnX0a3v6klSAbEyvJi9IP8Sd6sg1w5Ojo0vn
y9FL9XS1kCcHCy+QH6gPkWX5u0hLjrWHs5t317y8WQ1cEAuNM/dywzm677ig
+tra6ZqD9boHAAAA4IFwl+0bwS5b3Czz7kNnyDlm6OnmcfThLL28V32/vBt3
tSGThidPR5fO/7y79vOHi6+QJ9QNZEW+acjJJwpzF5+9o5fi6WX3coPMu4vF
RimieP+a9ToHAAAA4A4y5zrq0wuob/+nWebdhz09mqi7oHu6abv0qR19OMtS
C8gWaS15WdqHc+WQq8KTo6NL56tLH/byeLGTPKluJqvUIPXveePCqaPPokuv
qJcz7NLp3+c30e5Gsb29/Q9YL28AAAAAnlnc4bwh1GXbRXPSLI4+0qfHay+I
yel4Ok+OPj1P17IivUg/V65Dfom5FyLGitUdHV16eR29s/Aq2ZHfRFblQhM4
+UThydFn1qVrXt5SmNdXFS+vrqOfjBZ8T7Uo3i+wXs8AAAAAZiIYd/xdMG47
ZpZ596vm3kv2dHM7+oirpxaRH6Qf1O9rwww8ooWnLp0nR7dCl679vtcLh8jT
6mNkTU4o0clN0qVP5ejV7MurPO8uFhvfjHR7/5H1+gUAAAAwK8Kzt3w8GLeL
oS7b783UpY94etKsnj4zRx9OW3rhqP3qOFvO6uHF0THvzrZLVwsqea1wUN9P
vjK/eIZObhJHn8jTjeDlFevSfcepm68JdAQ+wXrdAgAAAFiB4JG5Xwl12V8w
m6OHhz6f7unUwQfN5eiz93QtLclG8kh6Gdkj7cCdbRYOunTMu0/k6blCjvyo
sF8/d70tv6hMTs77vPtYR29W52v3pF2IGsnLy+noxcaDwhuBv2C9TgEAAACs
CHVuF80vzTTvric55OnRZN25qT3deo4+nNaUn7RTV38m/Th5XXqVuTMicHR0
6dV39GQhTvaoT5L1+VVkae6OCjo59136IPXycwJ14NFh7uPlm3f/BXXzWtbr
EgAAAMDqLJJtn6bO/SjN+2br0jVP1xJJOHvFpGvAcI7OaN59sqxOB8nj6Xby
krwXd6xbKFZ3dKt16bm8QjrUA+SJ/AZyXy5aRR/n09Gb8/MGxHzjOSHvPSXk
fVdidE8v0dHFYuP7YtHfLrzp+hTr9QgAAAAArvC9153fpN69z6yOrnt60nlW
TNZfNJynG6BLn6hb1+bgn01vI53yYeYOifDn6Jh3N06XLqkp8mJ+D/l+7kHS
ptzF2Mn5mHfXvDya8/UOefnocOToU827Fxs7BbXxJtbrDwAAAABMTjA+10bd
+02zzbuP8fSEoyearO+Do5eW5pSX3JcKk63pdvKitIek5CRzn0T48XSeunSe
HP1anq6oWXIw/4J+B9oDuRbSqlDnVOZdHeZebjxHj+UD/dG8r+dqL5/E07lw
dN/4zvzH0bz/u6zXGwAAAAAojVHnvP8/s3bpQ326fjfbBHeoM3J0g827T5i0
h7SkfeQ+KUK2So8M3d+GWXhTBV06f/PueTVPDuc7yK78VvJIbjlZqiyk/h2Y
2Ml5c/RqeLo6/5KY8/dR7z4ztZdz2qVTRxcKvt9r57IvSTk/yXqdAQAAAIDp
E5Lsf0odejP17w/N6ugjnq7dzZZwDRrC0w3cpY/29OEsSQfIQ+lWslPaTF6R
DhBJlpg7JmIdR7dqlx7Pd5I9uZ1kU24NWa7NrOs+Pll4cvSqdumDYt5/Ppr3
np6el3Pm6AXvR6Lq2yXK3j9jva4AAAAAwOwJxu3fopHMOu9+7T3qcPRSHH10
lqfvII9Iy3Rff1nah36d41jd0Y3SpefyOdKZf1X38e/nHiArlcVT+PgMHN1w
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
    "], {{0, 30.252100840336134`}, {30.252100840336134`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{2380, 2380}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|"Comments" -> <|"Software" -> "www.inkscape.org"|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{259.74038209033614`, Automatic},
  ImageSizeRaw->{30.252100840336134`, 30.252100840336134`},
  PlotRange->{{0, 30.252100840336134`}, {0, 30.252100840336134`}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.891015206411502*^9, 3.8910152528754396`*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"cc58a0e8-b3da-4597-99de-d5e5ac31256e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d44a8d44-bdb5-49f9-9082-ba9eaff007ae"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"981bf19a-d2fc-499f-9a8d-f43df2ffffa3"],

Cell["A paragraph that describes your paclet in more detail.", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"38484cec-2cde-4c26-a5d3-c8d938d80321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ebecfe6d-de3a-4a3a-8da7-9347dd59fec9"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"a559791b-7821-42b9-85a0-ea9e9cc995a9"],

Cell["Additional information about the paclet.", "Notes",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"db65a6ee-5b5d-445c-aa94-be7dd7b25364"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ce130fb3-242c-4240-824e-99be564eb857"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"0f38c171-1fe5-4f5f-a48a-581c82257d5a"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "Refreshing" -> False, "Relative" -> True, "MainGuidePageString" -> 
   "Documentation/English/Guides/PackageOverview.nb"},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"a80f16a6-6318-4a12-a849-3528ff43d583"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "64383d91-92d0-4fb7-b683-a6184e9fd1a5"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"e9b948f2-b58b-43bf-9700-100ad8d36bbf"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "35b27ec1-c239-4f56-86c9-be66ac5fbe27"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"f7fffb18-6349-40ae-9aca-abede6de62e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.891225594642674*^9, 3.891225598996509*^9}, 
   3.891225646186369*^9, {3.891225806743183*^9, 3.891225811421564*^9}, {
   3.89122584694379*^9, 3.891225863172305*^9}, 3.891235599158822*^9},
 CellLabel->"In[1]:=",
 CellID->996717066,ExpressionUUID->"243891d5-eb88-434d-a8a7-f3a506586064"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<StianRamsnes`MaXrd`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->172764492,ExpressionUUID->"b86740b0-1de2-4039-946e-6f4d99ffe9b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"f7a0b1e7-7d16-4279-8224-c1566bcbfbcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StructureFactor", "[", 
  RowBox[{"\"\<Silicon\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "0.709317"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.891246752492779*^9, 3.891246763330339*^9}},
 CellLabel->"In[4]:=",
 CellID->986625130,ExpressionUUID->"3964b8b9-a47f-448c-8701-ff6d92e3dac9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"59.37443090894123`", ",", 
   TemplateBox[{
     RowBox[{"-", "179.62029050603581`"}], 
     RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
     "\"AngularDegrees\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8912467685206833`*^9, 3.891246786717822*^9}},
 CellLabel->"Out[4]=",
 CellID->1033753933,ExpressionUUID->"0d17f418-37ea-49d6-ba2a-9ffe617944e0"]
}, Open  ]],

Cell["Show a few simple examples of common uses of the paclet:", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"2ccc61a1-2110-479e-96d0-4c2bbbef0cab"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"MyFunction", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->593829399,ExpressionUUID->"50fe27c7-8456-4d29-9e97-02d2dda5f8fe"],

Cell[BoxData[
 TagBox[
  FractionBox[
   SuperscriptBox["a", "2"], 
   RowBox[{"b", "+", "c"}]],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Output",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"Out[1]=",
 CellID->197444189,ExpressionUUID->"58a3174b-6862-4c32-b16b-e61fecc9d7c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"e46f5150-ad06-4a2d-87dc-347bc600d58d"],

Cell["\<\
Give more examples showing the range of features in the paclet:\
\>", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"4f93f1cc-6cf6-49ce-b6ff-1ad157c8b113"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"MyPlot", "[", 
   RowBox[{
    RowBox[{"MyFunction", "[", 
     RowBox[{"a", ",", "3", ",", "4"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "10"}], "}"}]}], "]"}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->978490832,ExpressionUUID->"6b38f4c2-21bc-4d1d-8164-7d17d15285f8"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[1., 0.4, 0.], AbsoluteThickness[3], Opacity[1.], 
       Dashing[{Small, Small}], CapForm["Butt"], LineBox[CompressedData["
1:eJw1VAlQU1cUDWEpCEgwARECJPloAvk6MK3g2Oo7FVtZiihWbCsobh1UlqIU
KFarY5GyqWURQVwQBdmsMlgBmYpBBEEsSl0oQksFQTFDVGRX+37S3pk//9//
37v3/HPOu9KNkQFb+Dwez49e3F0XGqKYNpz0kbeKBD/6VD/OVEO6+SbJjptU
xMeMr0y01pDMSftk/m4VybAxCJw+V0NSBQ7h4osqcrQrIzHhKw2Rnz3V6Wtb
T1yvyC1ML2kIXVRxfKieDN2sX1K+9QUxfyMMKjvXQPwh3FDf/pKsGqi9MW/l
TTLu9uT87N7XRNonv7fY/g5Jy46Ysb9ujKRazT96oOceKd/aHZV8cJKUnbv2
gZljJ8nN4eIt+cFV82hX1d+kyiFhcGUVDxRkx+3RxyTA+/jeOUv4WO3qUixs
6ydbeZH7DBr04dk/Pybp2SBZdGz1ydK5hvCzSvV5ZqAho70b8u9XGiEkxt/B
ettLUjTgNe+d1Bitt7gYJnmnmeqpRBN49cSLzi8bJXGmToo9ZqZoOOQWO1c6
Qbzp6jcxZmisqUoz0kyRRueF6S3vzBFRoFdrOIOH1M5QisACSyfUg3XVerg6
Pe/909ECeK2Ystm5Rh8WNK30sIQsLC7+LGuILw8suN+gtsSIIuiQ6rURJoPC
G95WzEBIX5usc9wYneN7ttVGC5HjYpP1h4kpco3tTqxzFuHyHR6VzBwDHWUT
QWoRqikaay8LWNnf7CNnrHCp8LtG5xoBNn/4l3/aGmtsV45kd7VbQu5mXCa2
nYmmo1eOHLYQonf/idaS32eidPGatReJCGOqzSUhmTbQ6pZhBd+m9yiFs0Cb
h8qeW2M3mb+uxsQWw2GBu8+720B28Nsou1Zb7MvyTAkrmoUuJ6N9WfvtoCm6
4ethYoeTpeUP17uLofVRuBha/cbEaPfbKPhi3F6Hv9weBRzt0Y5ICeufLI5y
wNPLv+j3p0pgHlWW0qlwRC1FGx8oxcUV23NjHzliAQdUItPh95eg+MxyCPUY
qM1/c80pkUAQ7166+AGDC7SKwlyKsVWPzx677gQDmqrDpSg8dl1yoWI2llH3
OzVJURtNER6Zg7scrS4yeCR9HNJ3WI7PuIcEGbQ+3asAZenq824ZtH6PdIZ4
8B93WzC6/4pzwXrnFkFjLoNrzfmf/LpTiawtP20Kzvv/uxIt9PWr4xTXjtCf
1d8r4WFbt1aSz4Aegub8BOV/PDI63bKV0NqqksEu6saeGiW0tm1lUP+aGobP
gmZ+r24z4E5fkRGLzwPkp5LaGMymMniasjoc7Qy47fEiFjmc7H8y+JqLOSy0
x/cJg2kPCr5Z5MPixaZbwb4DDLgp0LGcBa12oecpg3Aqy4sAFoYF6Qv11Aw4
tyqCWHRz4+AVA235CBaitqUPNcOMjt8dLLTzZITBiSFqiFgWCtqucJyBdgzt
ZbGOM9gko9PnRxaZtFz7FKPzTxKLZm6cvGXAtb+bxur28ZzAsRORzuJfVG0R
2w==
        "]]},
      Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.61803],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{1., 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , {}}, {
      Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}, RotateLabel -> 
        0]& , {}}}, {{{{0., 
         FormBox["0", TraditionalForm], {0.01, 0.}}, {5., 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {10., 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {15., 
         FormBox["15", TraditionalForm], {0.01, 0.}}}, {}}, {{{2., 
         FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
         FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
         FormBox["6", TraditionalForm], {0.01, 0.}}, {8., 
         FormBox["8", TraditionalForm], {0.01, 0.}}, {10., 
         FormBox["10", TraditionalForm], {0.01, 0.}}}, {}}}],
   FrameTicksStyle->Directive[
     StrokeForm[
      Opacity[0]], FontOpacity -> 1],
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     AbsoluteThickness[1], 
     GrayLevel[0, 0.2]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{1, 10}, {0., 14.286}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     GrayLevel[0, 0.7], 
     RectangleBox[
      Scaled[{0, 0}], 
      Scaled[{1, 1}]]},
   Ticks->{Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
     Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Output",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"Out[1]=",
 CellID->980074188,ExpressionUUID->"a23f090d-0ca4-4d57-ab6b-40fda97a117a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "b110af23-e307-43e0-a05b-07ba038a85fc"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"025921a6-92fa-4774-b07d-30d1ba2c07a0"],

Cell["\<\
Use screenshots to show features like notebook styles, palettes and external \
operations:\
\>", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"f9fcfb9a-4a49-4340-8524-dc72940c767a"],

Cell[BoxData[
 TagBox[
  RowBox[{"ViewWebsite", "[", "\"\<wolframcloud\>\"", "]"}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->794331063,ExpressionUUID->"24b5635c-9dda-48ee-af6d-6915e5dcbc24"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QeYXmd553/+/91/2d2UzW4Skg1LSQhlCUmAQGCTbEKSTUINPdTQewKE
HsAg426DCwbcsMEVA8YGDAYXsLGt3ixZVrFkS66SJdsqU9XGe8/9lYebOXrf
vKPpM9/PdV++xmfOe85zyjt6fjPP+5zHveX9L3vH//2IRzziQ/9//Odlb/7Y
cz/4wTf/68v/c/zPK9/3oXe/831vf9vz3vfht7/z7R989lv+XSw8Of7zpn//
iEcMfv2QJEmSJEmSJEmSJEmSJEmSJEmSJHVsoNivmWufJEmSWpjsnprGUc07
5iMNmeyfOpIkSVPXZPfUNI46yUd1HW6JvWl36tdM1KcZp1eSNEkm+18Ajb3J
7qlpXJBuSDqknlZZyXw0C032Tx2NvcnuHUjS7DXZ/wJo7E12T03jYqT5iHV4
1fo0L/1UkiRJkqY50g1Jh9RTU5L5SJIkSdLs0Uk+apWMFqc70t2SJEmSNM2R
bkg6rVKS+UiSJEnSbNB5PuIzSnzAcG4yGUmSJEmaeUg6pB4SEGnIfCRJkiRp
tmmfj3hGEn9X6kp8dmmyWy1JkiRJ44XUQwIiDdVnyJqPJEmSJM0e5iNJkiRJ
gvlIkiRJkmA+kiRJkiSYjyRJkiQJ5iNJkiRJgvlIkiRJkmA+kiRJkiSYjyRJ
kiQJ5iNJkiRJgvlIkiRJkmA+kiRJkiSYjyRJkiQJ5qPxdn26MH1NkiRJmubo
2dLLney+9tgzH40385EkSZJmEvOR+ejQcM9cnXrTQ5IkSdI0R8+WXu7MS0nm
o/FjPpIkSdLMYz4yHx0a/vJoMpIkSdLMQy+XHu8YdqFvTdek89LZiaF930+3
JNZflZamMWmA+Wj8mI8kSZI0U5mPxiof3ZGuSOeneoAT7+ZES36Y7kyj3zIX
cbLvXEmSJGm80OMdfc/57oeTzsXp24khfDekH6fvpIsSS76VfpLGpBnmI/OR
JEmSdGjMR6PZ16Z0efpRui6tTmNyOIeAC8HRkY++l2jtaLZsPpIkSdLMNib5
aEMi6fBnFMbLsZw/Xtye+NPGVYkMxYi7a9MomwHz0RTJR1u3br3yyitvvPHG
cb2Bx8/AwMCll14aV3PY8rVr11588cXbtm2blFZNTa2u9fr162P5JZdccv31
109Kw0Zq/vz50eDNmzdP5E63bNkSO503b95E7lSSJLViPjq0vZA1+HMYh8NM
gGvTmBzIKNESWkULaS0X4tC2OaJ8FBltzpw5J5100rjewOMnjjfaH5l32PIL
Lrjg8MMPd4aK6qDXOm68OQ87/fTTJ6ttI/LFL34xWrt8+fKJ3OlNN90UO/3C
F74wkTuVJEmtjEk+ImiQdJakVmvelFiTP7jwBw5G4o2yGbUx5qNplI+iVUcf
fXQE5A6XT4xrrrkm2h9XuS7s7+8/4ogjHGQ4TPNax3vtyCOPjIVf/vKXFy5c
eNddd01i8zpnPpIkSeajkW6ffHFZqh+wWpfG5BDa2Jhu7gBj/BhrRwuZVPCS
tD6NdO/jlI++8Y1vxJpXXnllh8snxqmnnnr88ccPDAzUhXFio0kLFiyYlCZN
Wc1r/eCDD/KXo3izTGLDRsp8JEmSxiQf8fEWut+3pVYd+x8X5CPG45GYRtkM
mI+mZj6Kkx995n379jXXHE0+2rNnT3d3d/uWxDqx671793bY8rBt27bY9Xe/
+91hy7/1rW/F8h07dnS+qRkjouL27duHBUY089F9991HPoq3W5ttxrWLSzNs
IdfroLdKFXdUtCf+WxfG7mJhJwcy7IVok4/aHP4h6Ovr27VrF1+PNB+1af+w
dTpp7SGfRkmSZirz0Ui3zwR9HAKj19gOH786t2N8/Oqu1Ml+WfMb6Zsd+26i
hbSWqQK/nkZ67IeWjyJrnHfeeUcddVT872c/+9mLLrpo586drHPdddcdffTR
Q59SOTpFv7HV8njJkiVL4utLL7303nvvPeecc1gh9nL55Zc3e3RLly790pe+
dPjhh7Pa2WefHTdhXSH64WvXrm12xSNOxvoReOvCSFix6zPOOIP/jRAa/zus
WxvXNBbGua0LTz/99Fi4bNmyiXnJQwczmu3Ea2OdY489Ns5J/De+jiX1JTUf
9fT0HHPMMUcccQTnPK57bC12xJpDly8uDWEkDG0ndnrqqaeyMG6V0047LbJD
3VHsIl5+zz33xL3NHRI7ih8jcQXj/jzrrLN4bTTyO9/5TvOyMsEmB3LkkUfG
/bBmzZq6wkHz0b95+Ndee200ppmmTznllFg+7C9o8+fPj/uWe/K4446LOy12
12E++jfb30lrR38aJUma2cYkH9U5Fjrp8LMOf3BhPN6NaZTNgPloSuWj6MVF
Z2zOz4vMwu+r44YZ6kjTSQuRg1otj5fMmzePzmQNUEObrX+t4ANExKsTTjhh
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
//nmp6WWLl0652DPlJEkSdKMNOb5aNKZj8bPVMhHN91008knn3zJJZeM7WZ3
7doVm7322muHLb/66qtPOeWUnp6esd2dJEmSpibz0WS3dzqZCvlIkiRJGj/m
o8lu73RiPpIkSdLMZj6a7PZOJxem3jTZd64kSZI0lujlXpQmu989lsxH48d8
JEmSpJnKfGQ+Gqnr0zXJlCRJkqSZoSfRy6XHO9n97rFkPho/5iNJkiTNPOYj
89FocM/wl8evSZIkSdMcPdsb0mT3tcee+Wi8mY8kSZI0k5iPzEeSJEmSZgPz
kSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJ
EsYjHz0kSZIkSVOM+UiSJEmSYD6SJEmSJJiPJEmSJAnmI0mSJEmC+UiSJEmS
YD6SJEmSJJiPJEmSJAlTOh8N7I8a2Lt3sPZN9dqftXffvihJkiRJU8HeNJDM
R+YjSZIkaTabUflIkiRJkiaQ+UiSJEmSMOXyUY6p48ve9Wujtpx3ZtTWb54/
WBefO6VqS9aDF38tatk3Loy68JvfivrWN78ZJUmSJGmyfCudnzakA4Gj7Vg7
85H5SJIkSZp5ZkY+Yq4Dvt5y/llRN/7yI6IWPv5XohY85henVM3NWvWY/xQ1
57cfGfXIxz8h6omPf3yUJEmSpMnyxPSr6cJEymDeBvOR+UiSJEmaPWZePtr6
zQuiSEbLnvWEqKXP+O1Dr6dntV8ywlqUtfYZj4064ZlPiXrKs54d9ZxnPStK
kiRJ0mR5TnpSuiSZj8xHkiRJ0uw0A/PRN86LWvDYX4wijyz5g0dPqVqYteYP
HhV13NOeGPXEZzwz6lnPeEaUJEmSpMlCSmKsHXM1mI/MR5IkSdLsNPH5iC33
pe1pSuSjP3zMYLX8LpXr/P5/H6yRbsF8JEmSJE15452PSECkoX2F+ch8JEmS
JE015iPyzuL/8ZtRS5/+uKglT3tsFPMwMCP3HUd9MmrzV0+LWvDoX4g6sOU/
fGwUr1r8lP8WteSpjxos85EkSZI0DZmPzEeSJEmSMKvzUSajpc98fNSKv3pG
1MLf+ZWoRU/41aglT/2tqGXPfmLU7s33RO3fuzdq5fP/JGrRkx45WE8erIWP
+6Wom/7iD6OWPedJUe1TkvlIkiRJmprMR+YjSZIkSZil+Yi5FDLFLHvm46N6
16+N2va9S6LWvvHlUfN/8/+N2vadb0RtveSCqLs+f2TUriULouY/6j9E3fLK
v43acu4ZUWSolX/77KjFT/6NqFYzNpiPJEmSpKnJfGQ+kiRJkoRZmo9KSmJm
hp61t0Sxhf677ojqWrEsqv/eu6OW/+lTohY96dejulevHKxVN0X13nZr1IEz
tmtn1LJnPymKsXnmI0mSJGl6MR+ZjyRJkiRh1uWjzCzMyL30j34natETfy3q
gR99N6rvzo1RD/zoe1EbP/PhqL6NG6JWPu85UUuf9tionrWrou484fCo+y7+
WlT/XZuidi6eH3VgbnCKveeS0eejPyqay9svqcufmdqv0+q7zXVabe2ZRedb
G9vvNtVWtdraWG2nfZubSzo5V5IkSRpv5iPzUSd7abWO+ejQ2txcYj6SJEma
CmZRPspkxBi5hY/75cHK2bwXPPaXorb/5EdRdxx9WFT3ymVRXSuWRu3r7orq
Xb8maueCG6LYy65F86J2b7k36vZ/fV/UrqULo3hK7MLf/s+DlXs5MFt4GWt3
aPno99PTEr3opyeWt1+TvjfLn5T4brOH/weJ7zbbwB6fmp5S/F5iHV7LEr7L
fpupga9Zv65Tv/sHRTM78Ko/TK3OW93v/yjq8lZnsqrn6smJo2vmmnpEzbPX
6nqxNY7UrCRJkjRZzEfmo/pa81Gr7ZiPJEmSZoNZkY+YhyGTy6qX/XXUpsM/
FnX/5ZdE9ay5OWrP/VujHrzq+1E75v006q4Tj4y6++Rjo/Y8cH/Uvt6eqM3n
fDlq0+Efjdq1eH7U1m9/PWrvzu1RPetuiWKE3h1HfypqzeteHLX4934ripaM
NB/Rr35e+l+JRPDs9Lfp6QVL/iyxhEzEFt6R/mein09vnF49r/3TVFMS2+Fu
+fv0yvSq9IrEdv4kvTS9OrFN+v+0vCYjjoh1aqbj6/+d/jrV19KeFyS20Mx0
NWGR116TXptYwjafkzg/zfPPcZEK2cubEkdN2mI5reLM/12q16XuhSW0kKPg
TD43cV3ITa1G8UmSJGk8mI/MR+Yj85EkSZIwK/JRzpDAPAxr3/zyKNZ84AeX
Ra16yXOjVvzlM6J2LZkfNbBvX9Sql/5V1HWPeETUXaccG7X12xdFXf//PSKK
ebz3dXdH9d25KermF/zpUG0++4tR7OX2wz4Yteh3fzVq6dMeF9V5PqpX5+p0
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
kiRJEmZFPmJ+hswmi57wa1ELHvtLUYue9OtRLO9aujDqvou+GnXjLz0iasO/
vCNqX09P1I6510UxV8P+/r6ou046OurGX3xEFM+Z7btzY9TyP3lK1KInPTKK
vSx8/H+NYi+HNj9DxcgxsglL6JnznFbGg9X16VeTPuhvvy4xroyePNtkO4ya
Y02ehcq84mSuOj6t2WNnC2y5toQMxXLSCt/l3qvt5GuOjlb9SWLvbKdmLmbb
5tjZe/PY60wLPGuVmbRJW3yXltA2jpdjZ/wb32XmbTIXeaomHdpWj4Jz+4L0
j4nvsp0/Kjif7Jc28FqTkSRJ0sQzH5mPzEfmI0mSJGEW5SMqx8gx2zbfJcVs
v+7qqHXvfF3Ujb/wiKit37ogihkbHrzy8qieNTdH3f2F46K2//SaqPm/8f9E
Mfpu1/LFUYuf8t+iSENLn/7bUezx0J4P2wq99LqE/jnPP22uT9bgVfS9Wb/5
vFGWs+bvFyxnnVZ7ATmlrkMPv26Z7zYTTT06vvu0gu3UNrOd2rammkRISSSj
upx9NY+6tqTuly2QdFjeTDEsZx3OeR2DV9fkKOoea9taHZckSZLGg/nIfNTc
jvnIfCRJkjQ7zbp8VIt5G3LmhO5VN0Xdd/HXonYuuCGKmb2Zr/ue00+K2nz+
WVEPXPn9qL5Nt0V137w8avPZX4rq23R7FOPrFv/eb0XVMXVjm49a9Zzb96hr
vmi/habO99JqnfbbbPXaztfsRDNhtW9hq+23P4et9tj5Oe/8iCRJkjS2zEfm
o+Y65iPzkSRJ0uw0S/MRyeWpj4pa+ke/E9V/16aorpXLom7/+D9HLXrir0dt
u+ziqH3d3VF7Hrg/ivREqrr1vW+M2nHjtVH7unZFrfybZ0Uxl/j45SNJkiRJ
48F8ZD6SJEmShFmaj6jMR8ue9btRq17211GLnvhrUQsf98tRi578yKjlf/4H
UWQftn/LK/4matHv/tehYv1VL3lu1PI/fUrUgfF1LfZrPpIkSZKmJvOR+UiS
JEkSZnU+on7/v0fVZ8X+3Ozfj/6FKOb0Zqzdgsf8QhTfXfq0xw4Vz4Rd/NRH
RbUaWWc+kiRJkqayycpHvenBZD4yH0mSJElTwXjnIxIQaWiK5qPy3NhW6Yk5
HJb98ROiGJV3kAR0YAuPyWq3L/ORJEmSNDWZj8xHkiRJkmA+6qgyJS35/UcN
Vtuxc52U+UiSJEmamsxH5iNJkiRJmIH56JsXRC18/K9EMSLuwFwKh1ZPzzrw
v78zWD+35FBqUdbaZzw26oRnPiXqKX/87Kjn/PEfR0mSJEmaLM9JT0qXJPOR
+UiSJEmanWZePtpy3llRN/7yI6JISQse84tTquZmrXrMf4qa87hHRj3y8U+I
euLjH//Ex0uSJEmaNE9M/zVdmMxH5iNJkiRpdpoh+Wj//ii+7l6xNOrOYw6L
4rmud5909JSqO7O2nnRU1HWnnBB1whdOjTr1C1+IkiRJkjRZTk3Hp5WJlLE/
mY/MR5IkSdLsMTPykSRJkiRNFvORJEmSJGFK56P9+6MG9u6dFrU/S5IkSdJU
M5DMR+YjSZIkSTMkH0mSJEnSBDIfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIk
STAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85Ek
SZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLM
R5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIk
SRirfPRAMh9JkiRJmr46z0ckIPORJEmSpJnKfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9J
kiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTB
fCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9J
kiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTB
fCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB+pEwMNk90izXzT666bXq2VJEmtmI/UCft+mnjT
666bXq2VJEmtmI8my/7EOeTr8XsVvbWRvqqT9Ue6zWZ7MPr+ZHObI9Vsw2i2
OZojqld5NFsbq+00z8NIr/hI99Jq+3WdkbZ5/Frb6qx2sk4rh/ZOP7QtHNp9
bgaUJM1U5qPJYj4a276W+Wj8tmM+ar9985EkSTOJ+UjVQFGX7007U3dqvnY8
+szTneekE63OUn/iruPnTHOdie+lt2ptX6K1fN35a6ev8ciekiRNLvORKvPR
2PKcdMJ8NH2ZjyRJM4/5aGLUXhz54jPp3enixHebPai65Pz09nRKarXH+iqu
yzvT4almnFaZ6MfpY+kV6S/T36bXp+PSutQ80lZnYEP6YHpfuiW1OgOdHONV
6T3po8XH2vrXRBsWprr9zrfJWT0jcbZJlJ0fUV3nwvTPxbzUfmv1DLPO8en9
ibN9Z2qu3749qxNnia19KXWync6PuifxXvin9JL03PSC9K50Sao9c9pQt8YZ
49p9PN2XRtPmuv2udF7iXfyiRGv5+h3pnLQjNbdT1VZ9JfFOPy110sK6ha+n
t6W6hea5Wpo45837nLN3TDor3ZiavydxxJ0kaWYwH00M85H5qPNjMR+Zj8xH
kiRNFvPRxOO8/X361fTaxHdrH6N+TX+bXuJvpT9KW1Nz/dp7JIv9SmILrXrv
DyZ6lf8jPTY9Jv1u+p306PTb6Rmp9pnZZrPHztcLEtv57+knqdnyTs4kX38x
PTI9Of239JttPSr9x0QqqdtvbpMzz2vr9n8jcSycN65vzVydJEfeTX+VHpfY
IympeSZbbYcz83eJ7dDa01Mn57l+94hES7gTXpPaH1d7zfvhhekJibuLlnPX
cadxhh+f3pzI2rSh3tWkA67d76fbUvtz2ElruabPS7SWc0JrWUJrOQra/zfp
+tSqDXUJyeg/p1enkbaTjPPL6R8SyzlX9fp+J3Enc5/zvqjvFO5w7gHW4Qx8
LdU2mJIkSdOd+WjimY/MR5X5yHzUXGI+kiRpspiPJlLtkxyZ6DvRj+WT3Xy3
OQZmfSITPSc9JV2bmtsfKN6SSDpzEuvQn2SdXelViVax/ZcnekGMq2GPn0t/
nn4v0WtlxB3br+2vXy9JpKqnphtS8yg6P5+MR3pi+tNEuqHljHH6agPfZVwc
owSbY5zo8f5FuiB9N9GrpB9+UnpT+sP0pPTMdGtqnofmUcxNJCz2+Mfpz9K2
VK9v3U4zH70yPS3RKq5vve7Ns1qXM+aN+7NeL3rvrVrSXj0D3FG0jV73HyTy
4KWJdRjr+KnEWeV3C4cltrYn8fW3E1eBs7cxtboKnbR2cXp64t1RW8v9QGsv
Tx9KnP+6Pj8nm9uvX38gkbkYIzfS1vJO513/1sTyZj66InHXcb+dnDiH3PMs
YYwuP4V4X/Cu/5fEfBrN341IkjS9mI8mkvmIr81HrY7CfGQ+4mvzkSRJk8V8
NJFqn+Rbif48Pc/mHAV1fT6TTp/k2YkU8/lUt197JtvT/06M+amjyGp/kt4U
22Q8Ep/Lpofc6ogY3fTiRN+PI7oy1WNp9jPpFdMrq+OODi0f8clxxuzRH241
I/RIt8l5++vUat7m6nvpWYnzyZmsZ6OuX5cwko2xcMemNybGlbHlZjvRzEdk
WxIN/V6+Xp5atadumXGPpAzuOlJMs7/dybmtmX1zIgOSr2nh91P77VyTmP2A
O5zldXwd7xfO//9MI81HtbXMrvD8RNIhJX0ztd8OR0Sm4Pxz1FtS3UttFbNh
MEKP32+030vzuD6duHMYi1iPq17lHyTeuWTPOo9H08rEDC2863mPHJ2aLZEk
aXoxH00k8xFLzEd1ffOR+ch8JEnS1GE+mki1z0Afg7E39EwYn8N3Obd1/U8k
8tF7E73KN6RWvaybE3uhb8bYttoqRn+xDtuk51O3Q8+zXvearW5P9ELpPb40
7U7N/tjE5CN64KzTbH9Ts501HzFnAn3aVttsjo/itZyNesbq9WIJOZQeOK9a
kRjXxKfjGcVUt1DPRjMfsV+uLGO02HIdA9k82/Uo+Iw/+YgxdXx9aPmobpm+
NPczdx2juWqrmtr3uuuxjD4f1a0xPpPWcofX2UjqnVB/s1HzGr+X4EjZDiNU
676mTj7idzX1nd5sITOcM/M/P1v4vQo/czo/z5IkTTXmo4lkPmJ985H5yHxk
PpIkaWoyH02k2pNkPgRm/eVT2Cckvlt7L/RPmP2YUTp8Vp1eH6OS6Lezfu2V
kblIDTzdlStVW3ViondED2d+arakqe6LkX5sh/4Sn1WvR8HXE5OPWs18PtJt
1nzUfoaE2k/m6b18Op6ZkOsTQpt9VM4A/XmeMcoZYzYMlnNcrZ5z2sxHjK/j
DDMHBTN7cNfV8YfNvMZ9wt3Fc1pJasxlPdL5GZpbZowZdwvzWtSWt98mve5m
m8c2H7FlrikzXdBaMixnr7ak1RbqT0vSBBmT5yyTMprtn9x8tCa1Olf1Xc/v
W3gvs4U6A0zn72VJkqYO89FEMh/xtfnIfGQ+Mh9JkjQ1mY8mXu1N8Rlz+pzM
ncvy2gNh3mlG9ZCSyFaMniJb/TixPqPa+JrMRR+JT/rXNoAReszTW0eCNfuf
TbV/yJgc5pqgX0ryYs2Jz0edj69rv832+aiqx0jvlKvDVaszXbB+7XnSq2Rm
hg8nlt+f2DtH1xyHVrdZl9Or5+5iDmdG/fH0z+Y5r1tjLohfT6cmzgYj/bhv
m/vt5Epxr3I/kxSYx7u55kiNVT6q3+WpsnW2jfajE9u3iufzMr6O+5/3At+t
7/qpnI/qcrb2usTPENJ0PRZJkqYX89HEMx+Zj8xH5iPzkSRJU5P5aOLVnglj
0hiF9YLUnWqfk5nA6TnTv2U5T5/8zVQ/6117JmSu30pHpdqSBxMzV9P3/mTi
u52PQeJr7gRGH7G196Rmq8Y7H/2v1Mlc3J1ss+Yj0kr7LTA3ch0/1kwT9bwx
wopnsLKvOlMHPpjo6/I00rq15tc1H5GGfph+lH4t8axV1m+OE+Pa0T9nFvc6
U0TN8iPNR6Qtsga5g+3XlrTfWid7GU0+qtthLCtpjnuVc9hMGZ1sbV5i9Cn3
xkWJ79Z8PfXzUd0CmZF8xNOZ70rttyBJ0tRkPpp45iPzkfnIfGQ+kiRpajIf
Tbzar2DUEz0T5l5gtu26/r8m+qVnJ5Z/LdH/YYxc7YfQ62ZmAHrddVwW6Mnz
mX2SRZ21uPOcUtETY4+0iuW1beOXj+ih0R9mTmbSJc/x/FbBEkZ21ZFvNcfV
fMTsFvWZnvX+ZywfW2M0Hc/NpH9+daptri3nGazcA3+S7k31SLl2tf9Z12mm
G7b/qkQ+Yn5pjpQ+MKMQych1X7xDuTo8+Zflhyey9mjy0WcTZ5VU2Jy5opOr
334vY5WPvpEYEcdM6czM38l2muswWo93HG37cuK70zcfcXdxRK2edt1J+yVJ
mgrMRxPPfGQ+Mh+Zj8xHkiRNTeajiVd7C4wsYpQR/RMSE9/l3NLf5rv16a43
Jcbq0OOqY1rWpqcn+ur1uY0gi9Gfoe9NIuC7nX/CuvZp353o/TKbMdup64xH
Pjoz0UOjj0fPkHGJ9Or5mrzAuETmLqjju2oftW6Tma6Zv+JVBQmCXMNsAyRN
vq6933rd69eHJVrFSDy+S0v4uiZZrhQpr56HVvmI81CvLKP1OBvMw1DP6gXp
kem0xHLG4x1aPqrHyzNnuUNelOpIyKmWj0jZnHPeTcyX0sl2mkd0TyKZss06
q//0zUecbVJk8znU5iNJ0vRiPpp45iPzkfnIfGQ+kiRpajIfTbzaX+pP9LHp
q/NcUb5Lovm9xCwKzOzNdxkrVedD4DP4fPfyxPL/nXam2pJNiZ4/vTXmH+a7
neeUekRvS/R+mfWX7473+LqaZZ6dyBrMZvBPDe9N9EJbPV23mbnoAf5uQQ6i
50zOJTvwXmien/o1V6Q+I7imnibaTJ+Zr+s2O8lHrMN4P5Y3t/P6xHVZn/gu
OW70+YicxR3C3cucJJ1vrZXxyEfMn1DH14105Fhdh3ccaZq2MVsF352++ejr
iSPivVB/G2M+kiRNL+ajiWc+Mh/xtfnIfGQ+kiRpqjEfTZbaD/yXxAirOnsz
n8qnR1qX1z48zxJltNjxieXkLF5b55eufZWt6bmJJHVk4rud5JR6FPTuGIHG
1t6emlubmOfD1k/9d67VNv88MZcCIxtXpI8njoIjWp7YQnOMYt0+OeXJiVGO
5A56tp8sWMK5/f3EWLv6bqpXtpmP6swepOy/TbSZecsZxUcWeGuq1/czafTz
MzAXdL1SjDrrfGud7GWs8hHZgevLbypq8u3kXq3rLEucc87zuYnv1nz0/sTv
TOqTndtr5lCufk1Y45GP+GlTZ0fp/GxLkjTVmI8mi/nIfGQ+Mh+ZjyRJmmrM
R5Ol9i7OSPSF6AOznCe68kl5PifO8t2Jr/k0Pb3WOoqGzMVn8Fs9PZav6UXT
X2VG7uZ4rVbo+bDmHanOXcyM0KxZ+34Tk4/uS3V030AL7bfJSDDGN9aRYGAv
7JGxdq9NjJys+61njK8/lngVc2jUOSWaGIPHPPD0ruvTReuVbZ+PwMwAv5qY
pYG5rFlyWarrj1U+ujhx1CSOG1Kz3z5SY5WP6ndXJdIrWxvpGFTW4eg4dpII
x35tYs36vmZWf54c/fI00rF8/ATg6jOmtK4z+nxUl/MbGPIRz7nm3wW+O5rM
K0nSxDMfTRbzkfnIfGQ+Mh9JkjTVmI8mS+2fkA7on9CXY8aA+qzVOl9u7Qnz
OeinJEbKMWruNYnMRf+n7rf2bfjcPf1tZhhgvuuaLFodRW0JfXX6vYwZY44I
vjvx+YjzwHc776G1ykd/lUhDnJPamyV91GPn+bN1m7UN2xPb5Lp/KDGiklka
vl3Q22f5SxJ90VYjJzvJRzznlOvOTBrMx04PmRF3df3R5KPaNvreJA6Ovebo
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
0eff0Rjp3kfTWt5ZnW+BNcfv/Vh//o/H9iVJmlzmIzWZjzTxzEetmI8kSZpI
5qOpZqBhYl7bfpv7GkbfB2u2dqQm5tjH6lp0chRj28KJ3NdYYcvcXa3uukNr
7Uh13ubRt7Zz7c/PaK7LeJwZSZKmI/PRVDOa3sh49GTYjvlo9Neik6MY2xZO
5L7GCls2H7U/LvORJEnjx3wkSZKkhw1kSbOX+UiSJEkPMx9ptjMfSZIkSRLM
R5IkSZIE85EkSbOBM2yovYGH9kXt3d8Xtf+hgShH2ml2Mh9JkjQbmI/UnvlI
gvlIkiRplhrIJJRzMuzbtTqqa90JUXsfemjv4NKISCYkzTrmI0mSpFnKfCQ1
mI8kSZJmqcxHEZCietccP1g/+cuo/u0row6MrxvInCTNGuYjSZKkWcp8JDWY
jyRJkmadknr67v9xVNeNL4jqu2Gwula8J2pgf1fUw2s6W4NmC/ORJEnSrGM+
klowH0mSJM0mAw9P9z6wf+/9UbuWviaq58YXRPXOf1lUz0//MmrPvedFHYhG
A/sHBmdykGY+85EkSdJsYj6S2jEfaXrx+YZSJ6byO6XZtqncWmkGyjkZSD09
d3w1aucNfxnVN+9lgzX3xVH9N74waufiV0f17d4e9fDoOkfZaeYzH2l6sR8l
dWIqv1PMR9IkMx9JbZmPJstAMdltmZkOjBxIk92W6WRfg3dpJ6bXuZr67w7a
Nl3OpzR9/Czd7Om7J2rnwldF9d74/Ki+uS+K6p33wqwXR+247s+iutd/IerA
BuKHxlT9uSGNFfPRZDEfjbep3wOcmsxHh2Z6naup/+4wH0njw3wk/dvMR5pe
7kt702S3RZqK9qQtabLbcnCbU30X09r+NLltk2a4gX2DlSlp160nRHXNfX5U
z6I3Dtb8lw/WglcO1pLXRvXedmbUzmVvidrTvS7q4YTlKDvNZOYjTS/mI6k9
85GklsxHUgfMRxOpjhW5Ld2Zmt+to1/ajzBp9d1Oxs8099JsA183WzKRLawj
l+ake1Jz+/XrrWlh6rwlrdZp/91OttB+nc7PZ/NV7bfWyXaqH6ST0umpvmdH
eg+M7V3U+b460f5aN89eq5az5CtpXarrjLTlnVy75jbrFvipwjul2RKW8O5Y
nVqdjfb3aqstd3IUn0ykJJbQ2lsSS76WVqZme5rHPtI21PXH9g6cyqMWNbvt
zxq0e+fKqO65fx3Vs/w9g3XXeVFdC18Z1b3w1VF9K/8pqnvd0VE7Frwkqnv9
56Ie3pr5SDOZ+Wgi1X9VzUedt9B81P78tN9aJ9upzEfmo3oeWt1drbbcyVGY
j6TJYD6SOmU+mkicMb4+J12cWNL+X+f6by5jzM5NzTXb92c62Vd7rf7177yF
nfdYmut8JrXKR/UMfzX9bdqdOt9Lc81WOjkbo99LXYd3HL3HztvT6h4AI50+
kA5L16cL0ofS9sT69Tx3svemVlvo/F49tF7og6l59tr3eGtrv5FuT3Wds9Pa
1P4YO79Gna9T90U+OjzVV9X93pCOSu1b1fxuXxrNHfipVPMRra35iPfvitQ8
xvZG8xOvueZofl6N5ietNNYG8pbsiepd/k9RPTf+fVTfyg9H9S59bVT/+mOi
elZ/Mqp71b9E9W46I6p70esHa+5LonZvuyLqQNbKecIn+7iksWc+mkjmo/Zb
MB91so75aKT7qsxHLDEfdf5a85FmCvOR1Cnz0USq/77T8/x2YklP4uuuxNgw
+qV1C/Rd6bVuTDtS3RcjZ1alVu2hN3Jz2pbuSvxbXz8rzSiXmkro2yxKXP2R
tvDWVPs/qD0KerOLE18fnepd1OyBkIaOTcekH6fmVcCmtDzVJFVxlpqjp/ia
o1uS6vWqGFG5NPGuqd/l/HM++bp5TsC1IMtwbjkzzX3dlGo7W2VJ7sbao664
E5pzYnAVOKLmJ+v3NXAd67wBnAeW70zN/fI1x8j5aR4vMxLQb28ur2eb91Sr
s8f6nLc1qR4LV/nj6YrEO6J9suAoliXeX81rUVtI8mL9VteOe4zzVt+V6CQf
zU+fS8028C7gbNfrxXb4qdL+DtyQOJPNc9IqH9Xxfq1wn9RjR7MNXMHmz0DO
A9eaJbyn6ru7ec7ZL+/x5ju0HnXzZ5o0yQ6kmMF81HfP+VFd1/9FVN+aI6P2
bZ8f1b/u6KjuFe8erNWfHizy0YYTonbNfWlU90+fH9Wz9I1RA/t2RT3kXA2a
ocxHE8l8VPduPqrfNR+Zj/jafNTqTMJ8JI2Y+UgaIfPRRKo90vMTY3VYMjd9
OB2fGP3yprQ+dSc+y/wPiR4OfVR6NYxAo7/Bmp9N7J1/8ckORyYSx4sTn8dn
O2clejIfTezlovT+dFx6c6KPQcqrLfx84rX0TMgsjOOiDZ9IHB1ng/7nOxNb
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
SWR33/1Ru5a/N6r3pvdE7Vz2lqiu1R+J6rv3gqiudcdF9d5xVlT/lkuidm/+
blTfrUdH9Sx65WAt+PvBmjdYvcveHNW37hNR3UvfGtW78FVRPYteE9W/6B+j
uhe+NOrBjedFHWjTDB9ll3eUT8WdocxHM4n5qHPmo5G2xHw0UuajsWI+0lgw
H5mPxpb5aCYzH02W+hl5lvB1s0/eanl9jmf9bnN5fU4os3mTg/hsNVeN3MTo
EV7FWJ3mv/51+3UvnbeQbdblzVEuzXVa7aX9WWq/Tt1Ls53tj7eu0zyWet6a
52GkZ6Opk3PbqrXtz0+zJa3uyX0NrdrZfG2r5XWEGPNmMFKL7TPusdURNa9U
5++dVuetfrfVWarbbL5fmmep1Xuqk+Xt29nJNltdhbH6+dPqLmq+I5pL6nbq
FvhXhrk+GFnHLByMx2POijoyuXl+mvdn+7uoubz9dTy0d7HGx8+Swv6BPVH7
Bnqi4sfK3p99b6aN/iKJDOzfE7XjljlRuxa/PKovAlHEoqVviOpe9eHBWv3x
qP71n4vas/WKqH3bl0b1rp0T1b3i3VE9S988WIteG9W79B8H6+Z3Re1c/Pqo
rgWvjuqZ+8LBmv+iwSJJzX1B1K6VH43q770zKt4A+R6YOee53jk/dw8N7Mny
2bgzh/losrTq+Yy+f9Jcbj5qtU4naaLV8dZ1OukNtjpXh9az6uTctmpt+/PT
bEmre3J4f9F8ZD4yH5mPJp/5yHw0fsxHs4X5aPao/5rzSXbmvOWT7NelyW2h
VO9SZk5m/ormdzUb1CvOnAnM1MF8JsyBUJ8WLWFg8AGp+/ft3xO1a/vlUX07
bozKsVA//zPkQJ92+o6++1n62Nd3b1T3mo8PVuag3uXviOpe/KqoXcvfEdW1
+LWDteTNUd0r3hXVe9c3o3Zv/kFU1y2HRfWuOyaq//ZTo3oXviKqZ/nbonbN
fXFU9+I3RPXNf3nUgXyU1Tv3xVHdN38oascdp0XtH9gbdZBzPm3kuR3Y97Mq
9u64Jarr7sui9u3eGfXwpeBemkmpcDYyH80e5iNNfeYjVeYjHRrzkfloLJiP
Zi/z0WxjD1PSzONPNg3s74nat3dH1M8t331XVN/tH4/qv+P4qD1bvxm1r/+B
qINtaXplJfrwgylvz9brovo2fS1qz7YfRvWu+WhUz01vjerfcFxUz9pPR3Wv
fG9U/8aTo3bffXZU/+ZvRfXe8fWo7nVHRvWu+8xgrT08ateiV0R1z31RVO+C
l0X1zHthVPe850f1zXvRYM19cVTvmo9HdS96ZdT+HTdFPdzM4fliiiIvt5h1
YU/Xxqje286J2rnwHVE9G06LOvDt/fsGi80cGITnz6Xpynw02/hulTTz+JNN
5iPz0RgwHymZj2an5ifZW30qWZosA8Vkt0WTrzk3RXOeBM1m+/f3R3Vtvjhq
394Hour80nt6VkZ1bTwsqnfTsVF7Hrw8au9950ft61oedbD5qKfyKKn92SMf
nAOhe8fiqJ6bPxDVv+ojg3XP6VG7Vn0kqnfVh6P23HNp1L77r43qveucqN3b
fjJYd54V1bvuiMHadFrUzlUfiurZ+JWovju+FtWz5HVR3QtfHtW1+FVRvas+
FtU17+8Ha+7fRPWu+Oeovo0nRvXe9M6o3ZsvixrYsyvq4cQxNc/nz+ZaqGPj
9vdtjuq98+uDddd3o3auPCJq+43/OFi3nRG1/6H+qIGH9kbx2v4Hb4rquX9Z
1MPp1TnApx/z0exkPtLUZz5SZT5Se+Yj89GhMh9pOPORJEmaxrL/SZ+2f/P5
UXsfuCzq4bmX9w5W6uu7N6p381lRu+/8ZFT/6jdH9d76gai+nT/Jujpq/77u
qJ/rzR/4kP4UmMO5ZI3+Pdujeu77aVT37V8YrBXvjOpd87GonUtfG9Ub/xu1
/B+j+lZ+IKp/zceietceFtVzywejmKuhf+Pxg7X+qKi+ey+J2rno1VG9S98c
1b3yHVG7lr8tqn/jl6J6lr0zate8F0R1LXtjVN/qj0f1rz08qmf+iwdr4zlR
B1peRqBNGs7egfF+w/Na386VUb2bvxv14NLDox644s8H68o/i+qa//qoB5d8
OGpf7z1ROW38Xsbk7d29Parr5qOi+rctj3p4q9NrxKYGmY8kSdI0Zj4yH3XO
fKQOmI8kSdI0VsYv7b3/h1F7Nh4Wtb9rRdTDKw2ORNu/vy+qb+t5Ub1rXhHV
c9PzonrXfzhq971nRfWueVdUz8bPRO1+8IaoPbu3R/38Hid1Jucy10H33d+L
2rvliqjdW74Z1bXiXVG7lr05qndwcN1Heha/Oqp78eujetYdGbVr2VsGa+UH
onpvetdgLX1DVN+aj0V135J183ujdi59e1TX4jcN1upPRfVv+mpU14JXRPWv
eF9U74r3DtbN/xzVd+tno3oXvjKq78YXRj244KVRe3atjxp6nOqEj7LLK9XI
tvv3dkft3r0jqvf+eVEP/vi5UV03fyaqd83pUTuv+4fBuvqFUQ9c/ZdRXVuv
j3r4WvQP1v6+qJ51X4jaMe/1Uft674t6eD9Tc1Sh2jEfSZKkacx8ZD76N5iP
NDLmI0mSNI2Vfm/f5ouiule9Nqrv1vdFDfRvivq51fdsieq/67jB2nh4VO/d
J0XtvfeLUX2r3xbVv+YNg3X7nKjeey6K6r/zc1F7u1dHHawRE5OVfjZSa3fP
LVEPLn5lVM8tn4rafe93B2vLpVFdaz4d1bPy3YO16MVR/euOi+pee3gUMzD0
rT8pqnvZG6N6N54Ztfueb0f13PKJqO4lr4nqWTxYXfNeENX907+K6ln0uqi+
Wz4UxezfveuOj9pz5/lR3cvfGtVzw98O1vyXRu2Y+3dRu9YfGfVwTpmQ+QoG
Bn5W9Qzu3h61d9v8qK6N50dtmf/OqJ47Lo7qXnNi1IPXvSaqd8G7ovrmvyVq
5zXPj+pae2rUwyFvz2BxLbbMjdqx5INRO289JWpP1z1RQ00xH0075iNJkjSN
mY/MR03mI42C+UiSJE1nzKI8+J993Wujem9912Dd8tao7ts+ErVv386oOlfD
3v61Ud1bvhLVf1/WbZ+I6lr+wqjeVa8arNs+FtV391eiupc+L6pnxQuj+jd+
PGrvzh9H7d/fHfXzzWEmh3FIAQc6/LujejccE9W1/C1R3av+OWr35suj+jd/
L6pr48lRfbefPlir5wwWM2+v+9RgrT82qnv9EVFdqz8WtXvbFVH9t30+qm/d
p6N6N5wa1RNhZ/lb+9Z8PKpr1WFR3YvfFNW3bk7U7tuPj+q95V8Ga3Cg3fu6
lrwpateCl0f1LP6HqO6lb47aufAlUbsfvDrq587SGJ8fBtEN3/L+ntujejec
HdW94F1RPSsPy4oI+ekHr/iLqF2L3xO1Z9OFUT1L/2Ww5r09qnvuWwbrpk9E
7R/YF/XwPPCDN1zvA/OjutZ/Mar31hMHa8MZUft3d0WN8dFpApmPJEnSdGY+
Mh+xTfORxob5SJIkTWc/G7+0f8/mqL4Nn4jqv/XDUb0bD4vavWtF1IG1s3+7
/6HB2tO7Kar77rOieta9e7CWvzCqf9X/Ye++/6Mq+reB/x3Pz8/zy/f+3kVF
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
u7h9kQzHSOwftsSQ4QhKrY/UltQ+Eks+onpe3P8BmdpnXvFYySM3trb2cWzy
yJ/HVV/D2pCv5PVSn+WW5PNl79U085Bj++R5g2yteqfVFNY4tc/647VW98b6
mmekHp0tTx6Z58mwSlXvHLUNtbeT4dVJ7j3eV/xUqq/kY34uWJ+qM0759w32
bfI+GfVzV5cW8rqrNZcaXk0+y78P8O8hbGFN93bt1zH52UoZfpPw7Gr/rshV
wrYlXyP17NRnkz9xyd9+rLzU+ojv0lWSTiJKfWTfXAHBrDbCqV6QKDpOdhdO
9XggFsoKFBfZncDI/wCqYgFIjIRZEsjEpEgsLLiLIHQpDYyTb0Jwb1sw97QT
DnaH4JEU4WgPMA53g+DBrr/DXyM1DygSW7oL+9qC79hAiIUdkOgH2TbbvAbu
I/3B3N8RuNaBcaCL1DVJl3v2S8qz5sEUCOxuK5yfCdUdHwY+Nq9vAt/etmAf
6gbmgS6m2GFnBQ/ROcm9VvFY5oEeENjaBnxrmoN3Wwcwc4aAcX0XxMxyUC5C
9e2grLMdvL4L3OuagbmtCwS3dlZ0USRvSbKtM/i3tYfA7l4Qt8rgtyMntUWn
PkXXR08/uj7S9ZGuj3R9VJcW6vpI10c6DxxdH+n6SL0ddH2k81DR9dHTjzoG
OC2TXGVwzthymTUyrE34LHt7rZLdMuoIgaOLVTI84lEZbuGIlHPwOM7ku7gf
HpFHvyjDZ9kGjmCXyqTJ8JpyhMbt6giTe2MVxrEWR0TcwlHxShm+nlsWynCG
odpjHAFul6mphzm/jvUL38t9qufFNvNZHrdKyT4ZPmaluViGdetkmWsy6jVl
z3DkzPEk509y9MiqitszZNQKbqcMryZfw/7kFWE9yLuFr2ePcT98F/uT153n
zrlh/ITyrDmrk32rHp13IPfDPV+RUe80ntcZGfWseUT2DF/Je4zzOdVrx3U8
eG/zlWwn78zxMgdlKmR4vfhKXkHe4dz/LzInZDiqVz8RPNOaKjW2RP18sbrh
s7xq3D/7UH3vVRm2lufCXlqjhH3Ia8p38RPHK8sWHpap6R7mealX5JwMn2Vv
sP28e1Nl5svwzlR7nr2qXp1NMnyWFSWPwhbyNbyfWY+MkVG/Z3hc9gDfy0qW
805nybBXeb+p3yQ8d/WzUCDDZ3lnqldnrwyf5V8/2Bv8JuGdyce1/8VD528R
+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
6Itt4LMckar7Z2s5VlfPiz3A2WLqfKegEo5yOfbjOI0jOr6S9QvbxhGmugo6
98m5Uhz9craPeiyOlpPrI45v1T5hOB9JPTt+drhn9i33qa6uzP7hcTnqVkfI
7G11LWuOKnks/ut1VmSsj9Qry9UPOCbnJ1edu6VGPWu2jfPc1HllPKLaNvaA
Oj9NnQOptoFjbP4eq1qz8LH6+7ZqLcmqR51fx9lfau2mRq3j2PM8rtrbvDPZ
Y7wbWVmr10v9ZKmzy9Trpa7dzTazh1lf1LSytzrnlp8O1lN8Vl33g1s430yd
g8d7T/1FabVCZ3+yn7lF/fsAn1W/Hzh7jZ8+3p/qzFv+jSJ57ivDtT64igK3
8Ljq33DUTxzDTxxfyauj3i3sSX6H8K5gTcc2q3P51G9Xnb9nEp90rrAdvAOu
lZ3Av6wVBJcLgeUthQeuj9pIokryZLSBqKcEEseVzH1Dwf1rE3DOaAjuKf8G
1gWOTV9BoHAzhIPlEJE/K1tT4rij78bt8gLwH08F57L+gqwpXFNeAM/MRuBL
bwne9FbgSxPcsxrDnV/bQ8h3FdSZaBHjFrgXpIB32kvgTm0Kvo3vgmfrp+Bd
3FOY1wFcU/4D/qxZwL6NRSLA3XlOzAbXtBfAM7cNuNJbuUTtJs1qBqzFnFP+
JcxpBa5tX4NRugVithtqv7JR/D8kHg1eywH33ilQntYTHKNeEH74J7jHNALv
yBcgXHoA1D24tvwIZSP+Fzi/7lHqI+fEplD54z/Au2kkVF+2eyuE6NTf6Pro
6UfXR7o+0vWRro/U6PpI10c6jyu6PtL1ka6PdB49uj56+lH/D87Re/L63hzN
quMZjkZYHbAPOaeIo0TOTEv+HUZumSqjjqU5d0gd83AkrK6NzH9drs794xiP
11r9V9J8Vp1fx39Hz3EO1+bleI93CMd16oidZ6TOpuP8OnVWmDre4wiN9QVb
y8ccdfNZHosjeY6+uH8+5kxC7o1jS45vOdbi3vgs5yXyXext9ifn7/E1/D8y
KxG+l1eEo1D2POsjtjZ5Bhp7Q/0dWHXWH0fIagWhriPNY/F68fXq1eE9o85Z
YjvV2YzqnDReL76XvcTaR519p9YLrMHZP9wPV95IrvpZU7MfMpXw7NhvvDM5
25OjaLXPeS68A1mp8f7kugTcA+fd8Vrz20m9RnzMs2ONzFeyQuSngP/eX11f
Qq1f1M8je4b9yS3q75nyCvKaciTPvzbsU6Le1eonkdeX14hXWV0hgcdVf0uX
vc39q7Ps+Cz3w+qSW3gd2XJu5/cJe4OP2dvcD/uK14u9ynqHe1arM84M5Mw3
niP3pq6UznuA9zy/c9RVTXif8KzZTrWe4pmqf53gHtS1KfRcu79zfpveBGHL
A45d74N3TXdwbuoFvg19wL+sLQQy2ggsgla2E/6kUBJz8/zLm0PMmQfVxxWC
B74F76+NgDWCR3KlNofKaS+Da+qLwvwu4Nk1GoyL+yFqOeG+f9Wv/EdiRlnU
hMjNY+A7MAEqFveGyhkNwD31BfDOaizMaQOuGa+AZ80giEctUNcrCF0/DpUZ
b0Dw8Hjw5qSCb89IYU574Prevt3fQ1U8IsWqqsf/5qU94EL5M6tZYG5b8M1p
CYkVHqa+IMxuBe6Nn4GVuxRivotwb2bhH19HsT552Hke3CcWwe0l78KdUS9B
xQ//EMY0APf4JsKEpuCa0ASco16E8MVjoO7Ts/47cIz4Jzx6fcQjOkf8Ayp2
TIXE5dL10XMRXR89/ej6SNdHuj7S9ZGuj3R9pPMkousjXR/p+kjn0aPro782
HM0mj5E4qlcrKY6a1Fey5znnRJ0pVNNR1C3J853UcA4MR0fqds4O4ngveQ/q
vxbnFraKe1Pbz9eoc7S4N3U2V/IWRt0/28NZVepYkXtW28938ZU19RWf5fhW
nZHFZzmG5AiQZ13TTB4+yzFq8nwqzt3iuFRtG89UPaJ67sk9xqNwrqC6arT6
rNrbyXtLPiKrS7ZQPRbPPXn2mvpeVsSsGWu6qxlW/cltZs+r62Oz8mKr2Nvq
PtmH6hxU/jWAnwh1deiawro1+bx4lJo+HQzbw6vMT6K6vgdfwx5W7xPeD3yX
Wgsnh/3Pc+H+1f2oV0cNe0/9S0hNLUn+PuEniG1L/tzxbxrJvzzLI/JzEVfC
vfEqqzWjGlY0atWm7pmfX/V+YNjP6t3LIyb/dUjn7xnWRxx7R0NBcB0dCUbB
AvAcGQ6B4nnCjnfAu7ID+Je3hsCS5kJGW6Gm+kjWUP5ljSFWngPVx5W/wXrw
O/DOaQiutJau+1e3TqxlnZh11gRcU/8DXEvBtbAz+PaPBvv6caiK+kHdf3Ki
YQOC146Ae89oqJzfA9xTXxRmNATn5H9BYPdI4IoQsVgYEqugXz0Ozv1joWzN
h+DYNQTcs5uCc2EvCFtOiFfF4lWJb4yI8zw457SEylkNwYmCaMbLFanNoXLt
B+A5vRRszwWI4Zv1bixRE7GElauC37tu+A9vKZhnM8Cz5l1wpzaByskvgGfC
S1JjSKzOjVIIBZE6521CY6gY3QBCV06C2nvelV+Cc8Q/naI+EqsrPHp95Prh
H1B5ZCno+uh5iq6P/tro+khtj66PdH2k6yNG10e6PtJ5uOj6SNdHuj7SefTo
+qg+Rh1FPE/HqntqalXdW/vXvvLhXv/k8igtefpnkXzEZ7/nn51rnZxH/zQ9
6FFqv4LPcl/pPPvhGJUrG/Be8u/7EoJbBoBvXUfwbB8Agd2DwLP3XWHbOxDc
+i74M9pDzfVRe/AvbQLRO1mgHtd/cDh457wCyfXRfbgut1yj25PeUpjVRJj2
IrinNxAy+oE/ayZYZfkQjYeh9h6IBB0QKNoKrq1DoTytNVRmvAbBG6cgscZC
NAx8lydrDjhXvg2eI+PBfzwdrLJCqO7cMERDFlRs+BCcc1qAd90g4WgqBO4U
QvRuJFq98sR9V6T6PyFklEHw/E5wbx8CrrmtwD3lBfBObSjMagbO9FbgmtxM
qL1mGd8YKkY1APvGaVDb4Mv4GCp+/BdwJt6j10fuEf8Eq2gnJHopLs9Vp55H
10f1Mbo+0vXR442uj550np1rnRxdH+k8T9H1ka6PdH2k8+jR9VF9T5WSJ73P
hxuFPrnRTu37r6n9DzcafNBzqb0PH1efPJ291eUodW9J3Y9Sl+v1KD386L33
oO990CM+6f3X/YgP19tP7lkdnT+JsgqBJ/MrcK3rAcb+oZD4jdflzcC/oRP4
tr0GwdNTwbeiNfxJfbSkMURvHwH1sP6jY8E952X4k/qohoqJ6zlwJp5rRmNB
ruNdMaMxOFcPBO+pFRBy3QC14qhxDp77Eli3TsGdvWPBf6sA+Fu6nDUXtdxQ
tn8GeI4IIc9VSOxWrswQj8fAcWoV+PPWQLgsD+7GTEHtfqUlfMzfcjWunwDn
zjFQMb8bVE5/GZzTpFnNofp3b8XvyfK3bp1pLYRJTcEtiqAaaxaPdGfMK2De
KgC1Db5lH4Hrx38LNdVHExrfU3uJJJaDaOoc+QLYl45D4oR1ffRcRNdH9T1P
YhRR+1jor21b3ff/cGO5hztW3V//ePvk6eytLkepe0vqfpS6XK9H6eFH770H
fe+DHvFJ77/uR3y43n5yz+ro/El0faRE10e6PtJ50Oj6SEdHR0dHR+e5ilof
FWSA9/g4MHImgXddCng29IfA2h5g5aVD4PDX4M1oAfwd2Jrn1zWEyM2DoB7W
c/wXcM1pAM7UFvAA9VHtc/BSW4BzRgNhygvgSmsDvg2DwcpfBpHAdai9YorH
TLCDFRCTiyaw6uGMO8N9A7xn10Pi3coqCtFYCCK2B+6vgKJwX/ffDUOoshB8
eSugfMN7cGf6K1A5+SXwzGoqzG4lyKowuQc8aYJDck5qAnWpj26ObghGWTFU
t4f10Qfg/vHf7j+qj9wTGoNz9EvCmJeheg1wFEqN3eMa/cY1riE4xjaCilEv
gVlWAtVdrOuj5yG6PtLR0dHR0dF5rqLrI10f6fpI5xGi6yMdHR0dHR2d+hmO
4WU1xJF84vG9+ihiVYI/+zvwbB4gZI0Gq3g5mAXzwDgzB9xbB4BnXRfwrmjt
/cNZdon5dQ0hfHM/qK3xHJ8ipL8Ej6E++oOKScw6S8xAk1tcU/4Dzl/+Fzxz
W4N/+5dgnN8GUcsFao2j1jXxaBwS01jFVLvqddHv3v3dbxtUT3UVv9mafA34
LttRCv7TC8C7cwi4FnQBx7q3wZ05DJypjcE1uzUkqr86nHVlmuCc1Bhqr4/4
bNnYxmBWnge1nd6lg+G++mhsQ3BKjtEvQuXsPuCY3hmcP/wDXONeAc/YhuAd
3xhck5tD+U9NwJ05GariIQk9GE/UR7wD1cc1zn/UeRaj6yMdHR0dHR2d+hld
H+n6SNdHOo8/uj76+6Q+/nvn+tVaHR0dHZ0nkqrq330V5OPklyTPKFNeGb62
Grzbe0Nw7wfg2fkOuDf3FtangG/nG+BZlwL+jNZQc33UCEI3doB6XG9OOrjT
Gkh1Hf8/OOy2hWtWY3As6wPulf3BMfNlqJjWACon/RscC3qCcW4T2OUlwN+T
5Wy6RF/J8qYqFhPiwt2qqMDnlV87ra6exNO2+zr4zq6Gis1DhQWdoGxeO3CK
RRWau5Z2A8eS7uDL/BECR6eCd/0gcE9/WahDL903v44z3P6gOBKz4DzjGkL5
hOZgOK9Cdctj4F70FjhG/htc4xpD+c+themdwTGrE7i2jgLv8XkQ3D0enLO6
gHduN3CldoGKqW3ANb8PxKNOqP7B2wiod+Mf3J8sleJVv6fzjEXXR3+f6PpI
R0dHR6deRtdHuj7S9ZHOU4yuj/6qPM2R/7NZZSTXa89mO3X+Pqlp/eq/qj3P
X3R/6vxJqgeav80Hq/GFrJeMMghX5IB9bTd4zs4C//XdkBjnxyU5OPWfmgKe
xY3Btbg5eFd3FDb1Ad/2N4RNAyCwvLWwop30+/rIt6QRhK5tBbaHFYfvzHzw
pL0ktfA87vrIk9YKXGktoHxmQ/Bt+AD82bPBsbATuJZ0EVa8Ct7Nn0HgyEi4
s7QfVKx+B/xHZ4B96wTEI0Go7v5olaiM4nKVgXtz6aKBWxD2XQH33rHgSG0G
rhmvgDu1CXhWvwbu3V8Lmz8A/9mFEDw8Hnz7xoJn7fvgndMO3KnNpD8/60R9
NLkJuMTyCH+42rZYkdsz9hWo/LkVmN5bkFhd/G4YHPP6QcW0duA/MAPcqd3B
MauLsHAAVMzuAY6MweBd/w045/WGyrRuUDatEzgPpELw1lmoqooIkTAk7rFL
h8GTvRiMc7sgdKcIYrYfqu/eP66equ//JDpPPbo++qui6yNdH+k8a9H10ZOO
7k+dP4muj3R9pOsjXR89A9H10d8nZUr+6rb8eTiO4t31cHvge+Myj7dtjyu2
DD9Hyc9yO1/z9NtWv/LsX2sdHZ3qtRQebOwXi4Uh5CkF8+YBsG7sgVD5SfCf
ToXg2VngXt0W/IdGgy9vLvA3T6sPLo4VNSrAuf0tYU0X8K7uDJ413cC/cyAE
dwn+ZS2gxvpocSOwr2wG7p7VhDd3CXjSXoTEWgqPqzia1Qy4GoNj+itQuaQP
eJcKvhPThfy1YJycDYGzK8F/fgeY57eD/9QSCOwbBc6tn8Cdta+DL28RWFf2
Q2KlbnmhorYPrNyVUL5uIDh3fA1Gznxwrx8srH5dWDkA/HuHQyB7EgSzZ4H7
0BjwrOonrHwNfPM7g2dWM+AswcdbH7nHvgzOSW3B9lcAr0vsbgQcc/tC2cwu
4Fn6DjimdgT/8nfAsWAAVM7rCWWTW4P7F6FiTi9hbl/wZE4Hf8luSNxWsRCw
ojcrSqFswZtwZ/zLULl3MjhndofK+a9BxfbhYF/YCZFgBZjuGxCtikVr/psA
PyqJ1R4441Gv+fCEo+ujv090ffSsRddHjyvP/rXW0dHR9ZGuj3R9pOuj+hJd
Hz39sN/2yHD0m1hcUxndqbNQojIhGfXZmmamJe+NfT5P5pxM8rHUPdQ0zqzL
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
//I24Fkp+Le8CYHlHYSMNkJifYYOgd/qo9IloPZAqHQjuNJfBEdqS6iuj2Rl
JOfLuaa9LMxsDM7ZbaBiTltwL+wKvsWCe0Fn8MxuI8j5dZ70xuD6tQk4F/cA
78GJ4Fn/NvhzUsGx/SOwzm0Gb9Yc8B35BfxF66Fi9Wvg3/AW+Na+A86M/uDf
/x1YOTNAPZeIoxAc278E/8HRUL6yF1Qu6QauzYPBs+Vd8B36EcySDeBcMxA8
C3uBY1YrqJgjONJbAGtDb7rwROqj0S+CP60X3I1YkKiPTAdUrnwfPJcOgnvD
UHDMaA+V4xuBa9QL4B79Ejh/aipM7wDlk9uA/+xqqL594hCNhqDiQDq4No0A
+/oJKF/zJZSNfRlc4xsK4wTHz62gcsEAcKf1AMek1uAc1xA84xtBxfjGUL74
bWFuX6iY3FLY+gO4lr8Dld/+P/BMbAzOOX2Fdd9A4ORyMK6dBCvogj+pgtRZ
eYm5eXpW3r3o+ujpR9dHuj7S9ZGuj3R9pOujZzu6PtL1ka6PdH30942uj55+
2G/8Pz63cHzIsTHHeByHcHTEkRtHdBxxcSTP8RhHCBwDc3TK7Rzb8FgcX3Hs
wS0cY6ijaI5IOe7iyFwdNXHUyjYHlLB+YZt5LhztcCTG8fMPMnzMkS3vk1IZ
zs7iHjjG42MefY4MW8vxFUf16lwshufLNQ24hW3Lk+E+1fNiOzmW497Y5+o8
sUsy3DNfM0WGc/m4T45FOXpfIMNPBLfMl+FV4+iOV4Et5FVjD6ujSr6eo3qO
P9X7h+Nhju25RV3XgmHbWLmw5/m5YxXJ2pBjdd51rI65ggdHs6wveEZ8ljUI
j8X9s528M3k1eV7q3C1eU95dfD17nrM9eWVZ+3PUzbPjeJ6v5z3DLTw6azHe
D+xt9i2PyxE+7wS2gVt4LNaAaj9zO4/O8Tz3rN4V7A3eUdwnR+/sPe6T58V3
sU+S61bOqOT9o36W+RlkGybK8Brxs89rzdfznmRLeCer585nec/wWrBv+f3M
PfB+4GPe26zrecemybBX+TmdK6POgOX58lpMleE9w0qKdx1X7WAFxLqS++d3
HXsjVYbzh9Vz4WN+srxK2A9VSh7H97GOzH0z5WobI3HEFTY9YFYUgKdoJbiP
jgbWFL4VHYVt/wX/jjeENV2Eza8Jcg3t8PkMCJwYB75N/cA6Mwf82ePBueV1
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
wcr7COyMN8DZOg0K57UH/+TGYMxtKyzuA866T8BY+yH4koaCkTgEis/mgZ3Y
D7hKQ+GEp6Ao7VWoqiiB21f6c/2u415C10e/VdQnn6ltTzVn0PVRZAYVueVu
eyDy1fq3Vm1D5Jba3lXbcXR9VJ/+rE+f1L/P73Z0qT/r+iiyDfXZp7az1P/s
Oh660PVRbR2j6yNdH+n66KEPXR/p0KFDx/2Ixy+rf/yuSMf9DllG1OSioW/W
QyC5MVgZXcA5MhXc7e+Cs24IBLeOAmfjS2BldQQ7LUpY1caWSzGAu7IV2CsE
Z9MYCJ5aJHw5CZzt48Db9joE90wAb0UrCGZ0FNKjwE5vCc6xGCg+vRRuXtkN
lcXX4Y72K5hFcwUGzqAT6zH842//L2SBldoG7PVjheO5UG5dgdoyeTXKS0wo
+W4TOAUTgLPmrOgG/8BvVr29erasmGrm4Ck1y8LmwDl4RkoXcAo+AmPlQLCW
tgdzibS8C/gT2oO57n1Q21nqOwXusUSwVo8Ce0EToWY1iV9SDdWsbc7ZdDGN
wJrzDLixzcFMfxmCh+OgzDwD5bcqy2/PWvwno4tzF2+GwPvpFBStnws3UkZC
Uc4HUFHsVtyukmruV/XtGXl1TMqT3ypbUngOQt9vBX/+B1AY0xWMmPbgn98J
OL/OTBkB1tEMKFw+FAI574F1YBlcn9kcrGX9wZ8yGIrmtAFzSlOpCVjTWgg5
74OZ8RrYK0cK+CHjNf+6T6EopiNYse2gaNUrUB6+CjWXoiujXzV0faRDhw4d
9yMev2ri8bsiHfc7dH2k6yNdH+n66FEMXR896hE5y6jumTkPw5F13G38unmp
vrP3L+qeN/jwhL77Oh5oKDOaSs6vAmd5IyG1DXD+m1cwHEKHp4GV3w+cnG5C
fn8hpwd4GZ0guCoK3LR2QmJTcPJfhODBz8HbOhrCp5ZD8GgMWCtbgZvXA5xt
r0Lo/AqouOnAnWlytcwyf97CTLrUfwK8S1ugqrIcmD9zn5s3ToK1Mgq40ri5
pDkY0Y3AXNwOrPw3IPRVFpSbP4K6qkCt88SKLbj57RawCz4Bf2J3CMQ0AjP6
WbBjmwp3fB+rmIPHVRT8CxqDsfol8A7HAr8f1khoCXZSD7AWdwB34wegtqTc
+g7sfTPBTOkP7qLmUHOuf1ENyXmASjVkzW8M5rwGYMS1EjKHQfjLeCgPnIXq
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
zHp4f55539D4b5u1DfW4VHwe1qO7oNsyDzkzwhTjesB+fAeMhxYiL6wdCqeN
RWZoILKHtYLoR57joLaki/3+jszU0ai+fgOePWm4e7dBnkX8RGQ/erQi+9Gf
NrIfycjI/IEj+5HsR7IfyX7014nsR79XGjedu43S+PbGt4gVbo23Jm5/8C2N
t+m9Ne/HN9438e6Le3VqXlEjZpWLVXNizV7jLXs/b+O98jyjOjFbXNFMfO39
/1Z7blH/83DPRGvxGHU9hWcLje+996Cot3j9jvJsoVHvaNxHGj+y0S0/7ue/
9ueerd1vf8R6kPvtiYyMjMxDjPdv0Yrcb6CbMRile6fh0ufHUfnpITi3xqFi
yzhcfW8fLp1cg5LtSbCNa6VYFKQ4sgi3nMWovVmGB68TrlPVXr+MiovvwfXe
EVz+9jUYZw+Be9dUVH3zJq6bC3D7WiXu+7pUnmuqqu5UmHDl/NsoObUNlW9s
gm1yJ9hjnoIj0UehznDwNKa0TgoxIfzf9CP+p1/h2BawpPeHeXksrGvGQT9l
AAqSukMf3wnF4b7Qx3VAUXBzVL1zGGL/G2prUVtXB/PuFTAuiYRlSQgMm9Kh
mT0K+sVjoEntg6LJQ2FfNR7u1/dBP2skdAtCYZg3BtqwNiga2wq6pF6wzhmF
otBWKI6irLUzxrSHLrEr9NMGwjB9MNwLQuFcPBZZsQEoz/0CnmOu/je97lIJ
LKsmwLBoOIriA6GN8MOv1Y8EMeM6N7wTskP8URzXAxdGt4ZuZbxi/VRot89D
5cfHcS3/O9TdvISmrGBX/3jQcLkwD87P3oLtjRdxdnQH5KYFwbJ/BSq+fhe1
t66j5uZNeLaujNm423jVaN3Na6g2aGB+di0KZ4QjN7o3skb5IH/CQOQNaYn8
IB/kDlfccyiCfXG+9z9wcV4qxN8TPOdj8kyjUWQ/+r0i+9H99srzjLIfyX4k
IyPzB4jsR7IfyX704J8R2Y/+fJH9SObXjZjg/XvvhYyMjIzML433X3Vu6y/A
kdYJlgltYUjyh21qZ5QdnAb7ijA4p3RF2ZmdcJ/Zi6oPD+HS5y/jVrkVTZkp
U3f9Em47tai6+BY0M/rCmNYR1vWxqDq9Hc4NCdAn+6PsmQw4dkyBZUZflB5a
gMsfH8cdWwHu3uW08J6VeI33p/6uquYWrhadQ8mx1bCtCIE5qT2s41rCNqEN
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
spt3FfrrOj5gX/mC4MSY/sDUf/FHL4XEH+WsxB/lrHJLP3OLxB+JRKIclvgj
8Ufij0QZlvijl0+cl8dKWdeK5I2irJa+xriek5Qyt5VEJdZsaVXLaheJco00
f5R0/SK49GEpcLFrALjUrbiiWBZxuatBwvv+IKaFL4hvaQWt/EDse+7gxqEd
wDQUOoVJvUFsfRcQ1zrAoKUviG/hb9C6GDhd3xVcmzse8FPJSYnA5LBG9QJR
9QuB+NYBgCdsx7XyBzwngZhqbukHYlv4gDPNvMDZlj4goYU/ONvKIKGVH4hq
7AHundh774/TFbi779ZFEN2pAjjbwhcktAoApvrVeE09ae0P7p05AVhBsiJu
YGcQ854bONM6AJyq7wXoko6/AJyo6wtOVXAAZ0Z/DUwRgDkSf5T7Jf7o5ZP4
I9HLIfFHIpHomSX+SPyR+CNRhiX+KKfEfO+mEq/cU7qhxCuM6u9K+mcZeb6O
UYpXYskFSqeVLO1TSn//EncWWXpX1xklzvs5JV7fpcTM0/p2denvPlD6Rcm8
pKXeWvN6p9IjJUutW1/br0r7lFI1WT/29Ms8a53W12B9zem3wghwJfPKNSV+
S/DKVSV9DVP6PO5R4rwkKC1W0u8O66NnPjq9La5V3mu8EqfEVX1FyfxTzxol
kUiUPUpNSUlNu09vHt4PfnmnMNhbyxPsqemRpfxS0xNsfdsdrK3gBtZXKGRQ
MV0quYO1xe3Ama2rgT6iA8N6g8jAfGBD5SLA9CnWXKEw2FjJYHlpB3Bx70/A
FI2kFHD/1mWwpl4gWFvOBayvXBisq+gK1v4Nbn+wTrGeqBY3VikCVgbkB9Eh
wwHbSnnyxECdKbGxV1uwonh+sKmKJ9iIThpdNWrYULEwWG8Ex21DlSLg7plo
wHqSUw1+7t4crC1pCzZUcgdLSzqBeYGOBsWccpz5JVzBvCJvgvXd2gLT+Rip
6lwKUS6X+KOckvij9GvW3xV/pF+xvk7ra7C+5vRbEX9kKUoikSh7JP5I/JH4
I1HGJf4oO6VnTReVNirxykylTUq8skRJ90d0HHqdrIF5I7P9U0p6GX1XUvr7
7vQemrelv7tZaasSW6R/4UqIVNI/+0TJ2kiliX04q8S29J6cUIpWsqYt/To9
11ol85HqsrSny/xTJ5WYb+v9tFTD88XEUuuUue+wJEs5vKVe6TXrZXTXwBUY
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
ln3YBUwq5gemVywJvrXJA4a72IKBBV4BofUbAsZNlNsl/kgkyk6JP3oRJPEU
iV4+iT8SfyT+SJRZEn+UU9Kjxyv863s+65P522NNlv4anU/e5N/48wQAPnWU
J0Vbk41bejf9vJ1/287nh/L5p/q71tepX9HHZX0NeklLr60pqZdhPDlH5j2x
1HPzWHFG9Cexpj9qPkv0pJL5u+bi+klU4hWuH/1scD75NP3e8pm8vM6nBnMV
8Vm6mTsLegT0Z6fq5XndvAZL9fDJrZbiZk2f0x+dpevmPeH9yHmxFAFrahOJ
RM8sbX/dr+fOgJjxA8DGum+ByOKuYFmgC9jRqg448N0nYGkpN7A80BFk8v46
L3sQ4l4ALKgUCHb16wXCC+cDM7wLggjjcbEFZ/g4gam2/wf2jx0B9GFd2LAc
TMn3P2Bz1zZg04cdwPoP24O4edPBwaDRILy4B5juaQdCC+UHS1rUBju//xSE
BbiByMb1wKxAD7C8XTOQ8uQxSH2SaJCaYkCzlHQPsA/ntm0BQS5vgmneBQGd
EU9meFaXZPJHLq+DFY2rAd3b8myNOSU9QFgRG5A9/ohnLwx1zg9+9HAG+yeM
BLvGjQah1aqBqSUCwHAPRzDQ6U3Ac78HvPlPsLBtO5CiDKd8t+d2iT/KKYk/
Ykn9ivgj8Ufij0Qi0XNK/JH4I/FHokyS+KPslH6/XFbaqsQry5W2KPHKaqU7
SpbqZHme/8ynXh5Syrr+U4uVdittVlqjlBXtZqeYzWYkhnpmvlMp/bO7dTHD
5xng1tS/Q4mzTy82QYlem+eH88mzlmqjn1qmxCtch78qPevY05c+9qtKY5T0
Ea1QojtLv7aDSnzNXwP2KllqMSvEUfBXAl6h06SvzLp2RSKRuVKTk1PTfhe6
sH4l2NSsBois5AvW1ygJtjeoANbVM9jaoi5YGeAAMu6MzP1RWFEHMM0xL9jV
9xOw8P1GYKpzXsB9d3QWfL4q/dGeUYOBPq4LW9eAYKfXwPQAV7C6cXWDtg1B
RHF3sH/MEHBo/HAwxTEvmB3oDpZUKQWW16pqUK0cmFXOB0zzsgch3g7gxJxZ
gG0lJj4GySTF4O6dKyCiSkkQ5Po64BkRz7qn7m/8kXNesLxFbZD09OkfZ2H/
euUiiAgoBKZ72IIs90fOqNZmqJMtGFggLxjj4wlWfNgN/DR8KAiv3wCMKewG
+jvmB4OdCxg45gPjPZ3B7Ho1QdLDh0lpv3vTs2fL8hdlssQfZafEH734En8k
/sh6iT8SiV4ciT8SfyT+SJRZEn+UndKzNe5i4nNCuf8qSOm40i0lZrbcPbVN
iXljghLroSth+fFKzO1Z/3ol+qbDSvRcR5VYw34l1r9B6ZTSKiX2Rx8F53qT
Eq8wv2WOzbya9exRYpbO8mxdzx5ZhteZG99Qokeg82L2+7MSS7IV5vbs+Tql
X5QYAdbGnVrcY0Y3wZiwXebYkUqPlG4qsQ/sJz/F+vUMnK6HtS1RYqz0WWYM
9V1kjNUJpbVKHBff5YzToXCkMUr6+tHdBN0xo8FRhymxDKN3TYnrgauFrdBD
8Ump+5RilX5Q4qc4XrZCF8DeMmJcCVy9epQ4C1x1HAs9vh4ZvjtJiddZZrgS
e8VZYOvsOffRMc5DlU4rbVfijDNu+j3CaPM62+V1jpr1M1Zc+ayHq45946fY
B8aEEY5QmqdEr3RWifWzn1wDbIu7UumaGUO9n7IfQyTKiHR/dHTEILCmVjmw
qU4ZsLtbY7CvXzewsnQRsL9dE7A6wNGghCswnc8Q4Gig/E5kSTfwnPvrvAsC
PsV1S9d2YG7tyiCkiA0I87Y3UH4h1McRBNn/C2wf8A3Qx3Vh10YQ4pwXhPk4
gRVt64Ftn7YDIX7OYFHbemDbsG/Aisa1wJzSvmCCqw1Y3vhdsPWzjiCoiC2g
P5rmnh9M9S8MEo7sAyqbT01MfAT4jbS0d3cwtsA/QZiPAzB5Ou+CIIx42v1B
qKctoAOyxh+taFkbJD1NTUo71eDm+bNguq+LQbb4o6GO+cFoDzcQXLEUGO/j
BRZ36AjW9ukNNg3+Dnxv+yb4zjEfGFDwdTAp0AOM83YBP/oVAU/u3AJpi1L8
UW6V+KPslPgj8Ufij9hz8Ufij0SizJX4I/FH4o9EmSXxR9kpPf/R81JmtvRK
3GHFSDJHZVbG3JVXliox16IToVNYpMQ8f44SfRBnipFnlst8np8KVaKLof9i
rsg51XdeUewhc0LmjdxrxwycuR/7zIx3vhJzXe4+4q5CZq28wnc5Ln4qWImv
6S/Yf/osforZLHvIaDDf5n4z9oRZbpQSS9L1TFZiSWbXLElfRu/DTJgOiJ9i
fNhb5rd0rwuU6K0YJfaZubH57DOX5ikQjA/ngpFkzsy5XqiUaibWQ7fCtcE1
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
iV5MiT8SfyT+SJS5En+U22WeH6afxWV16y+CMqs/L864rMnJ0y+ZFa2/mDVn
/x1hTc3/4X9/C94qd8k88i/aWMz79uLs4xVlRLo/uv7LTrDmLW+wr3d3sLlx
dbC9fUNwclEIOLXA4MTYYWB/v15ge6emYEvNUmBj1QCwOtAFrAl0BquLuYBI
WCFQ3AWsLukGIovjn87LPPOBxZ4FwPb6b4OT04PAw+vXwF/6qdxQajJS/T/c
UIoFtE8pElOSQfKjB2DPxElgRpW3wMGpY8DW/r3BZIe8YKqXPQh2LwCmFHwN
zK1YHOzo2gbMrl4ezHnbYM+AXiCycXWw45vPge7OLu8/BDZ1aw/Wt20MIkr7
gx2DeoFp7gVBUFEXsLh8AJhdzB1MdnoDTLB/BYT5O4JVHVuBHSP6gfHuBUH0
6mUgLSZ6NKyYa965FvatxW3dDLb9OAJsGtgPfPqPf4BBNq+AUYXtwUhXWwM3
GzDawwGMKmwwvWk9sPmLz8Cab3uDpR93AqPLlgAren8Mtg7/Dixu0RBM9CkC
xvgaTPBRlCgB1vYfCPTePsNSFr0wEn+U2yX+yFzij7Kn9RezZvFHOSXxR6Kc
kvgj8UeU+CNRZkn8kSg7lZqucrp36Skr8u3nq+HFj5VIJBJlp/SdV5eWzgFr
fOzAhioBBqWLgJ8/7gBuHN0PYpfMA6fCJ4P1jd8Bx/p1Afu6NQHLvOzAqhKu
gDvrVhZ3AWtKFgJ8SuyqIvnAcl8nsLlzCxCzcSV48uQR0PvGTP4v5wxYawX+
OkbNA54/sB8sbFwTHJoRBE7OmApCPQuCaY6vgVAfF7D2sy5gXbd2YEnNKmBx
szrg2OzJYFGremBFO4OruzeAlKQngK3cjDoJQgMKg42tG4K5VcqC8NJ+YH75
ABBS2A6EeTqCOSW9QWT7BmBZvYpgUYUAsKxRHXB81kzw07gfwKPER8AUk7/f
VGhlUIzda6YIm21kuxZ/BqweNRKMCvQC39m8Doa7O4OxxX3AxFIBgB5nuLcr
mFa+OBjmVABMKhkA5rVpBI7OmALmtmgCZr5dBYRXLg8GudqBKcV8wPDCTiCk
9rvgSXIKeL5hiV4EiT8SZafEH1mqM6s/JRKJRC+rxB+JPxJ/JMpciT/KKVna
3WGe/TLOKWbiu4w8nz7J63yiJc8N1svrLVraZ5J+SV18+iefKss+8Jmt5rWZ
j8vca5iXND+7wLyH5jUwVnzSa/o9SX90rIfjuqekv6t/lqd8s4z5GM37n767
Sb+kfoX3nf5cVPaEz9g1XzmW4q/30DyePH2dzxo2L2/NWrI0Oj7rlk9WNX/X
0qj1cVlqi33Wv2f4xFg+9dV8FaW/QtIvyafE8qm4luaU4rxw1ClmYhme1XBW
Kf3Ypr+K0i9vPi5L0TaPifnsm0eez/blSPXVaP3KMe+VNb1Nf1VQjC1fc1Xz
6cN8anD6c20pepbWrSg7pfuj6LkRYF0VX4O3S4DdHZqBmAXBIH5BGDg6egj4
6dP2YHP98gYNK4AN75YEK30dQWTJQgo3sNK3IFhWKC9YXdoDHOr7EbixdxfQ
k3tm6SlJyeAv+X8mKSklJck41+UJ2NG/D1hcqxJY3a4R2PV5Z7C6TX1weOpw
cGb9ErCwbnWwsWsrsLp5TbC+Rzuw+bNOYHoFf3B8xhTwNDnRQOni4f1gjMsb
INy/ENjWsTmICHQH00t5gnAfZxDq4wpmFfMEK9o3Aus6NAdb+vUFR8KmgYvb
NoCHd64B1s+DGdKmMHOiRBdpvvvu3s0b4OCCeWBy7RpgUIH/A0PeMBhk/waY
4OMGxno6gvCKpcHWQd+C7QO/AVMrlAXfvJ4HjPYpAiaXCgCLWjYEIz1cwChP
ZzCmtD948NuvIK1bckpD7pP4o5zSs2aDlnIq8Uf6dfFH4o/EH6Vf3nxclqJt
HhPz2TePvPgjUfZL/JH4I1M14o9EmSTxR9kp/X/za0q7lXiF/1Pz7Ghe2a50
U8lSnXRDzEP4xFVeYbacdf1frcQnvfKkaz7JNP0a9PwkK8RR71Iyfzf9rFJ/
l+Nar8SRci7MP8Wzyp/v+a03lH5VSr+kXudhJfZqlRIzf3oNnppuTevWKEpJ
j+fz5YHmMWEWzQjzCjNqriVe4XpersQrR5TS9yOMD0vSKTNK5j4344pWov/i
FT7jeJ6SPq5lSvzOtFQbvxt54n3m9jN7tF/ppBLjoH+bPevK0cvzf5ZbSozh
TCX9Vxp+f1qqjf9P6WtphRLv3+cdseiFEZaKWi7g7I5NYOs7JcGuDo1AXNAo
ED0/Avz01ScG3VqDBf7OYKVHfrAq0NGgvBeIDHQDy7xswZIi+cDmGmVA9PhR
4MH5s0BvPDE50SDpCcgKT2Q+Ur68enAX2PN1T3Bk8Ldgc7+eYMPHncEvw/qD
FV3agXnVy4Pw0t4gLLAQmFXCG4SWKgrmVS0BtvT5BKSo4xJY/+XDe8Akd1sQ
5PImWFA+EES2rgdmVAoAq9rWBcvqVgaLK5UEGzu3BBveN9jUvjmIbPEeiNsY
CVISH4PUlCSDNNuQRaEy/XbB3XdaKykP7oOYyKVgYatmYIiDDRhTxBEMtMsL
5rxXG2wdNhDEbloJ5rVpDoY72IKp77wFFnVuCcYGeIKQquXAxDJ+YKi3K7h2
5jTQe5I1oxRllcQfZafEH4k/0iX+SPyRLvFHusQfiZ5B4o/EH5lJ/JEoIxJ/
lJ3S75FzSvQyjOREJT5v9L7SSiWWZ9bH3InR5nVm8rwyTYm5OjPDfUrMJ7nj
brNSghJroGdhuyxP78a29B0yFPcUrVMyH+NFJWanzFi4QjjeMUp0UsxtmFNx
5fAK62d/Tigx86cLYJ26p2BtLM9WHmhieX6W5bknjdeZ3+r956foPvTr85XY
7hFNNzQxbpxlxp/R0CPPK/RxwUqcQX7qjBJL6rva9JEy29ezR9ZGr828lO8y
thwp9z7pa4+v2U/2X19pPystVuK4+C7XKnuyRYkt6jWzBq5trmS+y2hzrpmp
MjL6KJi18soSJZbkiJYqcR+apfVMh8VcmjWsUaI/opc5rsS1zfjwCmvgePU4
cM38oqR7Yeb/+u5W+iC2yzL8xqO/ZvTYFudL91Z8zbXHKHENcG3wLmbM9d8Z
zHepMT68d/RVxzKsh9f1mWV8dL/A+WJtXD8cKeeU88u7gOXpdlmScdPbZXzi
lPjdot99vMfZK94F+rgilbhWOa5xSnyXseXa072SftczYnuV6OCmKHHUXMN8
l6uCrzkKRoB78Ng6x84WGU+W5DfYU1G2Sz+74Oy8GeCnri3AwU/bg1Pjvwc/
fd4NHB0xGERNGw92D/gSRE2eCH7p+xFY6mEDFnvZgvWt6oKYlQvA/d9uA/MW
09rN7r/C18cbtW4l2D34W7B90FcG3/UGW7q3B0HuNmCi65tgelFHMKe8H4go
6QkWlvAGi6qWBNu/7An0Vm6ePAxC/AuB8AA3sLlPd3Dr5EFwbvMqcHDsYLCl
ZycQ2aQW2NXzA7ChbUMws4QXWFS9Erh3+RxgzQxctkZM80rm78YdOQRWfdcX
DHJxAWP8fcDq91uBrYO/AvO6fQDGlC4NlndqBxY0bwBGFXICE0v5gUU9OoKp
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
q2R2Krgo90r8kUiU1Xq5HcTLPTpziT8SiV58iT8Sf5SdEn/08kn8Ue5VxvPS
jOzw0a9Y/7fMz9fDjJfJurayf7yi3CiZWZEoy6X2zqX97bwiNe1U5v+Sm8+0
k1DFIDEJrP6gLVjwdlmw/L1aYG2z+iB28VwQFTIRTLZ/Fazv1Abold08vA9M
LVwA0BOFetqBEA9bwHO/Q7wdwRT718DpuWHA1BF1AsbT/6LQ/7tyy/NwRZYk
/ij3SvxR5rYo/kiUdZKZFYmyXOKPxB+9MBJ/lNsl/ihnxRimWpBekh4kfUfD
6+Z/D6hfz1w3kf7fHlpThjIfnaXPWjOK7IyDef16zXzNv8pPv930r6c/ImvW
jKWazctY06J+kjafuWmpP9bXZqkP+vWsmzuRSCR6OaRn5lcP7wazS/mAPd9+
CmZVLAU29/kUrOzaFswu4Q42dH8fmHyl0o0j+8BEt/wg2NsBhPk4gYjAwmB+
BX8QEeAKNnRuA1KTH4O07/n/Xmckejkk/ihnJf6IEn+U/vX0R2TNmrFUs/gj
kUgkepkk/kgkyrjEH2W/9OyOpwTfVHrWevipjOSKfLqr/sRG84w0UumOEq/E
Ky1VWqfEZ2XyW5FPwNRzZkvSW9mndFXpWUfBvulP6nxW8Zxk8ydUnlY6q8Qr
HOl1JV7ZpWTpr/WvKG1VstS6HoctSueUnm8sWSfzlcaVwLueV6zxwpZqE4lE
IlFmSX9i7M7hQ8GcqmXBrHK+YFGzWmB65RJgVrFC4NDwfuDp02SFoV9PHgEL
yxQFC8p6gYVvFQXzSnqAxaW9Qah7fnB5/8+An0pWhxTk3LhFosyR+KPsl/gj
vS2+Fn/E1+KPRCKRSJRxiT8SiTIi8Uc5JeaHN5SYVTKGzMmZebIkI3xIidFj
Jj9NKVqJTueU0kkl1s85Yiu8zoyd765SogNiK3p+y5rHKV1W4vU1SvoVeiVm
9ayNbuW80mGlB0rWxIF+J1YTS3I31xGlM0r3lSKU9ivxuZmM4XElPQ50lIzD
RSV9RMuUWCevcz0zqr8rDVHifrkEJd378BmgMUq8wt7SVR1T4tNF+a4ebc4L
o82e8zrLM7asgWPku4wbx6vHijWzPK/rO9P4+oIS/azuDS3Fn2LcONL1SowD
32WcuZIZN46Lo2A09P4z2rzOkvqaZ81cRayZzwtmz//DDSYSiUT/xdLP1v79
+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
R+lWzOVjTMt22M9PJ4yoi6+uTpO/O/Rrujajd64l3k3uBPLlhPE/s9R4Li3g
koR+TYPmDiG1Xp3XYjt0H65/7n7PHQzYDq/L1vL7z/M9M98r2gfXZPHVudPC
V5PifezpTfn9SSYk7BtzU+liPMqR8u8DfI745PKvGZ9PbkxYn2Nhrmze8uiV
/MtG8X2RJGlosR+pEfajZp9RNYf9KH/UfiRJ0q6zH6kRxfsz0G747W++Zix6
c8KajJeYz8bYlXsLM+K6O7kv4b4KjP0YKzJXipl7jL7Y5ryk+FvzzOdhdh9z
qGhbzFZiBhRr0rDYAo9y3fLoJ5L8jtCO9DpZcRYlnZclXEXMi2OO2SMJjzLO
p03Tnk5PmJnGLDU6ArMu2U4+f4w7KixP2CbXFfuQNxE+HczWy/ece4Ywa5Tl
fF7oR9yHhM8Un7spCXvC/nMNM9eUu3B/JWEJnyaaEcdFm+NZ/DsDd6LgzPDq
7AlnjC7GEubX0QHzeX3sFUed33eide+7JEmtYz9SI+xHrT7DGhz7kf1IkqTm
sh+pEfloh7/WOj7Db7Izp4gRFOszgqKPPJZwL+WHErbGb80zn4cl+Z0TmCmU
j4G53riK8t9b51HmCDHWZd/YAq+S35OZESm/7c6jbIE94ViKx65OU7wyuQJZ
wvcl3lPG/7z7PCtfn/l4+cxM5o9xv3pmY3JdcY9rtrAoyRsBrYrGxNXIcrbG
+myfPWFJca/Yc5bwqeHV87sicHeF/PszyzlS2kre3cDVzr8AzE1YzqeY9Xld
Pmt5d+MoWJJ/7ngW/3ZRfF8kSRpa7EdqhP2onPOsgbIf2Y8kSWou+5E6h2Mq
qRG1PikDXd7Io5IkjTT2I3UOx2lSI+xHkiS1jv1IA5XPUsvnBeWK6xefVXy0
1vZr7UMj+5bvYa29Kr66I8ahqP67Wf8aYEnxeiteS8Ut1NpmrUcb30JxH2rt
W61PUK3t13+01p40vs+SJA1d9iMNVD6+sh+pc9R/NxsZ1duPGvksNLLPkiQN
XfYjSZIkSYL9SJIkSZJgP5IkSZIk2I8kSZIkCfYjSZIkSYL9SJIkSZJgP2qb
vr5If9+OyO/6+40ZTH6XwrW0Y0ek3Zd1QdrP6r61/XSZoZ+driVJklrAftQ2
9iOz67EfmREW+5EkqdXsR23gT3ZJ2nV+L5UktYD9qA38mS5Ju87vpZKkFrAf
lSr7ad49e3pk/ic/Eplxyt9U8o7XGTOIzP7gOyNr7rw1Ur3S0oy7Nl/n2Wyo
5VdcHJn2lldFprz2JcYMIlP/5mWRhz/7iUjP6pWRna43SZKaxH5UKvuRaUHs
R2YkxH4kSSqH/agc/ZVbMVTHq90zp0W6XnxYZMzBT4+MO3LvSo54ljEDy5GV
jB21V+ShA58SWX75RZHiVdeuq33+WWdGxo7aM7Lw85+MLPvW140ZUJamLDn/
S5FJJx0XmfLq4yO969dGdrqBgyRJu8x+VA77kWlJ7EdmBMR+JEkqk/2oHNX7
eCcLzv5ohGY08YRRkQkvPNiYQafr+EMj44/ZPzLxZUdFetauiTx+8ZU3bsyb
0eZpkyJjD98z8tiYByLl7IOGtx3d3ZGul4yKLPvO+RGWd+j97SVJQ5D9qBz2
I9O62I80ctiPJEmtZj8q3/R3/HVk3FF7R6pD3Oc/x5hdTbqWxh29T2TTlK4I
11uZs+z6d/RG+Hr1LddHJr70qMjjj1ZGsP09PZX09hrTaNJ11bd9W4Rrad4/
fzAy54xTI/nVVc51Lkka3uxH5bMfmZbEfmSGa+xHkqQS2Y/KN/3tr4nwm/X2
I9O00I/SdbVp8oQI11vb+tHN10Um/sWRkZ3uN+7v0WtQqldXun6q/ehDp0Qe
f9R+JElqDvtR+exHpiWxH2lYsx9JksphPyqf/ci0JJ3cj/JOZD/SoORXl/1I
ktQ69qPy2Y9MS2I/0rBmP5IklcN+VD77kWlJ7Eca1uxHkqRy2I/KZz8yLYn9
SMOa/UiSVA77UfnsR6YlsR9pWLMfSZLKYT8qn/3ItCT2Iw1r9iNJUjnsR+Vr
Wz9Kr9X1wkMiE15wUCXF5W0f5A/kWJq8Tc4JWz7uwErafpgDPyf2o/JVz3B+
D/O6y5v2ujSCYXc+a7EfSZLKYT8qn/2oWcfS5G3aj3aZ/aiR5U17XfuR/UiS
1AL2o/KV2o8Y86eMPXzPSg59RmTCsQdEuiq16OBxo54ZqS7Pe1NnJu3huCP3
jow/Zv9IdfkuNZqDKknnZNwRe0Wq5+G4Aypp+yE3GPtRqfpTVB77kSSpHPaj
8tmPdv2I7EdPEPtRqexHZbMfSZLKYT8qX0n9KI3wxx97QCVH7xuZ/cF3RuZ9
7AORrhcfHhl7yJ9H5v3zaZGFXzw7Qu+ozrh70SH/K9W9zbLTozW6FS2sOKMv
P/bq7L58m4X5ftU2d9TekdmnvSPSPWt6ZMX1V0Q4n10vPqyS4v6kr9kCW67u
VWH7a27/fqR7zozI9Le+OjL+uc+OsOWd9rnusVdfKz9v9qPqSkO8HxX2/7Gx
D0Y2TemK5MvX/fzuyPrf/iJSfWoawxdT3ebvJ+PFW5Y/WmMfVt54dWTrogUR
llTPf3UL6ev+vkqGBfuRJKkc9qPy2Y/sR/ajcvanJexHbWI/kiSVw35UvrL6
USXjn7df5NG7bo8wjto0uSuy9eF5kYkvOyqy6AtnRVZcd3mk2o/SXLUxBz3t
96FJMfeMhsL+jzn46b9PdTZaoZUwf2/8c/eNVDtOem71DGTrjE0Z85zdI2MP
2yOSb42u8dD+fxph/L/qpqsjXS85vJKoPy84qLozaQvVV0zPouOw/8wkZPtd
xx8a4ehmfeDtkR1buiPT3vKqCOewum+cgfR1db5iWvL4a1W2X5zNyKPVOXut
bkn2o1Zjz1P6tnRH5p753sjMd7/595n38dMijNVXXHNpZOUNV0aavCN9OyKL
vvCpyKZJ4yPN3X5nsh9JksphPyqf/ch+ZD8qZ3+azH7UVvYjSVI57Efla3k/
esHBEZrO9JNfGWFc0XXCEZHRz35SZM4Zp0a6XjIqMvUNfxmp7tURz4pMetnR
kSXfOCfyyPnnRhZ86szIrH94S2TGO15XySlviCz8wqcii7/yuUh1Blq6y8GE
Fx4UoTUwhpn2hpdHxh6+V2TmqW+s5F1vjnCPhdkfPKWS9789svTir0Xm/dP7
I+OO3jfCWaLvMOdt+6oVkVW3XB+Z/IpjI3S6ReecHXnkm/8VmfLXJ0ToQRzj
rH/428iCT38s8vB//Etk3FH7RGiRq75/bWTbskcizEWcdvIrIzPf9abIonM+
HZn3sfdH6HELP//JyNKLz4vwWuwh/XHOGe+KLLvk/Mis9741ks9dtB+Vsz/N
RSvh6/W/+XlkymtfHMnX2dQ1NsIMt22LF1byyOIIj/asWhFZcdUlkdU/+F7k
0TtvjWxfvjSyZe7sShbMjay57abIo3f+IFLr7G2ePiXSt3VLZMfGxyKbp02O
bJo4PrL8iosi25YsihSfOxTZjyRJ5bAflc9+ZD+yH5WzP81lP2ov+5EkqRz2
o/K1vh/94c4ME084IrJ92SMRfk98+tteExnznKdGRu/9J5HVt94Q2XDvLyKj
93lShDHeoz+5o5I0N489p8WsvuX6SN+2bZHVP7gx0rPu0ciq710VGXvw0yPM
eWNu3uYZUyOLzv2PyP277xZ59K7bIut+dldkzCF/Huldvy7CDMBVN10T6du+
LfLw5/41wly18UfvE5nz4fdEdmzeFNk8fXJk5ntOjnB0LHn0x7dFetevjUx8
6VGReR99X6S/vy+yceK4yKJzPxOp3tUh3bGBLTBvioa15GtfiPT39kY2jhsd
obWtuvm6yIbR90aWX/mtyJa5syJ0PXrT1sULI0vOPzfCOHn2+98WGTdqr0hL
3nf7Uatlf+mV1jP5pOMii//rs5GeVSsj+eoLzv6nyJKvnxPp69ke4bP/yDe/
HJnzj++KTHrFMRGuloejtn/6Y5Ne+fzI4q/+Z2TSScdFVt14dYRtcjXy9dTX
/0WE+XVbFz0c4Qp8+LOfiMz96Psi/HtCf09PZAif+cR+JEkqh/2ofPYj+5H9
qJz9aTL7UVvZjyRJ5bAfla+k+zNU56RVZrhNe9OJEe423Ld9e6TaTdLdDFZc
fUlkzZ23RsYfd0BkR3d3hLsTcAeDbSuWRR468CmRR390SyU//mHk3t12iyz8
z09GuL8x2+T+4Xz92NgHIgs/f1bkgWf8UaQ6s+iOmyP0o20rl0eYk3bvH+0W
WXbZhZFNUydFuKMCezLm4KdFumfPiMw+410Rjm5H9+YIR/3gHrtFaHlLv/X1
CDPcetauiTCbLt/Ph57z1Mj8T5we6Z47K3L/U3eLLPnq5yO0ttH7/klk8l+9
MMKMprkfPy0y9c2viNDvuHf65qkTI8uv+k5k4suPjTz20P0RzvBDBzwl0vWi
QyP2oyEpn+E2dVKE2ZhdJ4yKcL3x6KIvnhVZceW3I9uWL40wz7P63CldkTmn
/32EJfM+/oHIsksvjLCE587/1zMi1Rfv7Ynw9cxTXh/h3wS2Lpwfmfr6l0by
nZ36xpdHti1dHCnu/9BiP5IklcN+VD77kf3IflTO/rSE/ahN7EeSpHLYj8pX
6t+HTf2Ie2I/tF8l/EY543nm4Sy98CuRdT+/K/LgXn8c2XD/ryu575eV3P+r
yLqf/Tgyep8nR9befUdkxXWXRR7c448jCz/7ichj4x6MFPsRM9O4H8J9T94t
svJ7V0X4zfRqP1q+LDLrfW+LPPjM3SKLv/wfEdpKfq7GPXffyJZ5syOMkeZ+
+D2R7pnTIjSphw74swiz4FbfdlNkzumnRrpnTo1wt23aFnf/Zh/Ywy3z50Q4
Y49c8OUIZ2P0vv8vMut9b430PrYhwqynNXfcEll987UR7jvBvq29584IcxHX
/PDGyPxPfiTC3RuKf53WfjTUcbcEZpYyo7J6h5MLvxLhqLlC+PcE/sbx8u9e
HGHmHn+pedWN10Sqdwi/6juRBWd9NMKr5P1oxjtfF6Efcd3OePtrI7xW76aN
kelvf21k2+KHI9UdHbLn334kSSqH/ah89iP7kf2onP0pk/2o1exHkqRy2I/K
1/J+xDg5/SVTxmDcuXryq18UmfCiQyLbli2JcCeBZRefF1n/659GRu/35Ai/
8c39gRmzMe+OeWvMzVt1y7WRB562W2TR58+KMCav9qPq/Rl2j2zqGhdZef0V
kfHHHBjhd8nX3H5zhG6yffWqyKIvnh0Ze8Reke4ZUyN0HLZDo6FfbF24IDL/
7H+KTHrFsRHuvTD7Q6dEaGe9G9ZF5v/bhyNzP/zuCHOQ8r9LW+1HaZ9pi1uX
LIyM3udPIksv/Gpk44QxEeYWTj7p+ZHeDesj9DLmyzHvjna2aeK4yMrrLo/Q
qia9/HkR7n/OfTNa0ojtR62W3Z+Bf09Y/t1vRXZs3BDpXbc2MvmVz49wpXGP
BfoRo/eZ731LhM8j11W++bkffW9kxTWXRViy/PKLIvP/5fQIS/J+NP0tr4ps
njYpQiuf9sa/jPAoM06nvunEyLZFCyLVlxmy599+JEkqh/2ofPYj+5H9qJz9
aTL7UVvZjyRJ5bAfla+k+3unmXX8dvZjYx+MbFu6JLJ1yaLI+l//LDL2sD0j
9COayOh9nxTZPLmrkpnTIuvv/WWEey/M+Ps3RLifw/LLLow8uOcfRxac9ZHI
ul/cHRlz6DMidAH+jur8sz4SYfRId3hs9H2R5Zf/d4Q2xF5tWTAvwr0XNnaN
jUw68XkR7lpcHf8fvU+Ee2vPP+vMCPu85LwvRGg3zDViHiD9izsnbHjgN5Hq
32nN+hG9Zv4nzohwN4mH9ntyhHuAr7379gj3GOddW3DWmRHOJ11y4/jRkerf
203nvHvOzMimKRMjzOtj9iB/gdf5deXsT5Ox5ym8szNOfWNk+t+9NsJfE2ZO
Jqs/csG5kRXXXBrhXZj25pMic8/8h8i8f/5QZO6Z741sX7k8sujcf4+s/uGN
Ebaw+vvXRhZ/6d8j1V3I7u9N6++eMyPCXUTmfOidER7dsaU7wr8YbF+6JLLT
UQxB9iNJUjnsR+WzH9mP7Efl7E+T2Y/ayn4kSSqH/ah8Zd6fgdloYw9/ZmTK
619ayetOiDBKp3fQZcYdtU9kxjv/JsJfO2Wm0ITjD4vwt1M3do2L0CYmvvjw
yITjDqwkHcUT3LM624fJf/WiyKQTj43QcegIXccfFuGvbXKvY/4m5oRj94+M
f96zI2wn33L1tVieQn+ZdOIxkSmv+4sIMwyZz1Z9rfp31X7BwZHqOum4Hn9W
pUPlR0rvYw4ho+LqbqR1xh+9byXpLuLTTj4pMvFlR0dYUjwW+9FQt23ZIxFm
XVYXpWPs79leSRq3868H8z72/ggz37hHCvdPWHbJBRHm7/X19ESqm0nvXa2R
f7UrZa0tb09PsM4QZz+SJJXDflQ++5H9yH5Uzv6Uw35UDvuRJKkc9qPyldSP
soZS/VuxjNufW0n1dbOxOp1lymtfEuHuB9ybmr/Tyt2zuSMBvWOncT7dgdQY
t9N0xh+zX6T66sfsH6EfMb+OGWhjnrN7pDoDrVabqL4WSY3phYdE2P4THGP9
PawmbS1fp8azeK0Jxx4QoVfutE72nvJodX5g65qR/ah8/X0phWPJ7uFQ/Euy
tOmlF30tsuQbX4ow/437gRefpZz9SJJUDvtR+exH9iP7UTn700L2o9LZjyRJ
5bAfla/UflTsSjVG6fQRxvOTX/mCCHchWHD2RyOPz1jbKzLIewvUffXqPLQT
jojstH5TX6XM89mG/bEftUs2w63mo8n25Usja3/yo8j63/ws0rdlS6S45qB3
JaX+kqHKfiRJKof9qHz2o+Kj9qMmxH7ULvajUtiPJEnlsB+Vr239qOExP3cS
GHvIn0f426nMWGvJXalTqrPU0oy19p+EIRr7USerf9Qj85wMkP1IklQO+1H5
7EfF2I+aEPtRJ7Mf7TL7kSSpHPaj8nV0PyL87dR0F4LqvQhKubdA+w98SMd+
1Pm4C3cayVffl5F8NgbIfiRJKof9qHz2o1pj+/Yf+JCO/ajz2Y92gf1IklQO
+1H5hkA/MkMxndyPatz1Wmpc9epK14/9SJLUOvaj8tmPTEtiP9KwZj+SJJXD
flS+Ge/468i4o/aO2I9M01L9K8D7RDZN6YpwvbWtH916Q6Taj6qPpnllPT2V
9PYaM6D0bd8W4Vqa9/HTInPOODWSX13lXOeSpOHNflQ++5FpSexHZljHfiRJ
Kof9qBz9fTsifD3/3/4xMuagp0UmnjAqwsi2y5jB5fhDIxOO3T/SdcKoSM/q
lZHHL77y5rPlXYw5fmMOeXpk/b2/jJSzDxreeh/bEOHfBJZefF6E5fYjSVKz
2I/KYT8yLYz9SCOG/UiS1Gr2o3Lk9/LtnjU9MvGlR0bGHLR7ZNwRe1Uy6pnG
DCzpyhl7+J4RrqXlV347stNV19ar/eHPfDwy9tBnRBacdWZkyde/WMl5KV83
pm7O+0MWfenTEWZsTnn9SyM969ZGqv8C4H0/JElNYj8qh/3ItCT2IzO8Yz+S
JJXOflSq7Cf41ofnRRad+5nIrPe+tZJ3n1zJe/425WRj6iZdJ+9+c2Tev5we
WffLeyLVKy2/n3bb9KdUrLr5usjM95wcmfbGl1fy5ldU8qYTjambV1TyxhMj
09/2msiSb5wT6V2/LvL4hWYzkiQ1k/2oVPYj07TYj8xIiP1IklQ2+1Eb+NNc
rePVpZHDq12S1AL2ozbwZ7pax6tLI4dXuySpBexHbZNmQFXvSZv/frExAwz3
Q+jU+xtXZtlV941Zf+0+XWaopvg9U5KkFrAftY39yDQp9iMzImI/kiSVwn4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE
+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIk
SRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE
+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIk
SRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRKa1Y/WJfYj
SZIkSUNX4/2IBmQ/kiRJkjRc2Y8kSZIkCfYjSZIkSYL9SJIkSZJgP5IkSZIk
2I8kSZIkCfYjSZIkSYL9SJIkSZJgP5IkSZIk2I8kSZIkCfYjSZIkSYL9SJLK
15+0ey+GM84wP6favS/19GXavS+NGirnVpIGx34kSeWzH7XaUBnD248kqdPY
jyR1PsZjjCH7M8U1a402i8vzJfnWikvyfci/Lj6ruUc9OH0F7d6jRu16Z8y3
sCK5PWFJ/aui1vveCvme8HNzUlJ8NL/yy9zDovx1H0nuTIr7nK/f3uuw/vcK
SarFfiSp89mPGmc/4mv7UXPZjySNHPYjSWqu4piwN8mXrEny5bXGk7VGyAMd
cxY7Zr63xSW19qHWmsV1+Lp4jAM9h/X3rXiMfM3Pmu8l+XMH+uq1zkCt421k
b/MlP0vGJo3vZ61XLDaCWntb/7iK5zP/emHy/WSg57bWNht5x+u/I/XPeePX
niTZjySpuYojNPtR8bmNn8NGRr/5fvK1/ai4pNb6xeMqns/8a/uRpOHNfiSp
M+Xjmc3JxGRcsijJ19yW3JfcnbCE8TlLpiSMncYndyTrE7bG9ucl+f6w/oZk
WZLPiXowqTUGuy1ZlUxNvpuwb806Y90JM8puTvJRd/keytRfc20yIam1TiPj
23wd3qObEpbk9xPoSX6a3JIw2s/f09bJR++/SLjqWJJfFXMSjoJ3dklS3OY9
SX6M9c/YQB/Nl/Dp47zlR1TsUFcn7Nv25P86N/+3xpsO3zf4XAz0uZJGMvuR
pM5kPxoo+5H9yH6Usx9JGhz7kaTOxEiGMRXjKzrODxMax9yE9RkPP5DwKDOX
fpn8JLkuoaHQaHiUURzbuT65Mcn3h20yfmZc/bWEsf2VCWuOTvJewNbmJ99K
GBUvTxgbM55k+2yBMScz8WhnNAjW/G2SjzkZOV+a0Pi+mSxO+C7N8W5M6I98
32YcznbYB16RJYyHf5XQ8ti3GUlXwiiU7dMuOQOc8/sT2iXbzDsC63Pm2c60
5DcJe86akxNaMPufXy31+1H+ivz84txekXB0vPqshGuJ9Tlq3inOFe8m7wI/
1zjGvL/wftFS8+bSeD+iv/864Wq5KOH95Urm/ZqdcG1wnjkbLOEdzLfD9h9O
WM6a+c9olvBTvn4/4ujydb6azEw4V7yPvGK+na0Jn2WuxvxfJzjbvOO8Lyxf
nfAZ593h1VmHf0u5Ibksyc+JLUlSffYjSZ3JfmQ/sh/Zj+xHkspnP5LUafLR
C98x7koYKzKm5XsOY8visxhN8SjzpniUES/fqViT0de1CeswNvtBkm+TsShz
nGhqjPx5FRoNI+SbMrQw7oTMlukv7MlVyTUJ42q2842E0TXPpTtcnvC6PItR
PXtII7gwYfusz4iUBsfWOF7ODPuTvzqvRWdk/M/4ljl7lyTcPfszCWeG/eH8
MFbn2Fmfdnlrwlllhht7zvbZNzrX+QnvOM9lbiRjXbZMR+gvyM9GrX6Uf832
F2doTLTanydcD8yKZE/OS2ju5yZ8zXvK+PzLCevnx5t3pfr9iG3+T8I67BWd
9EsJjSDfW/o7d+GmI9A+8neQI6Vtcd2ynxw7M9O4NhrpR8X5dez5fye8v3TP
byesz2uxn19JuN7YK9rZfyX5co6Fa5vj5esFyecSzg/vPu/aY4n9SFIj7EeS
Oo39yH5kP+Jr+5H9SFL57EeSOk0+emEuECNnRsuMgvL5Qvlz+Q7DuIsljFf5
mlEW852YncV4m7ET6zCWY0Sab5nROON2xn5jEsbA9As6BXPeGGHSNWgNKxO2
zOwgRt2PJuwDo2XuSp3PDOS5vCJ9hPEt54Q9ZJzJmJZRKONkGiXjT8bAzEpi
ffaBc8JYmr2lYzLO53XZN0bX9Mr8r68yEs7PGD8RmKeXn43iO857yrvM0fFc
mgKtijbHmo1cOY30I9ZnnM/55JzT9Thq9p9ZnbxTvHf5sdM3+Zrn5u8m7xFn
gHUa70e8U1zPvCO0DPYqb8f0X34W04N4Z+mqbJ+tcZVyXeVbwI8Tznn+7w/5
PtfqR8V3gXPFPE9abX5XcK5zelA+o5VzyzWQvwr7z5rsIcs5Uh7la5ZzdMzJ
LO6nJNViP5LUaexH9iP7EV/bj+xHkspnP5LUmRhl8X2GHvSjhJEqYyTGwKzP
SOxfEx5lphZjPMbJjCF5Fn2B0T6/4U4DYjzGb5fz/Sof7zGjjPsG0DtOT9hP
lvPqdA3G2OwzI3+2zwiT8SG/Xc7cNvoaY0jaDa2BOUWM99gmdzBgy+wb8+h4
XfaZcSndjVlGNERGpPzuPOfn4oQROKN9RtTMo2MuGa/O/D3mdDHTjzEn55a5
aoxI6RqcE845x8Xr5qNWxvAcC8uZwchPFloVTY32x3wwnpV35MHNr+P9ovHx
vvAqvCP8Xj/b4VF6Je8dbYX16TV0GbbGO8V9PPJ7DuQNqH4/4pov3vmc+ZPM
O+WomXvGo3SEcxJ+RnO18w7SZNkf3nf2gauCTwGfo/zndf1+lD/KvzzwXvNO
fSehm/OJ4/3lU0b351rNr0aWX5BwLbGc65lPCi2Pa5tzznXI+8tZ4llcS86v
k9QI+5GkzmQ/sh/Zj+xH9iNJ5bMfSep8jHYY0TEq5q7a+TqM6xhFM55kTR7l
XtPMoWL8OTHDyI05UfxmN/OX8jshg7HZpoTvgcz4ykdcvDrbYQktg3E1bYh7
GrOcrzlGnsX+MDJnfb7TctQsZ74WY0hehe3wKizha+7mzbMYITO+5dXpF3zN
s2he+Wwuvm8z2uccsjzvp+whPwWYo8g7wk8H9o1jYR4UI1uey/nkUfaW7sk7
lR8RHZM94Wzk93wu9qN8NletOWAcO6/LEq40mh1Hkb8LjP+5Ntgme8g2eV3O
NuPz/Dos7gkj//xu6nnXoPVzDvM5gewVZ4k1eV/4mlfP/4YyX3Pe6EH5s/Ij
5YriLvTsSbFTsLV8hlvx/gycE44uvw8/nxe6J58mjo7WxhljHzjP9CN6Vj5+
YK4jVy9fsw/5/dW5fnit/FzZjyTVZz+S1PnsR/Yj1rQf2Y/Yjv1IUuvYjyQN
XY5zmquc88kIOf/rro1oZN/ydfhZk98RopHfzS/nDOR7wizK/K8Jl3MPgeKR
8jOd+0vkna7Yj5jJmd9RYVfOLU2fe540stxPvaRWsx9JGrocKTWX/ch+ZD+S
JPuRpKGiL1McI7Gk1jq1lhTXb+RVituptZ/FZ+XPLW6/+OrF9WttrbjN4prF
Ldc/M8VzW/9YGlmn1vvbyLPqn58c/Suff1hrzcaPpf55Lm6teCaL6zNLML/D
fK2tNbLPjR9RcXlxP2thtmT9c9vIKxaf1fjy+ttvZJuSVIv9SNJQ0UhzqbVO
/RaQP9rIqxS3U2s/i89qZCxXa2Re3E6tPay1fnHL9c9M8dzWP5ZG1qn1/jby
rPrnJ2c/qn9ExeXF/azFfiRpeLMfSZLK5Ei18/keSRrJ7EeSpDI59u58vkeS
RjL7kSRpuOr8cX6tGXSdbyjusyQ1wn4kSRquOn8Mbz+SpE5jP5IkSZIk2I8k
SZIkCbvej7jPp/1IkiRJ0lDXeD9an9CG7EeSJEmShh/7kSRJkiTBfiRJkiRJ
sB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJ
kiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxH
kiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJ
sB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJ
kiTBfiRJkiRJaFc/kiRJkqShyH4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIk
wX4kSZIkSbAfSZIkSRLsR5IkSZKEWv2oL9mWbEgeTBYn7d5rSZIkSWommg6t
hwZEG+rL2I8kSZIkjQSN9KPtyaZkRjI+sSVJkiRJGh4WJTSdmQkNiDZkP5Ik
SZI0cjTSj/qT3mRLwu8oTU/uT+6VJEmSpCHugYT/D6L10IBoQ/0Z+5EkSZKk
4a3xfsS97Ph/pe6E9VcnyzUcPaJhZ4mGo8Uadtp9Takl2v0TQM3X7pGaWoJ2
Q9Oh9dCAaEP2oxGu3d911HztHh2oJdo9llfztfuaUku0+yeAmq/dIzW1RCP9
6HdJsSXxP038vtIGDUfrJA0FazXstPuaUkus17DT7pGaWoJ2Q9Op9T9H9qMR
q90/SSQ1pN1jeTVfu68ptUS7x/JqvnaP1NQSA+1HeUvid5R41jYNR1s17GyR
JLVJu38CqPnaPVJTS9BuaDq1mpH9aMRq93cdNV+7RweSNHK1+yeAmq/dIzW1
ROP9SJIkSZIkSZIkScL/B0gdhSo=
     "], {{0, 456.}, {560., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "Exif" -> <|
        "ImageWidth" -> 1120, "ImageLength" -> 912, "XResolution" -> 144, 
         "YResolution" -> 144, "ResolutionUnit" -> "Inch", "Software" -> 
         "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
         DateObject[{2021, 8, 2, 13, 55, 27.}, "Instant", "Gregorian", -4.], 
         "TimeZoneOffset" -> -4|>, 
       "Comments" -> <|
        "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
         "Creation Time" -> 
         DateObject[{2021, 8, 2, 13, 55, 27.}, "Instant", "Gregorian", 
           None]|>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{560., 456.},
   PlotRange->{{0, 560.}, {0, 456.}}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleImage",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->244557913,ExpressionUUID->"e788fc3e-8345-4343-bbb9-645a89ea723f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"07a66ab0-825b-4322-95f5-42f8dd98f646"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ca643e59-e2f5-4160-8da2-2dde631bc22f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"ec635eae-fb36-4439-8308-d877511a4b0f"],

Cell["Stian Penev Ramsnes", "Text",
 TaggingRules->{},
 CellID->453300897,ExpressionUUID->"2ee048f0-d709-4658-9957-22d2492f236a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0b371ba3-ddde-4ee5-a5a5-98b7e5c2175a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"6a806cfa-7c90-4e5d-b98a-f04ef5ba51eb"],

Cell["https://github.com/Stianpr20/MaXrd", "Text",
 TaggingRules->{},
 CellID->1503679970,ExpressionUUID->"7f360ce0-8213-45fb-8601-058def96453b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6f7c12a2-eb5e-4723-85a5-ab9144318ce9"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"13f03487-5ee7-468d-9e23-7a86df95c84a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"c8ade75f-2766-480c-aecf-2cb22ff5663f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5862c721-3991-4a21-8ddd-708d8cd5ff33"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"feb734cd-2c72-47b6-9621-c185eeae5648"],

Cell["Crystallography", "Item",
 TaggingRules->{},
 CellChangeTimes->{3.8912462087686453`*^9},
 CellID->761697894,ExpressionUUID->"25cd0901-fd3f-4a65-8767-7b2b34469ba0"],

Cell["X-ray", "Item",
 TaggingRules->{},
 CellID->706484691,ExpressionUUID->"48d3b7ef-bdc9-45e7-81d2-9a562463f517"],

Cell["Inclusion compounds", "Item",
 TaggingRules->{},
 CellID->451117374,ExpressionUUID->"fc772f22-9039-467e-a64e-8861f9a6faf2"],

Cell["Miller indices", "Item",
 TaggingRules->{},
 CellID->1312430908,ExpressionUUID->"c072f856-04d6-4a68-bb81-1b3d34a2010d"],

Cell["Diffraction", "Item",
 TaggingRules->{},
 CellID->1221732419,ExpressionUUID->"fd538bcf-5f2f-4696-aee2-124ffd255862"],

Cell["University of Stavanger", "Item",
 TaggingRules->{},
 CellID->1565617166,ExpressionUUID->"88a79fd1-2927-472d-86e4-b7a57830c27b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "65f57a2d-38b5-43e2-a2d4-f4931bd070f6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"807fead4-cb9f-4d7f-a888-371f9d26ce59"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9EKwjAMFHG6ifgn+4gxFQbCxuIPdF3mil1bmvShf2+\
HIPqUI3eXu1R5CRlw1Aj7NrALXMKhnlG+\
cJw2tLsrSpusYVyIiiqwXQQrWULeeevQc4RjLRif1iuk5G0dK2to2n686+\
yDRsqvo2IxJJTdhCb8EsUFNf4yawGrw2L+A8+NYfTOJ+\
2aAEVlIoSBMPU79Ug2eImP6NIjnZDp5Bu0Gkuz"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->969880382,ExpressionUUID->"e09fbff8-dc14-46e0-9f0b-d1ec22c187c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d3724bf0-ce10-42b4-8109-54e87b04b785"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"c0489727-baaa-42b0-8c0b-00dc190b6ce0"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"3c15a74f-0ba9-4d84-b9a5-8a5233bf1358"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8c360a15-7147-436d-ae17-379c449ffdb6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"145cfb63-6449-44a4-9a65-711cea4b1203"],

Cell["Source, reference or citation", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"9fe41766-cb4c-40a6-84e6-e65e0290ed23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "36654848-b0d7-4e3c-9312-447371cd4e73"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"d54d7048-69b5-4cc2-bb1c-afb4db13d82c"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"1c53a496-6c56-46dc-a73d-01b2d9e2836c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9f2bc7c5-148c-487e-bbe6-ed3c55823565"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"0f18b95b-7699-415b-ac19-88027d23be00"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6edb812f-1f69-4bb4-b573-fcc72aedb205"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"1ecc2a8f-b07c-4da8-b7da-edf8e3599e70"],

Cell["13.0.1+", "Text",
 TaggingRules->{},
 CellID->210582271,ExpressionUUID->"ea0356c7-6afe-4579-8b04-e1d6b5f03cc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ef844d04-15b4-4466-bf67-8b6601947fb6"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"db740eca-f4a4-429e-89f0-d44ae0883f45"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Linux\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN1qwzAMhWFJ2hTKnmCvkIco2QaFjpRqY7t1EnUTdWxjyax++\
6mDhN5JOkeffnZ1AxVItgirLklI0sC6/cHhguO54PJALLD+JDf6X4bVmxk6+ILyw9FVG/eCE8+\
28wOXp6SgxT4Hi1Jo/wxZitWBXLrOzPoYfcAoGZ5aPwUj1JMlyZ0WNXHfkFmn6pZdEPLuH34/\
nuuXkcT0GlWvxjIuwuYZLd4rt1O9TZPjtmjgce8EY4hquYFhs3MZUs+\
oL9mekH2KA77noJ86mkFJfw1ma4c="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->82653162,ExpressionUUID->"2ce767e5-82a9-4bf0-a77e-309b320e5c94"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7261f0a3-9635-4bdc-b86f-14f78e9f5953"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"03327130-f065-4144-8be0-ecd10939a9a6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RZBhmDhmqwZydRialjG0su5O/\
nlMTJ9uSTTtzp5GOawx54VAiHk2frOYek6LG9YndJaPcliSEBJJJGwwFaJy1DBr65otOo4PkHm/\
ImlBd8nwjlsa7CRNtj5xV2kL4JbvtP0wSninGgRffyQLtzGFn1FxCZxXB+Y3+zwAoj+2+nv+\
WqPa86vxvtuPoKIxvTbHOltTMWHY/wWpjBBp9GKsnj6lrqm3RGD6inA5/\
s1KNJdHsISstOsmgC2n8IRRiJ7B0Vbpnpl4zyg6biMYeXSjM668LIPXF21GM4C2EwezojGe9a/\
B5tCF2LNij9AojVrVE="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->991332972,ExpressionUUID->"65456a3f-0796-4e1b-a6ac-898d3250cd77"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5183b468-16e5-4ad1-a0e6-e059cfb5f9c7"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"ff227a82-4b81-474c-8edc-007d86bf1b7b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->92922911,ExpressionUUID->"a66b75cf-d0ca-49ad-9957-e702c3fa63f2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2bea6a9b-12d2-46a7-ae48-daf03c5746c1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"a8023563-c5c7-4ec9-88ce-66df6dc28412"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->716444359,ExpressionUUID->"1383143a-d493-40a1-823f-64e551532028"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d43b6ad9-e5e1-46a7-aaf4-451bae5e10c7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"13d68c4d-a0e6-414e-9b19-086ded2eeba8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0SRu1F+DAyUIcCQ/\
ApWq2LURq1SrOC7jr2cSq17PyT5vtlYfgZXgEeAnEEfEMjJ3spqmKxF5sj2fG33zzzR73R7zHfa2B7\
1wGXwU/4rvZAvIbkMUz1z1Xjiy9iYfSFc9X56LjutOggc4vpngXj9HM988xF5oVSkP07U/F3RiXtO+\
4/RmUlRYeyFB01/6vTpTLNbpgwaXQsxTZc90MtKYMu+R9Irwodlz/zIoyRXdW1/xLJ1sgOmB+\
oRzDyis0TBWsxmBZJXINnkllIfe6ZhLBMWFqhgX5AytQa7xTZs5ksHHRKGRc0TKDtqQyghNz+Lj38+\
s3llkg6O49k0BZKRN5lShVoWivN0Un50lZofWOSQLOCovllkcskcCCFRGvYxYiK5J5bN5dQ1fGeaF1\
ciPkskUoLDBY5lBR2Ac+vEALE1PgDJZtY9zeWOQ3c4vBSKJx8MmK+hxuQdsifX+\
OWs9h4vVC2Dk9mL3cZEj2JIztDD++x+/\
3JsPBND5DyKaEL7is194MJiVRyNU9NBKhVDucyAC5zvPryA2Og8eS6sz/UczgJLIurmnbndkA7UU/\
6mAm5q0w+TtO7SbCmjxPC6yJ34/x69JbhOs1G2fjdn+YHdITw8+\
oZYakY9IAzcbB6a3QITUoCfJNplV+\
Q9KK4qAmKQJgy3TP306MVgYaXJcVGLDj4D2aZjL43gbiiPevbFSJr7fNu5dJ566Zof+\
qhRphFmAVCebBtq2u98i44vZUqhXnvTOhHTzVjUc3bTv46we8j7bgZ6hDadyDpo/\
4wcR4sJWlrImrwbGpebh2QD+e4RQczXMOs7qiP9RVmo2/3+2uwg=="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalFiles", "LocalFiles", 
   "LocalFiles-Checkboxes"},
 CellID->457873603,ExpressionUUID->"8672f114-8d9a-487b-b6b1-58bb159a54bf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUhjZpkzZKN2zoymLFglyATZVMWojUqlUcxNq13yQmznjws5sOK26BWHERjg\
CXqFgizsAbJzNNWyoxi8R+P9/7+577rR5vcl8Y4DvnwefB9/huMgM5B5U+\
wcapRpI0Rx4WmD5d3dMtbIyDAbpvj+2yvJZifvDemtSJBRNS2pB50rfGYjmw14BktD+\
BRW6EBxKkjbXP86FGaSwGB7h276+9m9hIwBhC2SWPofAi3cHWCVlEhK2Vmn/bTmbWIjA/\
08hs7rXNmE5ZYYNjuZAGPFPagfSmYMoCMpEVzKZkDyy1xtilzqav926+fGdj+BjIFF+\
xgOWvdYwcrVMrJ52l1i1EjOCgLEUxb0tbd/P5K7Kq/tEwoo0yD05Ij2yp/\
SzGq00TY4OqGlXGude7CJA4oBiUhwKqgjInu4VVOtV0vgMnI5y9/\
EBl4qZv6QLXIEN5XlkpyI0tKHWUM1A0RypC4Hzl9g5rO+lAaU/RKciVllAJNrNdi6LrmZhD3YO+\
yWeCSWEM8s6ZdTCi3k3guiYP7g2EnE8dFatoxO03ThSncAXGpfH7c1RbduLMz4Sb6gyTZ7cIUR7Jex\
fh54/y+32L0B2XYWjMY6F0wKRZa9qjhZgC15+\
gojFB7XBKHNQa59cRtvvB23Lw8pFi2sNyQuKSjo2JC1ArWiVHJ2JaLw9/yWlGxKAK5/EFqDD2S4x1+\
XWW6/9kkAzq80FyQGE6b61RiaVdI87QDnePr4QJkbVxYQ4To+WcqF+SycEmq/\
mLUWZ0BlVu5zlk4AbBe5tV28u7d9Ps8daFszk4XzxU7Z7HfcRq3/+rJhpKNgOnab02jnWVzXvCVZ+\
PiYex/80TYRD+NZl7mno0/\
HBjBr0HJSTWhEWGGyTo8W7c7dwRcuxbu58VPFwikENnDEhvj4RJkdOrehGfoL+70fkG"},
 CellTags->{
  "CheckboxCell", "Disclosures-WolframAccount", "WolframAccount", 
   "WolframAccount-Checkboxes"},
 CellID->243056593,ExpressionUUID->"a09b86cb-b5ee-4118-ad31-b3ca8df5a528"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVF1u00AQpiVOkzZqi8QT8LDiCVBzAV6qxG0hUqNU3lxga4/\
jVda7Zmc3rbkId0EcAS6BeEScgbETuyUqCD/YuzM73/x833rUG/\
KAu1IB7868K7wb8r0wg3gJSfoIO5cSyRJMHOSY7qz36S52Iq+A9o8jc1NtKzN/\
cn7rwGqhGIJdyRiqiF4kbsbmlta7eDCHvFDCARnSzibq+\
ZnEWBn0FrAB4E18gJ0QlCKcPYo5E06kXexdWJHXGLtrN/+\
8E2bGIDCXSWSmcNJoJlNWGm9ZIWIFjiXSQuxUyRIDyIQumUnpPLDUKGVupF683f/+\
6QubiiX5LXzwgA6ZMwy222KvMueKE5ZWL8TshIGLX9fRoQXqj2qwzCN9NyEsNlpTeqqrPsZBJwxyIR\
XywdRYmOjUzClRM1vcH4t4ubDG64S677+zoryEFSib1s+v0/bkoB7HVNiF1Bg+vUOo7TW3fyJ8+\
1o9P+8QDqMqDU0gEon0GAatpz/JxQK4/AgNywTV5bFQkGxwfpxif+SdyYWT8V+a6Z8BUSCuadmZWw+\
to1fRNxeLVlv8DV+\
PqcH5lzoalIMKZTOAts7NNxyH43Z9FB5RosF7o5LQkBTBAYn88HwllBdV1lpNz0Il4yXpwrKcqmCSy\
rB57ecvJ1pJDU11swI02LF3zuhG3Px4u9Ah711ZU4B15UPOvVktWGyuxH/\
1RdToDKx0kNxbtp0GW8b1tM8TuWYhuBAK4SF+\
tjwtQfzFPSaGDzQRGuVzjffEMOSHE03nCkvY9fT6I11yf41A/5RBBEjXM4Z5WdDP56q+\
pb8Bk6mkSA=="},
 CellTags->{
  "CheckboxCell", "Disclosures-ExternalServices", "ExternalServices", 
   "ExternalServices-Checkboxes"},
 CellID->105278940,ExpressionUUID->"fb5e5baa-0c18-471a-931d-6a858b0cad71"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{"\"WL system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVr1uG0cQjmRSImWBCgwZ+ak2QRCkMOEuhYsQ4lG0CUigwCUiBCmc1d0cueHe7mFnj/\
L5MdLkAQKkSZEXSJU6eYC0Qbr8PENml+SJJCwkhQoXZsP9mft25vtmZ+\
ek0eZ17koFfG9YuLxwbb4fTSGeQZK+hbUzibRSHzjIMN1ZzNNdrI0KBTS/NzLXfuqX+\
TuXZwxLJFMWG53KSWGFkzTawcZIXHfNC0Ayvj+\
GLFfCAS2kteW3rCcxVgYLC3h5xgNKtAFSx1oEShHYPn3YE06ke9joW5EFoN1quzGGFy7s7y/\
Bf9yJpsYgMDeVyEzu8ZhMWWkKy3IRK3AskRZip0qWGEAmdMlMSvbAUqOUuZZ68uTg929/\
YpEFch1ZDhYJG7RjysRCMYynkBArCXMCZxiMz00iU0nWN8wYy0DPpTU6898iOEfYW+\
ae6e1g72Ej6LQIdm8sJgv+mt3COaMXk8qE1z+\
6EG7KW7zMrozCEaRnUs9W0uExn5pr7iydHU2FFbGjeLA2tgVUNgd9o11fZFKV/\
IgTVzEwLjSyC2sqo2ZXIIRTvbO9UpN9TM4e9k8vrJwTV18NUto6jAprKeLPhSqAN89NgTCcg62yp7b\
hX9OfHRllrA989LQbxvblpz98dvnlnx37ifj+7+df/Nax737M699983NnlZxbOAcLdjyD/\
O2F1E8spI8DO5VVi1LNS3khksSrUe8LhT6gB8HPkzwH4kjHQKzzhj/gmdDJnZHJdx/\
dheTNXshhY8s3sq/Jfrwme8XQayP980e+\
JKCkXWFDFRhodEIpKkLkkS9VVFwWIaA3TSAHnYCOqVBsVCTak1luLJlpo9t5caVkfBd51RoBBq+\
HV18Te2+Say253ltLrk2aXpsM6/jX2DuweGPEjHKlT++\
PO9UJy8KTE4cnFpfpRwf4nJuSF4rO4ofnxsJAp8Y/rGssiHg2saYgX3ew+\
dSK8gzmoGwafv90KsvD8EifCzuRGqPjNa/9+krnNYRff/G/v24QWiN/\
DDEwEoksMKrfaDrIxAS4fAkr0Qlqj9ODDMkS548ONk8KZzIKMr4lmGYPSEVxRcNNZhv+\
7pAwVfPDH3MSl9ha4fxn47KCuu+hlixUzi7/o27UrcZH0ZFP7mdGJZGhVgkcUCvWOp1TmgdID8Tfj+\
h6z6g9sSSiBSbJF5uFff7hQCupYeXikCoG2EXWrpov/vCV3rZ5g3KGmhtX3mqxPwwdFK6at/\
8VISmlp2Clg2RtWMVc31pckH9KBTCIsrwzr5Bra6fSi3+\
wJkz7tkioAhSZxrUEafNWuAG5pQMCmc0TXfLiijq1Nj9c3fFxmVPHfBEu/78U+Qce"},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemConfiguration", 
   "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->423568193,ExpressionUUID->"f7d56112-c286-4d1e-8293-471813282a48"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
            TemplateBox[{"\"WL built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiW/\
NJMc4FQuGm4czCt0EqeFzKSTjpWZXlHsdaKJLHm0UlvzBDwcvAVHhmdg7cRuSAuDL17taj/\
t7vdJ417A29wVCnhn4V3uXcC74QbiLSTpC2zNJZKnPXOQYXqyW6en2Iq8Alq/jMx9uSzd/\
PXtnK28VC6QmmGRrYwqc3qRuJ+\
YB0DaeLaELFfCATnS1j7vfCoxVga9Bbyd8wLpML5Pb2MrBKUIpkspU+FE2sHelRVZBXG6C/OvJ+\
HGGATmNhKZyZ00msmUFcZblotYgWOJtBA7VbDMJDKVgCyBVGpZ7qWc9EntDH28YQIJtISmwK62z8xY\
ZtwGLPkcWC0Uiw1ZDw4/8MG1sTDTqVnSuh4VvpqIeLu2xuuEeul/\
tKKYwx0om1bfr4tm56Bq7lrYtdQYvnlEqPwVVX8ifP9Wfj8fEYZReYzU60gk0mPYbiL9WSbWwOUXqE\
kjqA6PhYJkj/PjAvtj70wmnIz/0kx/CjRQsSKztbQemkCvJGMp1o1U+HtOM6cB1zj/\
oLoGOStB9v03Ze7/4SScNPYoHNE5g09GJaEhWYEDkuzw8k4oL8pDK2mch0rGW5YSZxkVQZSRmVVx/\
m6mldRQF7fIQYOdeOeMroXKR0d1Brx3Y00O1hXPxLqLSntYi/u/uiJeNKlJOkgOzKbP9pFzN+\
rLRO4oaF8JhfAcOUeRhh3+9oCG4GkPoVE+\
03gghIAPZ6XUc0vQ1ej6Y11wv0Kg52EQAdJFi2FZ5PSO3FT37TdcdY6p"},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemSymbols", "WLSystemSymbols", 
   "WLSystemSymbols-Checkboxes"},
 CellID->349939228,ExpressionUUID->"5c57c1f1-b237-4900-9ce2-be7fe634de74"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1u00AQpiVpExq1EnBCAq04k75ClTgtRGrVKhuJ89Q7TlZZ75qd3bbmfXgbeAuOiG\
dg7MRuKAXhi2dnPN/8fN961BvKrgylQbl3GUMRw1DuJ0tMV6iyJ9Q518Se7jRgTtnO+\
pztUmcWDfL56czdVsfKLV9cQWowCIUFWoU21Vjl9GZwO3Z3bO/\
SwRzzwkBAdmSdTd7riabUOIoeaQ0x2UboUidBYxhpn7MmECDbo96Zh7xG2V2H5ZedZOkcoQhLTcIVQ\
TsrdCZKF70oNp1pj2kwpdCWAhjD33kRC8UNkQBbClBKV4lgNil0LNYtEeNCEOCRk1MTFSpxq8OS3Sg\
+OpNxP4JK4kUJ5YR1QXj8FLmgAK7bDHgsBxfO49Rmbo537Srp2RjS1cK7aBUP2n/voTzHGzQ+q5+\
fJ+2Xg3ryC/ALHiJ5eY9Q+2sqf0f49rV6ftwjHM6qMtouZqB0pKTbRvrTHBYo9WdsSGWoPZmCQbXB+\
X5C/VEMLoeg078M058gbwyu2ezMfcQ20KuYmsOilZJ8J5kQXniD828pNDgHFc5mBW2nm3cyTsatfZQ\
ccanBB2dU4lh5GJBVfXh6AyZCVbeWzqvE6HQlMhZD7mqC2czruHw7tUZbbPq75G7Qj2MIzjZals//\
bHUoe1feFehD+Xh4/7JWKDW34L9mY4LsEr0OqLbMdtruA+\
d656cs6ZqL7hkYwsdYehBpaZJvtvgYPjpG4kzMLW2JYigPpzagLzyj1zvsj2wp4zUh/0oGMyS+\
kSnOy4L/OWvMX7ZnntY="},
 CellTags->{
  "CheckboxCell", "Disclosures-PacletDependencies", "PacletDependencies", 
   "PacletDependencies-Checkboxes"},
 CellID->175258687,ExpressionUUID->"f1fc08fd-d4b9-4882-81ab-366f8b526235"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uE0EQJsFO7GA5CFGgpDlRICgsOooUWPElJpYSOfJYIEQBm7s5e+\
W93dPuXsLxGDQ8ABINr0BFDQ9Ai+j4eQZm73wXx/yIgmu8uzM7+\
833zYx3Gx2og80EwtowtUlqO7DuTzGYYRhdMrVDbuikPrAYm2il2EerpjZKBdL+\
8kidua07hqtD8AIlIz5JNbOcViumMWJnPfUcDXldGWOcCGaRDqLa/\
NLWHjeBUCbVaIbgX7heNzUfhaAw63Rlj1kWrZlGX7M4D7FamRtjfG5ze4nF+\
lOlDHp2yo2nEhfO45GXqVR7CQsEWi/kGgMrMi9UaDwmM09F5I9epIRQZ1xOdjY+\
v3rnHamQR5xcKD2D1pLBFAY2m19M6SW67AhaBnzZNHJ6C8BrYzYpsm/\
2UmuVLDaVC1yFzBDXvsYQpeVMQBuy+EQJM8LokMtZSb65DlN1BlYTHH/\
KNAssamNqY51i5bPRV9L2WcxFBptAuQfoAZPGO9aqcmr2mMEcgMO9l0nyDwh3q79/\
rPkp6fVsEJGp5adaE6iHTKQIzSNFWQ9PUVec1y7ga7q3fSWUdhyMHvTytX5x7+39R0++\
dvVt9ub708efuvrGLai/fvm+\
W5bXUpyNgihHJmwX0u1ojO4uE1VdaFMRWTo7ZmHotKr3mTAut2s55N0kQaJLBkhaQMO9dcBk+\
N94hdaR0jiQkXJFuZAGC2YTrVJ6asU0H2iWHeIpCh3l349u5dnKC/yI6QmXxr++8Kg7L4VaiPDxg/\
u+nUdoj9wzlMCIhTw1fv1clEHMJgj8BZaqUag1CJjAcB7nS9c0d1OrYurB4A/\
JNPeQZGAntLxITMOVP/FazQq4A9Rk1H1lnL+0exnkigsyz7+COf/1e36vWm/\
6m64uD5QIfUWjBS3SzGrvn1KF5iFdINjyBQ9m1NXaiwmExwmFjnM73BxIwSWW4IYJStRFwZXDCjaXc\
HagQTInqG32G9v6MB82phxw/5QV6SKnqLnFcGFZ5VlfOiyo3g95IcG8wH8jzpKlUge2F2To/\
JoDtWoaS7NQCB1oD6irdKIpdE5dc1dmkJ7QROxAa4Qm74JxltAfyXHepT8BfMZDMg=="},
 CellTags->{
  "CheckboxCell", "Disclosures-OSConfiguration", "OSConfiguration", 
   "OSConfiguration-Checkboxes"},
 CellID->147266719,ExpressionUUID->"f88780e6-5d75-4cf4-8c37-c40463cd6974"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVT2PI0UQvb21d+\
09y4vQSRyQtA4JEWAhEoILsNaz9p4lL2u5vSBEAO2ZGrvlnu5RV4+9c+GFhCT8ACQS/\
gIRMfwAUkTGx2+gesae9VrsiQAn7o/q169eva45a3R4nbtcAT+6ylyauQ4/\
DhYQLiGKH2BtJJFW6kMHCcYH5Tx+iLVJpoDmhxOz9lO/\
zN8cmVAohjlSNJPagRWhk0b7k42JWPfMDSCFP5pCkirhgBbi2ub003OJoTKYWcACiBc4w12YOtYCUI\
rgjunouXAiPsLGwIqkgHpYbTemcOOK/cMN/\
NcHwcIYBOYWEplJPSCTMctNZlkqQgWORdJC6FTOIgPIhM6ZiSkeWGyUMmup589Ofvv2R9a/\
gTBzFMIXdB0zlk2uP2GhSRKhIyxCrpG2iQNYTZLASqhMOGORraRgXsj9PA6xUZShzONoKualOM1e5p\
zR5aQK4a/1N9j9Ehp4m+\
fJzCicQDySerktEj7mC7PmzhL7YCG8lGARa1ObQRVzMjDaDUQiVc5POSkSAuNCIxtbUwU1ewKhIOB5\
n+ea4kPi3Rr0x1auiMNXw5i2WkFmLWj3KRED3rw0GcLVCmzlk9odfk1/d2CUsV6DyUWvGNsXH/\
3w8Wdf/NG174nv//ry81+79sm7vP7dNz91tzbcwzkphfJi8rfLgj6zEH+\
wL1R1oB3QxcRzLKKIxMH6QCj0ub1eUD5LUyC5dAhUC97wdz2n8v5vuvKXB4VTtgZHtpZucesZJWdWW\
AmlnyYgIvROW1vpnecMQ2dBJMUiGnqvrowciUyHCwpJiZRSoNiSAEHh+\
wyz2WbsD12Mr5G3Lo2FoY6NfzA7WopwObcmo3wPsHlhRT6CFSgbF7+/\
u1Vkq3h8l8LOpcbg8U7mfn3rlh2EX372vz9vEdoTfw2pOBGRzDCo3zpjmIg5cPkCttYhqCNOrQGiDc\
7vXWyeZc4kwsnwnmSa50BeEDMa3q1Ow79BKm7V2PiHHIpOs8X5Dy1pC/bIg210qOhu/\
oNe0KvGp8GpfyTPjYoCQ20QyJIPsL2xJ2F6IP5WoGS4pMZjWUJkqJvSMCn2+\
dOhVlLDluRVChps6f5tY+Vv3MO3wxvkvRSsy18Rc3yVltnV7nb8V2ZJ9dIL8PaMdoZV3vW9xbIE/\
UiWpdm8vn8p2t5OVTX+\
zk55OvfnQv0kSzTuGKXD20VMaumKQtLmmc55NkOgj11rAlg81Wme0ldxXLSSfwBBkJQ9"},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalSystemInteractions", 
   "LocalSystemInteractions", "LocalSystemInteractions-Checkboxes"},
 CellID->890059680,ExpressionUUID->"6d314725-8f70-4e67-a531-7252619d1405"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNU9uO0zAQhaXpha26IPHECxbv5RdWbboLlXbVVdwfmMaT1qpjR760m/1G+AseEd/\
AJG3SsoCEXzyey5mZM+NJf8wj7kuFvLsIvgh+\
zHvxBtMtiuyF69xJR5po7jF32cvDO7twnSQopPerxOyrZ6Xm0cJv0JK2n8B+\
ah7RkelyiXmhwCMpss7R881MulQZFyy6Q1DkOjEqRcE9cpyBh6zr+\
rcW8jrw4mDmbiIEAyGkl0aDYh4fPQPHNKJAwaRmQPKepeTMVqjMnnnDhElDjpo8dXkeLU5VML8Bslt\
k2nimqEiCg5XZ4Sc+\
vDcW5zozS8rWNO9eTyHdrq0JWlDVg88WyjvcobJZfX5et57Duo17sGupXfzuhFDra/J/R/j2tTo/\
TgijpEoj9ToBIYOLo9YymOewRi6fsBkDQXV5CgrFEef7tRtMgjc5eJn+\
o5nBDBV6WJHYWdqAraFf0b6EdTt8/\
oFjWvHX4Pwxyib0sgo9dt0Wd7zjaTxt5av4itCHX4wSsaFlQY+\
0eqObHagAVap69O9jJdMty4xlOaWmWZOY13b+ca6V1NiUtChQo50G741u1u+\
4nWPef7CmQOvLVtNbFBWKa9bzvzog5jVFS9qTM7HtKXqmPJB5Q6tXkxzdgnL4N/qfWVr++\
dszosdN5bFRIdfubMBjPpprj7awBFiTM5jokoeVQ/rIwwSdCTbFZVnQj3+AlPL+AvvNa/8="},
 CellTags->{"CheckboxCell", "Disclosures-Other", "Other", "Other-Checkboxes"},
 
 CellID->635776107,ExpressionUUID->"c59edbff-d2d0-47d9-a7c7-3052b290556c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a92701f7-30b5-4fe9-a3cb-9186da0e3570"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"39e7d82e-8e22-4089-b833-2d93e134c724"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"59969f6a-9793-4b82-b0d3-cebdd61400c1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{805, 943},
WindowMargins->{{42, Automatic}, {Automatic, 20}},
WindowTitle->"MaXrd | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.891245766221244`16.34266365032685*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"StianRamsnes__MaXrd-4.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"StianRamsnes__MaXrd-4.0.0.paclet\"", "HyperlinkActive",
                     StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJwtjs0KwjAQhIkUEfQhpHeNB1/AIp4UpFEQREpsN5KaNmF368/\
b20iZy8d8DIwRNMn1O/\
MfICNonPvIJqFkb4lVsrMOlLiaEU1P0ASnGaIXg7epPBMgSWKrW7mFFzgfAOURPdXw5B4P+\
oJVLGooeY4QPFn2+B3EvbOukiruc91QC1QUf7NYL1d9gi4dcKpm8coGH10DLStx+wFWV0Dm"}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], 
                 StyleBox[
                  ActionMenuBox[
                   TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "3", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "12", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}}, "Highlighted"], {
                   TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L185,C20) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "e9698567-5c2b-4046-9338-a2ea9bf2d65c", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 185, "SourceColumnStart" -> 20, 
                    "SourceLineEnd" -> 185, "SourceColumnEnd" -> 21, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{185, 20}, {185, 21}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{185, 20}, {185, 21}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L195,C30) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "addc9614-3f5c-4216-8967-74a8a5921ac5", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 195, "SourceColumnStart" -> 30, 
                    "SourceLineEnd" -> 195, "SourceColumnEnd" -> 31, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{195, 30}, {195, 31}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{195, 30}, {195, 31}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L424,C25) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "2df56d98-ef07-4980-b362-814867e5da1c", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 424, "SourceColumnStart" -> 25, 
                    "SourceLineEnd" -> 424, "SourceColumnEnd" -> 26, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{424, 25}, {424, 26}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{424, 25}, {424, 26}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L435,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "3ef5b1a1-8d52-478b-b1a4-d22bd5047a64", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 435, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 435, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{435, 18}, {435, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{435, 18}, {435, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L435,C35) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "828fd161-c858-4fbb-a2ec-1210201e24ca", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 435, "SourceColumnStart" -> 35, 
                    "SourceLineEnd" -> 435, "SourceColumnEnd" -> 36, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{435, 35}, {435, 36}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{435, 35}, {435, 36}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L447,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "4bff33d7-461b-4453-8e02-3c542285bb37", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 447, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 447, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{447, 18}, {447, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{447, 18}, {447, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L472,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "76d87650-421e-4f38-a7be-29ea7518e3b4", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 472, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 472, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{472, 18}, {472, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{472, 18}, {472, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L482,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "a43b3e4e-e0e6-449f-a585-9ddff3caabc7", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 482, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 482, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{482, 18}, {482, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{482, 18}, {482, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L482,C29) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "a513a232-951c-40d2-9eba-2b23185072d2", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 482, "SourceColumnStart" -> 29, 
                    "SourceLineEnd" -> 482, "SourceColumnEnd" -> 30, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{482, 29}, {482, 30}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{482, 29}, {482, 30}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L494,C23) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "65b70de2-b1ee-461a-b06c-7ad99ba889be", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 494, "SourceColumnStart" -> 23, 
                    "SourceLineEnd" -> 494, "SourceColumnEnd" -> 24, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{494, 23}, {494, 24}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{494, 23}, {494, 24}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    
                    TemplateBox[{
                    "\"The same symbol occurs on LHS and RHS of \"", 
                    StyleBox[
                    "Rule", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L88,C55) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "682a5d47-63b5-4d85-8a5b-27dbdc49e15f", 1473604302, 
                    "CodeInspectionFileIssue/PatternRule", <|
                    "AdditionalSources" -> {{{88, 67}, {88, 68}}}, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/EmbedStructure.wl", "Editor" -> Automatic, 
                    "SourceLineStart" -> 88, "SourceColumnStart" -> 55, 
                    "SourceLineEnd" -> 88, "SourceColumnEnd" -> 56, "Message" -> 
                    "The same symbol occurs on LHS and RHS of \
``Rule``.\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PatternRule", 
                    "The same symbol occurs on LHS and RHS of ``Rule``.", 
                    "Error", <|
                    CodeParser`Source -> {{88, 55}, {88, 56}}, 
                    "AdditionalSources" -> {{{88, 67}, {88, 68}}}, 
                    ConfidenceLevel -> 0.7, CodeParser`CodeActions -> {}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/EmbedStructure.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 8126449213346323709, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1473604302]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L518,C13) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "4b346a98-d47f-4822-940b-7f457b910eea", 1402949772, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 518, "SourceColumnStart" -> 
                    13, "SourceLineEnd" -> 518, "SourceColumnEnd" -> 18, 
                    "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{518, 13}, {518, 18}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 5698507354475994840, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1402949772]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L526,C17) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "2eeecd56-a9f4-43dd-8a2e-281dd679d9b3", 1402949772, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 526, "SourceColumnStart" -> 
                    17, "SourceLineEnd" -> 526, "SourceColumnEnd" -> 22, 
                    "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{526, 17}, {526, 22}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 5698507354475994840, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1402949772]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Expected context: \"", 
                    StyleBox[
                    "StianRamsnes`Global`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\"\\!\\(\\*StyleBox[\\\"\\\\\\\" (L25,C7) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "354b43c1-1e60-4761-9217-5cae0a6397c5", 1538315956, 
                    "CodeInspectionFileIssue/NotPublisherContext", <|
                    "Hash" -> 1260874954269615821, 
                    "MessageParameters" -> {"StianRamsnes`Global`"}, 
                    "Templated" -> True, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/MaXrd.wl", "Editor" -> Automatic, "SourceLineStart" -> 
                    25, "SourceColumnStart" -> 7, "SourceLineEnd" -> 25, 
                    "SourceColumnEnd" -> 16, "Message" -> 
                    "Expected context: \
**StianRamsnes`Global`**\!\(\*StyleBox[\"\\\" (L25,C7) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "NotPublisherContext", 
                    "Expected context: **StianRamsnes`Global`**", "Error", <|
                    CodeParser`Source -> {{25, 7}, {25, 16}}, "Hash" -> 
                    294405318996857715, ConfidenceLevel -> 0.99, 
                    CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with suggested context", 
                    CodeParser`ReplaceNode, <|
                    "ReplacementNode" -> CodeParser`ContainerNode[String, {
                    CodeParser`LeafNode[
                    String, "\"StianRamsnes`Global`\"", <|
                    CodeParser`Source -> {{1, 1}, {1, 23}}|>]}, <|
                    CodeParser`Source -> {{1, 1}, {1, 23}}|>], 
                    CodeParser`Source -> {{25, 7}, {25, 16}}|>]}, 
                    "MessageParameters" -> {"StianRamsnes`Global`"}, 
                    "Templated" -> True, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/MaXrd.wl", "Editor" -> Automatic|>], "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L25,C7) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[1538315956]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The specified Wolfram Language version does not match \
the paclet info value (13.0.1+)\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "d3d053fc-93a1-4946-bf88-a0cb54732e91", 210582271, 
                    "PacletWLVersionMismatch", <|
                    "PacletWLVersion" -> "13.0.1+", "ResourceWLVersion" -> 
                    "12.1+"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    210582271]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "58869ef4-1700-42ad-ae4b-d53a74031007"]]]]]], Appearance -> 
                   None, BoxID -> "58869ef4-1700-42ad-ae4b-d53a74031007", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.891245766221244`16.34266365032685*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"StianRamsnes__MaXrd-4.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"StianRamsnes__MaXrd-4.0.0.paclet\"", "HyperlinkActive",
                     StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJwtjs0KwjAQhIkUEfQhpHeNB1/AIp4UpFEQREpsN5KaNmF368/\
b20iZy8d8DIwRNMn1O/\
MfICNonPvIJqFkb4lVsrMOlLiaEU1P0ASnGaIXg7epPBMgSWKrW7mFFzgfAOURPdXw5B4P+\
oJVLGooeY4QPFn2+B3EvbOukiruc91QC1QUf7NYL1d9gi4dcKpm8coGH10DLStx+wFWV0Dm"}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], 
                 StyleBox[
                  ActionMenuBox[
                   TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "3", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "12", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}}, "Highlighted"], {
                   TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L185,C20) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "e9698567-5c2b-4046-9338-a2ea9bf2d65c", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 185, "SourceColumnStart" -> 20, 
                    "SourceLineEnd" -> 185, "SourceColumnEnd" -> 21, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{185, 20}, {185, 21}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{185, 20}, {185, 21}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L195,C30) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "addc9614-3f5c-4216-8967-74a8a5921ac5", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 195, "SourceColumnStart" -> 30, 
                    "SourceLineEnd" -> 195, "SourceColumnEnd" -> 31, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{195, 30}, {195, 31}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{195, 30}, {195, 31}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L424,C25) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "2df56d98-ef07-4980-b362-814867e5da1c", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 424, "SourceColumnStart" -> 25, 
                    "SourceLineEnd" -> 424, "SourceColumnEnd" -> 26, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{424, 25}, {424, 26}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{424, 25}, {424, 26}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L435,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "3ef5b1a1-8d52-478b-b1a4-d22bd5047a64", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 435, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 435, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{435, 18}, {435, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{435, 18}, {435, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L435,C35) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "828fd161-c858-4fbb-a2ec-1210201e24ca", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 435, "SourceColumnStart" -> 35, 
                    "SourceLineEnd" -> 435, "SourceColumnEnd" -> 36, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{435, 35}, {435, 36}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{435, 35}, {435, 36}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L447,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "4bff33d7-461b-4453-8e02-3c542285bb37", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 447, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 447, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{447, 18}, {447, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{447, 18}, {447, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L472,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "76d87650-421e-4f38-a7be-29ea7518e3b4", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 472, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 472, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{472, 18}, {472, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{472, 18}, {472, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L482,C18) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "a43b3e4e-e0e6-449f-a585-9ddff3caabc7", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 482, "SourceColumnStart" -> 18, 
                    "SourceLineEnd" -> 482, "SourceColumnEnd" -> 19, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{482, 18}, {482, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{482, 18}, {482, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L482,C29) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "a513a232-951c-40d2-9eba-2b23185072d2", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 482, "SourceColumnStart" -> 29, 
                    "SourceLineEnd" -> 482, "SourceColumnEnd" -> 30, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{482, 29}, {482, 30}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{482, 29}, {482, 30}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Calling \"", 
                    StyleBox[
                    "Plus", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" with \"", 
                    StyleBox[
                    "String", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\" arguments.\\!\\(\\*StyleBox[\\\"\\\\\\\" (L494,C23) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "65b70de2-b1ee-461a-b06c-7ad99ba889be", 1895517910, 
                    "CodeInspectionFileIssue/PlusString", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                    "SourceLineStart" -> 494, "SourceColumnStart" -> 23, 
                    "SourceLineEnd" -> 494, "SourceColumnEnd" -> 24, 
                    "Message" -> 
                    "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{494, 23}, {494, 24}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{494, 23}, {494, 24}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                    2279414284191965893, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1895517910]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    
                    TemplateBox[{
                    "\"The same symbol occurs on LHS and RHS of \"", 
                    StyleBox[
                    "Rule", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L88,C55) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "682a5d47-63b5-4d85-8a5b-27dbdc49e15f", 1473604302, 
                    "CodeInspectionFileIssue/PatternRule", <|
                    "AdditionalSources" -> {{{88, 67}, {88, 68}}}, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/EmbedStructure.wl", "Editor" -> Automatic, 
                    "SourceLineStart" -> 88, "SourceColumnStart" -> 55, 
                    "SourceLineEnd" -> 88, "SourceColumnEnd" -> 56, "Message" -> 
                    "The same symbol occurs on LHS and RHS of \
``Rule``.\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "PatternRule", 
                    "The same symbol occurs on LHS and RHS of ``Rule``.", 
                    "Error", <|
                    CodeParser`Source -> {{88, 55}, {88, 56}}, 
                    "AdditionalSources" -> {{{88, 67}, {88, 68}}}, 
                    ConfidenceLevel -> 0.7, CodeParser`CodeActions -> {}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/EmbedStructure.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 8126449213346323709, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1473604302]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L518,C13) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "4b346a98-d47f-4822-940b-7f457b910eea", 1402949772, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 518, "SourceColumnStart" -> 
                    13, "SourceLineEnd" -> 518, "SourceColumnEnd" -> 18, 
                    "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{518, 13}, {518, 18}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 5698507354475994840, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1402949772]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L526,C17) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "2eeecd56-a9f4-43dd-8a2e-281dd679d9b3", 1402949772, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic, "SourceLineStart" -> 526, "SourceColumnStart" -> 
                    17, "SourceLineEnd" -> 526, "SourceColumnEnd" -> 22, 
                    "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{526, 17}, {526, 22}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 5698507354475994840, "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1402949772]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Expected context: \"", 
                    StyleBox[
                    "StianRamsnes`Global`", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\"\\!\\(\\*StyleBox[\\\"\\\\\\\" (L25,C7) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "354b43c1-1e60-4761-9217-5cae0a6397c5", 1538315956, 
                    "CodeInspectionFileIssue/NotPublisherContext", <|
                    "Hash" -> 1260874954269615821, 
                    "MessageParameters" -> {"StianRamsnes`Global`"}, 
                    "Templated" -> True, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/MaXrd.wl", "Editor" -> Automatic, "SourceLineStart" -> 
                    25, "SourceColumnStart" -> 7, "SourceLineEnd" -> 25, 
                    "SourceColumnEnd" -> 16, "Message" -> 
                    "Expected context: \
**StianRamsnes`Global`**\!\(\*StyleBox[\"\\\" (L25,C7) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "NotPublisherContext", 
                    "Expected context: **StianRamsnes`Global`**", "Error", <|
                    CodeParser`Source -> {{25, 7}, {25, 16}}, "Hash" -> 
                    294405318996857715, ConfidenceLevel -> 0.99, 
                    CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with suggested context", 
                    CodeParser`ReplaceNode, <|
                    "ReplacementNode" -> CodeParser`ContainerNode[String, {
                    CodeParser`LeafNode[
                    String, "\"StianRamsnes`Global`\"", <|
                    CodeParser`Source -> {{1, 1}, {1, 23}}|>]}, <|
                    CodeParser`Source -> {{1, 1}, {1, 23}}|>], 
                    CodeParser`Source -> {{25, 7}, {25, 16}}|>]}, 
                    "MessageParameters" -> {"StianRamsnes`Global`"}, 
                    "Templated" -> True, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/MaXrd.wl", "Editor" -> Automatic|>], "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L25,C7) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[1538315956]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The specified Wolfram Language version does not match \
the paclet info value (13.0.1+)\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "d3d053fc-93a1-4946-bf88-a0cb54732e91", 210582271, 
                    "PacletWLVersionMismatch", <|
                    "PacletWLVersion" -> "13.0.1+", "ResourceWLVersion" -> 
                    "12.1+"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    210582271]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "58869ef4-1700-42ad-ae4b-d53a74031007"]]]]]], Appearance -> 
                   None, BoxID -> "58869ef4-1700-42ad-ae4b-d53a74031007", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd-4.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"196.629716`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd-4.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"196.629716`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/AutoCompletion.wl"], "Hash" -> 
                    "d481ce3a221fd9183c2bb9896103674cba83f5743614eb61c647fa903\
470ad3e"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/BrennanCowan.m"], "Hash" -> 
                    "d3a55707257e598dae780e0637844f1167227c82f0888748362b3d8ee\
271a784"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Chantler.m"], "Hash" -> 
                    "d7f639260db5226c1bd37aee9e46a1a450bc48f3901efa8a516d74ed0\
d19a1fc"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/CromerLiberman.m"], "Hash" -> 
                    "0756728aa9dcd6032b4d20a38abb9c225325aa440fe26282783cb3af6\
ef85eab"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/EPDL97.m"], "Hash" -> 
                    "f6189149f44d414b3b45757e156f1d63c14cb3b7bcfe94d2e45bbe395\
a6f31fa"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Henke.m"], "Hash" -> 
                    "e15004e5e5e93d5a8cb44cd6d7e532f892eb9928549c09ca355fe2dcc\
517677e"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Kissel.m"], "Hash" -> 
                    "48258c7f6efb5abf104cb49b5beec8f2935851e673201c7e8154877c9\
b2cec2b"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Sasaki.m"], "Hash" -> 
                    "cefc35a3c0f2533edb01db2ccdbd40ea3143845d9d06150a225428824\
5a7346a"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Windt.m"], "Hash" -> 
                    "06d00bbd568270b3d13c5921260744c63898ecfdd947d008b637cf216\
9c82433"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/xraylib.m"], "Hash" -> 
                    "45d34705d985ec78013d902bf445bd713f3e8b60f06b9b033bb965be6\
7f160fd"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/CromerMann.m"], 
                    "Hash" -> 
                    "d691b5e76a3cc36e0490f574bd2dc2a9a22d69e20520a1d5503265816\
4b35108"|>, <|"File" -> File["Kernel/Data/AtomicScatteringFactor/EPDL97.m"], 
                    "Hash" -> 
                    "f9097c48262fb96cdb8051dc171cb3f18c6f6c708b7040c3137f50be4\
6ffd54a"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
InternationalTablesC(3rd).m"], "Hash" -> 
                    "64b1c16641835d84a8da4c066db55a4765fdb7883f8f9937381d6fec1\
eadf9d5"|>, <|"File" -> File["Kernel/Data/AtomicScatteringFactor/Kissel.m"], 
                    "Hash" -> 
                    "5c823b4880f870ca0b2dbd727f15e517ce2ebd8be6a3c3c6ce4ef56e7\
3efb1cf"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/Kissel(modified).\
m"], "Hash" -> 
                    "e887aada90e103efca546ba737a7d73069ddf6073cafa51ec29f4c275\
48181a1"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/WaasmaierKirfel.\
m"], "Hash" -> 
                    "8879086a5b3ce8bbd214f1b0b4b7b57ab4a12679f8b83cafd53008651\
5d4e62d"|>, <|"File" -> File["Kernel/Data/AtomicScatteringFactor/XOP(2.1).m"],
                     "Hash" -> 
                    "554d7303c334dfa1d920a038590752f9c393df6eb420a5f366ffc162d\
316eef9"|>, <|"File" -> File["Kernel/Data/CrossSections/Metadata.txt"], 
                    "Hash" -> 
                    "717922da98872311c5918d8cc3e7e5180b15f18d165706f9e5923e0ca\
23b2ebd"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ac.dat"], 
                    "Hash" -> 
                    "a10ba733d1e8dd404aafc25383d10527d47cae526ac93c7ab98aa3f50\
c49e3dd"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ag.dat"], 
                    "Hash" -> 
                    "c5da01797515b0c03d75a5a44e66226d9d1295b9da13112c40a26fd9d\
ae505c7"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Al.dat"], 
                    "Hash" -> 
                    "e869578f1b30a405666e344c5e0b4b2e98579e6dfe1d879799963be71\
027621a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Am.dat"], 
                    "Hash" -> 
                    "8f593c4cdcf1bda52d239f329bfca8ad561e8708e5cd98114a0efd4dd\
a2bd5c3"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ar.dat"], 
                    "Hash" -> 
                    "ad2750454a0d90cef4123bb9d7978b87e87ef0c9cf05977f4e046d85c\
a874959"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/As.dat"], 
                    "Hash" -> 
                    "0b5392f676ba2c5e6c7cb20a767b27a93773ff27c7103be44bcd9e32b\
39b7191"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/At.dat"], 
                    "Hash" -> 
                    "72bf158f346c7da119da384db00386fb4efda6131dd1e83b7c1f1d137\
f0da347"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Au.dat"], 
                    "Hash" -> 
                    "38014c96998005ae089b2f89fc8ae5315b5f5f51d354285d8f35ba752\
c2ebe12"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ba.dat"], 
                    "Hash" -> 
                    "ff9a6b710ab8228aeb038586950c743f10c4c767c0234ec841c28af1a\
84e3de5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/B.dat"], 
                    "Hash" -> 
                    "e690bde2639044293a282dd74ff5a93a97a5ab5a65a1efb1161e00250\
2cd0e58"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Be.dat"], 
                    "Hash" -> 
                    "1326d416980d4c7e04d170cd9c851314289be9b464abd01d3ffc45980\
ced2e7f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Bi.dat"], 
                    "Hash" -> 
                    "f3e692914da1a8ca38261bbb5f768484d656e7061413d5bd3dd230489\
15d6407"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Bk.dat"], 
                    "Hash" -> 
                    "90cb012fe5952d0db46ff3c908d3466c7c9fb63e1426f33667a00584d\
4826a76"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Br.dat"], 
                    "Hash" -> 
                    "510616d48c3196368a00a87cc570fa819c1ceb37a3d516bdf1faf595c\
6febb6b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ca.dat"], 
                    "Hash" -> 
                    "1cb0bb6487bacc402705ac6f7ffa0e2d87ed4a042749e81986ed79b06\
8252989"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/C.dat"], 
                    "Hash" -> 
                    "c9167c4676b6ba85544400c0a102966ca244e86242c05e9e7f3bfd931\
bd8f5a2"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cd.dat"], 
                    "Hash" -> 
                    "099f16ac467843b8daac7160f5e894fc58a86823748c0ca61aae9e40d\
e520949"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ce.dat"], 
                    "Hash" -> 
                    "95b354cae772f698599549e598582a231bb4f3a1259e16c22041c5b9d\
b082920"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cf.dat"], 
                    "Hash" -> 
                    "5f1d65cefd9129e83f27b7d05ea4ba2b88f95a1b9c85aab1ba65fe58a\
a11b169"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cl.dat"], 
                    "Hash" -> 
                    "ba69559846143ac0ec1fcdbc8f91cfb27b275128b7afd8233d4eccc43\
e4d4a64"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cm.dat"], 
                    "Hash" -> 
                    "473099743b7b8034d571a12ebf702fd64b922e0b6809f08437b74897b\
e8155c9"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Co.dat"], 
                    "Hash" -> 
                    "b0cbb70766a142047e47083492f59ccbc19badbe22bb1bc5baf30e863\
a88b66a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cr.dat"], 
                    "Hash" -> 
                    "6df201223c193e3a031ab621b141ad09167680b1dcffb52e140848aa7\
ee18be4"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cs.dat"], 
                    "Hash" -> 
                    "512019aa1e0a1bbac6581dfb97afbeb6d8990c39d5754b67bf012d274\
b9f7e87"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cu.dat"], 
                    "Hash" -> 
                    "f21500809d444592db11654a24ee88afa47c41706bc972f2f8914bf4c\
e549737"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/.DS_Store"], 
                    "Hash" -> 
                    "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b\
7fd8ec3"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Dy.dat"], 
                    "Hash" -> 
                    "4f4dd819d308a5b116ae35512a92fbf285a9fb62f5cf02d5e925afe17\
b1ce13f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Er.dat"], 
                    "Hash" -> 
                    "78dffa36403fa2f80a44f2ee2caae35f88f31906845b3cc7bef4d8c58\
ddb91e8"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Eu.dat"], 
                    "Hash" -> 
                    "396c324d099fdef2938530569ed94a9ca2a2e09f54de7641d62d84b00\
b208d04"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/F.dat"], 
                    "Hash" -> 
                    "6f8c8881ee42438690d2df25bbb0bb52e7e26f5acd207805b154892c2\
8e26af0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Fe.dat"], 
                    "Hash" -> 
                    "cd8efc8802b47d3cd656c4702ec42a2cc48a7d246eb80f5a0688365d8\
f608532"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Fr.dat"], 
                    "Hash" -> 
                    "8eaa4a61006c8c47778909a99c57ab711d916bfba3957e7bc48895d0c\
7659865"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ga.dat"], 
                    "Hash" -> 
                    "25f5333e8f662ad86dd814bae39e5693da5eda917e86f548e921e137d\
487ea57"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Gd.dat"], 
                    "Hash" -> 
                    "44ac2a0cbd0e4002403f73fcb456ef47f0c8d8e7ddf36b58dc6bd9859\
daaaeae"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ge.dat"], 
                    "Hash" -> 
                    "2b8f3cc89127a4dd0bfcd8c090d5fdf379a29b368a0a14b6b0d3ea2d7\
55ae7db"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/H.dat"], 
                    "Hash" -> 
                    "803b8539ade04ef5c826262432916ccebb7d8602ddb6b0fde8a8cd5eb\
307f016"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/He.dat"], 
                    "Hash" -> 
                    "c25519fbd9ed6fd6dbd3afcd2744afbe19403681d660a12bd12b9129f\
201e85a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Hf.dat"], 
                    "Hash" -> 
                    "ee09ef9bd3130228b7a9e6805fe7dbc72735c550fdb66d9aa902f36a4\
1c69e82"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Hg.dat"], 
                    "Hash" -> 
                    "40cc80db14ce8aba9f7622a4dafd70e66c37e7ed592c97aedea776a26\
01eea52"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ho.dat"], 
                    "Hash" -> 
                    "c7d085e71ca708e836302de008e77fe10331d89e122e26e503a655bd8\
0c46bc5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/I.dat"], 
                    "Hash" -> 
                    "1687e637f542c8a792794b0b8263a7f8656f213497d887ffe862dbcae\
d8d0a6f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/In.dat"], 
                    "Hash" -> 
                    "9741a74eab1d475885792800e2ba668c466674c271cddb805e5985b81\
75a59fc"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ir.dat"], 
                    "Hash" -> 
                    "2e63bfcb144e8ff296408232f6408898bf0fd450a94c704c97c15e06f\
0727758"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/K.dat"], 
                    "Hash" -> 
                    "1e536d3d1e88d82c9d10939be942fca95230fb9046a9273e9985688e8\
c00bdd6"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Kr.dat"], 
                    "Hash" -> 
                    "7c94c788650d7c4be5ecd3dfaaa745f7d7ddf4f5294879aeac56a1c10\
6fe553e"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/La.dat"], 
                    "Hash" -> 
                    "49cf5ef94a8b93334ac898a2fbe0941253ef24ae4eb87923d68ffe128\
0f1258d"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Li.dat"], 
                    "Hash" -> 
                    "0cc9a7379196d82da19b0beaf6c35536a4aab73eb5d276de3c9df8101\
0b96e06"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Lu.dat"], 
                    "Hash" -> 
                    "6148bb5fb045238df4b102289065ab8026859ed71dd7624b854f51ded\
09df717"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Mg.dat"], 
                    "Hash" -> 
                    "5cd5f187e736fc3dd74f7b222ef5a0e0c3feb0d236042cc0697398990\
407909b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Mn.dat"], 
                    "Hash" -> 
                    "09fa6f546e070caaef4723afc65ff739268926fb1d0eeb9bcd7f4ed14\
bc58bf0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Mo.dat"], 
                    "Hash" -> 
                    "9d26676f3139f07cb44e74755c76f5fe8143714b4eeda8240941f5deb\
ecea77a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Na.dat"], 
                    "Hash" -> 
                    "1cd4a0310479fcd589f9675d82e6162d130eb174817fa48e603b5d290\
65b466f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Nb.dat"], 
                    "Hash" -> 
                    "46a7acfb2f994fb86b2e6c4208a51be7bd3a2135627729e992d94a340\
db108ba"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/N.dat"], 
                    "Hash" -> 
                    "df1c0f93f0f9180de4ba34c6f2bd68b2c959918f187979aa91d418678\
96518ae"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Nd.dat"], 
                    "Hash" -> 
                    "b22b25e301e3939fb206c126c59f9083febc2d5622a3be5db068c3e6b\
68cd79a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ne.dat"], 
                    "Hash" -> 
                    "890c65ccaf190e31f5b0b20242aadf8abd971201ee8694b640d20a130\
ff2609b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ni.dat"], 
                    "Hash" -> 
                    "84059baf38c3f6e8878834776d758129d238d287cdf7c5c0d2981edff\
4e99e09"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Np.dat"], 
                    "Hash" -> 
                    "d77358807eb69c2bf53093ec63b103d1bba9b725395eb666bf1c4038c\
b618368"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/O.dat"], 
                    "Hash" -> 
                    "9c28a1a0d0ba767e8492533052a77dcaf69ed2d203522863c49e2bd34\
b8e24ae"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Os.dat"], 
                    "Hash" -> 
                    "279a05c0277e1b294470a4f7e9e246a9ee5675d2e41d5261cec03098f\
e28f2d2"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pa.dat"], 
                    "Hash" -> 
                    "e3565298dcbd935edbebcd506e1eed5de346f61355cca77343a8beac5\
38c84a8"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pb.dat"], 
                    "Hash" -> 
                    "b164e8c4af5b26f55efb5a9b8f0aa7f225494cfc29fa689bfd6357bb1\
9195ccf"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/P.dat"], 
                    "Hash" -> 
                    "2a5f36f7f324407a981e85c2140687d214a62879a36e1706a60364155\
5487a61"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pd.dat"], 
                    "Hash" -> 
                    "e92c0d8671095fdb07da5be2e6af17cefc3f6e2a560e3ecc0bc8ad393\
4246fc1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pm.dat"], 
                    "Hash" -> 
                    "7fc9066a08c0004a7309430fbcf2ba1b93db24497fb8e3005c1a6c4e6\
ffbeb93"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Po.dat"], 
                    "Hash" -> 
                    "36ab5f840eb6e290b17ad3b811cef0be8e069c765962d928d29eed283\
b6b444d"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pr.dat"], 
                    "Hash" -> 
                    "0ef2a6be21272f090df0ebf8aae16600bd36b483561e56393b76b177c\
7a38608"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pt.dat"], 
                    "Hash" -> 
                    "c9b8ea1b266168a664470c48c75bc5a60edbff0d3578811a4f7f54591\
035aebc"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pu.dat"], 
                    "Hash" -> 
                    "f0f9c3a55759e7b516a7b94c179c454c0864cc9880c1d6d221443b5b4\
93fdd7e"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ra.dat"], 
                    "Hash" -> 
                    "36b696ae7a5ae03c765db748b5e0da1e297c40a22ac60fe58e01d0d41\
bf94701"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Rb.dat"], 
                    "Hash" -> 
                    "0ebc3838c8222c440a103aa8bc84fedbcfa4933164e09ab09ce6a858e\
f92e171"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Re.dat"], 
                    "Hash" -> 
                    "bd312792ceaba0ba419f41d7e24edea6eaa75532f67402024c59d1adc\
f197db1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Rh.dat"], 
                    "Hash" -> 
                    "f3268e88f91053b42b7e29adc9bcb7f673691013df63e1a7f69156e27\
5edfdea"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Rn.dat"], 
                    "Hash" -> 
                    "dee55a49714cb9ea174d8bbfd40c03c86186829f7aa0efa307afdbcb3\
934c43b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ru.dat"], 
                    "Hash" -> 
                    "1dd1f515c0dc248ddea6f407688f8f9f691efa4dcb0aebfb2b18bbc1d\
87a85fb"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sb.dat"], 
                    "Hash" -> 
                    "806ae8e38683e7faeec79c21fbb6d083c675139adf7fb65ab43e2b75a\
e595f06"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sc.dat"], 
                    "Hash" -> 
                    "7f4a78b122d71805a5e1f426e8f2b6edfa845eb54239156bba0181a8e\
680d533"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/S.dat"], 
                    "Hash" -> 
                    "883170b9940bb06c760b28c18d747431b82771bba95ccd8424bdc3bc2\
ed7119c"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Se.dat"], 
                    "Hash" -> 
                    "c7d47470e58cc24312992cb7a654ac34bd55cdb6d3313e6562cd14ef7\
4b485cf"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Si.dat"], 
                    "Hash" -> 
                    "5b865f3c5712bfe9ac660fe70b35dc015deff985a07852863f7496dcd\
24fece5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sm.dat"], 
                    "Hash" -> 
                    "27ef4f314d3c73d3f5bd5298d5be89c90e0f635a1785a790ab1fa24ac\
aa76712"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sn.dat"], 
                    "Hash" -> 
                    "33ef8df19cf6fecd084c7d31b6204457a9ac295bb77d7dffe902e965f\
1cb5a4f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sr.dat"], 
                    "Hash" -> 
                    "03f7f59d4bf6c6d0b14d83ab83cc13b3dbd56c1c0ce6c5d08f09468bc\
67a0aa4"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ta.dat"], 
                    "Hash" -> 
                    "a516b6bc2112642fe65c757246db7054e45b657c220154235d0a9e923\
234c5d9"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tb.dat"], 
                    "Hash" -> 
                    "883160818162eb7983d14e495a144b0f3e7224eb498cb74a65122483b\
3e9e4f3"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tc.dat"], 
                    "Hash" -> 
                    "1013b712abb0cb42265b1ab05cb185ee9af44825171ac73e78414ca85\
b331a9a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Te.dat"], 
                    "Hash" -> 
                    "c22cc7b934b8d09adfb6a8b7ca4e0dad6585825b3920fbf04bdc37f2a\
438e524"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Th.dat"], 
                    "Hash" -> 
                    "18d078ec154761d055df36b3396d341b6d0759667532bdbd181904b3a\
4c76cd0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ti.dat"], 
                    "Hash" -> 
                    "bb08ecf78ab525508494828ca4e7127a888301c0f70f4e349fdd55ebf\
8da9feb"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tl.dat"], 
                    "Hash" -> 
                    "ecea6d0b8709caebf4ebae2c4312c7c23356d564f1fb0418f42ee6377\
47d5ed1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tm.dat"], 
                    "Hash" -> 
                    "5e6728f3070ccd3a8222bd6cbd7e2135103892af3d4db268d2f914e89\
ffb42f5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/U.dat"], 
                    "Hash" -> 
                    "b87d17cf8be8771985544094c60149a81dcebcb58b517fdf0a29fa28c\
38ed3f1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/V.dat"], 
                    "Hash" -> 
                    "a127afc742f415109dd1d148a57f4349ef6dabf92051b81abc4acfdc5\
a185e20"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/W.dat"], 
                    "Hash" -> 
                    "fc27a2429c712bee842c3173eb9af23c219399341fc349836382b162e\
7521fc1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Xe.dat"], 
                    "Hash" -> 
                    "e66adff7d2cba2c6c26b3fa7fa2733ed9f52afa222ff581ced0a6a860\
3501866"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Yb.dat"], 
                    "Hash" -> 
                    "e45e089b9720c3f36514c61218dcdad68b06819de60c22dd50dda8052\
4fbcc15"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Y.dat"], 
                    "Hash" -> 
                    "c182709ca6c1b5c6892f402db6b1d0e2f7a0094c50f77a5b41db801c2\
9543fb0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Zn.dat"], 
                    "Hash" -> 
                    "f14819caeecde08e106698351c356025118ca1c5267ad2d1d9d0cee87\
26e0a4d"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Zr.dat"], 
                    "Hash" -> 
                    "ac21068071b887996db5807c33130065e7286c2949f897f0b79fbc73a\
4d40db9"|>, <|"File" -> File["Kernel/Data/CrystalDataDemo.m"], "Hash" -> 
                    "dbddbae9428f15e2be1d8267f030e97a9a37c14c7c9c39af92c8cc88d\
d68f63b"|>, <|"File" -> File["Kernel/Data/.DS_Store"], "Hash" -> 
                    "0a9e5b9d8ccbaaee18d29175bb09ea5c39ba1e4b8cc06a5020fa29e83\
4941c96"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/COD_2203515.cif"], 
                    "Hash" -> 
                    "897a66edc922710bf9fd1fadef107558c926d72cbb724e60760fbdf28\
7bf5de2"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Austenite.cif"]\
, "Hash" -> 
                    "beb8cc3ba3e94ee1d66cdfef3b6a55dd9330273a0be8d72aa840e16bd\
169f7e9"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Ferrite.cif"], 
                    "Hash" -> 
                    "62c031e196d83458a87befce478ea543badc7c133630d3e044eee9817\
2ac42e0"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/Ice.cif"], 
                    "Hash" -> 
                    "06dbd76c98c65ca746931e32628cf2d3541943a91630c1711c518eec7\
1aa7353"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/LaB6.cif"],
                     "Hash" -> 
                    "db8398f0183b6a93e24764f4eed7c8a1174f6bf567d615ef57d1c26a3\
722effa"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/LiCoO2.cif"], 
                    "Hash" -> 
                    "62c9a12d53a9356ddd7899d31e4285708decefa6f3412ede5c4281248\
d7203e2"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/LiMnO4P.cif"], 
                    "Hash" -> 
                    "3279cabd383128541c70e4d177e7e812cddb8029b02b23ab78182c381\
b3b29e2"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Perovskite.\
cif"], "Hash" -> 
                    "5af7ef95cae91f82ac05a4683c1dd00b0632bb48fda13673ac24373f7\
38c80ac"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/Po.cif"], 
                    "Hash" -> 
                    "304bcfc7e7fbb948b3f54de4b348bff7a43547715af80b6c90f8bf51b\
c85144c"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/PrussianBlue.\
cif"], "Hash" -> 
                    "fcc2bd9e648ffc9a04e94f7e49ab556d7b19facb665e701b19da57066\
0014611"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Sodalite.cif"],
                     "Hash" -> 
                    "1c6ac818ef92844fa31660cb9c9358b95845069e7f6f7faa609124466\
9d90c57"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/W.cif"], 
                    "Hash" -> 
                    "269e5afde07ecf81453373beb8cae4aa814a4275025b1da910add5883\
f3e14d7"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/Zn.cif"], 
                    "Hash" -> 
                    "f76e49657ef3871835565410b8825a1bfb4a77008f4eb764fdcfd90a8\
80a1392"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/ZnS.cif"], 
                    "Hash" -> 
                    "35f86f192f665d6df87d08d99f8541cf1d9070e264208f28a89dabfac\
8247eb8"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Ferrocene.cif"], 
                    "Hash" -> 
                    "17c4d740566f03d29dbe54f4a5f0e166788946397d8726ef19c63f6df\
41967f3"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/IUCr_produced_with_\
crystals.cif"], "Hash" -> 
                    "8cad913695e1ab04f880a77fc6d30ea4cc7ce2aba082e263242647ce7\
21f2c55"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/ThioureaFerrocene.cif"]\
, "Hash" -> 
                    "a6c48f1e74fd021bb1a7ac5d8ce3c36ed27d09b8a0f28361e6689df51\
9d19c0f"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Yoderite.cif"], 
                    "Hash" -> 
                    "72d3bd5b774c95d23867cbcdc9dc2d3738d0b8d08e334aadcbadb0e58\
f45d876"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Hexagonal_hk0.jpg"], "Hash" -> 
                    "ffe1f88b0b5ea9cc302249ecfed0d3e4ff8940f00955f53ae5569e2f8\
c0911fb"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Hexagonal_hk2.8_165K.jpg"], "Hash" -> 
                    "1dabcf332ad59320fecae425040532219bb88a8cbd66191a5badc49aa\
031a4c8"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/Laue.\
png"], "Hash" -> 
                    "0adbdf83360a41c975d280b997c4f6511eacdf9cd4a315ea0aee69e10\
34b5b6f"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Monoclinic_h0l.jpg"], "Hash" -> 
                    "9b764dcc7715ebe198c9952dfc1b2c4fb9742480893c375fe4aa4b476\
3733b44"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Monoclinic_hk-2.jpg"], "Hash" -> 
                    "0745a4cb25c2cfbd000970b4f4637ecbfe211d5370bee36d8cc94d153\
6fcefc9"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/Trigonal_\
hk0.jpg"], "Hash" -> 
                    "9d889df330655060e4878adedeb719c8e991f789317b711d8c0968457\
18aac93"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/Trigonal_\
hk1.jpg"], "Hash" -> 
                    "b7cef8b98a3cfdeaeffdbc449e69e8103a87cce2f6643d2fac4e1890c\
c6645ab"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DIFFUSE/diffuse_input1_\
crystal.txt"], "Hash" -> 
                    "4d72d8d5aa9b98410e330fab0c81611be670fe5000f4fa27fe4989791\
30a6ba8"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DIFFUSE/diffuse_input2_\
setup.txt"], "Hash" -> 
                    "5e33dad55bbc5509209ee98fe30b6d45976b0b3c6d3f836b57ae4bce5\
2ba93e6"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DISCUS/fourier_data.dat"], 
                    "Hash" -> 
                    "20e3ea002a5f7f9f09a10f09e696ca764462213e17a86081e5f66c1ab\
b3e7ac3"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DISCUS/ThioureaFerrocene_\
5x5x1.stru"], "Hash" -> 
                    "f52b863fa24147224aa9fdb6f783988fe575067706ed28501db3d3410\
0d3e4a9"|>, <|"File" -> File["Kernel/Data/ExampleFiles/.DS_Store"], "Hash" -> 
                    "1e930aae44724689fff614826f71797861b784672fb640479348a8c9f\
a8dbcd2"|>, <|"File" -> File["Kernel/Data/GroupSymbolRedirect.m"], "Hash" -> 
                    "7abde3585a337e34e7134f28bbef449e18596ab31f723b257c18c352c\
236aab6"|>, <|"File" -> File["Kernel/Data/PeriodicTable.m"], "Hash" -> 
                    "f57f887c87c1017f722b06662b2409f6e0c72c9b8675dcec10ad9343b\
6b623ef"|>, <|"File" -> File["Kernel/Data/PointGroups.m"], "Hash" -> 
                    "aae508b240f82bf41501acc156dba48a5df977e0dedda935da4ecb87d\
5044aeb"|>, <|"File" -> File["Kernel/Data/SpaceGroups.m"], "Hash" -> 
                    "4bc9ea97080603425c4f27feec27bef87cec9364aa1d0ae8207e27e61\
6700152"|>, <|"File" -> File["Kernel/Data/TransformationMatrices.m"], "Hash" -> 
                    "9dc765143fda2ee1605e6ada93e08db5d048ddd1f7a53cedc5c4a1719\
b2c60da"|>, <|"File" -> File["Kernel/Data/UsageMessages.m"], "Hash" -> 
                    "f5b46456fe0c7ed422f1f25b0075dd720d635df03160d1b0386d35412\
d7fc834"|>, <|"File" -> File["Kernel/Data/UserData/CrystalData.m"], "Hash" -> 
                    "dbddbae9428f15e2be1d8267f030e97a9a37c14c7c9c39af92c8cc88d\
d68f63b"|>, <|"File" -> File["Kernel/.DS_Store"], "Hash" -> 
                    "a8aa2029bce408117ad687ba1bc1ede0c388221ccf3901f28afeadffd\
81b57b6"|>, <|"File" -> File["Kernel/Functions/AttenuationCoefficient.wl"], 
                    "Hash" -> 
                    "0256448428b8d01183f059c65dd8fce6a026733e1f14fa6c8ef0c6b6c\
6c06e4a"|>, <|"File" -> File["Kernel/Functions/BraggAngle.wl"], "Hash" -> 
                    
                    "eed596025bcdcb1e384242cb85edf4485d99198ed2f56401df4b3c3b0\
a18f1c4"|>, <|"File" -> File["Kernel/Functions/ConstructDomains.wl"], "Hash" -> 
                    "a7a11c517ccaec9eafa395bdeb09c73268831aa3b2e5444dec001e98b\
771ff10"|>, <|"File" -> File["Kernel/Functions/CrystalDensity.wl"], "Hash" -> 
                    "fccb5b6d3bfdbcd7624fb7801c28298ea01fac47e4b9c8e910bf82cdf\
ea9f13b"|>, <|"File" -> File["Kernel/Functions/CrystalFormulaUnits.wl"], 
                    "Hash" -> 
                    "7f49045d2bbf3e8ca64ca5b1bb50a7bd8dbeda299a3d5aed1b765d744\
782c941"|>, <|"File" -> File["Kernel/Functions/CrystalPlot.wl"], "Hash" -> 
                    "bfcfe1021a30fcae2f33ab93de3e8c58b4df0291fc27ea253bb12953f\
93f480d"|>, <|"File" -> File["Kernel/Functions/DarwinWidth.wl"], "Hash" -> 
                    "4348dc4dec66e6f8cccb146c7c3c9bb26e87c0941a90eeacc01f92e1f\
83b04e4"|>, <|"File" -> File["Kernel/Functions/DistortStructure.wl"], "Hash" -> 
                    "6d884d4bc070e165279bc97e3b405ebcb900a668297ad022e70807da7\
566b924"|>, <|"File" -> File["Kernel/Functions/DomainPlot.wl"], "Hash" -> 
                    "eb45a0929a913e393a4990f0f9244f6835a98f3b613dd259f6acd26e4\
47a5191"|>, <|"File" -> File["Kernel/Functions/EmbedStructure.wl"], "Hash" -> 
                    "c97052b153119202fbaa302b29b705e397eafe8a533fa377cc4bcd03e\
3e8a8db"|>, <|"File" -> File["Kernel/Functions/ExpandCrystal.wl"], "Hash" -> 
                    "a6034fda60822de4557d913859ea2947a43d713f1ce77c10e1191014a\
a410f74"|>, <|"File" -> File["Kernel/Functions/ExportCrystalData.wl"], "Hash" -> 
                    "d4277f12db0135b8d6bf2f7831a460372ce9669fdd9db8bb0c4b266e7\
1e24e26"|>, <|"File" -> File["Kernel/Functions/ExtinctionLength.wl"], "Hash" -> 
                    "386024c166fe7a6f7a188b3612274ac04842bb7b71431f6331aeef54e\
877a3d8"|>, <|"File" -> File["Kernel/Functions/FindPixelClusters.wl"], "Hash" -> 
                    "e714b8e2ae19a8dc498c428a3e024f6df63f2ac360f7a8d87a1b917bf\
029ab0f"|>, <|"File" -> File["Kernel/Functions/GetAtomCoordinates.wl"], 
                    "Hash" -> 
                    "9e0a2383b0212ce0c43287179492ab49ba4e375b049042dc0ef73b394\
633de30"|>, <|"File" -> 
                    File["Kernel/Functions/GetAtomicScatteringFactors.wl"], 
                    "Hash" -> 
                    "19fbb7c4c6d2659bd0d220cf4c5b3df1bb9c44648c86c6fdb83ef3ac4\
a382048"|>, <|"File" -> File["Kernel/Functions/GetCrystalMetric.wl"], "Hash" -> 
                    "8d489e9012ec419b398f14b4d36999fe67a2521db69aaafaab0031972\
1c4bd2a"|>, <|"File" -> File["Kernel/Functions/GetElements.wl"], "Hash" -> 
                    "ccf1007c329f292875eae5e31e7a4defab2bc2f0b99bbacb992a8c36e\
cf4e1fc"|>, <|"File" -> File["Kernel/Functions/GetLatticeParameters.wl"], 
                    "Hash" -> 
                    "fa71028bdb89af26340cdb9dc3215e7dea727330d3cc212627a7a95ea\
bf1bc5d"|>, <|"File" -> File["Kernel/Functions/GetLaueClass.wl"], "Hash" -> 
                    "a20a452b311c3b0031aebbd5ba5f848c8619b09029f446d8fb9251fb0\
495c92b"|>, <|"File" -> 
                    File["Kernel/Functions/GetScatteringCrossSections.wl"], 
                    "Hash" -> 
                    "e627a84d2461b849ea96622252901f480b3926adb526e346b9bedd2eb\
ea0eb9f"|>, <|"File" -> File["Kernel/Functions/GetSymmetryData.wl"], "Hash" -> 
                    "d9469ba283af825c4f9c58db8374ab0d0162794efb26803073a2b617f\
76ba4ad"|>, <|"File" -> File["Kernel/Functions/GetSymmetryOperations.wl"], 
                    "Hash" -> 
                    "46e6d558f0378b15bfbfd5a926ce439f07f9c084ef664d3337ccb281c\
e36ff89"|>, <|"File" -> File["Kernel/Functions/ImportCrystalData.wl"], "Hash" -> 
                    "0f07da648aaecc5edf848d10ba4add05f184410d0d62ffb0df133c35d\
b0c9822"|>, <|"File" -> File["Kernel/Functions/InputCheck.wl"], "Hash" -> 
                    "04a43638d83c1bbcf17c3036019d22a0f16a85a2dd986c4a068ce99d6\
9eb84c1"|>, <|"File" -> File["Kernel/Functions/InterplanarSpacing.wl"], 
                    "Hash" -> 
                    "23764f393b86860c5d8f966f9ee56eb05d7f838fcaa444991a20c1d05\
510c4d5"|>, <|"File" -> File["Kernel/Functions/MergeDomains.wl"], "Hash" -> 
                    "5854a38caf4d8f7d33a95afab0c3472f6548f43930329253bd9a97326\
60d166f"|>, <|"File" -> 
                    File["Kernel/Functions/MergeSymmetryEquivalentReflections.\
wl"], "Hash" -> 
                    "d3000053627452a4b65a2c2c1e07098e79832b6cbe90d91869e45f533\
0cfdc90"|>, <|"File" -> File["Kernel/Functions/MillerNotationToList.wl"], 
                    "Hash" -> 
                    "44e3370540388a59adf8bf36b0bc6dff8e8b105ce4185012609c09530\
96b1e53"|>, <|"File" -> File["Kernel/Functions/MillerNotationToString.wl"], 
                    "Hash" -> 
                    "ad355e7ae9945d08d3b294d42c6ccfb43147a6ff16afed57b0d025b74\
aaeb1f6"|>, <|"File" -> File["Kernel/Functions/ReciprocalImageCheck.wl"], 
                    "Hash" -> 
                    "0265f6f726b554f2d76ff741b863ee530042ccd518f63d67fed1b5d34\
533ca9d"|>, <|"File" -> File["Kernel/Functions/ReciprocalSpaceSimulation.wl"],
                     "Hash" -> 
                    "3af58a11f3c5db29d72b015293296204c8b4e412be405e526c6d14ae9\
8f53120"|>, <|"File" -> File["Kernel/Functions/ReflectionList.wl"], "Hash" -> 
                    "2c418b1ef5704978a15b80b03bb1aabec555b163196faa9df092cb015\
822f31a"|>, <|"File" -> File["Kernel/Functions/RelatedFunctionsGraph.wl"], 
                    "Hash" -> 
                    "b76eba42677999b244a47bff6a6d99812490de25e1567493745de3945\
0407c9d"|>, <|"File" -> File["Kernel/Functions/ResetCrystalData.wl"], "Hash" -> 
                    "5d7f36dd2767af65cd3550da1b92b284176e01da6f8198548413d622d\
27a1d38"|>, <|"File" -> File["Kernel/Functions/ResizeStructure.wl"], "Hash" -> 
                    "335d6435f4d9b38d83adc42deba535b7a9ae74926c5ca2c2fa030dc03\
23abe30"|>, <|"File" -> 
                    File["Kernel/Functions/SimulateDiffractionPattern.wl"], 
                    "Hash" -> 
                    "0b1f58e3e536bce50db5a3024f34e71a3375c7d691e2ad1530ec86aac\
53fd2ac"|>, <|"File" -> File["Kernel/Functions/StructureFactorTable.wl"], 
                    "Hash" -> 
                    "3ef81a826eec6f79d480aadfad18ef05d18a29b7be41a477ad7c99e58\
c9e3386"|>, <|"File" -> File["Kernel/Functions/StructureFactor.wl"], "Hash" -> 
                    "a70924effd16473ce4e848e2bdea73ed4e3ffc73cfdba70d7804fcaa3\
c430492"|>, <|"File" -> 
                    File["Kernel/Functions/SymmetryEquivalentPositions.wl"], 
                    "Hash" -> 
                    "727f2caaeb3f217ea540759eda3911e709ef214f69be027156fa7f38f\
cbe35af"|>, <|"File" -> 
                    File["Kernel/Functions/SymmetryEquivalentReflectionsQ.wl"]\
, "Hash" -> 
                    "45cc1ee34485a582311aeec9b207329b639755543ec5d0576e64c45bf\
57336cf"|>, <|"File" -> 
                    File["Kernel/Functions/SymmetryEquivalentReflections.wl"],
                     "Hash" -> 
                    "e0f61a62815314837f9bf5595edfeb53b8646e00bd13bb47fb60bfb08\
1f9d908"|>, <|"File" -> File["Kernel/Functions/SynthesiseStructure.wl"], 
                    "Hash" -> 
                    "dafeeba6b2a12598f9bafa7389b145c47d2228535cf28410b8491a590\
0d0787a"|>, <|"File" -> File["Kernel/Functions/SystematicAbsentQ.wl"], "Hash" -> 
                    "52774d7d4a1de8ed30889b44adb62be91379b9b30e3fe63ae8252dfc9\
310b864"|>, <|"File" -> File["Kernel/Functions/ToStandardSetting.wl"], "Hash" -> 
                    "cc6cbe4c459a650352512cd31668039c1897dfaa3c678ef999d6aa7c5\
707425b"|>, <|"File" -> 
                    File["Kernel/Functions/\
TransformAtomicDisplacementParameters.wl"], "Hash" -> 
                    "f637c2fe9518655bf73bc754769b31d7a075c2d987c160decd5acba02\
4df66bf"|>, <|"File" -> File["Kernel/Functions/UnitCellTransformation.wl"], 
                    "Hash" -> 
                    "76ab89a43bf4b89b720bf5623c525cbb650255d4ea998c765f1d8be27\
a59c31b"|>, <|"File" -> File["Kernel/MaXrd.wl"], "Hash" -> 
                    "bce07db6bcdfb0f84db7e52f209011fc4d0c39b8a261badd17808d02c\
cb305af"|>, <|"File" -> 
                    File["Documentation/English/Guides/PackageOverview.nb"], 
                    "Hash" -> 
                    "08d4b80bc2d57f8cb8f5b8c861753d22bf51ebba8b50787645724cf34\
6af38bb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AttenuationCoefficient.nb"], "Hash" -> 
                    "cbcbd1a934f0803c0255f9100e3c2c5de6f831395b518b551e7475205\
9e1ef1d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BraggAngle.nb"], "Hash" -> 
                    "7a82f9c74369581215fd873a1ab744c54b9892e198fd612d5d95c9cf0\
9db3132"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ConstructDomains.nb"], "Hash" -> 
                    "85070664d058d91445ba918cf21250bbac8ae0740eddfc7ba89a795db\
652dcec"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CrystalDensity.nb"], "Hash" -> 
                    "81cbc9bc42287a18c685102e68cf17c68cb3586a91c845aeacc227f50\
78f5ee6"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CrystalFormulaUnits.nb"], "Hash" -> 
                    "07647ecb193faec15ec63752e8a6fd320cdb9857db8177eaa11b1e8d5\
0d1ac23"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CrystalPlot.nb"], "Hash" -> 
                    "6bbfefae005622a439e4aea3b498f436cd13ca057f3d128b9b54206a4\
9c0ca78"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DarwinWidth.nb"], "Hash" -> 
                    "a77e766d0bd4d10a5eb1d81de35cba3117bfb8f2dc7c6f43493957de1\
c7a8145"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DistortStructure.nb"], "Hash" -> 
                    "bd277f4184049f1a87878b5afcbc619b44725f706b241fb18bb921856\
c3431b3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DomainPlot.nb"], "Hash" -> 
                    "ca6887e61c4019539f81cc589cb63b928a366afd07787a9382226cddf\
d0bba86"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
EmbedStructure.nb"], "Hash" -> 
                    "6dfa176b9f39ec088ad67fe2f27252164a31f0a69799544646c7b81d0\
48b7433"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandCrystal.nb"], "Hash" -> 
                    "722acf4ae3b487a5d201bc0753b1e2865308d38ed99cf8c1dd04cc3b9\
8c52bcb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExportCrystalData.nb"], "Hash" -> 
                    "a8445679e374b67b3f7fb84df79392bfd60e9b424f99ceee68707d53e\
fc7832f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExtinctionLength.nb"], "Hash" -> 
                    "d1341e1af1e82056028bb9c53713cad243f7b9337b1b21b9d79c4a426\
3b1e30e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
FindPixelClusters.nb"], "Hash" -> 
                    "6b0c390424a60ace017f6137dcbe84acd93d8d84d6294818e35f948c0\
be3b758"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetAtomCoordinates.nb"], "Hash" -> 
                    "82ac8e38be13d756b286e0fc533a5318b7d63e9d9d9078a606a64b270\
806b4bc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetAtomicScatteringFactors.nb"], "Hash" -> 
                    "c99fcde3d48fa245c3f87eed14800a2eac024f7ecfcb4e213985a8e61\
a371904"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCrystalMetric.nb"], "Hash" -> 
                    "b32471121f238da58f0042323e5986cb9e1114f9ee10f3223c628485d\
610ca0c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetElements.nb"], "Hash" -> 
                    "22a8b9c1106dcb2b1cef5cd1556c2c53465fb7495f609ad32d16cca3f\
441c636"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetLatticeParameters.nb"], "Hash" -> 
                    "e6be0b888f75ad82d9bfe14aa211d32fb21d550893981bc84697d3532\
5510a70"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetLaueClass.nb"], "Hash" -> 
                    "9f80a6afbfa9f77d1ecb0eeb3e49559edd9ad73f12a4dc2353952319e\
c9ce765"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetScatteringCrossSections.nb"], "Hash" -> 
                    "b21e5c0606a03961a237f4fdf4fa0eeba1e653067ed48ffb0fc2b341a\
b6f53b1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSymmetryData.nb"], "Hash" -> 
                    "514965f4f185c92a0dc0eb70c37bcfa15d98e5441d271fbb36243c442\
32fd498"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSymmetryOperations.nb"], "Hash" -> 
                    "c9e4a55ac4f003710db20fcd5c986d7f976ab0246489b8c50e79284f0\
3ef3ec6"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportCrystalData.nb"], "Hash" -> 
                    "873e6c0bd15dd7ec3ec8dd0b5bbc0a089e7ba744a727cfbe176dd7d24\
8a144a7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InputCheck.nb"], "Hash" -> 
                    "aeb2969d793f2c7fed08b5c1c8fb0f857c4fd89bc47452c047c50c433\
d866899"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InterplanarSpacing.nb"], "Hash" -> 
                    "026645afcfc4adbb98bc911504b11d4033409f5be45969a27f27805a0\
b82788c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MergeDomains.nb"], "Hash" -> 
                    "694bff0482209739063d0a790baf891aa2902501b6ffbb4ce0d7b9745\
6ca5893"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MergeSymmetryEquivalentReflections.nb"], "Hash" -> 
                    "6a7de05369c13eb6b21d1c1a7f88ab051cd11205ba3f7d9fc362058b2\
fd4369e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MillerNotationToList.nb"], "Hash" -> 
                    "333e16e0e5690ab1ac6a2acc6fdf45da51554e54a488afe4d0e5e758b\
79424a5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MillerNotationToString.nb"], "Hash" -> 
                    "791ce75b30cf63596663824f042dec26929198fc77889ebdf618dbecd\
166c413"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ReciprocalImageCheck.nb"], "Hash" -> 
                    "1639c6fad6f3db2ea0e9ce914eec0bc3032287ff1be248e1cee4c9900\
759a0d8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ReciprocalSpaceSimulation.nb"], "Hash" -> 
                    "565295309effed3336bfe96545cce645bca306752ed6f9705a5aa11a2\
9c7724a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ReflectionList.nb"], "Hash" -> 
                    "21ada9a4a7217dd62832d199f24fd6e8191b1c1fe07254f9a1d86babf\
09380e3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RelatedFunctionsGraph.nb"], "Hash" -> 
                    "540978b091d964c7ddd5606a56b7f7780967bf1330285bdd86b1a1321\
0238837"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ResetCrystalData.nb"], "Hash" -> 
                    "18f7507f4d0efcd63a2289230660fc2d41ad26c7e69f14eda370a97c9\
b3b0bf4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ResizeStructure.nb"], "Hash" -> 
                    "5c220075135140917589ee3c5cb3d4e0c88ded939daab3642377bf9bf\
2150365"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SimulateDiffractionPattern.nb"], "Hash" -> 
                    "441a947e35305d2b1881e7e97be0028d4a44bde200721b1cdd4b5ed09\
2950c15"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StructureFactor.nb"], "Hash" -> 
                    "5bba03da939f93f3ec4f89cf054cc41a73c7f136c9f32b1e3eec23ed6\
3460047"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StructureFactorTable.nb"], "Hash" -> 
                    "cb4453fecd47c231dc76acc04fca4d48aa660728fb691ea7248517da5\
5dc63cb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentPositions.nb"], "Hash" -> 
                    "ef0c0737964bb6c58de396e8dc71ceec720a7dfe0f7ba7ed95b2b2137\
e6beaa3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflections.nb"], "Hash" -> 
                    "602c214c003a84b82467091edfa43a5fa5e0f54de624b97bf1e57b2af\
f1f888e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflectionsQ.nb"], "Hash" -> 
                    "798f13f4d84104486edce99aed5d1205116287cf0b9e6b177743df1b3\
c662fa2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SynthesiseStructure.nb"], "Hash" -> 
                    "4eba9c3a2bd23143d48baf45d4c6999cec43460284d59d689e0401000\
60fd310"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SystematicAbsentQ.nb"], "Hash" -> 
                    "e02a8fc70b5c20d4942d588b92ca6a2f68d3b53df35723dfef973ac70\
9a32ffa"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToStandardSetting.nb"], "Hash" -> 
                    "4c5da3dd25725204c2b2cb0dab65c692d1f64b805df82fb250115f918\
4e78285"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TransformAtomicDisplacementParameters.nb"], "Hash" -> 
                    "56d6b9b2f442f2d3d04b7c976e133e38935237a10fec836fef72a7d55\
a387863"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
UnitCellTransformation.nb"], "Hash" -> 
                    "a1ba27298a471e34fc9e6f301949c448cdca6a97c756369de1d76403f\
6d9d94e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
CrystalData.nb"], "Hash" -> 
                    "32ecb03b87974db7a1754337f83e0835b97d69bfeeb2ee2513ea4e7c5\
2f4f010"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
GroupSymbolRedirect.nb"], "Hash" -> 
                    "156a5b230260705511ff904db26fe9e81b326571426153e065f74b805\
a3d609d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LaueClasses.nb"], "Hash" -> 
                    "c5aca0eec3f009babadabcdfb95b96c64af2a51e136d76a44afc97498\
d059399"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
MaXrdPath.nb"], "Hash" -> 
                    "6ed7c3b70967fbcb6b9fd3820df7b7adb982a5d7eaa38736fae550637\
3e7c5dd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
MaXrdVersion.nb"], "Hash" -> 
                    "697887e2b747a2f9dfbdc3d4147a95e6f565626221b81ed8e9a62df79\
5cbedfc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
PeriodicTable.nb"], "Hash" -> 
                    "d6997149dc759d08d81646e6e1f36b91783faa5274abaa6d77c21debe\
64c8260"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
PointGroups.nb"], "Hash" -> 
                    "31643da4395b2a69aa7fd8c3ee5ee9d10cc1c594b525502876ae50ce0\
c298dae"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SpaceGroups.nb"], "Hash" -> 
                    "b5d62c9542b74b8fd8baa954a61fad0c12e099b4ad0171e59366441c5\
254839d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
TransformationMatrices.nb"], "Hash" -> 
                    "0a32c1abf0868cc6757a06c9326ed7f98dd89484fad53b9bf6a99e142\
a9b061f"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/ApplyingCrystalData.\
nb"], "Hash" -> 
                    "ed0f46fd863b882b9a6224c40f5f932a9a3b77fd34bd6c0cba82a0dce\
c71ceed"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/BasicComputations.\
nb"], "Hash" -> 
                    "8f3e2dd43cd9e199e10e20234c83fd51e3575102f8b10ac4116de5580\
0e6564f"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
ComputationsOnReflections.nb"], "Hash" -> 
                    "56cf4d842eccd4936f01e93d8246534bb47d93fddc4a2777f1207d1a0\
b0f2d27"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
FormulasInCrystallography.nb"], "Hash" -> 
                    "ad274b5c7a01b2e9f55d4a7208e0d96bbc78110c93c2a3821e86009fd\
2ac84fd"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
ImportingCrystalData.nb"], "Hash" -> 
                    "e186cd5b9ecdb446a7c136ed3b97421be50c4541ba19dcbbc468138aa\
32671fe"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
QuickGuideToConditions.nb"], "Hash" -> 
                    "b80d1323be565a72864f1b25038c0c3f959ba7721795c66259fd1975d\
258cb13"|>, <|"File" -> File["Documentation/English/Tutorials/References.nb"],
                     "Hash" -> 
                    "eb106e2d8c359c5ef351d836d74b25c52bb696b27dae005f26183f112\
b3d4692"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
SymmetryCalculations.nb"], "Hash" -> 
                    "3a76b955ea28d4433e58454453a7ba0b6992f3e3250bc02475db595dd\
ab3836a"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
TheAssociationStructureOfCrystallographicData.nb"], "Hash" -> 
                    "c859034547de65ef3d41e67b559fceccd4fc82c6a2401f762dcddf70c\
d0ef502"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
UsingTheRotationOptions.nb"], "Hash" -> 
                    "9e2f1cda1e38c2468ba3a6baa7b81976125f12799d811013896a5e78e\
dac1731"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 272], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 272], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/AutoCompletion.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d481ce3a221fd9183c2bb9896103674cba83f5743614eb61c647fa903\
470ad3e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
BrennanCowan.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d3a55707257e598dae780e0637844f1167227c82f0888748362b3d8ee\
271a784", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Chantler.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d7f639260db5226c1bd37aee9e46a1a450bc48f3901efa8a516d74ed0\
d19a1fc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
CromerLiberman.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0756728aa9dcd6032b4d20a38abb9c225325aa440fe26282783cb3af6\
ef85eab", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
EPDL97.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f6189149f44d414b3b45757e156f1d63c14cb3b7bcfe94d2e45bbe395\
a6f31fa", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Henke.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e15004e5e5e93d5a8cb44cd6d7e532f892eb9928549c09ca355fe2dcc\
517677e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Kissel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "48258c7f6efb5abf104cb49b5beec8f2935851e673201c7e8154877c9\
b2cec2b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Sasaki.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cefc35a3c0f2533edb01db2ccdbd40ea3143845d9d06150a225428824\
5a7346a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Windt.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "06d00bbd568270b3d13c5921260744c63898ecfdd947d008b637cf216\
9c82433", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
xraylib.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "45d34705d985ec78013d902bf445bd713f3e8b60f06b9b033bb965be6\
7f160fd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/CromerMann.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d691b5e76a3cc36e0490f574bd2dc2a9a22d69e20520a1d5503265816\
4b35108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/EPDL97.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f9097c48262fb96cdb8051dc171cb3f18c6f6c708b7040c3137f50be4\
6ffd54a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/InternationalTablesC(\
3rd).m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "64b1c16641835d84a8da4c066db55a4765fdb7883f8f9937381d6fec1\
eadf9d5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/Kissel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5c823b4880f870ca0b2dbd727f15e517ce2ebd8be6a3c3c6ce4ef56e7\
3efb1cf", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/Kissel(modified).m"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e887aada90e103efca546ba737a7d73069ddf6073cafa51ec29f4c275\
48181a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/WaasmaierKirfel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8879086a5b3ce8bbd214f1b0b4b7b57ab4a12679f8b83cafd53008651\
5d4e62d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/XOP(2.1).m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "554d7303c334dfa1d920a038590752f9c393df6eb420a5f366ffc162d\
316eef9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/CrossSections/Metadata.txt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "717922da98872311c5918d8cc3e7e5180b15f18d165706f9e5923e0ca\
23b2ebd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/CrossSections/xraylib/Ac.dat"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a10ba733d1e8dd404aafc25383d10527d47cae526ac93c7ab98aa3f50\
c49e3dd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/CrossSections/xraylib/Ag.dat"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c5da01797515b0c03d75a5a44e66226d9d1295b9da13112c40a26fd9d\
ae505c7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["272 total \:203a ", ""], 
                    Style[
                    Superscript["272 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"174.93992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"174.93992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"9.462106`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ConstructDomains.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Guides/PackageOverview.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.819295`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.819295`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
AttenuationCoefficient.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.694681`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.694681`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/BraggAngle.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.752061`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.752061`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ConstructDomains.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.462106`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.462106`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/CrystalDensity.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.377714`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.377714`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
CrystalFormulaUnits.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.2839`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.2839`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/CrystalPlot.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.038369`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.038369`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/DarwinWidth.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.036718`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.036718`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
DistortStructure.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.916509`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> 
                    False}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.916509`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/DomainPlot.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.262632`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.262632`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/EmbedStructure.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.901113`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.901113`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/ExpandCrystal.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.329252`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.329252`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ExportCrystalData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.277929`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.277929`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ExtinctionLength.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.077825`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.077825`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
FindPixelClusters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.307533`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.307533`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetAtomCoordinates.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.349633`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.349633`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetAtomicScatteringFactors.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.344296`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.344296`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetCrystalMetric.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.09166`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.09166`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/GetElements.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.109142`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.109142`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetLatticeParameters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.184371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.184371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, GridBoxItemSize -> \
{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaselinePosition -> {1,
                     1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/GetLaueClass.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.885877`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"1.885877`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetScatteringCrossSections.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.397698`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.397698`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/GetSymmetryData.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.433904`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.433904`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetSymmetryOperations.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.738258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.738258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ImportCrystalData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.764203`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.764203`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/InputCheck.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.921115`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.921115`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
InterplanarSpacing.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.414761`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.414761`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/MergeDomains.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.768849`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.768849`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
MergeSymmetryEquivalentReflections.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.142002`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.142002`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
MillerNotationToList.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.176803`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.176803`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
MillerNotationToString.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.334823`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.334823`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ReciprocalImageCheck.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"8.346143`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"8.346143`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ReciprocalSpaceSimulation.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.511358`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.511358`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/ReflectionList.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.174329`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.174329`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
RelatedFunctionsGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.045356`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.045356`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ResetCrystalData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.291975`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", 
                    "SummaryBoxCloser"]], ButtonFunction :> (Typeset`open$$ = 
                    False), Appearance -> None, BaseStyle -> {}, Evaluator -> 
                    Automatic, Method -> "Preemptive"], Alignment -> {Center, 
                    Center}, ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.291975`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/ResizeStructure.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.280234`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.280234`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SimulateDiffractionPattern.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.097891`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.097891`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/StructureFactor.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.007966`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.007966`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
StructureFactorTable.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.286251`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.286251`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentPositions.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.861918`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.861918`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflections.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.206217`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.206217`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflectionsQ.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.468249`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.468249`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SynthesiseStructure.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.382198`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.382198`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SystematicAbsentQ.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.680513`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.680513`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ToStandardSetting.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"2.520066`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.520066`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
TransformAtomicDisplacementParameters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.57556`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.57556`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
UnitCellTransformation.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.241626`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.241626`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$CrystalData.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.578717`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.578717`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$\
GroupSymbolRedirect.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.224299`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.224299`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$LaueClasses.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.093907`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.093907`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$MaXrdPath.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.229035`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.229035`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$MaXrdVersion.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.222824`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.222824`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$PeriodicTable.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.32971`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.32971`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$PointGroups.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.099371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.099371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$SpaceGroups.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.406325`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.406325`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$\
TransformationMatrices.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.556618`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.556618`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/ApplyingCrystalData.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.297031`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.297031`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/BasicComputations.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.883837`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.883837`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/ComputationsOnReflections.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.12239`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.12239`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/FormulasInCrystallography.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.480235`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.480235`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/ImportingCrystalData.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.940495`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.940495`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/QuickGuideToConditions.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.50773`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.50773`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/References.nb\"", "\[Rule]", 
                    
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.500994`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> 
                    False}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.500994`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/SymmetryCalculations.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.985133`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.985133`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/\
TheAssociationStructureOfCrystallographicData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.890715`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.890715`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/UsingTheRotationOptions.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.962498`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.962498`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["67", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["67", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJzsvV2sZFd2HsZm/7FJzpAjjWRJhux2uy2PLLF7//\
8osjjdt7tJethkT1dzOJJlcPZvdw3rVl1V1SXZChTYiG3YcYQkthEggI0YfsiDHwIECAIkeQiQvOUt\
MBwbgZHE0kOQxIjyYCcBHET51qm6t+\
vce7pZVeSQc3nPpTT3dv2cs87ea33rW2uvvXY9M3vhfvj45uSTMqvnZ994azwv071pmYf5cDLGy/\
XM7ML9CX2gnpude3s4m9fnZxcehId4ZXBxsJ9Smc0GLw32d3fD9PGbJeTBmT9fz85evfV4HHaH6e4k\
748Kff35w6+fHZT57OsPHu+VWZn/YLJXxlevzs7fCaNZOXj3mwfvlt1Y8gDilKtXB+fv4/\
qP8ZmXHpTdvRFeXEi4uPDZ2Sv3wrgMyqik+WTavue5+xDj4CbnZxffmA5z+8sHvy/SReitC7NLN/\
fn84NheHH5RIvr/tyd2/emw48gwg/uTCfj+e1xvl9mk/1pKoNLd27fHM53w95s8OpyYPCld/\
GcZUrCkyi3yig8Lnn29cUt7uyPE43400bn3IPpfjl8jBdv7O2VMA1jDP65dybjJ+9cuhlmZTB/\
PCr1uSPPfun2R2G0HzAys0s39ueTXUxxOnz3wt0yfzTJgxfvTQvGdj78aOWiN0bDh+\
PdMp4fDOjswk4hTTn4/eSjb+2Gh2Uw/O2CEbu4HLHDb7Xue/7BcLfMps81Py9/+/AVfPHlnf3pFBf+\
HgQug6/dwfjuhL03y/DhIxLh/L3Jx7jnmdk3b8TZZLQ/L6ufn33tbng4HtZhanR45w8x3S/\
cmYbdZlLPzl5ohofU9/yV3/s7f+sKLnjp1nAKnaFnxvv337i5MxlNptM/0vz849enP9n8/P7r0+\
83P//k9Z2fPXzilwfz6XDv3fFb4739+\
RMtXrz59R2IDsHuhZyH44dH336xEauR58g8vty8czdMHw7Hs1U1pt87z+08d/\
Tvp8ty4YmyH1znzOHvA9s+e9S2jxrZ8quDV67cC2lU5jem6RHG68rg3JVfuXxl8CKuc6vUsD+\
aD35qqfNvzcvujfF4ssCSwdk/+N2/\
t4IdwyvX35tBg67P5sMwvn6rfFRGUPbp9XvTyeyH5UNo1fW74fvTTC/\
8ELNzeVr2JrMh9Pfx8o24Pxzl6wP6/v2wOxuX2QcfNO+8pq4x/LfXSHrlEJ1IoM/\
y7C9deYCHGZGWbv3cuFvr2ucOrs29uWaEt9z8YHD2yuzK4OKspMk4zwaXrgwWf10ZvPDd/TCeD+\
ePn6jQ4PF4Hj65M5nuzs4CbNsPe/CpV5cacMyQDz4xuAiV398dz1bGZ2Gz594u9cnHzuF5j3+\
mA09epJcAcmVejmr9K0thSMIGKdaW5fh91hfo4K4DaAWZ4tp33Xl+85utwPC5IzD8zcGjycdkp+\
OHO4+A4Ylg9OgQvfTOPvzeFPb/4bH3vg6/A0QBYA1nhG9nn8xyc+\
lGHxaYcvSrP2I1OPtgsvfjqwCv0pyMhuNyj1Bk4WsXE3xm58zhpxaO9kshCDujyWxrgnDUs/\
QMoWcIWzCECz1DOF0M4TM87E9fuUnDu5jthX1g5Ld/7mOR5uDcnSEQHvFkd8Q3+\
M0foYZcGbxMd78xfbhPuDY48xc+t4F7dWkhdwNAqMzm2w/Z+RWlOfjrQkfsfakde79GzmPweIZr/+\
AdCFAy2f8PINWHwOYDt3V1tgi7b/zEa4OX3hrDZ4bRrTAPN868NjhPYzOr/+7ykW48/\
9pismhYmkn7me+U6biMrhOe70wwBoXkv/\
bxCB98M8weDb6dleOpyCAEr9lzJ5OI0TtvOJPGqhSDk1VbJQ1XJRqejLI1eCaVZSHLcvyed5b3JCGv\
34AfGaYBIB5aAGS9E0g9r98Yw72MJvuzHcB3aVzq7PpNuIZxGO9MPg7ja7tPJJRBa8us0LZo73Io1r\
HCjLROqcq5sULY5ERlzjmrnDQiyuxKEZYHfOa4hDe3lRBUcTwflemqdLYa6YVhOWohTOIxSxtK8UWZ\
wIPSLCblqvSMQ6dc0Nxkq0pmmfvAazou3ZtbSzed7Jbp20NQ1t3WCDKrMUguBJ9TNkyKqLJgQbqAqU\
5CaCl0CEqxWoQRTlhoQZShmlKdLiEel/Hb28p4+\
96tt71dka0a7jxXviqVFVdRRqUtZpprU3k2MnHooIw2plo8xC5Kx1ik18FUyWs4Ltvr28r2Zhl/\
WFZEgwyMqaLxn5dZB5eiUhjADD2UojovSvReOK18Yj4FqTUGMKekuTXWdpjG1sP2neEMrHlFNuWEds\
nSFEUdYuUMw6R81LGU5KrwUjvNi7FSMJ5scVwrZ23yUaQCE/\
8cZRuEWfhwuCJbKjVJHWRiFaolS46MZ9w35ZgVK0FyJZ3S2WdmMMSAHq2Ec0LpYCWs5nOc0veH4zxf\
tQSTGYsxawMtZ4AJLpP2gsN+LebWSOddSTVnryw+6SJQJlXBjQfAKCmPi3ZjW9E+\
mYbHo2FcnVOdCVUxMLC6BJDjMnsmIkxDx2y5rLJAIlaZiT4yKWG9BhNubOV4NR8X7voawi1QA06whb\
nG86iLNZjFJE1hyjPyAjFDv0XwmDN8pAimgSM8aw1QMdpxAwPWnLnjovzSGqIcBwfPvAV8ApUqnhUK\
5JjmOXHLAQqVu2SqSRbzZJliSXJpKwAX0Ftr1qpDk35tDTGa7Pu48fQgkSHCxe58S07zL65IhgfliR\
uj4DF1dirAL6nEjIEb0EFZo2uO1sF3uuq9tNIBzGpJvIRcfdbbDdAxGNBQSyCmc6w6y1JgUcDIrIBG\
ALa4TQUYlR10BBMpk0lFlapNsRK4wVM9LoZeW4xv7U4yorfSGpcCFxxCBkEoIBAAgqCVibBrG2y2kh\
mfc4WxyRQqfCGgCMifhAU6cccDPy6QWkOg90OY7YZhmX5nOK2tAYI4njkTdJQJxgP95eAMkUUFl6Jt\
iCrA+K2vLjqSKWsJszea66yKER029doa8nz/3XvfEtf46sBorej5MQtS5Qqb8bAcJp328M6i+\
iThYwDnUeF1XaWBCkPBRJbclFL9cUF+YVUQWPFsNjjAlrtljjmYh2vzT+aHElhuPcw2eIyJkJwD+\
LjLDvZd4NC4Y5FrmFTmBmzLVA+yJWSBUkHDSIuOS/Ctp0uwRLfrN9I1CHIoQ+\
CMlAG4W1yGM1Ah1AQn4fAKsMRmZVMoWpiQvEyYHg/\
WAv7JkvJF5i1leNiSIekcGMbCYpIjS0xmqwNsFvNtwODglrjwOvocOEZJJAUPZcCNQTw108luJ8OoJ\
UNxxmvroImSBcW0MaZIOCBdSDNFgQewvphcC8/\
QYOu9NzIWy5mwRvAOYFtHht2WDK5qjDEITYIYOWiRhfRVCh9htS7AR2KSgK1FJ3gkzlVgpWaVcxBwo\
KnDF64jw7StDxmmzxSgmsHVgTgoLsitZTwzLBK8xZbKkk+\
VaW9tVfBEJjsNAa3yusMq1pFh1pKBRQ0CX40FTgnMABxKijBCcLgobAB4W1krQgyMPuZAqYjxKCDR0\
kfLfQdkrSPDvCWDhZfnGmGCwt2heBzaBo4E5gSIMDUCtXMw0MdMlgM6nDjYMbk7hg+\
qLXVyvyWDBOFQyRvvHWM6FOZAFsFya3LQfAlj0RX/\
8SyJrsHpValhzFokoEPhYisZboaWDLX6YDCqLEQnELGUSBBJxsISYlDQXCgsJiYxIRWIruIJn6o8OA\
V4KB1u9U+vIUPbNI1nMSMQQsimFIh0QESUEbPVqqEMwVuABTi30YGTE+\
UwE8aEZiJlVnQH9VlnGEpLBg42hWjIYCYynhdKnzncewYL1VACDL+\
PxUdlVIgZ5Br6mRRiY1gQIiTb4dbXkWHYngqJkRAIzaCOCH2gjsLwGKEE1jgF3TTEI8DgFWgq+\
CnQWUimEMzpbBTbTiVvftiSAZCA2EFUuCLAE0JsInYywaODKRsyVF9B0QtGBNEgfKYNUF3IRpQRBry\
dDG2IAp01iNmVA70ECBuHWwB9EOVZhoCe+\
8RTieA3GAVuYq4ISoGsGtS0xGg6Iq01ZNhpmwXYLqIWgwguhgSHhNhFB9zA1gpQFnARJQNClQAoItT\
zzhQgaGSIcrTwrgMm1zCLnbbX9BxmpwglgZMOdEYpBu8Jjy48piIIOFBnhBKJIV6GEsoIpynhWuBow\
nbosJPbSO09Ip1AUjglIyh3ACgj9NHFeVWTdsHhkaXFZIG3GB4C5WEYgEEwr7bzFjtt0wQzAP6BpFg\
LnwE/7T3if0pMaSdAlWAiqkqQSu0LN0kIBowiNhGZE+\
B828lQ2ypJmRENb5k9qAr8AbxTRLyqS1DwYdEh5gA6RYKLECKPACvYEKgU5xGosp0MbQaDa3qNp1YA\
ABkSQ2hTEZ8l3BpxBRwn/\
k9zgcgMpBpzIsGnE3RXFlhnMB1ZuXVkaDMYBULtPfwCuLxj4NXaIoSAN6qWiQoUiiC8YFTGMV8ZVAa\
jBICykdIhOm05DpP2OACiEH1aYwJQiClbEMI7qcAotE8pJu5jyLEIETER0IRQJYOhyOAQy3clO9aRo\
Q1R4IkCMCkkbiaLRFjBQwRNjMDmkBlZriF6D6ZXoxaASwwGtMGWwhEbbjkXsyMwCRE8NKwAEiJgitI\
BGVE75j+WCNLmgeYSoS9ivQhqVSEx2B/\
mqBLN206GNoOpgjJ2mOwMcEL0ksk7g1sKVRCXIuBEdKHgSE1MHtZL5IariPizwIQRon5KUN4tw7Vbg\
w8GCPrKSvIEjgDBjEdIAxQCfURwBcGMc7mqmJPxIJrQRURkCP0QAJhSMXzRwlLKlsT61uO2aVQQdXi\
CLJlD8ItxCEVqTFKAYsYK/\
hbIdUJJQa1FBmILHRBt2AhvxuV2DOJ2Wy0tHrcGCTIga8Bg40FVFaWIFEiYCpiCS8WwKIrOMSCg/\
4hHNSLD6EFzt5PhCKn1JkmhMrmOXCgv6hDha+\
NL9ip4uK0AhPAV0XmxRgFX4U0VaDciAJdZh2ms4TnvtK2zuuSc46UoocDmPcsCBqvBpeDUYY4WZBMu\
MmXBLBQlUqrWg1U7vB7qdh7jTttrJSgWeLxjIiqbZSLylgBUoiSFEQAuu2CzgCICSCEL6ao0xPENw4\
Bt573vtNXBlRCA/ByGkBxubq3zzAfvE+\
VhLOfwZibWGCRC42Jp2cR5nUH8DfyM6eD2a8jwRptICQQwUsqC5zIiZGfISOAzi4QLN14iDC45eA5E\
wpQoB7PgMAcL+\
mdL0Nuh1BttFqNUSCLAbSBcAIUSZB6IMFNUINRVIaRLDtNlc67SRFhDAqskogG6E0roWFZYR4a2PoA\
jgEcn4B8iXCAFQ8wP02PQTV1xXwuE8rEhu3BrYHwsyxJEthqBoc0dpHYNs3izrQ4IpqFaPmSEN6VSJ\
tPgPyURc5gESg1G4wywKdPtYbwgdwlAFSXDEPHtuP2bR8xCABKBg4jnswFhyAhjAkYCbkmR2+\
Iek2ModWswDiJm/\
D9RLnK3BRC6nQxtMlcAP6V63JlLJhrC5AvcNRgbBjpZYaVOWmMEQBcyPKwHt5EmgFYCxdx2pvlmOyW\
mGHQB4RXifwxzhGuwRggoBribZQX0XsIiS4ZPhecMJZdgrQnCYBhgFlvK0CZSCQTW6WJ5CpR0AvxgO\
KAb+NvaStlkyUEiCngOcLFoJsFqEXci6FVw6NuF/m+\
1wywDKze0hoAoBoDo4cPhCyI0UwZbgUEGFAPcDprpEHtRvIMpwnjAVQSzndN8a9yOLyw4m1UFtD0rq\
x0lAoVjiPLAuA1w0xhalhcYp9wshzShR3Sckpi+az15HRnaSC0wCAAEqANCugqnCRcOCo94B7+dd+\
BuNSvNglfJMgWVSFwXZiqDttquFMgaU/\
Gd9lQULU1u8sQAQ2hd5sxLynooUVPwWkgGcsmUAaGxsngMAnxWAYaxmPN26PCdI/\
wl0fM5TDvLII6x6JIgUgUMW6WrzQTRqiLChnfwgOakEQQkjoEoWneVRqwhw9tth6V8QnRbwVVc9PBc\
8B2YALCpCNhQiDIlSI0KRcFxQ1FkNpgw2Ai8ON502yXM325nggAOnlZwPPeg8SIHhDQsllABC3hOQB\
GCTMxB1ABOk4vEbFXHGWfRG6jFdjK0eRyiTEe5p8gUpr7h0ZzQEvRRB5iBMHCQJVueM6BLwbMoSlUW\
EL9cwbO3kuFuGyU13E/\
lgAgrTU2yyQkizAUeEWMqiG5qgaMU0jDgR2IGMYWnsEcxC6azXSbobhseQFUDMROMK633BSIMgnwWI\
nywCI9xwP9XgAcrJfqYMiXNM3w4eHXckkzebSO1zwIYROUXEmG1paqIYoFVGkytwm2BUUmLOyLqysG\
B30BRq84llkR+Yzuv+c7RjBglvCRHwA3Qy9r56o0FYQV20aoZfGmJHNE+\
twj7XDFgG1BPUpcICN0Oqt+\
Jbds0wQbKdVTvVY3ORNwcfJoiLh7BYEEm4C60ASgKD4gSFHNIRY6WudgxDmvA5DstEXLliVUvAcgeQ\
WYu4LJSJbipCCSIwE3t8QZprbfEHeBUuDNg3ohR3ZZc8p02n4UFRKGLBBeQgGiMBwg+\
FybBHXnmyCgSIkwiFBIYmiktmWQxEb8yhNpOhjaRAw7AAlIKFQFlkVC3SBGcQHATgEUBDM9SgqLQwh\
v4LOaAChfgQypIzJam+U4bJp1i2lN6B09XDS2EI4ZCmGPAmh1IYybcEs4mAFLSCRJ4BIUIkRVUA2i+\
nQx7bX2wYIsI82yJxicREe3AbZYEfw4ClSkx46OF1/Ag0mASEfoDiutSNByMazvP/\
W4bHWhFhgeWaaXXIJBSnqqAmBaw/\
YwZothbYPilBn4bSSu70FYJzC7kybYahnfbySjwtsAwxDC8wiP8MxUrAqwLbkWMoSDYA1iIgoBfC8N\
TSQwD5WoRrkK2rWS410aoAsOn5HtGoOclwsoIO8iamQItzIBDqUw1gAdSW0ybknDxxCEwG1RPsp0Mb\
YSK3IDBJcQyOlKOQTfVYh7BHwOHqVR4BYpTqQgjwHFEhEBS2xg5XD3E6kDJNdThXnsqmmKGaqsUCn4\
wkM47nQRXgAFL5RjBCKJPEgNjmQlAaqO41lSvFsx2q6v32giFKB7mBtgDh6S6HGYR58cCtAZe2KZcD\
QYLSQ2wo8BzR7D/\
DDBT0JaatpShnau2NcH5mMCIoTIVKHWtiMMmYDXl6mWOGCFv4UiApdBeHuBMiqmUPvXbJQXvtR03qB\
ooFHAKtl/gC+Eg8ZiIHWAAFYzOgaz5Jt0CD4qoAwgFVRVOIgJXSm1HJu+1STUDXw0Gg8+\
FFZUSDhXiAKJD4YiyQd4lbuYkVR9ogzmI1kBOm2yQznRVlq0jQ3u1PcECCsYcNAYhH8IqwoekXLIaN\
AkaCGOtlWXYgsPgEHKAcmkPCNUBVrydDEdy1YxqfqiyGbzVRs1BJiKMkVuflFaJOaPAu4HliWeTBQx\
FgcJEBWcP5rkdTN4PR/QBXsKEQivahUma+UwrJBHBHFg+VMQ21S8iJMNoAakw8EowiIiAxLLt7OJ+\
PKIPMUlHmAcinQARAaMcAIUAwYp5SKBvCHwIyJgPkfkEq3UQpXoBwNhShjZ7oNwLXIYAPY0BbktxX+\
EZLJwFpTpMAVhqKvlF5M2IVYDaZB6ocMZbkLntZHh0ZLkd1L3Qyh1nWkYlIm7vcQ9w+\
GhxZ2nwDqcaMVk4wBv/1LBiC89SIeR2MrSDiwy/qDHclmquPSzEqoyoC7E+\
lUklB45gHHyFDVQKFCSjtT2IR0iZoJ3bydC2C6pwQeRG/\
CgJ5TKNf4XjQHBPpZT02Li1gldlMEWQzcghYqIyKahF3U6GQVsnHdwQwBB442RB/\
FBKglUKXmM0GYw2gTxwylwCFyLFn0qCwlgYkYZ/2TLgHaQj/gI+\
wkUuBIJax3TQhVclwCvhLwzmPDgFDqeVkKQIIHaMCigdpQ6z7qpUXsN1D9rD4CQ8ckRwwyJIO+\
ABnNol7hD4WiV5dOBXDaUEV8gOzjLmJEH2KQ7nfjuYHBzJ0FJJILAG4JOgD7BThFEwiEDregmkMYM/\
ZUwLIAIxBaKMhGC3VIvwEzRjuzhv0Cb2GqEdSEzSCCFiLR5oSHBI9eM6J8bB5Wr1TgdmnSZKi7t7k1\
MWQLDUVZS0jgxt+\
iAsIn1E3CoDpmWWIHS5YZfgMc6DWhQGYNAwWchhPQuR1wA6nQKR8C2LswZteJCyVIeI06dKpcywBIX\
pgR4YwZTS4HYhUeVktJQaqxgpJgoCTcQYYJ1qy7k4Qh8k+\
WKfVawmwRgjRsTJQMW7icsIEoVIMyEohptIGiKCYihEwolKg0LYbqn7Qdtt0h4eMCIAAqJcJSrUDsz\
BgivCezKtaIuK0ZZqPzjZJ8RAyOGFFIBJnbcL9B7EY7YJNgSTN6JE66mAFjemsg+\
lIqvALQHvBbqA2M6CY2sgCWhVlFQRU7ejkw/\
aEEXuKEK3QqQiCCWE0ZHDResETNYFhlIV7VOBlw5Q2mKdgmMBSkcYa9gy8H9wdAVH0Mqxp/\
AxM4LkCHoQbQqKOEw2mupycEcvwLUrayAKkU9Q0hUtttSHtusGIMLyS8JkWwOCpHWzciclQECCLEFN\
QfIMnIZEoBszJs1DEBmolBFmtJ0MbYzCFNDGFevA8IXWME2PoXc0DJbW+\
BwUhlGuyLKqEHp6kEiEgyDeOfhatnObD44UNYM/\
kUk6S7uhcG3oXyggdUDtBHOQIPWwTlU5pXG5gzsrtNwCfM9gMdvRqAdtnNSFdrpVSdnRlBFSg1XGbB\
CDg05x2psinRehyqwQbxmEOCBciJE9wiyY8narSO+1pwJhLaLKimjewT/\
6plYOKAQOzZUPjucEzhs1aDa3FeFPoPAbcwWNBLB3DMMaInyvjVA05TVZPBFCaUS9IFXABxc0aAUmv\
1STA0i8YBpeHDab4ClqRuxDhttVpLaGCO+3+WyCCEIJxJPwmqWAHiTQCYlYNlQhAZ5eepgtR/\
ANkJJGOlA5gJnVIFpbxtzfb4NDQbwNP2QzGEMQySQBq6zgzkFY2pfmq4YqIL4RtWraBkureAFRptQg\
U2Y7HvfrbaCGM2gqqb0VtEAgAcTQBC4AGonwyVE6lPtcDAOWwShZzgF8D9whwqVtp5C/\
3sZITpvdYJK0O1UnWiEAoxa0rk7LBKJS1Sz0UwMdEApGhD7RASzgy5WEqW41DL/\
R5g4V2scJFcAbMB6FM2Mw65ongAKDj+DAKp60gJ/OAtrqM1w4DAiMl4UtUw+/\
cWSzAZQOg83AWWlbkKe9WvhXIurImNFwmQ464gGOztvK4FYxBxY4nSln3+G3f74tw+PZfLE3+\
1bZnazupos5Awm9AjJx2FekXR140sokK554k7S0z9Um2gYUYJcJbNch+\
DEOrK4DnH9q9cbHK9CIb1DNKa4SQ6Aqvyw8t6BmDGGdxk0iwnu4TFqlChoxLayACknhNXjyHYr/\
y6s3vP1JoK3k9Mbs+s5bd67vvHvrA0EZXa6vpWFdScuDqCNYSV4IyxkQpyK6C+\
DLHC4RlN4Lk62gCkqQFYMoD046V+FspAWjDtYqninHctv+9Rv7s3kZD+\
elJU0s9MAyBnAghUHJBt63lipBGeCzs5eSARgCZcIgVQiUKaOSbm6oRrFj/tla0twp0+\
lRWRCnMMlLs6IqFRUuU/lbKgpEIsDsIiJ/6ISkKogsC/\
h1AaFyHGIluM0Om3z2DB3I8lZqy8Go5gUsBDQRLDZYZTzEkrQNPFVBWz24VzJ4Djlo2yVMlDuKhzkC\
C6k7eORra8nxdrhpWoIAcqQHW+eUbQweATXIlKq0hmiTC5xbVQ20wthsYENVw8kCz2E5tP7atQ/8+\
nqCDHcm74qjc+\
PhQRFFQw5Qlpyt8x6BTqF9L5a5DKZDy7DwXoh1i8aMOE7JCmC87NLa9fTk7eHd8bvqXksWKSxQM2YJ\
vk87zXlCLEy7QageBzddFIEIH5mIAnGQRUgAR+t4lBEW3SGLXEuWe2U6+\
Wj24VG11QGGUBHvA814dVBGhsjOIPrimXZWMwOKi8i70uY5A1uimN1SfZtLjoWOlMAvrSfOpD0qoM8\
J/KbYGiOILrw6FXCCU+NvOHywe3BxyyGuYxHazcDGKrgO7Z9RqkMMvZ4Y0/\
3ZbBjGN0f77XGpKQmqIjN49ArtYQoQg6EC34saKmQjB8dL0ZCXYTzS/\
i7aZWkYOKHhHWyHryXQYJLD6Ogk8WRCgh5QipRaZARJmfUUfaKuANFrpzQztEWD1mVCMMxDexUcMu3\
B6ypy/DNrCfN+SwqBO2D84e0tAhPHlZbQhAaDQ1EAV66Cot1/iM441VyyAPZDO6ZpP0/+\
tGLsp0oB4tGaGWswCwjHgfPO0m5tbWBGiFIQFgYeQfuDtYw5ilYIcTKIsGcImGh92HcY0HpA+\
xvjQVtldXWmctpoaHQ2uTqqd8seXIOsuoLxIGYplFCALAIOwRNFD9R3wGLQNp0UcjqTVMZHVMMmDG2\
z4RTkA6Qgx6KBskFXcnXGOueVkVTgRsyLcj1GIlhAGOHBVzrg/lefKcVb7+1MP9ibTvI+yPUHHw/\
njz5IC5o0axOFFLIHYnhdKIOgKg2/tTUhgmYFgXKireyUnXdU/ScRWBiFlyxiBZF0B0t+\
NlF48Gg42Z+W0D1KtPAGplbgcjITPEZOhR4adKpI6oaQBebORxcYJkoajjgDswV88RkDxjoSXb/\
4TGl+fZLLMYZg4X1j1hHhcfKaigeMTTGBS+\
WEt4CoFGpDhwpVhYEu0DYTypNWBUm79r49fapuDWulHohgz01fOOqF8kl4SP0PPnj0Ibv2w72HTwyq\
FiA/wpaoS/\
DgU0wIRJSpUk8bWVQFeVasIqLQVGwdiqZqe1GpupjzrgT9zpZyiWvuA270d1riAUrgGqQUIWsvQWwL\
wY3QDEovBaLOCMunVi5gf9xzhDsYOsB0s2lGpQ47e7rDPC7e2wGOYW/\
8RByAGgitA49jVLHrqerAUU4dhlgRC/\
ISwEE9VTNJ0JrAwNYxXJxJFXXsqlP6sxuIc3cynqTRcDxMHzxio9Y4eQK7DLuCl6TtuyCAnjZZIvSO\
ArIhYFWgNAhdofJWV4JsFcHJoHkyqo7E2a9tKdiHr4mWZMwqcIoUhU4iIRxgUCXLIlAK9y4p1iI4Bz\
nDa6VIQ0GOByPSVJQHCt1B0/+\
1DSR7MB126z2iKTJyxAhGw32ChTnrEMrkQrvAkysejAhEUXLbbGYgfaetLfA5gboZfG5i8ZZYkeoXH\
PVJkInWAcGFc0wKFknV4bSWSntVC7kdBcCHQ1EIB+HnE17QXb2dniHWW3fuvDe4fT1DvP1Z+\
WBI7Qv5AaK3mk3Ay4jssg7BQzb4W6AUgszIQEzAd6hpDa0oY26ronQM9MsjWoQPYIH2lx4Xy28mlvh\
gVub7ey2hNITIwAXEwVRR7wWi4UJVPxIkMSvtrQGsSXI6MFlD/\
UHAKVPRIlJE0gGpTyf2t94a7Lw3uF7hZoZl+kHGB9oLOlRqEhij+\
hiLuJgh5ABq0rQZxGEGfAxoBSpkKSHleNGYwQTnGGWBM9rIEy9lOeb0PtCf6E/\
4tdl8uv8E3vGwtIQVhOKK1hAwg7T1AKqN+AxjpUHZDBgTuUGnqbOTpCw3a8A/\
dFjflafKdTxxwYuHAmDUFS2nUFa2UuWvMFTD660zHBGOMlZUquFT1oPwA8zBrR20vqtw60+\
s3v2N6WR/b/B4N05G90tueiWupGks4qxCfbMCmGqRlDmXCh4+0sY0GBR32psQJcycWqJoxOcuSep/\
IE0IsUM9/ujqzRFSDSd5mJqOQqtNjrSFP0WQi+\
sxbnFxgTjKGAR0ivlqCktWUMkKlaylkogo47mpKMcIWTpcxM+\
2bjsZjufNg89WbhqomYmjOyCKi5QlZjxQvtHkGChRDKeEGJMB3zJFwTkoQC84KxypCl3rBa2bUnvnc\
uymsCUPzoAIGvgp4ZThZ8j0SxKU/\
cAAFAClgcrxDEfoBEIHYamgFwSdd20zubp60wfTMJ7VyXS3ad10N8ynw1RW7w/mZCn/KhGeigK+\
y3Qx1KxIFlDxqDOjgoOM+\
Q1agrAmCBg40B0e0bDckWNoTfB7M0D13TKjX7PWBFOnBm0qzWTJSojKaf8fY5hQyhlQ1V0GH4dAmVP\
HC9MkXkQGAXayw9Vead+2TI8mIH+kycdXl3c/\
br4Brk5QNiIVBcyi8jJDPQsQeHM4SpYkoi7BU2r6IVKUU6kfVs2OA2y7LOggyDlovDy7fmM+L+\
P9RcvgCbzdMA3LeL7a0hIRJeDT4YGJH3PEfNQ9JiHsyq5S+RDD40tAa+\
XwPQauu7IEY0omAdW6uob9sWNS3JyGhw9vjB/\
CklfuTIWdntLZxNMjL5KKIgTshop0IJJGvAemBeSsEBHYWRXcjYwINR1V4j5dwZ/ceQf/\
A8BO81uT3TAcz1bvjzClydDB44dCtlZpMyVQjeqmLFUYObDcQP2cqH9DLgl2BQ9IW5Fr5R1ZxSvH77\
/UsjKeDeePV+9eUyLOmqnxA208MLSGYZuVBCfw1AFTDvph4VMbvkQJYScoBQsXw7s07U8/7e7URnd/\
FN4bD+etAbBVeYb4R8RIzfJSMCrR9ucYNeLJCEYSC2zfe+rWEQqsjWreLNwN7TFSHXmYP/\
40Ee6NJi2tizXRLjXBA4gOhl+AKgYq6ywkiHZRwcQFOCLArgShJcJK4bWk6n3w7I4VjuO3vhWmHw/\
H7w/z/NHqrRW8IIIYTKcxhbYbJ9q7Re1RJPxGpKIhm2gXBrVlQ8CRMBFUPQeSg1i7a///\
cbW7NZzB1OeDRvXAIlbvDw5OPVdiogzGYus77bAviBOAsDFFzxhtXhOAGwTUopAHsDlYbUz0XYvwxw\
1uoe1HB71EcFgQOR/AHGn7QVDeM6qtFArxlZM6gN/BVXJqT6PhTWmbtSF+\
EXRn76bjCn97cfZNx3PjGRnoEkIPzkEmQUpgW5SI9VQHAnEw0bXAmUrwKWlhldQ7iknSCCIsT2crK3\
f/ZC+M81LnWrZOLpS6QjFAai5Ka0spFNoGBQVXlANtekbyVCwxiwIZwS8ojAPRtB2D/qe6bo45X/\
Urrc7BwtoKLxUZlxpQa2IVRBMRR0M2cJbijaFCA5+joxoRRRW3YFVUVyk6wP641t3+ZD5c/\
P12GT9saz2VAwtFTRgrGDEYIkDURWm4EFaFxMgDxEjBmAJlM1RzUkrVilblYf4dIcbxAbgzHOd7w0/\
KaGdES0rTFtgU2uTkigiIngMZIGJoOJ0ANgHkM1SpWQWousFw431nqcybU+\
cLQZWsHcTtF44J8EaZU4/\
BnclkmofjMC8tCXxhQUiyYsEx3BhhKRwxZeVFoHawYG0I3iO171QiJ1aqlVFSio9wqQPvrz1NguNdD\
luS0C5qhKIKsZMw2iNqz0KwVFXSiA8qp0bDCGmUSw5+ttJqT6kS3oD6SmGq1lEGSLJUxbuFuN3q/\
V1WzheQCupoAMJGa0m0BS1L472vCDcBuQLBivEhwC0G6qzGvQUZoaamHT7/OPri/\
rdHhdqQtx4dbAbRD7CW9oV7jL9GFA7r54W21hcEvSImUSnpQ31RqGUwQhZpCkandHaA/lbXrd/\
G6IPP3gt04MBRVayBWgO6iHGl8gojFUs5gu9KAc5nab82lTwgRkuJut0KC6rgqbdzpaY0Hc7ncrcM+\
2VnFGZt0iFYUIBBaikpm2FFfECZy0B7DWjCab+oZ9Tpk5r3VUC+bkqAvE6+qxVxpxI+Ub/WYn/\
LIOm54IkQOvLoFMUa1NKRemDB48HJUhkYCH/UgtotUhddhDfUvS6wEn2HQf7JTkke72IGpo+\
PASLsCiYnnAzgNRTceGpmAlUHHkUGKmpoQ3mpVHgE9m1lEPBMiPgMDDV0TMIvPuv27+\
6VaTg2BgoMIGvtQO+\
pfFjHCjYGLyio92uzXxNSMQcpjIF1INIFWRBND3hDqdt1UPGt3We4BXhfuHZD/YVKSkR8oQSZ+\
n7iETOjHbQKHggAYUSFFgAcJDgw7QtMHq5sHTLQnJux86ikD1t3VvB5RgJpZQLgJNrbIxngl3uAUWD\
UOwzBvYBDAggpanICF+\
WpkTG0pavk6DgeL07mG4VxmC6PMFqVQEhaQaJNK87AO9GSQYUK1mbDGUg4qCY4F4IQ6rYOpsJhO6mp\
GKTGhl1dgY+\
b4d0yfVg6uL92msA0BWqiUy2mFgYempSbVNSrTCtXoQEYEUE78mIGaaKYgILOzh2xpvveB/p3+\
7f2hx+FEeDwfqmjDnPMkuFHS2g98CEoKpUXSSAUBE9EPEBVqzCAFIHbdPQA5kE1/\
VkY1aL5Z9QdrUg0HI3K9J3lwQwPJnQMQssc4AAlFeUiqgYRowJRF6k6k0W4Kih8gZEwDdvglMyizaB\
gyrRr0kTqQbBORHpUhsWxUi2IRDwPGEYU7hUVJWdanAdjppq0VCP4iSIGQwpaEUJaAgsEkYANQCm4y\
zojcb+k4d50ksKoSRkftw74ZVrwFSZqrapAfFZBAzll+6CemCvatJ41p6g/\
G1spOqKO5JiQFPwzOiF3ydAkgAZDCtLorRZvC1VTQQdV1GeMQ7YiUnbHQy+\
pkjwhVMJ0iFgoegBUY6JAWylRC6LdVZx4nLM/\
0cijCiFADzDlVEACB2QhCKgri4zCMbCCkrRGvGio12OlAxMqo/0GkA/QVGVX593jIH2/0Fkj+\
fCFN6Zhr0VdEXUW4KEwljr70r6/oMALEZ2Y7D3VksAiitB0CoJVHv6D9otCd6iVQOqai+Ns6T6dS/\
UUjCYckiZTuwYbgAyJ9JO2fME1wxkoDvkYB4pXaiYJ4KAen/Ck+ELgWXawteOOEvcf/\
nbpjJukpBahUgOpwNQIr2kNDkEMKAMiCcpJFTw2bSFPhBg1wFuCvUqqcFmTti51r6wspdxrCERLFxm\
sSzvEY0ApSvTTKR4UwgHEKf1LiWCdLHXDB82nNSZWwGcC7dKtYI1rcbfDIVjQ5kX6d3U0SqWNO6Akh\
Vp6ejBZRrvWcT/KTGn8omZMFvaAyAqxS4YKeNoQ44FtrgMcjk/\
GERnaOSNouKJlI26UldQhHg6btmSDNMqSAaC1JkurSxGfzdYxRQ5MItiABXX46+vHb3/MZRyc/\
tbO3ghbm+ZwEYETp4ZbiirnSw7Sc9BpapRE/dvBshBiWToiJECR4U+\
hFfB1T68CeJYoK97ruy3XoRNcFbXlBmmA+\
YPfUvkqzBXMDRNCZRK0TVkW2miiYTJGJQXCpcG0TdfWI76ZNC1qy6rhtFOakg0KjLJ63Eh74lclaiI\
c1BOExcyBZIr2pTFQP+\
Z4paqeZ2zsXxVmPH8Eq511W22Gb4KFmiia7qZgNhH0wkrnI8dYKQuSJRwMOFWCEEYMnMPlMkbbI7ra\
fhxnlovTkOjguRtxhtFoTYgW1qpsswIGFaqVp2ZEEdiJqA7ewnNpPSg9bFQi4JO0gNAsaHtJwnS1HD\
0uAHnvMM5hmgcF8VbbjadEZIUm2QejqYGBpgo8Kq8Cn/eJO2+pPRBtEKTqK+KWIVjqFGwV/\
PnTFzVXBDhYxFgE3beGM7DN1ESdTwn96IgSUYuH56aGWBThJ0tbUTAUPNsAE0oClNcmWl8ocPEIQgM\
wLldqALEOw6E8604ZjdorLC3TNYFCTyVjVfgjWsGoWFPAxyMSiqB+IDR0pkKAf6NVmMrpWAr4E+\
2T5B1D88pSiuYYsJbzTOCPVLyeMhS8Upd0C5pQBWJMsArwaOozGgGaiAIRcnAglgOfQpwjWSdKXL81\
Sc3xYs1jXb89fjgazh5df2N/mMvs+vI8rnc/KtOPhuXja+P4xH24rIg9UH8TMPsUQVFiE/\
FaLWEOVHOIWDi4qMkEjKJdYom6vFObkNjx1He6RQEqlGkZU/\
hP1QCLJcynroWsSJhiAiQEL1Vl0NFEs0BbjGEjYOJgFXDx1MdHR6gPiCFvOvkIRt2LC+bouIS/\
spGEK+skK1IhSqcjL+hUMU+\
9Ubiu2SEc5iHSMTxa0QlkgopSajZUiZspVZDAxTJ0uqsd5bc3kurYGsqKbAgDqDATWoTY3XM6eycgO\
KFTgIRmlMFxAQqoWMnAFovJ9cF6MFkDsEmlgxL82maytddXViXjmE0fwZQE5RJdMg5xoygIYynUxa8\
oNdiJ58kpTf3IkhB0II6FWpau8oWdbSRrrb2sGgP0m+\
pzuJc10G44ajsDXSoOPDJL0WSknIbpOipfXjSjLo52vPCQRFeBzDbiNUsEK2KZGGuBQIhEm56GElEm\
xkbS1kjEwybRGVAB/\
rvKTP2qPe2pZibQoV4p2A7PuZlYq2s2K2IFquA2tF0uq8xZ0Aj0suNUgAB0BtdAPBCpGU3CzDabtqg\
tai48WSqd7UgVbGYCx9ZzVmSLmTL7iJMUCB4drgDsAjgE8KxEyTyqztCV+\
igLxWuzAd8LxM8mSdoW3jGTm4HGylrPKpQF46g/I3Us4gjRPWhzStr5BCoGAVyQBrgKskFsw0va+\
ofZzXiFILhD/TczzCPrQKsqRgf6WBN9hXIlsJLQxM9wSZaSzoZq+\
yoLhs5x0ZQFN8ANzDVTDnjXtVf/\
z24mWWuNaBVnqXVHhbrTGVFwtVkwTqt04IsIaEAXJOUiQKU8wNU1NfyKdsjARWsBz3FcsBubCnYkUb\
hqAQ7YaiyCGNs0BKed3eCMGSGQRBgK5Gd0xgViMUhXgF8ONCpTw8NknRQdfnwzCzi2trQiGzBB8cJD\
5VSFQjvUSMcR9VkCiywUhKV+\
jDbyKHhzXk2icnbqs4UAtaM7y2YDd3zdqYVoRHAYRiYYBm5IRUOGmhSDnDoVUvYyI6hWiNg9HatFvb\
Y9HYmAKCl2tue8uZFwHWtSq14KKke9M2LhdLISMMIhMKkYO4noHliBcFoWBCVU8A7XQC2fVBRNUVBU\
Xc11/tw20nWtV62Ciae2gUUi2KZSN51kBbZQo0THWBDwnZQEoJ0LKSraOUz9HRzAJ0AFfFdf8M2U79\
ha1ir8SqEs51TaLl0OlMvHZEshqdWroc4snCMK9qVwViW1/\
UdcSMUlhtMRcB0juJnHWl3nWhELWALvmDhnBpomqFF81fCeGrgPKglSq2ukU5mqoY34UmTq4xxkVdS\
qWHbg761NxTq+BrYiXzGx0LYOV60O1KcUEXKh9W4qFwZewFDpoEIHdHG0E0gBj7Oks0/\
BooLtyCr96ubyHayPrcjlqfM9HFOs1FfZZg6ORM05JbVroOxGxmhZWTk1XAYPouZ8QnJ4EsCe7ep7v\
rFBPG3tbFXpBC86MTJHhLLQcyFBASo1uA0kbeCF3IWhAjZH6zY1iQiQDNFUcifHpXx9YylX19VWRNO\
cNvBAEFCM5EWgVGCJFiBIp8IGTgdmUj0TB22hHj2SuognRSZTM1jecdFubyvayppbC0xAKTXCagRZD\
PjAchSMupIm2Gu21VN0DDwxCpExXCsr1NMZH6Y1cLDkz+otjq/\
HreKxlcUkSgxRsWFJuKGjhu9UBM0CzKEghqF+51bYRD3PrcHn4OIctRIJHfuwNiNzK2t1q86/ROEN+\
U1ZRaLFBgaGmRC5NDG9pu0R2VGwQ2tHiSmb6BBACc9Gm206lik382Ed63iroYxoiuMr0J+yS+\
BDCLw410xFYIliUlJlro5FaU+HeVgwPerRRK3CrXMdCLwZlLTW+FY9v1fUmE6B2jJqLsyMzIza/\
cRAZ5kA6jydRMYjdQ2MCtQgW9rIAYSGG+nag3B/\
c7menbNclTYgXqH1PzgNWaIhAOaJepeBIUemOZwHB7tCuFNthj+G4SLojmS1+\
FIHidrMYXSuDa7IRwdBcHATOvmBGiaFZALIC5Wn0B6qoOHaFIAlKDo8pig63q2AP0XriXt1APNm2Zu\
nrBuu8ndP1Vs60oqokdRDhtpkADhosSSJ5nw2RLHJ0r69EjMdpp1jSbSgmxTvmO/\
NRrBzTXFFPm6kx3Ah3KnUvpLKKOCzqKFKoSaatNQsqFE+\
jwV4gti1FAXmRYXPHjDegcxvbSnf0fXGVfdBbVhpRbdUwAwm3VATL6Mpv19g5hEcBX5NCzoDgir6gq\
bcRKDWJVZ0HiK8oZCttchVRsWp+DwQ9HKbQdcdkSYwU0xxNnSQG6dThmthiCNB+AIH+\
sUQK0N0y0rH9G7m2LrXKVeHDjCHyJ95nr2hZl85a2IIYPUWVMYxTwc5ceqb4HTMJB0PXArOwFxd14F\
Km7HkY2uYq7pHPI+Bo8As4WuNDNQOXkjaVA1ukunoK8T/thhfoZAZxJ0FTyegy8hi7WDwmxGWo+\
ubq8NGrb8Y9QgEdWHUeAPWWWTSKdIxaIyq6xFzSzrRBWwFRMViGEFX6fwq+\
dkZ3zPWPlekVFQPrCyiQ8moYprTGUW20PFoDPOZgXuKDsLEk9BRYilnFTU11Bd0GmdXZ5rNBvDomuT\
qAFI7Q0kbMzyVR4OyKPg3OgRWpUTnY0hQBi5NovNqKeKmLSQS9osgBLFSh95thnudS7atrLpSWlIPP\
EV9rTjtK6GyaloYpcMnQ4ASUh+qSCvHMG9EZ5yaDuuMSKgrr/\
KdzeR7xnrqakRUWWJ0cAMC7GioFq2A2hcHcQmKk6VTbjPgpRIFhEZqhHWIdS2FUiF04Mvdzyjm05gC\
E9QROjHarqhAopSxsBvqcqlk0DVoyEgdHuhoB0+\
QU7SNIsCzgEu4Dqbwzucn6HfbHtlB8ajESnGmFB20STVkgTp6E5fhnLpZJ6r2LE3fYqua8lfE6EbUr\
mMwN8vBd63Rrto0AjVqKyxihloqSm+AGoLMqER1sAmGRCaC4CNrn0GkC1OMM4a4r2bZtQFks0jk+\
PrtqjoyEYisIPZIgiEyA4vRzkUvEuJjUQ3VRWkMl9RWSOrM46mDCDQhIJLravGymXDH13ZXR46OBW8\
2CVDOlilEt1T3kxHfaowd/HI1tNanc3WUSwDL5rSS5lSxDt7vuHDvbSbcWuu+\
LVqTqYBVVAS61KknIziBd7OmwB8XCbav4VdoUykCPmkwmlbA2hGmSmed6TDuzdjrU9aEV2M8HhEaCe\
+CssBogCNsokrGvaJicJcyzTtcstUGfD8Xnm1zWCCdwe5Vh1VvFkVdfQpzkIIyMJIOzLG0eBzgoBFZ\
UmlmYU5qIEw2lDxCjFqKgBsv1EYxaYx1ZV1Gspl3udq1DXWV2WgwrAgmI+BEqDaU1+\
pZ068QxLVQbx9htKVDj7mGyEZTu1uKP2U2rKs6bMNxO0xjtTO7SYdEuaAkqbsDeGigXgt0xieGzCSj\
QhUImqB/BhMZ6Ag16KPyLjNNzf4+\
aybhalMKACbT4qh01HGS0RIXrTFFWobJtKkgw6vZQGuOkCrTgiMUH4ZAHSkYtTGgKc0do7XZ4stCqu\
/BOo+ovwF1dpYaQysLdPMYqJyAyFTr6TUsQVO7YtrlHekcEFd8MIJWP0AT4fk+\
80Ly1faG49XVDfgCqA9th4UXYC47TtVDQA6qjAVfdbKGoGkbTQSVyRYkh9P5PYgBHJTyMyvY6p7kVc\
Pk1KOAlmih/\
oF2atCJqInKU0uhE8BS4kl7tWhxCj9raBcz7XuhTshdR4dsKNfqtuXV3KjO1BNMU1N2GBpkwrDgn8F\
QMztwYTpC1EeFvzmQDspORwpQN0OtnOwyyDc2k+\
spO5tXM1ZwkdQdoDJnXKIG5TYw8GMgRaEMpENw5pVTkFdLuI0K4PV0bnqgY8J5V/\
V3t4gP9kGIh4GKT/b2Ro+\
blHInyiJSqMpgrIykXkuRtFuopEDkwOkF7TuOFvNLPbxNYikG16R2y4Kcdgya+\
jSJbobZMO1Mdvf258eTtA5hhEAMI1PGg9PDM8Q21JIZ2p4BW2AdVE5RqSA8IMrgJgMp6Og9Q01r11a\
uJ/KsivLu+CncV5vU0Ek4JYQTUJ1KW3JlJhKsMTh0YGtz5kNS8KbNjjtmMw8sMjqqpiPW+\
VS5lhUcs7fGy7kbTR5S6N+qNgnN4cw6QY84/\
KCvVL6FUIa5wrI3MSbrOEzSyyRoExcvDrGXb8pioWcd82c/\
Ta5FHvsZKsWdSRnOBoEXIjATqEMi9Fs2zWp4JDBQWoF2cGAbJFTGcYloDFZgee3AB/9pIn13f5g+\
bArBHkx2JuN8PMiC481cCjrayuhALUQV+\
D74oaRD6GX1dCiUpQwPgB1BgKYemE0fIO1S7MrRvfZpQh3CRDvag94aqDj1pPBJF9Bonh35YkW9dLS\
IdNpHFIhDqRimCjryqXIuKClhugp5P3XCDuKmnTBKy8xbG9ADVUVoXQLlE8CxCvWeo9g5WDppA35Iw\
CwlFVbRgitGJWoPpxyihOQdjP/\
ep4n04FG5MZtN0rD5wGGQ9G5tqzoY9hHlSk57JiGdRZhJowdPXYyNmk7VbGyzwvlRihgRE52Pmqm2x\
LJE+Sd4o7XZzRNZ35tB1yHw/WUK+\
N29YyNInbN4osNYoE7UEiUGSQ1yAhWQgOxzoSudXeIzGSOU3YM7IiIpOSRuJX9t8PUbeOaPm+\
KVjNvNzj2Y7pfXBi+/Bf4OKQaPwl6pz8/+\
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\
LSTTdC19V04WNMqaKxn+\
eTpNz1BUADjgjDpaiUgNbOuvHaeok6lOQWsMB50Tn8xlrT2Dq6sKpNt2t3e53hrNZGZ1E2734VbVd5\
Wj3lSUKHDUdgsXgZpWPOpaSXBWejgGm7T9SMJ5scVwrZ6l5jEgliRNImS/2truN7Q7CLHw4PIm2+\
8JX1XZTqUnqIBOrCG1lofMnc6Szi2JWrATqe+KUzj4zAxcdEAAr4ZxQOtim8/4JnsrTaLtbU+b3h+\
M8P4mme+mrarrMZMbobEjjhGVRUut97elASkbnPhjpvCuJToxVFp90kc42qYIbn2C/\
Up7kqTyNpntjW9P9ZBoej4bxJBrvi19V41V0GKBl1G1Zl0TnusvsGbgwHZHSHDUtCyyWVUZ9qZiUMX\
oDQm1s5dRe7CRP5Wk03utrGO9iVehuGJ/IFaGXvqqmSgcWRl2sAUumk6bp/G+\
qoopZ5EStd4SgU28F04KFpis+dRSjLlBRas7cSZ7K02iqv7SGqZ7cxZ+\
Xv6pmWj3zNiknjKjUQS9TEz+eE7c8RVnphK9qkgUPtkyxJLmk07xiUabWrNUJjGRfPtVm+\
mtrmGmz6WC83JLcdO6b7XxLTvMvnkTL/\
dpX1XLhKHnixijupM5OBZeDSsyYHLUOis63zNE6J6ur3ksrHc+\
mlsRLyNVnfZKn8jRa7joO9uQu83z9q2qmOjlBR985Vp2ls7GiyAhVBSJSXTS3qYgS6RxaIsoyGTr8u\
mpTrCwVBl5P8lSeRjPVa5vpt3YneViH5WT61Ve+\
qgZbnLOBDkVhhdPpWCloZWKw0gabrWTG51wNszKFSq2mk/BVJWE1nXPIAz/\
JU3kaDVatYbDvhzDbDcMy/c5wWk+\
mg331q2qvMFfPHLWrl6m4GLPg1P2WRRVt1DZEFbgw1lcXHdls1pLh85rTUfDU7fwET+\
VptNfX1rDX779771viGj+RjvUbX1VD1VqR/\
wTLlYpOq85esMAk9Ty2WlSfpJfwrCUqvK6rNKZWBLgiS25Kqf4kT+VpNNRfWDXU1qGv16kbbabm1/\
NP5idvWn/iq2qhllsvBKgvfKqQnA664C67lGSxiFUdi1xXvMKNtsxUX7QXsiCoRYRLUexJnsrTaKHf\
erqFLqsfrt9I12CoJ29if/\
KraqOBMwpGZebF5ayYCqEmoaXDK0wLS8cBhqKFCXQsBuivp8MnKh1L4YvMJ9BGf7K30U+x0Ycn00a/\
+VW1UTrHj8GXWgSZkSUms6UTfRXiTSMEHS3HBR1YlgOHlxVJsSBMxct0lpRO9iRP5VfLRs8tJ/\
r5z6MFHf7x0mB/r0xnaTrcmw++Lqy4PMfFRpd/7y/+F5cHz9WD5nTrfLJvW9e3rVvDxL8QUOhuW/\
f8jzOOdbetexZwbYc9l6hj3IFRt77SMth7zc///PrxP3ZeOLzWSzsw9vLJ/G4Z79fzT65C/\
24g7ucHjyYfX+aX706m5fJ9/Bnmlx88Gs4uN33u8KxfW7CJ25+UtD8neFtvdkL+\
4f5s3pw6MoN1LqCyt7jPSxkH5zBXM9zphTv747R0LWLTmbn5mJR6MJrM6XydunqgyqEGfY1U5fZHYb\
Qf5pNp2wE+UaM/1qiRPlSjWa9Hp1WPzm+oR7NLoBPN6UTTDpXil++Uj8u0h6bTrFJ/+\
Fmg6Y8voelQj3psOrWK9K82VaRDTrZWe9/mo0/tGfyb/85//S+/9Zt/\
8Prs5YOIka7QRftWzj46zuLOzC4uD5PC+z9BLYLpVrc/2ZuWGZ3mPXPrDXR6cs0H0+\
HDh4DfC7Pz7z8aJjqG4eJ741nYLd9dc8CvjsJs/u5y6r4QNv7keKrzg0bQrR979qvrP+LO8W/\
rrb69aMDfPYN1eSzYZ5NrezVY3n67B6MJuYmJ/fAwXtrscg9HkxhGgzSdjEYApkNz+xFCH93j/\
eH8Ub3UlnhNJcbz0/l5V9f8/NWDLxzcZj0LO/\
gWffjqJlZ58KXNbjecvV1CXfRjvzr7lc1u99bKlze77aPmO4tTBptzAW80WacLd8M8PdoIjFYe++\
Ubo+X2hI9afebbR2Ks7VxWZfzuppO+cWprMXrX13N7o9GTodvwKz9mTzJ+\
vPGTHHzli3oSuda3ZqtHaVIyfD1cTotjXVvncG6KL2c2fLDVs0A3/u7RM0M3wtBH4aNCy1XEK8++\
M5k3pC8MR/vT8t2188hUHjIr8+\
WZy3S5LSd2PTIynB0cQHgoNVzfnWkpmytgc6IhrSj8uclwfLhgcrZJo+N/\
350u77DlcG5sdJsPwewi7vOIzsxdib0wIC8uzrOl5xqcbyKx+sITlnn+9m/th9E2HnCRd10sgGx/\
kRVfcBZ/fraLtbzJ4MLiX8uDlp47HmXSooXZYNFi5ejdPsj8EpcuNqWFgwvTsrtcvf/UtAUZ/\
LnPYvDrekua69u7e/\
PHP2pvuQWaLmjfxpxnG4q5Fmzhs6WHrR62ThdsnQ05b5q9X8BXY72bA9dmQV5LiY8FeW2lfnJU9BbB\
74Yc6kkIdq5F41ZSatsEDoNLN2apjPMRqBqcI9rdbaXrCbysiMBVevP88oxtZXY/\
3eRWfNbnoVkv3iqdqvXy/\
fJRmc7K5V7FvgoqtjrNX7SOzc69M2lq4Z5o1wVcr9erk69Xy6ldX6NWGcPBIk5XZdLP7Uz2Hl/\
GKA1JhS7PJ5d3RsO9OAnTfFxpzqzJSeeTnf3ptIznB9ddU3MSZKHbrxvEbUx/Vp/8p5snp9c/\
5anXzVgfPvUWSbHPfYA6FaE18fegW+XJzA/Hl98pH1/eKaOOtfrtJ369GUq4ayPPFzPzi0dvpv6Zj/\
2FzPznPkJPvMrhYjkVI98Ju8PR48Erg8n+NIFuhPHs8r3p5EkxNn2IirF3vt7+4vtl+PDRfHb+\
3igMx08+fmv40ZCOEW4v8r94Zwr/tVhgb63L/z//N/38L0/\
O8n1hsBcSKehheeZzOyv104elAIsSgK4F/LNHFvB/FI/\
5ytvDcbk5LeFDWrscjpc1qN1FA88drSh4Z383Ug/M6Yezo1/8OqVpac6aZ1l5u0mOr6dDw0US/\
ruHy9wrNQvrae6szPf3vjcsHzc5p40cNtxJ96r6oiq9ieY2e4wmOp3k/VZJ7gbDMd/\
do5evzi5epWWNpnR+s68fpPPX8+\
fLpZBt1kDOPqsiYbOnXXLHlbWcDZ93zTos4BvMffFePbM2fVx8jd7p6ePnRx831OhVo9xOUxaqtlTQ\
zRVmUws+985+41S2AcMFkv5IS1mOm9w2NjT7qZUvwRtOZ2X5xssrb7w5+\
JlvEdJcHk8ujybjh2V6mQADnvEXt7lre3PR7OsPpoH2Ew0e78bJ6IsqBGqJ8JNLp7WA/u+\
B0JTZiivdYIH76nyydzNMm1scusIza7rC3fBhachLxiVwgV9Y+dbyowPw7/KDwX488JgRc7aZ0+\
y3UH2ZuPlp2n9mM+1fzulGqHg1TuYg6gdqutxXeGF2YaF7bRJ38X7ZG4VU1gy/\
dptNjof7IK9ePVrjWp//sd34tYT856iuMYw/bBbvWtsgf4z3rGGi7jWdjsazP7P2uvDVw2dd/\
f56wu4dLsl0XWOb5ZfD61zoZKYI5d4ap2lpArLPXPO66Vr4JoO6USFkq4Zx47Ff3uozlG1uNVWbP+\
EXWjK+buhJ/rYZ+ik41CZTvGaN88H1b48WWnsU+xd4c2Z2gfIQZbrz4lHAOTSJp3/\
mqQ5kW7zuSKMcSf22druuJExebr5x/PWVRMrZB5MnmcPj2/\
1XUkg7r3TkS9ZNAnY91TeWPu39adjbK9Obk0+o/GP54uJfFx9M8Aeo36XZT99aRNY/WP5ucizj+\
c7zB1INzi1LL881Srqpu15eY0m2N7rGkqscXON8w9AOL7JxJeRSku9RDf6Gknx0WFW/\
uMabW1zjUfsaFx40/\
PnwKpuz7sV1Lt084DiHl9qKHC2u9sIKfJ37wgo5XsbMjnOY5juT6e66UdOPhqkf6lyD+\
9sa4XMHTTBW+2S0n2pZ1Dv87YO3NyjUbe8aenFnWvDqe+\
9h1jYL945lec8ceevpGdnWbV6lldSPSv5emA6boxIOsXlzXbhwCzR88vhQhFdvlRr2R/\
NDIQcHnzgz+5kD7Gp6bYBAzQ9A7MwTdB+UUUnzRqwjaeEXbudh5xs/\
sfgOPfMSDmfL8rGXBvu7u2H6uCmqe9I+4cL9yceErE+y5BcehIcLrH3pQdlFYDEvi38u+\
ov80Su3JmmfPEUz/Tf3h6N8v8zwnLMrg3NXfuXylcGLuOby2Qc/tXLblSY7Z//gd//eyr2OyTE486/\
X87NvHI7O4l6tT547KvHg4mA/IQqaHT4rcaHBmT+\
Pi77aUqeV5zlQ36833A4TgtgddnAk0f7Ng3fLboQ9L8vsz9/H9R8fHagzh+\
unr1DTmcWETKbtey5ma3mT87OLpFvtLx/8vkgXobcuQN33gXvLYWi7xZ+7c/\
tAJe9MMfG3xzQpzeLG4NKd2zeH892wNxu8uhwYfOldPOeiqU3LuBe3WNnk2Tk6BysJS0V90jHnCA1Z\
MdBjtvvMPZ4X7pb5o0kevHhvWjC2VEjWwVUOEfXCTiFNOfjdRV9aWzWPMhkKsR8Md8ts0cTouZe/\
ffgK5dmW63YNCg2+1vTsCXtvNitB9Ll7k4+bEPKbN+JsMtqfl9XPz752NzwcD+\
swNTq884eY7hcaFrZQ9xea4SH1PX/l9/7O37qCC15aFmt8VFpNRv5I8/OPX5/+ZPPz+69Pv9/8/\
JPXd372CcGjYtm9d8dvjQFLx1aTlphwL2QqPTn69jPo5CptXFXj1RW5Y6tznbJceKLszx+\
i0NZodOnKXRg85nhr7Bm81ga0y5EQ7XJCdDsqQP3LswWoVMQBj69d+\
dxw9KUrD6gjFOnY9rh5tn3tJSQOXuRWXfPSe/GDwdkrwOWLs4I4O88wXoPFX1cGL3x3P4znw/kTh/\
Xi4DEG4ROiMrOzQMr2sx66teX0HbPCQyp2cVm3vDI8K9u0n3DR5Zby9mc6wOBFegkIhek4qrKvLIU5\
2iLs02U5fp/1BTq469G16U+962pssu7NnrEX/\
Zu0Oryojt95FKhlF620H117ftbyMpwG4ABoM6QEzqIJ0mKWm0s3+\
nB06fkLUYNWFPpjpwCvHnQaOKhgOcS/MysEbuElvxTvvjOazLb27kfdQu/ee/e+hXt/\
qXfvJ8i9f4Zn/caVu+GT4e7+LnXh+2xP3BkIHhfpKQNzyV9TRnBmPtu4nPnlwb955sr194Cgs+uz+\
TCMr9+i6jTA4/T6velk9sPyIWDo+t3w/WmmF34Ic748LXvkDCbTx8s3Wnp3/\
fb44Wg4e3T9fqkF6JHKPaj17PoyN3QdpjubT/fT/BYgC1Z4bRyvDM78zuc2R69egZyk6CU3vRI/\
zyk6+wd/+W+tvPxXnirmYPqjGtU39ocZo7nMzrz7UZl+NCwfN4N49g/+9t/\
vcwl9LqEnG19lsvE55BJeuHKjUdTtucbFK0069PNjEReu/\
EgIxCV2zXEvvO7TA316oE8P9OmBPj3Qe+wv2mOfbdtR77G/aI/9GZ7y/BW8v/2o/+\
STYPSdybzEyeTDKz2b6NlEzyY2ZxNPPNtRR93hB1cuP3h5aW9EMUZHqcCzym8GZ/4CPn6YIPnGMVu+\
8fxrgwsLZB6cb/D1tcE5gkV87RCkpn/3H/+TP/UP7P/2+uDiEsFWYOvzLHw588sdiai//\
kXn927MIdP+ggRMSgUhGOKrfYKqT1D1dPdU0N0+QbUJ3eXXjFfG8T5B1VPKnlL2Cao+\
QdV77D5Bdco8dp+g6tlEzyZOOps4sQmqf7H3/D8c/vy/+nISVL/\
zBeenbk7Dw4c38JnS56T6nFTPcE8Fw+\
1zUpsxXKsFM31OqmeRPYvsc1J9Tqr32H1O6rR57D4n1bOJnk2cdDZxYnNSf+N3H//8b73w/\
345Oakfj02RfWqqT031RPerTnT71NQmRPfz2ffek8meTPZksk9N9R6799h9aurEeew+\
NdWziZ5NnHQ2cWJTUz//N3/jW//BP7/\
y7S8lNfWXvvDU1PTxbB5Gt8oY13jcJ6b6xFRPc08Fze0TU5utwEprLVd9Yqqnkj2V7BNTfWKq99h9Y\
uqUeew+MdWziZ5NnHQ2cWITU//2P/2H/+jnX/q/vpyaqb/6JSWmCIr3R+\
G98XDel0312ame654Orttnpzbguhf5NeGk73NTPZvs2WSfm+pzU72/\
7nNTp8pf95mpnkv0XOKkc4kTm5n6T3/9X/7n/8O/9S++nMzUv/HlJKbujSZ92/M+\
IdUT3NNBcPuE1CaLr/Iak06aPiXV08ieRvYpqT4l1XvsPiV12jx2n5Tq2UTPJk46mzixSamf/a0zj/\
72Oy98Ofv4vuik1K0w/Xg4fn+Y54/6pFSflOop7qmguH1SarMdAUway12flOppZE8j+\
6RUn5TqPXaflDplHrtPSvVsomcTJ51NnNik1P/43/7E3y3//v95Svqe38JdJ9P5oOl9vj/tj+\
TrU1M90T0dRLdPTW1GdD03mvX1Uj2Z7Mlkn5rqU1O9x+5TU6fNY/epqZ5N9GzipLOJE5ua+gf/\
6P33z/+D/+/LSU39zhedmWoO4uv38PU5qZ7hnhqG2+ekNmG4+powwkjR56R6FtmzyD4n1eekeo/\
d56ROmcfuc1I9m+jZxElnEyc2J3Xrr/3Swz94+\
adOyVl8txfJnr5Yqk9M9TT3NNHcPjG1WasKzzjnsk9M9VSyp5J9YqpPTPUeu09MnTKP3SemejbRs4m\
TziZObGLqf3/ur/2Xv61f+XISU3/xC09MfbIXxnnZ+LzPS/V5qZ7lngqW2+elNmO5Unih+\
4Kpnkn2TLLPS/V5qd5j93mp0+ax+7xUzyZ6NnHS2cSJzUtdvBr+p3f+/\
otfTl7qL38JeanJdL7MS90K89DnpvrcVM90TwXT7XNTmzBdcU1Y60XfYKpnkz2b7HNTfW6q99h9buq\
0eew+N9WziZ5NnHQ2cWJzU6//s3/+3wv//JeTm/rCe5/f/mQ+XNCqt8v4YX8sX5+\
a6onuKSG6fWpqM6LLrHVC96mpnkz2ZLJPTfWpqd5j96mpU+ax+9RUzyZ6NnHS2cSJTU1973f+4/8s/\
ofPnZKyqTvDcb43/\
KSMdkb7M7KcPjfV56Z6pnsqmG6fm9qM6UpmtexbTfVssmeTfW6qz031HrvPTZ02j93npno20bOJk84\
mTmxu6j/5q3/jn/7D/S+pbOqvfNG5qTfK/\
AZGfmcymcL5Ak775FSfnOqp7umgun1yakOqq7zpk1M9nezpZJ+\
c6pNTvcfuk1OnzmP3yameTfRs4qSziRObnPqP/v/23j3Y0qssE8+\
dJjASCBdRAzFGBKG713196yeXdE4nIZJOOn06ZKCAsK7pTZ8+\
p3MuSToQBBGCIM44IM4QrFEspIACsWpqdMBCqPkHB6ooJgaGkVIspQRBHCWCOmJ+\
z7vP6e79nfN1OHuz+2z27CUqSffp/t51ed/3eZ71rnd97i/DYz8zIXHqbRMSpzDvQAL4y+\
FF13rScqpIVUWqCnlnA/\
JWkWrIFqtKCWeqSFVhZYWVVaSqIlXN2FWkmrGMXUWqiiYqmph2NDG1ItXlz/jzq5/2yQk1Rd/\
xxlPX5ZMd0YFtlnuxSlNVmqpAdyaAbpWmhgC6u+\
Qe5ripylTFkhVLVmWqKlM1YVdlasYSdhWmKpioYGLawcTUClPv/OzfP/\
f3P7ZrMsLUa3del7pmIdOP12qpKklVhDsbCLdKUsOdvXJAXDXOB6krjKwwssLIqknVjF0zdtWkpiFj\
V1GqoomKJqYdTUytKPXAP+z/whv/bEKi1H0TqJa6wa9i3vHrlE1rO/QqT1WwOzNgt8pTw/\
Wv4I2Slld5qgLKCiirPFXlqZqxqzw1Yxm7ylMVTVQ0Me1oYmrlqTe896Ov+\
7UT505Gnvq5SahTa3luwa9UVaqqUhXjzgbGrarUMBiX72ka3VhbVamKIyuOrKpUVaVqxq6q1Ixl7Kp\
KVTRR0cS0o4mpVaUuW1t92due868vmJk+6Kc7oM/\
hGyvzuT9DVaSqIlWFvLMBeatINeTTP84a11SRqsLKCiurSFVFqpqxq0g1Yxm7ilQVTVQ0Me1oYmpFq\
ife893rX7Pn/MmUTv38JESqE8eO5dXlE/v9qq/\
KVFWmKs6dCZxblanhcK6S0jFVlamKJSuWrMpUVaZqxq7K1Ixl7KpMVTRR0cS0o4mpVaau/\
OPHvv89d09ImXrzBJWpm/AZXyunqj5V0e7soN2qTw2Hdq1shK6VUxVRVkRZ9amqT9WMXfWpWcvYVZ+\
qaKKiiWlHE1OrTz33Scc/+62/unAy+tQv7LQ+df2x40vLq3PLJ1ZW/\
UKtnaraVEW6M4N0qzY1JNI1SjBZtamKJiuarNpU1aZqxq7a1Ixl7KpNVTRR0cS0o4mp1aYWLk53Pvm\
yiyajTd2709IUJcG5IzkerZpU1aQqwp0JhFs1qeEQrhOcc101qYoiK4qsmlTVpGrGrprUjGXsqklVN\
FHRxLSjianVpJ7+hTe95Y5XPGoymtQbd7xeqq8+\
LfhFv7zhyFWcquJUhbozAXWrODVk6wqurBnne9QVTlY4WeFkFadqxq4Zu4pT05CxqzhV0URFE9OOJq\
ZWnDr/qifZxZsn1Gzq53ZYmzqQl2/P+\
zHzvdpiqqpSFePOCMatqtRw71Fb0zTKVVWq4siKI6sqVVWpmrGrKjVjGbuqUhVNVDQx7WhialUp8fB\
X71cH/uUFE1GlfnWnS6b6stTJJujX3LEGuLaAP4ufJrNrP/\
QqVlXoOzPQt4pVwx3IciUYE1WsqvCywssqVlWxqmbsKlbNWMauYlVFExVNTDuamFqx6lc/9tm/+\
9wV506mhOq+\
HReregsLefnGjYB4eImsqPJUlacq2J0JsFvlqSHBrjVNbYleAWUFlFWeqvJUzdhVnpq5jF3lqYomKp\
qYdjQxtfLUHR/69kee8qoJyVO/\
OGl5at2RqkBVBaoKd2cC7laBaji4K6VqRBWoKqSskLIKVFWgqhm7ClSzlrGrQFXRREUT044mplag+\
sQ7b/3w733ovBmpnzqEXX8cE+UX+otRn++\
r8lQFu7MDdqs8NQzYbfZIZbiq8lQFlBVQVnmqylM1Y1d5atYydpWnKpqoaGLa0cTUylO/eM8n3+d+\
9/LJyFO/NDl5ivwYi3FsbaH/\
B6tGVTWqinhnAvFWjWq4A1nNudRN1agqqqyosmpUVaOqGbtqVDOWsatGVdFERRPTjiamVqN6XnjoS1\
c/5YLJaFSv33mN6mRjdPp+FaaqMFVh7kzA3CpMDdvKQklRH/\
KrULJCySpMVWGqZuwqTM1axq7CVEUTFU1MO5qYWmHqdQ8deNdFeULNp96888IUxdB0ElutXLfsjx+\
p+lTVpyranQm0W/WpYdCu3MOUltpUfaoiyoooqz5V9amasas+NWMZu+pTFU1UNDHtaGJq9an9R6+5/\
y9etmsy+tQbdl6fwsLMLZ9YWfUL+/\
2qr9JUlaYq0J0JoFulqeEOYoXjzuoqTVUwWcFklaaqNFUzdpWmZixjV2mqoomKJqYdTUytNLXn4R//\
7rdvmVBb9J+fgDSF+Yf7rMXVteVclamqTFWcOxM4typTw+\
Bcvkc0TEhVlamKJSuWrMpUVaZqxq7K1Ixl7KpMVTRR0cS0o4mpVaa+/J63v/\
fzr37oBRNRpt6208rURgv0vL9XCvkO/shBv4qv1JboVaSqkHc2IG8VqYa8J+\
Bs43gVqSqsrLCyilRVpKoZu4pUM5axq0hV0URFE9OOJqZWpPrOO9596as/\
NaGbfTtePnWqcOpaTwpOVaaqMlVx7kzg3KpMDYlzmXWm9pyqWLJiyapMVWWqZuyqTM1axq7KVEUTFU\
1MO5qYWmXqa58/es/\
BSyakTN03YWXqMI2hylNVnqpgdybAbpWnhgO7ojFC18KpCigroKzyVJWnasau8tSsZewqT1U0UdHEt\
KOJqZWnLnnHn3z7eT978WTkqV/\
ecXnqxLFjeXX5xDV3rAGpLVAa3ljNlapSVZWqYt6ZwLxVpRqu12pjuONNVakqrqy4sqpUVaWqGbuqV\
DOWsatKVdFERRPTjiamVqW654MfntNfuWgyKtW/\
n7xKhR8ki6tOVXWqinpnBvVWnWrIN4GYEdxWnaoiy4osq05VdaqasatONWMZu+\
pUFU1UNDHtaGJqdaoP7rJPveW3z52MTvUrP1A61c1VqKpCVYW9MwF7q1A1HOxVphHKVaGqQssKLatQ\
VYWqmrGrUDVjGbsKVRVNVDQx7WhiaoWqL1/69cP/\
9PHzJyNUvWnnharF1SN5pUfetdGfqqpTVZ2qWHcmsG5Vp4bBumqPbAR39bpfxZMVT1Z1qqpTNWNXdW\
rWMnZVpyqaqGhi2tHE1KpTfxPe9bVX3Pf4yahTv7Dz6tQKNg1NPGAC/\
lCtnKraVEW6s4F0qzY13DmsaZjmsmpTFU1WNFm1qapN1YxdtakZy9hVm6pooqKJaUcTU6tNPXjhH3z\
mI3dcOCPa1OGl+VW/mPxyAqRahQ9VbapqUxXpzgTSrdrUcEhXC8bG+\
nJ1RZMVTVY0WbWpmrFrxq7a1DRk7KpNVTRR0cS0o4mp1aZ+4ynffNkPP+uCyWhT/\
3HHtSkApJWCQLwP89+L+3srCKoxH+vnY0qv5E1Vr6p6VUW/M4F+\
q141BPrdBfRrta5yVQWYFWBWuarKVTVhV7lqxhJ2VasqmKhgYtrBxNSqVY9+\
8n3yD981IbXqF3darbplsbc6lxcWTqlW/T9V5akqT1W0OxNot8pTwxzOyj1CcSOqPlUhZYWUVZ+q+\
lTN2FWfmrWMXQWqiiYqmph2NDG1AtWur3783V/85qMnI1D93A7rU1fOLZ9YWfUL+/\
2qr6pUVaUqxp0JjFtVqSGvDNjGjvXF6oojK46sOLKqUjVj14xdValpyNhVlapooqKJaUcTU6tKPeOy\
r7zS/OYFk1Gl7tvpsqkrr1teWju+/m+Hcuqn+\
CpPVXmqgt2ZALtVnhoO7AqhhBvnO9UVUFZAWQFlladqxq4Zu8pT05CxqzxV0URFE9OOJqZWnvoZ9Zx\
rX/7pc2ekaOoGv5bnFjymqXaaqqpUxbizgXGrKjUcxmVOOlaLpiqOrDiyqlJVlaoZu6pSs5axqypV0\
URFE9OOJqZWlbr3G3sOHvrEOZNRpe7daVWq/2cO+\
tUjVZOqmlRFuDOBcKsmNey5q2NSV02qosiKIqsmVTWpmrGrJjVjGbtqUhVNVDQx7WhiajWp3mW3HLj\
kwQlVSr1uxy/y9f/Mi/\
HF2va86lIV5c4Kyq261LAoVzRCVV2qIsmKJKsuVXWpmrGrLjVjGbvqUhVNVDQx7WhianWpe37som/\
d+qkJ6VKv33Fd6mBe7i2lXjxM1ldhqgpTFebOBMytwtRwr09L4SyvulRFkhVJVl2q6lI1YVddarYSd\
pWlKpioYGLawcTUylLy4FMffv5vnTcjjaUOLmHv93uf18ZSVZOqEHc2IG7VpIZ7cZo5J6soVXFkxZF\
VlKqiVM3YVZSauYxdVamKJiqamHY0MbWq1IMv/+KFb/\
j0rhlRpch7c1WlqipVMe4MYdyqSg2HcRUzUtTWUhVHVhxZVamqStWMXVWpWcvYVZWqaKKiiWlHE1Or\
Sn3glYcP/dRVj5mMKvWWHb/CdxgIaaUgEvd//\
ICHI8X6IF9VqCrenRG8WxWq4VpWaG0Mb6pCVTFlxZRVoaoKVc3YVaGasYxdFaqKJiqamHY0MbUK1W1\
fP/QTD61cMBmF6sTZEqgOY36XezBtL2DRwglyluUTK6t+Yb9f9VWPqnpURbczgW6rHjVkC1Vnmaz3+\
CqCrAiy6lFVj6oZu+pRs5axqx5V0URFE9OOJqZWj7pr73f+6OZXTqi71F1nX4/CqvXi3NIxZL/+\
j9TqqKpGVWw7G9i2qlHDYFu+p2lkI21Voyp+\
rPixqlFVjaoZu6pRM5axqxpV0URFE9OOJqZWjXr9Xz99v7jyX1/w/\
1ZXqdNq1KAQddPioVzIvqpKVVWqYtyZwbhVlRruOR8uhHRVlKowssLIKkpVUaom7CpKzVbCrppUBRM\
VTEw7mJhaTeriL330/vf98zn/j3U6P61JUdRdW/Ar1y9u3NlbWLp92R8/\
cqJqUlWTqhB3JiBu1aSGO3dVDROydjqvOLLiyCpKVVGqZuwqSs1axq6qVEUTFU1MO5qYWlXqaQfNVy\
7+ne9MplLqnrOvSl1/\
7PjS8mptJFUFqQpvZxDeVkFqOHjrFFOuClIVQlYIWQWpKkjVjF0FqVnL2FWQqmiioolpRxNTK0g96g\
H2mv2PfXgygtRrzr4gdfNaLx69bq2X8uElmJR69d5elaQqwJ0dgFslqWGuAfA9mlkrqyJVMWTFkFWR\
qopUTdhVkZqthF0FqQomKpiYdjAxtYLUi5996Wvf//R/\
nIwgdfzsC1KHcsmAAZiaKkJVEapi2pnAtFWEGu6UVTPmnKoqVAWOFThWFaqqUDVjVxVqxjJ2laEqmq\
hoYtrRxNTKUM/48hde+IQLJiRD7cBFvfkTx47l1eUTc34hri34WhVVBakKb2cH3lZBasiy/\
0ZzWcuiKoSsELIKUlWQqhm7ClKzlrGrIFXRREUT044mplaQ+uDLL/2fP/LfJ3RR7+\
3nnn1F6vCRvG9lZSn21mPg6vJaXF1bzjeVdn/zXqw9papUVYHvzADfKlUN+\
bi0Y5bXnlIVXFZwWaWqKlXVjF2lqlnL2FWqqmiioolpRxNTK1U9/Ffstldc9a+\
TkaruPftK1S0r8JTDR/KhjSB40/\
FaPlU1qYpwZwfhVk1qyMNYI5RrqiZVUWRFkVWTqppUzdhVk5qxjF01qYomKpqYdjQxtZrUweX7DqRy\
9sunzv/bX3jH2ALfE6641vcWcroW/29lbmltcXX0KHguG6NZBzPQ3uJqf1FyymnsGehCztgeyj4/\
iexzfONrjz753SvmH3dyYbFLV0vv7rOfhJ50OouMYznOM3Zspj35ig3vKGsLP2i2XXrF/\
NEeIPsP2h7+MWCK5dvz6q1LCwV488XILvjgej4Z3cALuMSu/QHBPU+\
8oiVkd0HPCnwq8KnAZyqAzxO2OvO+i3fPP/owvH9hC9y5/f4ffeDSP81XnYI7u+\
cfd8Df3Tu2dowC8cbPn5zV03/usv/w0mf+p29ccfrPzb/+3LN0nnaqEeZBzFq/IUFYWljZCzy10q/\
93o8J7PVP1XbP/1A79+6b2z1//CyZ1X8rZmXvQR+Pwq6b7szLd/byXbBiHCj017/wv37yA/\
avXzCwLPft8PzuWwVcXVvXh5ZyKb3Ywx8d0/geOn7eA73L/u/g+F69s8O7etnffvs+/Ewe05De+\
rYTl92x618Gh/QD4BLjGNkWX989/\
3M7PLCNR8LzIv6OE2Ma1i996YEHL3vMtwcX7Bd2esHWx0UkZG3B37LYWx3Xmv2Xl/zDf/\
vfb3locHCvmcjYDi4sjStoPPWOc4+848ZdV01uTPv98l29xVt7afXImMb0p//jCb+e3/l/\
Jhk19iO3Ly2vnrpINaaRfeDBW2+98AP/OsEQvx4Fx7gB97/52bf/7WOfNMFAeM16cc54V+rr57z5Y/\
foxw0O67U7PKy7j/vFtBExxjSqR13p/+zG91w8OKqf32HPwrDgWCeT1/ptxHEM7QV//\
o3PC3feVRMMGtfcvdpbP4+9IS/ePrZw+OJ7P/xfw38+Z5KLdm1vMR3s3Z0X5hbWVohTj2lov/\
umt37pgbXWor1hh4d2XV7dB7o5t7S0nHqLfjWPa2y//bm/DI/\
9TGtsb53M2ECkowdzIVnkWk9VieMa4+XP+POrn/bJiyfpdBjjRjA5kFeXe3FMI3vnZ//+ub//\
sUniKgzsmoVMPz6u1XrgH/Z/4Y1/1hrTG3d+tW7AVuzRr1OlwhhjyRve+9HX/dqJcwdHd+\
8EBreW5xb8ytho5trqy972nBZgnEAQOR0+5vCNlfkcT9Zsj2OMT7znu9e/Zs/\
5gwv3ugmMcaOn5xghyZV//Nj3v+fu1sDeNLmB3YTP+HGu23OfdPyz3/qrCyeJS64/\
dnbA5MLF6c4nX3bRVZPjaf1SrLkjOR4d05Ce/oU3veWOVzxqklBr/VrHgl/0yxsHRWMa2/\
lXPcku3nz+BEP/gbx8ex6vwige/ur96kBLO337Di9Yf1Qn48c1d6z17vQL+LP46YXxpoBf/dhn/+\
5zV5w7SWRyoLewkJdv3DgOPrxEpztjGt0dH/r2R57yqtbodvrgYvPo1s9IxzS+T7zz1g//3ofOm+\
TqHcqxdxzW+4X+OeI4A+cv3vPJ97nfvXxwdG+\
Z2Ogobub53rGNruNjGuLzwkNfuvopF0xQwzsdUsbod6976MC7LsrnThJ/\
HcpUl5JO1umvXEdduMalvB695v6/eNmuSZLvQ3SUP374tefhH//ut285b5KMACPr3ZPHrSp/+T1vf+\
/nX/3QJOncRvDI+3ulUIEM/\
sjBPrsbVzD5zjvefemrP7Vrkot3atnW1a4xDexrnz96z8FLJiqfbBrYYSqvHdPoLnnHn3z7eT/\
bkvJ+aadHtwVpnqwmGhfOvOeDH57TX2nxul+e+CDHD6c/uMs+9ZbfbiW+f/eDNMybxxVOL/364X/\
6eIv37XS1AlUEHkGuWBl7rvib8K6vveK+x09SXplHYs/9Srx9YQV/aFzr9uCFf/\
CZj9wxUeWIKJBfTH45zefV1fFxod94yjdf9sPPakHpd+700Jb94kpZWj62fvazv7dyfAGs4Vj/\
PuGYRfdHP/k++YfvumCS1JYqhObywsKpYY+TGe366sff/\
cVvPnqCytKV44fXz7jsK680v3nBJIHMldctL60dX/+3Qzn1r9GOaXQ/o55z7cs/\
PclzoCtPnQKN7TD53m/sOXjoE+dMUJC+sv9nQBXGRV97l91y4JIHW+\
u0wxU260PauL0yLoT5Yxd969ZPnTtBKeXKg3m5t5R6cZzsQB586sPP/\
63zJulUB5d6i6v9sDEup3rw5V+\
88A2f3jXJQfX1vLEO6gOvPHzop656zOCg3rzTwb2dig94qssYWyi87euHfuKhlVb2uuusdy3bd/\
z4won++fe4k/Fde7/zRze/suVZa2d9OFf7lV6cWzp2fG11rEfCr//rp+\
8XV7bKFc6WR50ezOA4blocP5u++Esfvf99/3zOToSJ04PaKH9fuX6x/YLDuAr9n3bQfOXi3/\
nO4ErdfdYHtX5cf1bc6FEPsNfsf+zDg+O556yP5+a1Xjzav/N0eGkOHx2rVvXiZ1/62vc//\
R8HR7R41kd0KqKPaxRbngLeiX12hvd5xyKtbX5JZvf8r5yt9Dr68y7jGOmWRqRnj3JspzvoOIa0pY/\
F7vlLNjeJmDsHv7i5RUPrb1nvPPUS5IONH9s9f+kpgwb+ornd80/s6i1Av/\
H4LRf76buPO4CfBZQ6eZ99/tmt+bo80MAuj8h3dPM3Xb5y6m9fOLFn9/yPnPlW/\
obRP03tss5KN9l7f1Au7v+bKw76iOmpN/brjf16Y39qb+w/ZsCL9124e/7frP/7vuV4pHdnnr/9+\
85E/Vi6d57+/CF/bGUxr9x2W/93dqs9DP853v/eGXsEvL159nue8Y4jg6TgiX1j1+\
1cbwyIr9ESUJCff+lZtHj+h9a/esAv9kpeb0dJSACrtu/c3fMX9rNM+fcbC0y5sm/TKdt++\
EV5Gcu1l5Zxbj27kCJ21wJ+8IV+\
5cj8VUk1PGbpheAlOd7IKEJwjTOcSWNVDL6RRVslDVc5GB6NssU7JpVlPsm89ZvXbnyT7NzbfUtl77\
5F7KqFpTVkyOXlDVK392rg00W/OLd0l1/cc+\
y0hdJrbZkV2mbtmuSzbVhmRtpGqcK5sULY2IjCmqaxqpFGBJmanIXlHj+\
z1cKrR7UQgWxxdSEvD1pni5FOGJaCFsJEHpK0PmeXlfHcK81CVE2RjnFku8ZrbpJVObHEneclbrXuh\
SNbt7x0LC/\
f0ENAPdaaQWY1Jqnx3qWYDJMiqCSYl43HUkchtBTae6VYycKIRljsgiB9Mbk0Ovuw1carRrXxmoP7b\
3B2wLZieOO4ckWppLgKMihtsdJcm8KTkZFjD8pgQyzZweysdAhZOu1Nkbz4rba9YFTbXpgXj+\
YB02ADYypr/\
MfJpH0Tg1KYwIR9KEVpnMjBOdFo5SJz0UutMYEpRs2tsbbDNUaethf1AEEXBmxTjdBNtLREQftQOMM\
0KRd0yDk2RTipG82zsVIwHm1uuFaNtdEFETNcfIy2zfsVf7Q3YFvMJUrtZWQFW0vmFBhP+\
G5MISmWveRKNkonl5jBFCP0aCWaRijtrYTXjHFJb+\
0tptVBTzCJsRCSNtjlDGGCy6id4PBfi7U1snFNjiUlpyx+sgmIMrEIbhwCjJJyq2n7RjXt7mV/\
YqEXBtdUJ4qqmBh4XUSQ4zI5JgJcQ4dkuSwywyJWmAkuMCnhvQYLbmzh+\
NW01bi92zBuPWogwbRirnE86GwNVjFKk5lyjLJASNjfwjusGX4kC6YRR3jSGkHF6IYbOLDmrNlqyrO\
3YcrW4OCYswifiEoFY8UGapjmKXLLERQKb6IpJlqsk2WKRcmlLQi4CL2lJK06dtLzt2FG/zbDYp+\
DAB/06dLcM+\
VyetaAZRgoj9wYhYypU6M88pKKzBikAe2VNbqkYBvkzqY4J61sEMxKjjz7VFzSo03QljCgsS0RMZuG\
lcay6FkQcDIrsCMQtriNGTEqNdgjWEgZTcwqF22ylYgbPJatZuhtm/\
HMY0upV3q5NS8ZKdj7BICQASAQCLxWJsCvrbfJSmZcSgXOJqMvyIUIRYj8UVhEJ95wz7capLZh0K3e\
rxzzvbz8ot5yaU0QzHGsMV4HGeE82L8cmCGwoJBStPVBeTi/daUJDdmUtITbG811UtmIDp/avQ17/\
u1NB58p9vDBidFa0fixClKlAp9x8BwmG+2QnUVxUSLHIJwHhV/\
XRRpsYWwwkSQ3ORe31ZBnDBrSur6390BexRqs+j2rd6+essBy6+C23mFOhOQcgY83qYF/\
ZyQ03rDANVwqcQO0ZYoD2BIyY1Nhh9Eu2mrBM89swUZ027sv7oEhp2zwnNFmQNzNTUIyUN6XiCTR4F\
cQS2xSNvqshfHRyYjlcUAtwJ8sKpdlGtGG21s2RJ08w1xYLHJgkclktYfPYr0NEBzSEhdOB5c8xyyJ\
qJChDLAxgKdmOtrRbFho2ZAb47RtsBMl84ppY0yWSEA6084UGRnAumxSyTxhB1vnnJEhW86ENYJ3BL\
bt2HCsZUNTNOYYgCbCjOS1SEK6IoUL8NrGI0dikRBbs47ISJwrz3JJKiUvkEBjRy7cjg3L7f2Q4PpM\
IVQzpDoAB8UFpbWEMcMjgVtsLiy6WJh21haFTGRSo2GgVU53eMV2bFhp2cCCBoAvxiJOCawAEkoMcE\
JguCCsR/C2shRQDMw+\
1kCpgPnIANHSBctdR8jajg2rLRsssjzXoAkKX8fG49htwEhATggRpgRE7eQN9mMizwEcjhzomNIdww\
+qEffkWssGCcChojPONYxpn1kDsAiUW2KDnS/\
hLLrgPzxJgmtIekVqOLMWEdEhczGSDVf7lg2lOG8wq8yHRoCx5EAhkpyFRXBQwFxsWCxMZEIqAF3FI\
36qcN8ohIfckVZ/\
ahs2tF3TOBYSiBAom1IA0h6MKIGzlaKxGbyzCBbA3EZ7TkmUw00YE5qJmFjWHdBnO9OQWzZwoCmwIY\
OVSBgvNn3iSO8JKFRjE2D6XcguKKN8SADX2J9RgRvDg8CQbEda344NvfZSSMyEADXDdgT1wXYUhoeA\
TWBNo7A3DeEIIHgFmAp8iugsJFMgczoZxUbbklcfbdmAkADuIApSEcITKDYBOxmR0YGUDTmqK4DoGT\
MCNoicaT22LmwjyAgHHs2GdogCnDXg7KoBvEQQNg0+\
gegDlmcZCD13kcccgG8wC9yEVEBKEVk1oGkOwXQwrW3YMNd2C6BdsBYDBhd8REICd9EeH7ClICgLpI\
icEEKVQFAE1XONyYiggYHlaOGajjC5DbeYa2dNx+F2iqIk4mQDOKMUQ/ZERhcOS+\
EFEmhjhBKRgS9jE8qApCmRWpBo/GjRYS61I7VzYDqerGiUDIDcHkEZ1EfnxqkSdeMbDFlaLBZwi+\
Hekw7DEBgEc2q0bDHXdk0gA8Q/gBRrkTOQp50D/\
ydhSjcCUAkuoooEqNQucxOFYIhRhCYCawQw32g2lPaWJGVEI1smB6iCfIDsFMBXdfYKOSw04ByIToH\
ChfeBBwQr+BCgFOcBUWU0G9oIBn+n0xi1QgCQPjJQmwJ+\
FvFp8AokTvyv5gLMDKAaayKBpyP2rszwTm86VLnt2NBGMAqA2jnkBWD5hgFXawsKgWxULBMFUSgA8A\
JRmYa5wrBlMEsIUDaQHKLjiPOw1J4HhCiwT2uMRxRiymZQ+EYqIArtYgyRu+BTyEIELAR2gi+\
SwVGkb8Dlu8SO7djQDlHAiQJhUkh8TGYJWsF9AEwMiM0+MfJcQ/\
AeSK8ELRAuMRnYDTZnDm444lqsbAqTMMFhh2WEhIAwRXJAAmvH+occANocorkE9QXXC4BWBRYD/\
WGNCsG80WxoI5giSLHDYicEJ7CXRNkZ2FKoDF4Kwgl2oZBITYgO3kvghqsA/pnhwqCo34OUd9uwZ//\
8bfMgfXlAPEEiAJlxoDSIQoCPIFcwzDRNKiqkaByAJvYiGBmoHwiAyQXTFyw8JY8IrPefaLtGAVBHJ\
kiSNSC/mAefpcYieWzMUIDfPKVObFJAa5EQsYX2YBs2IJtxORqCuKa9LS2GW7wEGJDFY7IxUFVEziJ\
6MqYgTCGlYloUsXNMCOA/+\
KgGMwwOMHc0GzaBWmeiFCpR6kiZdNEGDF8bl5NT3iFteUQIV8DOszUKcRXZVAF2gwE0iXW4xjYy57V\
t7yxNbJqG56yEApp3LAk4rAaWQlKHO1qATaTImASz2CiBpFoHVN3g130ZLWNc285aERsLOL5hIiibZ\
CTwFhGoRI4KM4C43HibBDYiAilsob0qDWF8wzBho2Xva9vbocneI/\
JzOEJs8HFrG8ecdy6SDmM5RzYzoQQvQY2zpWOTxukE4G+QZ0wHtt+\
GDde1gZQAgZFSZozLCJ8aQ06CnJklUrhxEjQ4J+84IhKWRDVwCw53sIB/\
Nns9WpS6ro1ilPJReKQN0AVAKEHuAYYZgwKgLgqULjZYLptSkSbAGyJQJQENwB2ffcexwnZsaO8HYA\
Tg6Ij4B4aLSMHA+\
eF6DHtTF3zXIkK50Ae7SGtAfCzJ7EWyGsTQpg5Quw23eGF7O4BMY2s5n0BvciEl0+A/\
SoJzmAhIDUTTGMSmRJ+H8wLcRQSqIBmmiI+G7V+\
4yS0EQiLiIPh8MgAMCTTGYyaQlhSlLe6wOIakW4N5ECHh/\
whyUbrNCKGj2dAGcxnhJxeHL3PJRB8wuYx0DcSGiY5WWKmj1pgBwIWEDOuAbaTxgJWIYs1orvnCtiS\
mGPYC6BX4P6Y5IDVYIwQ2BrCbZRnwXsIjc0JOReb0OWVvrfHCYBrgFiPa0AZSEQC20dny6El0QvjBd\
GBv4J+tLaQmSw4QkYFzEBezZhKoFrwTpFchoY9G/\
a9v0ywDLzd0hgAWg4DokMORCwJ2pvS2IAYZQAxgO+zMBtyL+A6WCPOBVOHNaEnz+\
sU2v7DAbFZlwPakrG5ICBQNA8sD4jaIm8bQsbzAPKX+\
cUifeoSGk4jpus6Tt2NDO1ILTAICArYDKF1B0kQKB4QH38F/\
N64BditJaeadipYpbInIdWamMOxW2yWBbGMpXtReiqylSX2dGMEQuy5x5iSpHkqU6J0WkgFcMmUAaK\
zMDpOAnJURw1hIabTo8KJN+CXS+\
BosO0sAjiHrHGFSQRi2ShebKESrAoaN7OAQmqMGCYgcE5G17iqN2IYNN7QTlnIR7LYAqzTBIXMhd2A\
BgKYCwoYCy5QANcpnhcSNjSKTwYLBR5DF8ZvNaIL5DW0lCMHB0QmO4w4wXiQPSsNC9gVhAeNEKALJx\
BoEjcBpUpZYrdJwxllwBttiNBvaOA4ssyHtKTCFpe/\
jaE7REvBRe7iBMEiQOVmeEkKXQmZRJFVmAL9UgLNHsuFAO0pqpJ/\
CESKsNCXKviYImot4RIgpg92UjEQppGGIH5EZcApHtEcxC6QzmhJ0oB0eAFU9IRPMK533eQIMgnIWG\
D5QhMM84P8KggfLObgQE4nmCTkcuDqMCCYPtCO1SwIxiMovJGi1paqIbBGrNJBaQdoCopIWXwTrSr4\
BvsFGLTrlkCPljdGy5o2bFTESvCQH4UbQS7pxxRkLwIrYRadmyKU5cLB9bkH7mmyANrA9absEhNDRQ\
vWNoe2bxltPWkdxTpXQmICPA08T4+\
IBCBZgAulCGwRF4RCiBHEOqSjRsiZ0zMM2wuSNLRNS4ZEVJxGQHUhmysCyUkWkqYBIEBA3tcNv0K51\
lrADkgpvDJA3OGozIpa8sY1n4QFB6CyBBSRCNOYDAJ8LE5GOHGvIKSIYJgEKiRiaSJaMMpuA/\
0owajQb2kAOcQAeEKMvIJRZYrsFYnAC5MYjFnkgPEsCRaaDN+\
BZrAEVLiCHFICYEV3zxnaYbBTTjuQdjK4YOggHhwLNMUDNDUBjorglGhsRkKKOsMCBFIIiK2wNRPPR\
bDje3g8WaBE0z+\
ZgXBQBbAdpM0fkcwCoRMKMCxZZwwFIA0kE7B9A3CYGw4G4RsvcN7WjA53IcM8SnfQaECnlqAqIaQHf\
T1gh4t4C0y814reRdLKL3SoRszNlspGm4aa2GAXc5hmmGI6XeUB+pmJFBOuMTxFiyCB7CBYig/\
BrYXjMkWGimpJFU2DbSDYcbEeoDMcn8T2B6DkJWhngB0kzk7ELE8KhVKYYhAfatlg2JZHiCUNgNaie\
ZDQb2hEqcAMEF8FldCCNQferxRzIHwOGKVR4BYhTqAjDI3EEUCCpbQgcqR5mdUTJbWyHg+\
2l6BczFFukUMiDnvZ8o6PgCmHAUjmGN4Lgk8TEWGY8IrVRXGuqV/NmtNPVg+\
0IBRYPd0PYA4akuhxmwfNDRrRGvLD9cjU4LCw1iB0ZmTsA/ScEM4XdUuKINrS1alsiko/\
xjBAqU56ka0UYNiJWk1YvU8AMOYtEgliK3cs9kkk2heRTN5ooeLCduAHVAKEQp+\
D7GbkQCRLDBHeAAxQgugZgzfXlFmRQsA5EKGxV0UgwcKXUaGDyYBtUM+\
BVbzD5XFhRSHAoMAch2mcOlg3wLvGxRlL1gTZYg2AN7LTRetmYrsqy7djQPm2P8ICMOQeMAeUDraL4\
EFUTrQZMwg6Es5bCEnyhweRQ5ADk0g4hVHt48Wg2bNKqGdX8UGUzcKsNmgNMBDgjty4qrSJrjALuRi\
yPPJkk4CgKECYoJHsgz9HC5CG/aT8gSxif6UQ7M0krn+iEJIDMAeVji9h+\
9Yvw0TA6QMoMuBIIIoCQWDaaXxwKm/ZDiLKhmAcgHREiPGbZIxQiCBasQwR8A/\
GhQMacD8xFeG0DU4oTCBgj2tBGD6S9IGUIwNPgkbYUdwWZwSJZkNRhMoKlppJfMG9GqALQJnFPhTPO\
AsyNZsORTcftgO6ZTu440zIoEfB5h28AwweLL0uD3+FUIyYzR/\
DGv2p4sUVmKTByNBva5CIhL2pMt6WaawcPsSqBdYHrU5lUbIARTINcYT2VAnnJ6GwP5lGkjNido9nQ\
9guqcAFzI3wUhWoSzX9B4gC5p1JKGjY+\
rZBVGVwRYDNwmBipTArbooxmw3x7TzZIQwiGiDeNzOAPOUd4peAlBJOAaCPAAyflEnEhEP9UEhDGwo\
k08suIhHc+\
bsoXyBFN4EKA1DZMe515UQK4EvnCYM19o4DhtBKSNgKAHaMCyoakw6S7KpW3kbrn29PQSGTkAHLDAk\
A7wgMwdRN5A+JrleShAb7qQ0pghdQgWYYUJcA+8XDuRguT85sUWioJRKxB8InYD/\
BT0Cg4hKdzvQjQmICfEpYFIQKcAiwjguzmYkE/\
ATNG43nzbWCvQe0AYqIGhQglO0RDCodUP65TZBxYrhTXaM9sownS4uvOpJgEIljsKkrajg1t+\
CAsmD4Yt0oI0zJJALrUR5fAMY0DtMgMgUHDZWGHdcwHXjzgdPQEwkcszppvhwcpc2nAOF0sVMoMT1B\
YHuwDI5hSGtjOR6qcDJaksYKZYiKDaIJjAHWqEddiE3yQlItdUqGYCGcMmJFGeirejVwGgCgwzQhSj\
DQRNUwExFBgwpFKg7wf7aj7cDtt0h0eICIEBLBcJQq2HZCDBVZE9mRa0RUVoy3VfnDyT5gByuGEFAi\
TOo1G9A6HLb4JNASXNyIH66iAFh+msg+lAiuIWwLZC3AB3M4CY2tEEsCqIKkipowGJw+\
3QxSlo4C95QMVQSghjA4cKVpHxGSd4ShF0T0VZGmPTZtto5BYEKUDnNWPSPwPbz7BEXRy7Ig+\
JkYhOQAeBBu9IgyTjKa6HHzRCWDtwvohCszHK9lkLUbcD+3UjYAIz88Ri20NAJLW/\
ZM7KREEJMAStilAnkHSkCC6IWHRHAyRnkoZ4Uaj2dCOUVgCurhiGyB8oTVc02HqG5oGS2d8DTYMI63\
IsqJAPR1AJOgggHfyruTR0ubhTUXNwE/kko2l21D4u7H/fAaoQ9SOcAcJUA/\
vVIWTjMsbpLNMxy2I7wkoZjQYdbgdJ3Wmm25FkjoaEyg1UGVIBhwccIrT3RTZOOGLTAp8y4DiAHCBI\
zvQLLjyaKdIt7SXArQWrLKAzTfIj65fK4coBAzNlfMNTxGYN2jAbG4L6I8n+o21wo5EYO+\
Yhm2Y8OJ2hKIlL9FiRKDSYL0AVYgPjdeAFVj8XEzyAPGCaWRx+\
GxEpigJ3Icct6tIbRsm3NrGsxEmCCXAJ5E1cwY8iIATElzWFyERPJ10cFsO8o0gJY1sAOUQzKwG0Bq\
Rc//bdnDI4NvIQzYBMXgRTRTwygLs7IWle2muaGwF8BtRiqZrsHSK58EypQaYMqPhuJe0AzWSQb+\
S2llBBwQSgRg7gQsEjUjxqSE5lLuUDUMsg1OylDzwHrBDQEobbUO+\
pB0jOV12g0vS7VQd6YQAiFrQuTodE4hCVbPYnxrRAVQwgPqEBsECuVxJuOpI0/DSNnYo2H2cogJwA+\
Yjc2YMVl3ziKDAkCM4YhWPWiBPJ4Hd6hJSOBwIiJf5EaWHl266bIBNh8lmwKx0LcjRXS38WyToyJjR\
SJkN9ohDcGycLQxpFWtgEacTafYdefuytg2nWh/tz8eWBm/\
ThZQQCZ1CZOLwr0C3OjDSwiTLjnCTtHTP1Ua6BuThlxFotwH5MQ1QXUdwftLgh7dWoBHeoJpT/\
C3Be6ryS8JxC2jGQOs0PhJA75Ey6ZTKa3BaeAEVkiJr8Og6Nv5zBj94zd2erpLTb6zsnbv+2r1zN+\
2/TZCiy/We2CsDsjyAOshKdEJYzhBxCtidB17mSImA9E6YZAVVUAKsGLA8JOlURGMDHRh1oFbxiHZs\
NBTZu4/eslzsreaWNSHTgGXwwEAKk5IMsm/\
JRQIyIGcnJyVDYPCkhMEq70kpo5JubqhGsWP92basuTYvL2+2BTyFSZ77J6pSUeEylb/\
FrAAkPNwugPljT0iqgkgyA19nAKqGw6yItNnhk4+\
8QidtuT627WBU8wIUApgIFOutMg5mSboGHougqx7cKekdhx107RIuyhviwxzEQuoOHLl7W3bc4K82L\
UMQcqQDWuekNnoHQg0wpQqdIdrYeM6tKga7wthk4ENFI8kinsNz6Py16x743u0Z0ptbuklsXhuHDAo\
WDTsAWVKyjXMgOpnuvVjWJCAdOoZF9gLXzRor0nASKxDjZdeu3d4+\
uaF3YPEmdbBlixQWUTMkCbxPN815BBem2yBUj4OPrheBCBeYCAI8yIISINE2PMgAj+\
6wRW7LloN5eenOlaObt632cIQCvo9oxkuDzcjA7AzYF090s5oZQFww70KX5wx8iTi7pfq2JjbMd0gC\
z96eOUvtWQF8jsA32ZYQAHSR1amAE5ga/\
4yED3QPLG45zG1YwO5mQGMFWIfuzyjVYYbenhnLaysrPb949cJae15KjIKqyAyGXrB7mEKIwVQB7wW\
NLWQDB8aLwVCWYTzQ/S66ZWkYMKHhHWiHb8ug+aXkFzYvEo/GR+\
wDkkipRYaXpKzH4CJ1BQhON0ozQ1c06FzGe8Mcdq9CQqY7eF1Fjj+\
9LWNubVkh8AXMP7K9BTFpuNISO6Efg31WCK5ceUW3/8DOONVcMg/0Qzem6T5P+\
l7F2Ge0AsCjtTLWYBVAxxHnG0u3tbWBG4GlgBZ6HgD7vbWMNcRWKOIkAGHHQJjofNh1OND2Au1LF+\
fbW1aXxhROFw2NTiaVhurdkgPWIK8uQDzgLJkEBdgikBAcQXRPfQcsJm3YRaGksxTz4qatYSOmtn/\
hFOADoCCFrBFlvS6U6oxtGqeMpAI3Ql6k9RgJsgAa4YBXOsL9cx/RiutvmVu+\
7fjyUloDuL7trt7qkdviOkxaaQOF6JNDxHA6k4KgCk2/tSWCQbMMohzpKjup8w1V/\
0kQC6PwSxZcQUTdgZIfGSgcPtJbWlvOvnuW6OANSC0j5SQmeAicCj004FSW1A0hCaydC41nWChpOHg\
GVgvxxSVMGOsQup71iNa8ZCnlLQjBIvuGpAPocXSaigeMjSECS6WI30JEJaqNPZSpKgxwga6ZkE5aF\
Cztuvt25qUaeDKo3/uJeqHc7W+n/ge3HTnK9rzq+\
O2nHapkRH7QlqCzd8BTTAgwyliop43MqgA8K1bAKDQVW/usqdpeFKou5rxLoJ8b0S6xp7mNG/\
2ilnkIJUgNUgqftJMAtpnCjdAMm14KsM4Az6dWLkB/3HHQHUwdwnT/0oyKHX525oS51TzqD7/n+\
OJpcxDUAGgb4DhGFbuOqg4a0tThiAVckGcPDOqomkkC1ngGtI7p4kyqoENXndLzhjDnwNLiUlzoLfb\
ibUfYQmueHAW7BL9ClqTruwCAji5ZgnoHAdtAWBUgDagrtrzVhUK2CsBk2HkyqA7h7PkjGnZ0t2hZx\
qwCpohB6Cgi6ADDVrIsIErh2zmGkgXnAGf4tZylIZLjgIg0FeUBQnfA9J8ZwrLDy73ufQ82RU4OjmA\
00idQWGMbUJmU6RZ4bLIDIgJQlNz2LzPQfqerLcg5nroZjM0s3jIrUP1CQ30SZKRzQGDhFKKCR1J1O\
J2l0l3VTGlHIeAjoSjQQeT5iF/QXb2dHsGs66+99pb5a/YmmLe2km/r0VO2/\
GREbzWbQJYRqUnaewfbkG8RpUAyAwMwAd6hpjV0ooy1LYrkGOwvB7aIHMA83S/\
dapYbzixx20peXTveMkrDiIS4AB5MFfVOgA1nqvqRAIlJaWcNwpqkpAOXNdQfBJgyZi0CMZKOkHpmY\
L//+vm5W+b3FqSZXl6+\
LeEH2gc6VGriGaP6GAtezEA5EDVp2Qx4mAEeQ7QCFLIkSDU8a6xgRHIMMiMZDZWJN2zZkvRu03fru/\
meldXltdPhHYOlIywvFFd0hoAVpKsH2NrgZ5grDchmgJgoDTaaOjtJUrlZP/j7Du+\
74ox2bRUueHbYAJh1RccppMoWqvwVhmp4nW0MB8NRxopCNXzKOgB+\
BHNg6wa7vqtw68cHv971NslpmcaCZ2Xqm+\
WBVLMk5VwqZPhAF9PgULzRzvgg4ebUEkWDnzdRUv8DabwPHdvjRwc/3n69YaDJkbbIpyC5+PsYt/\
jLBXiUMSB0irliMotWUMkKlazFHAkoY9xUlGOEzB0p4qmtzw68rnD6o56amTT0BbC4QCox4570RpOC\
J6EYSQkckyG+\
JWLBySuEXmBWJFLlu84LWh8dfP1goMFViA6YAQwa8VMiKSPPkOvnKEj9wARkBEqDLccTEmEjQB2EpY\
JeAHTedc3kysGPnuFxgmMDIZxKXLiSoKciA+\
8ynQ01K5IZUDzoxKjgIGF9vZYArBEGeo7ojoxoWOrQGFoLfAt1+N1o9LvSWmDq1KBNoZXMSQlRON3/\
YwwLSpoBVd0l4HEYlDh1vDB94UUkAOBGdqTaK9qfzcubBcizKj5esvH1re7rkeoEqRExK8QsKi8z1L\
MAxJsjUbIowboEj7HfD5FYTqF+WCU1HMG2y4NOkpxT76zu3be6mhfX+\
ks8t4Rs14u9vLg62NISjBLhs8GACR9zcD7qHhNBu1JTqHyIYfgSobVw5B6D1F1YhDNFExHVurqGPW2\
LFVcv+9tv37d4Ozx54MtU2OlIziacHniWVBQh4DdUpAOTNPgekBYiZ4GJiJ1FId3IAKrZUCXumTf46\
S/P4f/124SffJR84PugKX2FDhnfZ/K1QpcpEdWobspShVEDlOupnxP1b0g5wq+\
QAekqcim8Q1W8Yuv3N3ZZXlzprZ4Y/HqJkTBrosYPdPHA0BmG7Z8kNAKj9lhywA+\
LnNrHSyQIN4IkWKQY3rXTfupMX994RIFeCGtNgC3KMfAfEQI1y4veqEjXn0PQ4JMBiCRk+\
L5z1K3DZ3gb1bxZpBu6Y6Q6dJinn8mEgwtLrV0XSqRbaoJ7AB1MvwBU9FTWmckQ3QQFFxfAiAh22Qs\
tQSuF05Kq94GzO044tn56v1++q7d4ay+\
tHhn8tEIWBInBchqT6bpxpLtb1B5FIm8EKhqykW5hUFs2EI6IhaDqOYAccO2u+/9bt93+\
3gpcffX0W4gD3wcGp54rIZKCsX71nW7YZ/AERNgQg2OMLq8JhBsQapEpA9jkrTYmuK5D+\
K0Ot77bN096DsCwAHLOAznS9QOvnGNUWykU+FUjtQe+Q6rk1J5GI5vSNWtD+\
MLrzt5NWzf8NcewZzrHjTEywCVQD84BJgFK4FskxDqqA4E5WOiSkUwl8JS08ErqHcUk7QgCLGdGKwN\
fv/u4X0wbe67l65RCqSsUQ0hNWWltSUKha1DY4Io00H7PSB6zJWSRYSPwBdE4AE3bMek/\
2fVxrPlgXml1DhbWFmSpwLjUCLUmFEEwETwatgGzZGcMFRq4FBqqEVFUcQtURXWVoiPYb91119y92l\
v/5xvy4u3tXU/\
lwEJRE8YCRAyEiCDaBGm4EFb5yCgDhEBkTAGyGao5ybloRafycP8OirF1Aq7tLaaDvbvzwtwCHSktt\
4JNpktOTRYe7NmTA4JDI+l4oAlEPkOVmkUAqhtMN36/\
sVTmzanzhaBK1g7g9owtBlyXV6nH4NzS0nLqLfrV3LLAZeaFJC8WHNONGZaiIaSsnPDUDhaoDeQ9UP\
tOJVJkuVgZJEl8FJc64v2eM1mwtcthyxK6RQ0qqsCdhNEOrD0JwWJRUYMfFE6NhkFpVBMb5NlCpz25\
SGQD6iuFpdrOZrju1IvkBzJhu8HvN0k1LgNUUEcDADY6S6IraEka51wB3UTIFSArxnmPtOipsxp3Fm\
CEmpp25Pyt0Rffv2ah/9pma+hAM2A/iLV0L9xh/\
jVYOLyfZ7pan0F6RYiikOhDfVGoZTAoizQZs5M7O0A/s+vTN2D2e/\
Qg16mHPgdTr6fWgE3AvFJ5hZGKxRSAd6UA5rN0X5tKHsDRYqRut8ICKjjq7VyoKU1H8rm824aN5w9b\
gUgwrxAGqaWk7E8r+\
AEpl57uGtCC031Rx6jTJzXvKwj5ul8C5HR0Xa2IOzfh6e3XOuxvOSSNC5kI1JGHRhHXoJaO1AMLGQ9\
JlsrAAPiDFtRukbrogt5Q9zrPcnAdDvkTnZZsPEKzJSDCr+\
ByopEeuIbIjaNmJtjqiEeBAYoaulCeCxUeAX1b6QUyExifgaP6jkV41iN9/\
qbjedlvmQMFBJC0bgDvqXxYhwI0hiwoqPdr/74mrGINrDAG3gGmC7Ag+\
j3gDUm324mK6689nSEtIPsitRvqL5RjJOCLTZCo7yeGmBjdoFXIQAgQRhTsAgQHCQxM9wKjQyrbDhi\
4nhSeuSM5Hm19WSHnGYlIKyMCTqS7PZIh/\
HKHYOQZ9Q4DuRdISAhCipqcIEU5amSM3dJVcrQ1Hvd7Ax9f8It+\
eeOBjUELhKQTJLq00hhkJzoyKNiCpX/\
hDCAcUBOYCySEuq0DqXD4TuxXDFJjw66uwFvd8EBevj13YH/\
daAqm0VMTnWKxtHBw35fcpKJeZVo1BTsAMyLoRl5IAE3ECYh0dt6INd3ffuR3zgf9QTL8j5bY9YgPX\
lGpvIgCVBA4EXyAqlbhADEgbtPTA1gH1e/\
PwqgWzT1C3dGARb2Fhbx848aTMYeX6BmEljsgAUoqygWrBhCjAtEmUHUmC0hV2PAZTsI0fIOTmEWXQ\
YGU6dakCdSDYDuMdLMN64+etEIk+\
DzCMFi4U1SUnOhwHoiZatJiCcAnihAMbdACCmkpWIBEImwglAK7bGcmDuXYO768FP1CXzLe6h3Iy3T\
gK0zQWhUBflYAAzmpfdieWCu6tJ40J9afjC3EjqgjORYkevcInZC7bOgLQPO9YxuPdLVwmy+\
aCjqooj5hHpIVgdQdh31JleQRVAnLIUIm9oBQjYUCbCWhFkC7qzhxK2Y/\
vSM3bwgBeIAlpwISJCALQwBdWWBEx4AKctQafNFQr8dCDyYURvcNYB9CU5FdnXe3BulDmZ4+Sqd+\
4Tp6wqvFFS2igVfCWOrsS/f+\
vAIuBDsxyTmqJYFHZKHpFQSrHPIH3RfF3qFWArFrLbaipUP0tMsZYjTFIWkStWuwHpEh0v6kK19IzU\
gGisM+xhHFCzWTROCgHp/\
IpPgDnifZgda2Jkp8v3dP7uRNUlKLUKkRqYDUKF7TGRxIDCADmARpUhnDpivkkSJG8ciWQK+\
SKly2CVs39l4eOEo52AcQrb3I4F26AR9DlCKhn17xIAqHIE7yLwnBOlrqhg+\
YT2dMLAPPeLqlW4Aat4XdTk3BOmxel38HZyMXurgDSJKppacDkmV0ax3fI2VK47+\
oGZOFP4BZgbskbAFHF2IcYlvTERy2LsYmG9qaEXa4omMjbpSV1CEeCZuuZAM0ypwQQEuJlk6XAn422\
YYpSmASZAMe1JGv9279/\
JaUcfJtorZ6I2zpN4cLIE6cGm4pqpzPyUvHAaepURL1bwfKAsWy9ESIx0ZGPsWuQK47cxXAI5kykL1\
ubqUOHZGqqC03QAPcH/\
iWylfhrkBuWBAqk6BryjLTRRMNlzEqKgAuDaRtuq4e8eGsaUFbVgynm9IkNiggyuLwIe0IX+\
WgCXBQTxAWEkckU3QvjQH6sYYXqup5hIv9g8Ysrh6B1650e21CboKHmiD63U2BbALghZWNCxxzpSxA\
lmjgwLFQCGGEwDlSLmN0PaKr7cdWZDmPcJX7703tCyuYjdaCaGGtSjYpxKBMtfLUjCggdoLVIVs4Lq\
0DpIePShA+SQcI/\
QNtJ8mYrpajWw2g7O0Xk19O83l1dVMaj5HACi2y80ZTAwNNFXhUXgU87yJvnKX2QHRBkKqvCFt6b6l\
TsFXI52c+1Bww4OQhxjrp3t9bAdqMfdZ5BupHT5SIkh0yNzXEIoYfLV1FwVTwZD1cKApAXhvpfCEjx\
YOEesS4VKgBxHYQDumsc3lhoX3C0nJd44l6KhmKwj8EKxgVawrkeDChAOgHQENvKnjkNzqFKZyepUA\
+0S5K3jE1j9uwov8QVit5RuBHKl6PCRu8UJd0C5hQBDgmUAVwNPUZDQiaYIGgHBwRqwGeAs+\
RrDNKnOHxyv77ryt7D/p4FIDqpjvz8p29fNeexXA6fTRJEXqg/iZA9jEAooQ+\
47Vawh2o5hBc2DdBkwsYRbfEInV5pzYhoWPU1w71HvcZzkIGLIwhIiR4J1Vh2KORVoGuGMNHgMSBKp\
DiqY+PDtg+AIa838lHMOpenLFGWy38/\
4aycOCcZMAqsHR68oJeFXPUG4XrkhrQYe4DPcOjFb1AJqgopSRDlbiJpIIILJawp7vaUV41lFVbzlA\
GbAMNoMJM7CJwd8fp7R0PckKvAAnNSMFpPDagYjkhtlgsrvPWAckaBJuYOyDB84ezrX2+\
MmgZx2q6AKQkSEtsomnAG0UGjSWqi/8KUgOdOB4bpakfWRSCHsSx2Ja5q3xhbhTLWmcvg86A/\
U31OdzJ4uk2HLWdwV7KDXBkkqKvSDUarttQ+fJ6M+rc0I0X7qPoKpAZxbz+EcGAWSaEkmEQmGi/\
p6EEy8TcSLoaCT5sIr0B5ZG/\
i0zUr9rRnWpmPD3qFb3tyJzDmTV4ZjNglqcKbkPX5ZJKnHkNopcaTgUIiM7AGuADgZrRRKxs/\
9IWtUVNmUdLpbMdUsFwLrDlPGfAtpBI2QdPUgB49LgCYheCgwfOiiTmUXWGLtRHWShe+hfwnQB/\
NlHStfCOlRwuaAyc9QyGMm8a6s9IHYs4KLoDbI5RNy4CisGAxkuDuAqwQWjDSbr6h9VN+\
BUKwR3bfzjH3HQONLjF6EEfa4Ir2FwRqMT3+TNSkiXR2VBtX2He0DsumlRwg7iBtWaqQbzruqv/\
vOEsa50RDcZZat1RsN3pjSik2iQYp1M64EUQGsAFSVoEoJRDcG36NfyKbsggRWuBzLHVsH3DGrZJKB\
z0gAax1ViQGNtvCE43u4EZEyiQBA1F5Gf0xgW4GKzLiF8NYFSihofRNlJ05PHhPGDL2dKAbYgJimfu\
C6cqFLqhRnscrM9SsEhCwVjqx2gDD4L336uJVM5OfbZAUDu6sww3cVvPnVoRjQAOw8x4w4ANqWjIUJ\
NigNNG+ZicTCDVCozd0bNa1Gvb0ZMIYEmhsz3n1UMZ13EmNZilsOWod0bInF5WQoxoQEwK5k6C3SNW\
gE7LDFJCBe9IDdTySQXRLwoKqqu5zs+\
OYl3XedVgMHHUNjBLkG0qddNRFsQWapTYMOYFcieJAHRzIQZFN4epv0OD4OOxBVxXX/DhNt+\
Ws6zB8CuFspxTabtskictH4sthaRWr4Y6s3AOFuxy5qxIavsPXkjFJYbTE3AdMzhcxho85xowC7EE2\
TFyzgx2mqBG8UUje2rEfUBJgFpdAr3KVAxdxJciUR9nL4uiVsWyI/7uH9asrWdgA/\
ZlEzJd62iK1Z76lIIhZzrvpnJhxAs4Kj1U2CC6NHQTSCEeJ0lvnwJFeduhKj13ePtOno8N2OWo8z0S\
UyjUV9kmDoxEzTkltWsgdSNhtqwsnBouAwdRcz4hOTIJwp7t6ns+\
tEOc6exscNMJnnVk5I6gstjnQgICFGpw68lazzOlC0MFbA2d25QoAoKkD6ZQOtlq5QuGtnLwXG3ANM\
3pAg8MAcSITniSAnOwCIL0Kqzn9GAm1TNxwBbq0SOpi3hU5DIlAeVtNe2aUU0bOHNrBRNASg1aDZLF\
EB9YCoJRV9IIf022OGLHiCdGgRkjtbJMPZ3xw3QGDpT8/WaLredxg/\
HYymwiCUNUbJgjPthQw3cqgmYe7pDBYajfuRU2Us9za/BzSHENtRLxHfewhgNzA2d1g8k/B+\
EM5U1ZRKTDBgaEGcFc+pxe0/WI1BDZobOjyJSN9AigRGajyzYdx5TD5bCOc7xBKiP6xfEF0Z/\
UJeAhEC/ONVMBsUQxKakyV4estKPHPCyQHvVoolbhtmk6IvBwoaR1xjeY+\
Z2ixnQK0JZRc2FmZGLU7id4essEoc7RS2Q8UNfAoAANkqWLHIjQSCNddxAODW/XI2uWg9Z68BU6/\
0PSkDkYCsA8Uu8yIOTANEfy4EBXoDvFJuRjOC5IdyCvxR/qAFHDJYzOs8EB++ghCA5sQi8/\
UMMkH40HeKHyFLpD5TVSm0Jg8Yoej8mKnnfLwE/BOsJeHYF5OPXmDOeGg/\
jdUfWWDnQiaiT1kKE2GQgcdFgSRf99NrDYaOneXg6JHtNOIUc60I2Kd6z3cDPYeaY4YB830mG6QHcK\
ta+kMgrkLGqokqmJJh01C2qUz0NGPAF3zVkBeVHhs0MY74jM149o3+\
bzxsH0QW1Y6UQ3F4QZLLqhJl5Gk76f4eYBGAV5TQt6A4Iq+\
rwmbcJT6xIrOh8RHtLI1lnkIKLiVHzuKfRymwDXGwJNQKZY4mToITdOrwyXzMAjAfg8R/\
QLPhQGdstyx/\
IOl9i6zykHpw5hDsyfOZ6coWZfKWlCCED1FlCmYY4ecuLUN6HRIZF13HMpOANybboeVBoOJW85wxzc\
e4TzGDAK3BK51khP7eCFpEvVwCaJnr4C/\
7fZuIINmQDcmXf0AroMLJQOBD8cYNl8vjk4bdT6i1GPQEAXRo034J1ZRh0DPYPGqLoenFvSiy5AKwA\
qFtMIuErvV8nvH/\
E9wtnngJWK6oGVBTuUjCqmOb1RZDM9j8awnglxT9FDmBgJPSUWU1JBU0N9Qa9xdnWmGW4CN59JDk4g\
tTOUdDHDUXk0IItCfqNHYFWM9D6GBGTg0kR6r5YYN10hkfBfkBBwpY59N1zc6zyybanqSmlJPfAU9b\
XidK+EyqrpYJQen/\
Qem5D6UAU6OYZ7g51xajqsE5hQl67youHse4Tz1EFGVFhk9HADCHYwVIuWAe1zA3MpFEdLr9wmhJdC\
EBA7UoPWgetaolLed8SXA9+nmWdCCkxQR+\
jI6LqiAohSxsJvqMulkl4Xr2EjdXigpx0chZysbRAemQVYoulACjeOz9Cb2xm5wcajEivFmVL00CbV\
kHnq6E1YhnPqZh2p2jP3+xZb1S9/\
BUc3onQ9gzmcBt91Rjvo0yBq1FZYhIRtqUjeADQEmFGR6mAjHIlcBOQjaZcApDNTjDMG3leS7LoAMh\
wT2Xp+O7gdmfAEVsA9omBgZkAxummCExH8WBRDdVEa0yW1FZI68zjqIIKd4MHkulq8DGfc1rPdwZmj\
Z8H7lwRIs2UK7JbqfhL4rcbcIS8XQ2d9OpWGtASgbE4naY3KtkH222rcLcMZt61z3xasSVTAKgqILn\
XqSSAnyG7WZOTjLIH2NfIKXSoF4ZMGs2kFvB00VTa2MR3OPRx6PcOZ8CDH4wHUSLjGK4sYjeAInyiS\
caeoGLyJidYdKdlqA7yfMk+2/1ggvcHuVIdXD8eirjwDcpCCFBhJD+\
ZYOjz2SNBgllSamVkjNSJMMiQegaPmLJDGM7VRjBpzXViXkwyXXa7suoY6iGw0EFYAkhFIIlQbyktx\
rN+vEMA1U28fYbSlR4+5hslGU7tb4p8yGdZVHTbkvJ2SsdrKbtQ+\
khYUJXV3AA711GuB3vjElJlolC8CpAn7z2AhPT2hhv2oXJOYpmZ/36+ScGW/\
FABIpoVR6anjKIMlLFpCDHQMk+\
hSQUJWs57OHGFVogNHbHw4AnWkYNTGgJY0dczWcIcv61a9GN65afsbQOfGUmNoZRHdHCYqRURkqvV0\
Gp6gqV0x3fIO9A5Ik503gk4/ABOR+b7vg+\
Qr2xeOB083kAuwfeg6LLIAa1LDqXoIkYMqY4FXG1m813SNJgDKJAuQw+n9HnCABpvy+\
95gg3eSBx2TU48COqLF9vd0U4NeRI1UnpozvQAWI4/\
aqfUWp8izhm4x070X6oTc9XTIkHYNXlse1EZ1op5gmpqyw9FgE6YF/+oNNbMDFqYnRF1Q+\
GeOSIfNTk8KUDdDrRrZ5ZDXDWfXGW42DypWSJHUHaCwxjSRGpRbz4CPESkyKZANyJlTjYK9WiJtFAR\
eR++me3omnHdVf3ebeHgNgLjnqfjk+\
PGFE31JuTPKgikUZTBXRlKvpUC7W6ioAOSA6QXdOw4W60s9vE1kMfimL+3mdXDaMWnqe1l0tV/\
pxbmlY8fXVreKtA1ohACHkTFh4DR4Bm5DLZmx2xPCFlAHlVMUKgj3YBncJEQKenrPUNPabW+u0/\
YMmnLT4hmwrzaxDyeRlEAnsHUKXcmViUCwxuTQg639Nx+iQjbt37hjNnHPAqOnajq4zve0a6OCY+\
X6xY21W1i6nah/q9rE9x9n1hH7iCMPukLlW6AyrMksORNCtA2HSzoZBV3i4rkB93L9sljss471s9/\
LrnUd+xG2FG9MTEg2IF5gYMZTh0Tsb9lvVsMDBQOlFWAHR2yDhco0XIKNwQssLx3xwX0vk25e68Wj/\
UKww0tzS4tpK8lC4k1cCnraymhPLUQV8D7woaRH6GVx9CiUJYUHgR0kQFMPzH4fIN3E0KXR7f5eRp0\
KE222h31rsMWpJ4WLOgNG89RQLlbUS0eLQK99BAEeSsUwRdCTT4VzQaKE6Srk/\
Z4LdpI3zfmFuKG8tQO6p6oIrbMnPQEYK1PvOeLO3tJLG8hDAm4pqbCKDlwxK0E7JGUfJCzvQPwHv5d\
Jh4/kfSsrS7HX/\
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"}\
, "ClickToCopyTemplate"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.891245766221244`16.34266365032685*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"StianRamsnes__MaXrd-4.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"StianRamsnes__MaXrd-4.0.0.paclet\"", "HyperlinkActive",
                     StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                "OEM6eJwtjs0KwjAQhIkUEfQhpHeNB1/AIp4UpFEQREpsN5KaNmF368/\
b20iZy8d8DIwRNMn1O/\
MfICNonPvIJqFkb4lVsrMOlLiaEU1P0ASnGaIXg7epPBMgSWKrW7mFFzgfAOURPdXw5B4P+\
oJVLGooeY4QPFn2+B3EvbOukiruc91QC1QUf7NYL1d9gi4dcKpm8coGH10DLStx+wFWV0Dm"}, 
               "ClickToCopyTemplate"]], LineBreakWithin -> Automatic, 
             LineIndent -> 0], ItemSize -> Fit], 
           Style[
            ActionMenu[
             Highlighted[
              Row[{
                Grid[{{
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "3", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]], 
                   
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "12", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]]}}], 
                Graphics[{
                  GrayLevel[0.4], 
                  AbsoluteThickness[2], 
                  CapForm["Round"], 
                  Line[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                 ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                  ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}], 
              ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
              Background -> GrayLevel[1], Frame -> True, FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
              Alignment -> {Center, Baseline}], {Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "e9698567-5c2b-4046-9338-a2ea9bf2d65c", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 185, "SourceColumnStart" -> 20, 
                   "SourceLineEnd" -> 185, "SourceColumnEnd" -> 21, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{185, 20}, {185, 21}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{185, 20}, {185, 21}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L185,C20) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "addc9614-3f5c-4216-8967-74a8a5921ac5", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 195, "SourceColumnStart" -> 30, 
                   "SourceLineEnd" -> 195, "SourceColumnEnd" -> 31, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{195, 30}, {195, 31}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{195, 30}, {195, 31}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L195,C30) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "2df56d98-ef07-4980-b362-814867e5da1c", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 424, "SourceColumnStart" -> 25, 
                   "SourceLineEnd" -> 424, "SourceColumnEnd" -> 26, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{424, 25}, {424, 26}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{424, 25}, {424, 26}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L424,C25) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "3ef5b1a1-8d52-478b-b1a4-d22bd5047a64", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 435, "SourceColumnStart" -> 18, 
                   "SourceLineEnd" -> 435, "SourceColumnEnd" -> 19, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{435, 18}, {435, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{435, 18}, {435, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L435,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "828fd161-c858-4fbb-a2ec-1210201e24ca", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 435, "SourceColumnStart" -> 35, 
                   "SourceLineEnd" -> 435, "SourceColumnEnd" -> 36, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{435, 35}, {435, 36}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{435, 35}, {435, 36}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L435,C35) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "4bff33d7-461b-4453-8e02-3c542285bb37", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 447, "SourceColumnStart" -> 18, 
                   "SourceLineEnd" -> 447, "SourceColumnEnd" -> 19, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{447, 18}, {447, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{447, 18}, {447, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L447,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "76d87650-421e-4f38-a7be-29ea7518e3b4", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 472, "SourceColumnStart" -> 18, 
                   "SourceLineEnd" -> 472, "SourceColumnEnd" -> 19, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{472, 18}, {472, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{472, 18}, {472, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L472,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "a43b3e4e-e0e6-449f-a585-9ddff3caabc7", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 482, "SourceColumnStart" -> 18, 
                   "SourceLineEnd" -> 482, "SourceColumnEnd" -> 19, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{482, 18}, {482, 19}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{482, 18}, {482, 19}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L482,C18) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "a513a232-951c-40d2-9eba-2b23185072d2", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 482, "SourceColumnStart" -> 29, 
                   "SourceLineEnd" -> 482, "SourceColumnEnd" -> 30, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{482, 29}, {482, 30}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{482, 29}, {482, 30}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L482,C29) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Calling ", 
                   Style[
                    RawBoxes["Plus"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], " with ", 
                   Style[
                    RawBoxes["String"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   " arguments.\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "65b70de2-b1ee-461a-b06c-7ad99ba889be", 1895517910, 
                  "CodeInspectionFileIssue/PlusString", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic, 
                   "SourceLineStart" -> 494, "SourceColumnStart" -> 23, 
                   "SourceLineEnd" -> 494, "SourceColumnEnd" -> 24, "Message" -> 
                   "Calling ``Plus`` with ``String`` \
arguments.\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PlusString", 
                    "Calling ``Plus`` with ``String`` arguments.", 
                    "Warning", <|
                    CodeParser`Source -> {{494, 23}, {494, 24}}, 
                    ConfidenceLevel -> 0.95, CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace ``+`` with ``<>``", CodeParser`ReplaceNode, <|
                    CodeParser`Source -> {{494, 23}, {494, 24}}, 
                    "ReplacementNode" -> 
                    CodeParser`LeafNode[Token`LessGreater, "<>", <||>]|>]}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Data/SpaceGroups.m", "Editor" -> Automatic|>], "Hash" -> 
                   2279414284191965893, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L494,C23) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1895517910]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"The same symbol occurs on LHS and RHS of ", 
                   Style[
                    RawBoxes["Rule"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "682a5d47-63b5-4d85-8a5b-27dbdc49e15f", 1473604302, 
                  "CodeInspectionFileIssue/PatternRule", <|
                  "AdditionalSources" -> {{{88, 67}, {88, 68}}}, "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/EmbedStructure.wl", "Editor" -> Automatic, 
                   "SourceLineStart" -> 88, "SourceColumnStart" -> 55, 
                   "SourceLineEnd" -> 88, "SourceColumnEnd" -> 56, "Message" -> 
                   "The same symbol occurs on LHS and RHS of \
``Rule``.\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "PatternRule", 
                    "The same symbol occurs on LHS and RHS of ``Rule``.", 
                    "Error", <|
                    CodeParser`Source -> {{88, 55}, {88, 56}}, 
                    "AdditionalSources" -> {{{88, 67}, {88, 68}}}, 
                    ConfidenceLevel -> 0.7, CodeParser`CodeActions -> {}, 
                    "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/EmbedStructure.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 8126449213346323709, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L88,C55) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[1473604302]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Suspicious use of session symbol ", 
                   Style[
                    RawBoxes["Print"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "4b346a98-d47f-4822-940b-7f457b910eea", 1402949772, 
                  "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 518, "SourceColumnStart" -> 
                   13, "SourceLineEnd" -> 518, "SourceColumnEnd" -> 18, 
                   "Message" -> 
                   "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{518, 13}, {518, 18}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 5698507354475994840, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L518,C13) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1402949772]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Suspicious use of session symbol ", 
                   Style[
                    RawBoxes["Print"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "2eeecd56-a9f4-43dd-8a2e-281dd679d9b3", 1402949772, 
                  "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                  "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                   Automatic, "SourceLineStart" -> 526, "SourceColumnStart" -> 
                   17, "SourceLineEnd" -> 526, "SourceColumnEnd" -> 22, 
                   "Message" -> 
                   "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{526, 17}, {526, 22}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/Functions/SimulateDiffractionPattern.wl", "Editor" -> 
                    Automatic|>], "Hash" -> 5698507354475994840, "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L526,C17) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1402949772]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 Row[{"Expected context: ", 
                   Style[
                    RawBoxes["StianRamsnes`Global`"], "Program", FontWeight -> 
                    Medium, ShowStringCharacters -> True], 
                   "\!\(\*StyleBox[\"\\\" (L25,C7) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"}]}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "354b43c1-1e60-4761-9217-5cae0a6397c5", 1538315956, 
                  "CodeInspectionFileIssue/NotPublisherContext", <|
                  "Hash" -> 1260874954269615821, 
                   "MessageParameters" -> {"StianRamsnes`Global`"}, 
                   "Templated" -> True, "File" -> 
                   "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/MaXrd.wl", "Editor" -> Automatic, "SourceLineStart" -> 
                   25, "SourceColumnStart" -> 7, "SourceLineEnd" -> 25, 
                   "SourceColumnEnd" -> 16, "Message" -> 
                   "Expected context: **StianRamsnes`Global`**\!\(\*StyleBox[\
\"\\\" (L25,C7) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "NotPublisherContext", 
                    "Expected context: **StianRamsnes`Global`**", "Error", <|
                    CodeParser`Source -> {{25, 7}, {25, 16}}, "Hash" -> 
                    294405318996857715, ConfidenceLevel -> 0.99, 
                    CodeParser`CodeActions -> {
                    CodeParser`CodeAction[
                    "Replace with suggested context", 
                    CodeParser`ReplaceNode, <|
                    "ReplacementNode" -> CodeParser`ContainerNode[String, {
                    CodeParser`LeafNode[
                    String, "\"StianRamsnes`Global`\"", <|
                    CodeParser`Source -> {{1, 1}, {1, 23}}|>]}, <|
                    CodeParser`Source -> {{1, 1}, {1, 23}}|>], 
                    CodeParser`Source -> {{25, 7}, {25, 16}}|>]}, 
                    "MessageParameters" -> {"StianRamsnes`Global`"}, 
                    "Templated" -> True, "File" -> 
                    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Kernel/MaXrd.wl", "Editor" -> Automatic|>], "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L25,C7) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[1538315956]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "The specified Wolfram Language version does not match the \
paclet info value (13.0.1+)"}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "d3d053fc-93a1-4946-bf88-a0cb54732e91", 210582271, 
                  "PacletWLVersionMismatch", <|
                  "PacletWLVersion" -> "13.0.1+", "ResourceWLVersion" -> 
                   "12.1+"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[210582271]; 
                Null]}, Appearance -> None], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "58869ef4-1700-42ad-ae4b-d53a74031007"]]]]]], Appearance -> 
             None, BoxID -> "58869ef4-1700-42ad-ae4b-d53a74031007"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd-4.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"196.629716`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd-4.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"196.629716`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/AutoCompletion.wl"], "Hash" -> 
                    "d481ce3a221fd9183c2bb9896103674cba83f5743614eb61c647fa903\
470ad3e"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/BrennanCowan.m"], "Hash" -> 
                    "d3a55707257e598dae780e0637844f1167227c82f0888748362b3d8ee\
271a784"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Chantler.m"], "Hash" -> 
                    "d7f639260db5226c1bd37aee9e46a1a450bc48f3901efa8a516d74ed0\
d19a1fc"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/CromerLiberman.m"], "Hash" -> 
                    "0756728aa9dcd6032b4d20a38abb9c225325aa440fe26282783cb3af6\
ef85eab"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/EPDL97.m"], "Hash" -> 
                    "f6189149f44d414b3b45757e156f1d63c14cb3b7bcfe94d2e45bbe395\
a6f31fa"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Henke.m"], "Hash" -> 
                    "e15004e5e5e93d5a8cb44cd6d7e532f892eb9928549c09ca355fe2dcc\
517677e"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Kissel.m"], "Hash" -> 
                    "48258c7f6efb5abf104cb49b5beec8f2935851e673201c7e8154877c9\
b2cec2b"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Sasaki.m"], "Hash" -> 
                    "cefc35a3c0f2533edb01db2ccdbd40ea3143845d9d06150a225428824\
5a7346a"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/Windt.m"], "Hash" -> 
                    "06d00bbd568270b3d13c5921260744c63898ecfdd947d008b637cf216\
9c82433"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
AnomalousCorrections/xraylib.m"], "Hash" -> 
                    "45d34705d985ec78013d902bf445bd713f3e8b60f06b9b033bb965be6\
7f160fd"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/CromerMann.m"], 
                    "Hash" -> 
                    "d691b5e76a3cc36e0490f574bd2dc2a9a22d69e20520a1d5503265816\
4b35108"|>, <|"File" -> File["Kernel/Data/AtomicScatteringFactor/EPDL97.m"], 
                    "Hash" -> 
                    "f9097c48262fb96cdb8051dc171cb3f18c6f6c708b7040c3137f50be4\
6ffd54a"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/\
InternationalTablesC(3rd).m"], "Hash" -> 
                    "64b1c16641835d84a8da4c066db55a4765fdb7883f8f9937381d6fec1\
eadf9d5"|>, <|"File" -> File["Kernel/Data/AtomicScatteringFactor/Kissel.m"], 
                    "Hash" -> 
                    "5c823b4880f870ca0b2dbd727f15e517ce2ebd8be6a3c3c6ce4ef56e7\
3efb1cf"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/Kissel(modified).\
m"], "Hash" -> 
                    "e887aada90e103efca546ba737a7d73069ddf6073cafa51ec29f4c275\
48181a1"|>, <|"File" -> 
                    File["Kernel/Data/AtomicScatteringFactor/WaasmaierKirfel.\
m"], "Hash" -> 
                    "8879086a5b3ce8bbd214f1b0b4b7b57ab4a12679f8b83cafd53008651\
5d4e62d"|>, <|"File" -> File["Kernel/Data/AtomicScatteringFactor/XOP(2.1).m"],
                     "Hash" -> 
                    "554d7303c334dfa1d920a038590752f9c393df6eb420a5f366ffc162d\
316eef9"|>, <|"File" -> File["Kernel/Data/CrossSections/Metadata.txt"], 
                    "Hash" -> 
                    "717922da98872311c5918d8cc3e7e5180b15f18d165706f9e5923e0ca\
23b2ebd"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ac.dat"], 
                    "Hash" -> 
                    "a10ba733d1e8dd404aafc25383d10527d47cae526ac93c7ab98aa3f50\
c49e3dd"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ag.dat"], 
                    "Hash" -> 
                    "c5da01797515b0c03d75a5a44e66226d9d1295b9da13112c40a26fd9d\
ae505c7"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Al.dat"], 
                    "Hash" -> 
                    "e869578f1b30a405666e344c5e0b4b2e98579e6dfe1d879799963be71\
027621a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Am.dat"], 
                    "Hash" -> 
                    "8f593c4cdcf1bda52d239f329bfca8ad561e8708e5cd98114a0efd4dd\
a2bd5c3"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ar.dat"], 
                    "Hash" -> 
                    "ad2750454a0d90cef4123bb9d7978b87e87ef0c9cf05977f4e046d85c\
a874959"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/As.dat"], 
                    "Hash" -> 
                    "0b5392f676ba2c5e6c7cb20a767b27a93773ff27c7103be44bcd9e32b\
39b7191"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/At.dat"], 
                    "Hash" -> 
                    "72bf158f346c7da119da384db00386fb4efda6131dd1e83b7c1f1d137\
f0da347"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Au.dat"], 
                    "Hash" -> 
                    "38014c96998005ae089b2f89fc8ae5315b5f5f51d354285d8f35ba752\
c2ebe12"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ba.dat"], 
                    "Hash" -> 
                    "ff9a6b710ab8228aeb038586950c743f10c4c767c0234ec841c28af1a\
84e3de5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/B.dat"], 
                    "Hash" -> 
                    "e690bde2639044293a282dd74ff5a93a97a5ab5a65a1efb1161e00250\
2cd0e58"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Be.dat"], 
                    "Hash" -> 
                    "1326d416980d4c7e04d170cd9c851314289be9b464abd01d3ffc45980\
ced2e7f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Bi.dat"], 
                    "Hash" -> 
                    "f3e692914da1a8ca38261bbb5f768484d656e7061413d5bd3dd230489\
15d6407"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Bk.dat"], 
                    "Hash" -> 
                    "90cb012fe5952d0db46ff3c908d3466c7c9fb63e1426f33667a00584d\
4826a76"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Br.dat"], 
                    "Hash" -> 
                    "510616d48c3196368a00a87cc570fa819c1ceb37a3d516bdf1faf595c\
6febb6b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ca.dat"], 
                    "Hash" -> 
                    "1cb0bb6487bacc402705ac6f7ffa0e2d87ed4a042749e81986ed79b06\
8252989"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/C.dat"], 
                    "Hash" -> 
                    "c9167c4676b6ba85544400c0a102966ca244e86242c05e9e7f3bfd931\
bd8f5a2"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cd.dat"], 
                    "Hash" -> 
                    "099f16ac467843b8daac7160f5e894fc58a86823748c0ca61aae9e40d\
e520949"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ce.dat"], 
                    "Hash" -> 
                    "95b354cae772f698599549e598582a231bb4f3a1259e16c22041c5b9d\
b082920"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cf.dat"], 
                    "Hash" -> 
                    "5f1d65cefd9129e83f27b7d05ea4ba2b88f95a1b9c85aab1ba65fe58a\
a11b169"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cl.dat"], 
                    "Hash" -> 
                    "ba69559846143ac0ec1fcdbc8f91cfb27b275128b7afd8233d4eccc43\
e4d4a64"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cm.dat"], 
                    "Hash" -> 
                    "473099743b7b8034d571a12ebf702fd64b922e0b6809f08437b74897b\
e8155c9"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Co.dat"], 
                    "Hash" -> 
                    "b0cbb70766a142047e47083492f59ccbc19badbe22bb1bc5baf30e863\
a88b66a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cr.dat"], 
                    "Hash" -> 
                    "6df201223c193e3a031ab621b141ad09167680b1dcffb52e140848aa7\
ee18be4"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cs.dat"], 
                    "Hash" -> 
                    "512019aa1e0a1bbac6581dfb97afbeb6d8990c39d5754b67bf012d274\
b9f7e87"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Cu.dat"], 
                    "Hash" -> 
                    "f21500809d444592db11654a24ee88afa47c41706bc972f2f8914bf4c\
e549737"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/.DS_Store"], 
                    "Hash" -> 
                    "d65165279105ca6773180500688df4bdc69a2c7b771752f0a46ef120b\
7fd8ec3"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Dy.dat"], 
                    "Hash" -> 
                    "4f4dd819d308a5b116ae35512a92fbf285a9fb62f5cf02d5e925afe17\
b1ce13f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Er.dat"], 
                    "Hash" -> 
                    "78dffa36403fa2f80a44f2ee2caae35f88f31906845b3cc7bef4d8c58\
ddb91e8"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Eu.dat"], 
                    "Hash" -> 
                    "396c324d099fdef2938530569ed94a9ca2a2e09f54de7641d62d84b00\
b208d04"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/F.dat"], 
                    "Hash" -> 
                    "6f8c8881ee42438690d2df25bbb0bb52e7e26f5acd207805b154892c2\
8e26af0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Fe.dat"], 
                    "Hash" -> 
                    "cd8efc8802b47d3cd656c4702ec42a2cc48a7d246eb80f5a0688365d8\
f608532"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Fr.dat"], 
                    "Hash" -> 
                    "8eaa4a61006c8c47778909a99c57ab711d916bfba3957e7bc48895d0c\
7659865"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ga.dat"], 
                    "Hash" -> 
                    "25f5333e8f662ad86dd814bae39e5693da5eda917e86f548e921e137d\
487ea57"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Gd.dat"], 
                    "Hash" -> 
                    "44ac2a0cbd0e4002403f73fcb456ef47f0c8d8e7ddf36b58dc6bd9859\
daaaeae"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ge.dat"], 
                    "Hash" -> 
                    "2b8f3cc89127a4dd0bfcd8c090d5fdf379a29b368a0a14b6b0d3ea2d7\
55ae7db"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/H.dat"], 
                    "Hash" -> 
                    "803b8539ade04ef5c826262432916ccebb7d8602ddb6b0fde8a8cd5eb\
307f016"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/He.dat"], 
                    "Hash" -> 
                    "c25519fbd9ed6fd6dbd3afcd2744afbe19403681d660a12bd12b9129f\
201e85a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Hf.dat"], 
                    "Hash" -> 
                    "ee09ef9bd3130228b7a9e6805fe7dbc72735c550fdb66d9aa902f36a4\
1c69e82"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Hg.dat"], 
                    "Hash" -> 
                    "40cc80db14ce8aba9f7622a4dafd70e66c37e7ed592c97aedea776a26\
01eea52"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ho.dat"], 
                    "Hash" -> 
                    "c7d085e71ca708e836302de008e77fe10331d89e122e26e503a655bd8\
0c46bc5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/I.dat"], 
                    "Hash" -> 
                    "1687e637f542c8a792794b0b8263a7f8656f213497d887ffe862dbcae\
d8d0a6f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/In.dat"], 
                    "Hash" -> 
                    "9741a74eab1d475885792800e2ba668c466674c271cddb805e5985b81\
75a59fc"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ir.dat"], 
                    "Hash" -> 
                    "2e63bfcb144e8ff296408232f6408898bf0fd450a94c704c97c15e06f\
0727758"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/K.dat"], 
                    "Hash" -> 
                    "1e536d3d1e88d82c9d10939be942fca95230fb9046a9273e9985688e8\
c00bdd6"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Kr.dat"], 
                    "Hash" -> 
                    "7c94c788650d7c4be5ecd3dfaaa745f7d7ddf4f5294879aeac56a1c10\
6fe553e"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/La.dat"], 
                    "Hash" -> 
                    "49cf5ef94a8b93334ac898a2fbe0941253ef24ae4eb87923d68ffe128\
0f1258d"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Li.dat"], 
                    "Hash" -> 
                    "0cc9a7379196d82da19b0beaf6c35536a4aab73eb5d276de3c9df8101\
0b96e06"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Lu.dat"], 
                    "Hash" -> 
                    "6148bb5fb045238df4b102289065ab8026859ed71dd7624b854f51ded\
09df717"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Mg.dat"], 
                    "Hash" -> 
                    "5cd5f187e736fc3dd74f7b222ef5a0e0c3feb0d236042cc0697398990\
407909b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Mn.dat"], 
                    "Hash" -> 
                    "09fa6f546e070caaef4723afc65ff739268926fb1d0eeb9bcd7f4ed14\
bc58bf0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Mo.dat"], 
                    "Hash" -> 
                    "9d26676f3139f07cb44e74755c76f5fe8143714b4eeda8240941f5deb\
ecea77a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Na.dat"], 
                    "Hash" -> 
                    "1cd4a0310479fcd589f9675d82e6162d130eb174817fa48e603b5d290\
65b466f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Nb.dat"], 
                    "Hash" -> 
                    "46a7acfb2f994fb86b2e6c4208a51be7bd3a2135627729e992d94a340\
db108ba"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/N.dat"], 
                    "Hash" -> 
                    "df1c0f93f0f9180de4ba34c6f2bd68b2c959918f187979aa91d418678\
96518ae"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Nd.dat"], 
                    "Hash" -> 
                    "b22b25e301e3939fb206c126c59f9083febc2d5622a3be5db068c3e6b\
68cd79a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ne.dat"], 
                    "Hash" -> 
                    "890c65ccaf190e31f5b0b20242aadf8abd971201ee8694b640d20a130\
ff2609b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ni.dat"], 
                    "Hash" -> 
                    "84059baf38c3f6e8878834776d758129d238d287cdf7c5c0d2981edff\
4e99e09"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Np.dat"], 
                    "Hash" -> 
                    "d77358807eb69c2bf53093ec63b103d1bba9b725395eb666bf1c4038c\
b618368"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/O.dat"], 
                    "Hash" -> 
                    "9c28a1a0d0ba767e8492533052a77dcaf69ed2d203522863c49e2bd34\
b8e24ae"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Os.dat"], 
                    "Hash" -> 
                    "279a05c0277e1b294470a4f7e9e246a9ee5675d2e41d5261cec03098f\
e28f2d2"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pa.dat"], 
                    "Hash" -> 
                    "e3565298dcbd935edbebcd506e1eed5de346f61355cca77343a8beac5\
38c84a8"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pb.dat"], 
                    "Hash" -> 
                    "b164e8c4af5b26f55efb5a9b8f0aa7f225494cfc29fa689bfd6357bb1\
9195ccf"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/P.dat"], 
                    "Hash" -> 
                    "2a5f36f7f324407a981e85c2140687d214a62879a36e1706a60364155\
5487a61"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pd.dat"], 
                    "Hash" -> 
                    "e92c0d8671095fdb07da5be2e6af17cefc3f6e2a560e3ecc0bc8ad393\
4246fc1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pm.dat"], 
                    "Hash" -> 
                    "7fc9066a08c0004a7309430fbcf2ba1b93db24497fb8e3005c1a6c4e6\
ffbeb93"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Po.dat"], 
                    "Hash" -> 
                    "36ab5f840eb6e290b17ad3b811cef0be8e069c765962d928d29eed283\
b6b444d"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pr.dat"], 
                    "Hash" -> 
                    "0ef2a6be21272f090df0ebf8aae16600bd36b483561e56393b76b177c\
7a38608"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pt.dat"], 
                    "Hash" -> 
                    "c9b8ea1b266168a664470c48c75bc5a60edbff0d3578811a4f7f54591\
035aebc"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Pu.dat"], 
                    "Hash" -> 
                    "f0f9c3a55759e7b516a7b94c179c454c0864cc9880c1d6d221443b5b4\
93fdd7e"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ra.dat"], 
                    "Hash" -> 
                    "36b696ae7a5ae03c765db748b5e0da1e297c40a22ac60fe58e01d0d41\
bf94701"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Rb.dat"], 
                    "Hash" -> 
                    "0ebc3838c8222c440a103aa8bc84fedbcfa4933164e09ab09ce6a858e\
f92e171"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Re.dat"], 
                    "Hash" -> 
                    "bd312792ceaba0ba419f41d7e24edea6eaa75532f67402024c59d1adc\
f197db1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Rh.dat"], 
                    "Hash" -> 
                    "f3268e88f91053b42b7e29adc9bcb7f673691013df63e1a7f69156e27\
5edfdea"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Rn.dat"], 
                    "Hash" -> 
                    "dee55a49714cb9ea174d8bbfd40c03c86186829f7aa0efa307afdbcb3\
934c43b"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ru.dat"], 
                    "Hash" -> 
                    "1dd1f515c0dc248ddea6f407688f8f9f691efa4dcb0aebfb2b18bbc1d\
87a85fb"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sb.dat"], 
                    "Hash" -> 
                    "806ae8e38683e7faeec79c21fbb6d083c675139adf7fb65ab43e2b75a\
e595f06"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sc.dat"], 
                    "Hash" -> 
                    "7f4a78b122d71805a5e1f426e8f2b6edfa845eb54239156bba0181a8e\
680d533"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/S.dat"], 
                    "Hash" -> 
                    "883170b9940bb06c760b28c18d747431b82771bba95ccd8424bdc3bc2\
ed7119c"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Se.dat"], 
                    "Hash" -> 
                    "c7d47470e58cc24312992cb7a654ac34bd55cdb6d3313e6562cd14ef7\
4b485cf"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Si.dat"], 
                    "Hash" -> 
                    "5b865f3c5712bfe9ac660fe70b35dc015deff985a07852863f7496dcd\
24fece5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sm.dat"], 
                    "Hash" -> 
                    "27ef4f314d3c73d3f5bd5298d5be89c90e0f635a1785a790ab1fa24ac\
aa76712"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sn.dat"], 
                    "Hash" -> 
                    "33ef8df19cf6fecd084c7d31b6204457a9ac295bb77d7dffe902e965f\
1cb5a4f"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Sr.dat"], 
                    "Hash" -> 
                    
                    "03f7f59d4bf6c6d0b14d83ab83cc13b3dbd56c1c0ce6c5d08f09468bc\
67a0aa4"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ta.dat"], 
                    "Hash" -> 
                    "a516b6bc2112642fe65c757246db7054e45b657c220154235d0a9e923\
234c5d9"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tb.dat"], 
                    "Hash" -> 
                    "883160818162eb7983d14e495a144b0f3e7224eb498cb74a65122483b\
3e9e4f3"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tc.dat"], 
                    "Hash" -> 
                    "1013b712abb0cb42265b1ab05cb185ee9af44825171ac73e78414ca85\
b331a9a"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Te.dat"], 
                    "Hash" -> 
                    "c22cc7b934b8d09adfb6a8b7ca4e0dad6585825b3920fbf04bdc37f2a\
438e524"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Th.dat"], 
                    "Hash" -> 
                    "18d078ec154761d055df36b3396d341b6d0759667532bdbd181904b3a\
4c76cd0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Ti.dat"], 
                    "Hash" -> 
                    "bb08ecf78ab525508494828ca4e7127a888301c0f70f4e349fdd55ebf\
8da9feb"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tl.dat"], 
                    "Hash" -> 
                    "ecea6d0b8709caebf4ebae2c4312c7c23356d564f1fb0418f42ee6377\
47d5ed1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Tm.dat"], 
                    "Hash" -> 
                    "5e6728f3070ccd3a8222bd6cbd7e2135103892af3d4db268d2f914e89\
ffb42f5"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/U.dat"], 
                    "Hash" -> 
                    "b87d17cf8be8771985544094c60149a81dcebcb58b517fdf0a29fa28c\
38ed3f1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/V.dat"], 
                    "Hash" -> 
                    "a127afc742f415109dd1d148a57f4349ef6dabf92051b81abc4acfdc5\
a185e20"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/W.dat"], 
                    "Hash" -> 
                    "fc27a2429c712bee842c3173eb9af23c219399341fc349836382b162e\
7521fc1"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Xe.dat"], 
                    "Hash" -> 
                    "e66adff7d2cba2c6c26b3fa7fa2733ed9f52afa222ff581ced0a6a860\
3501866"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Yb.dat"], 
                    "Hash" -> 
                    "e45e089b9720c3f36514c61218dcdad68b06819de60c22dd50dda8052\
4fbcc15"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Y.dat"], 
                    "Hash" -> 
                    "c182709ca6c1b5c6892f402db6b1d0e2f7a0094c50f77a5b41db801c2\
9543fb0"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Zn.dat"], 
                    "Hash" -> 
                    "f14819caeecde08e106698351c356025118ca1c5267ad2d1d9d0cee87\
26e0a4d"|>, <|"File" -> File["Kernel/Data/CrossSections/xraylib/Zr.dat"], 
                    "Hash" -> 
                    "ac21068071b887996db5807c33130065e7286c2949f897f0b79fbc73a\
4d40db9"|>, <|"File" -> File["Kernel/Data/CrystalDataDemo.m"], "Hash" -> 
                    "dbddbae9428f15e2be1d8267f030e97a9a37c14c7c9c39af92c8cc88d\
d68f63b"|>, <|"File" -> File["Kernel/Data/.DS_Store"], "Hash" -> 
                    "0a9e5b9d8ccbaaee18d29175bb09ea5c39ba1e4b8cc06a5020fa29e83\
4941c96"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/COD_2203515.cif"], 
                    "Hash" -> 
                    "897a66edc922710bf9fd1fadef107558c926d72cbb724e60760fbdf28\
7bf5de2"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Austenite.cif"]\
, "Hash" -> 
                    "beb8cc3ba3e94ee1d66cdfef3b6a55dd9330273a0be8d72aa840e16bd\
169f7e9"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Ferrite.cif"], 
                    "Hash" -> 
                    "62c031e196d83458a87befce478ea543badc7c133630d3e044eee9817\
2ac42e0"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/Ice.cif"], 
                    "Hash" -> 
                    "06dbd76c98c65ca746931e32628cf2d3541943a91630c1711c518eec7\
1aa7353"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/LaB6.cif"],
                     "Hash" -> 
                    "db8398f0183b6a93e24764f4eed7c8a1174f6bf567d615ef57d1c26a3\
722effa"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/LiCoO2.cif"], 
                    "Hash" -> 
                    "62c9a12d53a9356ddd7899d31e4285708decefa6f3412ede5c4281248\
d7203e2"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/LiMnO4P.cif"], 
                    "Hash" -> 
                    "3279cabd383128541c70e4d177e7e812cddb8029b02b23ab78182c381\
b3b29e2"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Perovskite.\
cif"], "Hash" -> 
                    "5af7ef95cae91f82ac05a4683c1dd00b0632bb48fda13673ac24373f7\
38c80ac"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/Po.cif"], 
                    "Hash" -> 
                    "304bcfc7e7fbb948b3f54de4b348bff7a43547715af80b6c90f8bf51b\
c85144c"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/PrussianBlue.\
cif"], "Hash" -> 
                    "fcc2bd9e648ffc9a04e94f7e49ab556d7b19facb665e701b19da57066\
0014611"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/Default/Sodalite.cif"],
                     "Hash" -> 
                    "1c6ac818ef92844fa31660cb9c9358b95845069e7f6f7faa609124466\
9d90c57"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/W.cif"], 
                    "Hash" -> 
                    "269e5afde07ecf81453373beb8cae4aa814a4275025b1da910add5883\
f3e14d7"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/Zn.cif"], 
                    "Hash" -> 
                    "f76e49657ef3871835565410b8825a1bfb4a77008f4eb764fdcfd90a8\
80a1392"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Default/ZnS.cif"], 
                    "Hash" -> 
                    "35f86f192f665d6df87d08d99f8541cf1d9070e264208f28a89dabfac\
8247eb8"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Ferrocene.cif"], 
                    "Hash" -> 
                    "17c4d740566f03d29dbe54f4a5f0e166788946397d8726ef19c63f6df\
41967f3"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/IUCr_produced_with_\
crystals.cif"], "Hash" -> 
                    "8cad913695e1ab04f880a77fc6d30ea4cc7ce2aba082e263242647ce7\
21f2c55"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/CIF/ThioureaFerrocene.cif"]\
, "Hash" -> 
                    "a6c48f1e74fd021bb1a7ac5d8ce3c36ed27d09b8a0f28361e6689df51\
9d19c0f"|>, <|"File" -> File["Kernel/Data/ExampleFiles/CIF/Yoderite.cif"], 
                    "Hash" -> 
                    "72d3bd5b774c95d23867cbcdc9dc2d3738d0b8d08e334aadcbadb0e58\
f45d876"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Hexagonal_hk0.jpg"], "Hash" -> 
                    "ffe1f88b0b5ea9cc302249ecfed0d3e4ff8940f00955f53ae5569e2f8\
c0911fb"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Hexagonal_hk2.8_165K.jpg"], "Hash" -> 
                    "1dabcf332ad59320fecae425040532219bb88a8cbd66191a5badc49aa\
031a4c8"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/Laue.\
png"], "Hash" -> 
                    "0adbdf83360a41c975d280b997c4f6511eacdf9cd4a315ea0aee69e10\
34b5b6f"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Monoclinic_h0l.jpg"], "Hash" -> 
                    "9b764dcc7715ebe198c9952dfc1b2c4fb9742480893c375fe4aa4b476\
3733b44"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/\
Monoclinic_hk-2.jpg"], "Hash" -> 
                    "0745a4cb25c2cfbd000970b4f4637ecbfe211d5370bee36d8cc94d153\
6fcefc9"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/Trigonal_\
hk0.jpg"], "Hash" -> 
                    "9d889df330655060e4878adedeb719c8e991f789317b711d8c0968457\
18aac93"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DiffractionImages/Trigonal_\
hk1.jpg"], "Hash" -> 
                    "b7cef8b98a3cfdeaeffdbc449e69e8103a87cce2f6643d2fac4e1890c\
c6645ab"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DIFFUSE/diffuse_input1_\
crystal.txt"], "Hash" -> 
                    "4d72d8d5aa9b98410e330fab0c81611be670fe5000f4fa27fe4989791\
30a6ba8"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DIFFUSE/diffuse_input2_\
setup.txt"], "Hash" -> 
                    "5e33dad55bbc5509209ee98fe30b6d45976b0b3c6d3f836b57ae4bce5\
2ba93e6"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DISCUS/fourier_data.dat"], 
                    "Hash" -> 
                    "20e3ea002a5f7f9f09a10f09e696ca764462213e17a86081e5f66c1ab\
b3e7ac3"|>, <|"File" -> 
                    File["Kernel/Data/ExampleFiles/DISCUS/ThioureaFerrocene_\
5x5x1.stru"], "Hash" -> 
                    "f52b863fa24147224aa9fdb6f783988fe575067706ed28501db3d3410\
0d3e4a9"|>, <|"File" -> File["Kernel/Data/ExampleFiles/.DS_Store"], "Hash" -> 
                    "1e930aae44724689fff614826f71797861b784672fb640479348a8c9f\
a8dbcd2"|>, <|"File" -> File["Kernel/Data/GroupSymbolRedirect.m"], "Hash" -> 
                    "7abde3585a337e34e7134f28bbef449e18596ab31f723b257c18c352c\
236aab6"|>, <|"File" -> File["Kernel/Data/PeriodicTable.m"], "Hash" -> 
                    "f57f887c87c1017f722b06662b2409f6e0c72c9b8675dcec10ad9343b\
6b623ef"|>, <|"File" -> File["Kernel/Data/PointGroups.m"], "Hash" -> 
                    "aae508b240f82bf41501acc156dba48a5df977e0dedda935da4ecb87d\
5044aeb"|>, <|"File" -> File["Kernel/Data/SpaceGroups.m"], "Hash" -> 
                    "4bc9ea97080603425c4f27feec27bef87cec9364aa1d0ae8207e27e61\
6700152"|>, <|"File" -> File["Kernel/Data/TransformationMatrices.m"], "Hash" -> 
                    "9dc765143fda2ee1605e6ada93e08db5d048ddd1f7a53cedc5c4a1719\
b2c60da"|>, <|"File" -> File["Kernel/Data/UsageMessages.m"], "Hash" -> 
                    "f5b46456fe0c7ed422f1f25b0075dd720d635df03160d1b0386d35412\
d7fc834"|>, <|"File" -> File["Kernel/Data/UserData/CrystalData.m"], "Hash" -> 
                    "dbddbae9428f15e2be1d8267f030e97a9a37c14c7c9c39af92c8cc88d\
d68f63b"|>, <|"File" -> File["Kernel/.DS_Store"], "Hash" -> 
                    "a8aa2029bce408117ad687ba1bc1ede0c388221ccf3901f28afeadffd\
81b57b6"|>, <|"File" -> File["Kernel/Functions/AttenuationCoefficient.wl"], 
                    "Hash" -> 
                    "0256448428b8d01183f059c65dd8fce6a026733e1f14fa6c8ef0c6b6c\
6c06e4a"|>, <|"File" -> File["Kernel/Functions/BraggAngle.wl"], "Hash" -> 
                    "eed596025bcdcb1e384242cb85edf4485d99198ed2f56401df4b3c3b0\
a18f1c4"|>, <|"File" -> File["Kernel/Functions/ConstructDomains.wl"], "Hash" -> 
                    "a7a11c517ccaec9eafa395bdeb09c73268831aa3b2e5444dec001e98b\
771ff10"|>, <|"File" -> File["Kernel/Functions/CrystalDensity.wl"], "Hash" -> 
                    "fccb5b6d3bfdbcd7624fb7801c28298ea01fac47e4b9c8e910bf82cdf\
ea9f13b"|>, <|"File" -> File["Kernel/Functions/CrystalFormulaUnits.wl"], 
                    "Hash" -> 
                    "7f49045d2bbf3e8ca64ca5b1bb50a7bd8dbeda299a3d5aed1b765d744\
782c941"|>, <|"File" -> File["Kernel/Functions/CrystalPlot.wl"], "Hash" -> 
                    "bfcfe1021a30fcae2f33ab93de3e8c58b4df0291fc27ea253bb12953f\
93f480d"|>, <|"File" -> File["Kernel/Functions/DarwinWidth.wl"], "Hash" -> 
                    "4348dc4dec66e6f8cccb146c7c3c9bb26e87c0941a90eeacc01f92e1f\
83b04e4"|>, <|"File" -> File["Kernel/Functions/DistortStructure.wl"], "Hash" -> 
                    "6d884d4bc070e165279bc97e3b405ebcb900a668297ad022e70807da7\
566b924"|>, <|"File" -> File["Kernel/Functions/DomainPlot.wl"], "Hash" -> 
                    "eb45a0929a913e393a4990f0f9244f6835a98f3b613dd259f6acd26e4\
47a5191"|>, <|"File" -> File["Kernel/Functions/EmbedStructure.wl"], "Hash" -> 
                    "c97052b153119202fbaa302b29b705e397eafe8a533fa377cc4bcd03e\
3e8a8db"|>, <|"File" -> File["Kernel/Functions/ExpandCrystal.wl"], "Hash" -> 
                    "a6034fda60822de4557d913859ea2947a43d713f1ce77c10e1191014a\
a410f74"|>, <|"File" -> File["Kernel/Functions/ExportCrystalData.wl"], "Hash" -> 
                    "d4277f12db0135b8d6bf2f7831a460372ce9669fdd9db8bb0c4b266e7\
1e24e26"|>, <|"File" -> File["Kernel/Functions/ExtinctionLength.wl"], "Hash" -> 
                    "386024c166fe7a6f7a188b3612274ac04842bb7b71431f6331aeef54e\
877a3d8"|>, <|"File" -> File["Kernel/Functions/FindPixelClusters.wl"], "Hash" -> 
                    "e714b8e2ae19a8dc498c428a3e024f6df63f2ac360f7a8d87a1b917bf\
029ab0f"|>, <|"File" -> File["Kernel/Functions/GetAtomCoordinates.wl"], 
                    "Hash" -> 
                    "9e0a2383b0212ce0c43287179492ab49ba4e375b049042dc0ef73b394\
633de30"|>, <|"File" -> 
                    File["Kernel/Functions/GetAtomicScatteringFactors.wl"], 
                    "Hash" -> 
                    "19fbb7c4c6d2659bd0d220cf4c5b3df1bb9c44648c86c6fdb83ef3ac4\
a382048"|>, <|"File" -> File["Kernel/Functions/GetCrystalMetric.wl"], "Hash" -> 
                    "8d489e9012ec419b398f14b4d36999fe67a2521db69aaafaab0031972\
1c4bd2a"|>, <|"File" -> File["Kernel/Functions/GetElements.wl"], "Hash" -> 
                    "ccf1007c329f292875eae5e31e7a4defab2bc2f0b99bbacb992a8c36e\
cf4e1fc"|>, <|"File" -> File["Kernel/Functions/GetLatticeParameters.wl"], 
                    "Hash" -> 
                    "fa71028bdb89af26340cdb9dc3215e7dea727330d3cc212627a7a95ea\
bf1bc5d"|>, <|"File" -> File["Kernel/Functions/GetLaueClass.wl"], "Hash" -> 
                    "a20a452b311c3b0031aebbd5ba5f848c8619b09029f446d8fb9251fb0\
495c92b"|>, <|"File" -> 
                    File["Kernel/Functions/GetScatteringCrossSections.wl"], 
                    "Hash" -> 
                    "e627a84d2461b849ea96622252901f480b3926adb526e346b9bedd2eb\
ea0eb9f"|>, <|"File" -> File["Kernel/Functions/GetSymmetryData.wl"], "Hash" -> 
                    "d9469ba283af825c4f9c58db8374ab0d0162794efb26803073a2b617f\
76ba4ad"|>, <|"File" -> File["Kernel/Functions/GetSymmetryOperations.wl"], 
                    "Hash" -> 
                    "46e6d558f0378b15bfbfd5a926ce439f07f9c084ef664d3337ccb281c\
e36ff89"|>, <|"File" -> File["Kernel/Functions/ImportCrystalData.wl"], "Hash" -> 
                    "0f07da648aaecc5edf848d10ba4add05f184410d0d62ffb0df133c35d\
b0c9822"|>, <|"File" -> File["Kernel/Functions/InputCheck.wl"], "Hash" -> 
                    "04a43638d83c1bbcf17c3036019d22a0f16a85a2dd986c4a068ce99d6\
9eb84c1"|>, <|"File" -> File["Kernel/Functions/InterplanarSpacing.wl"], 
                    "Hash" -> 
                    "23764f393b86860c5d8f966f9ee56eb05d7f838fcaa444991a20c1d05\
510c4d5"|>, <|"File" -> File["Kernel/Functions/MergeDomains.wl"], "Hash" -> 
                    "5854a38caf4d8f7d33a95afab0c3472f6548f43930329253bd9a97326\
60d166f"|>, <|"File" -> 
                    File["Kernel/Functions/MergeSymmetryEquivalentReflections.\
wl"], "Hash" -> 
                    "d3000053627452a4b65a2c2c1e07098e79832b6cbe90d91869e45f533\
0cfdc90"|>, <|"File" -> File["Kernel/Functions/MillerNotationToList.wl"], 
                    "Hash" -> 
                    "44e3370540388a59adf8bf36b0bc6dff8e8b105ce4185012609c09530\
96b1e53"|>, <|"File" -> File["Kernel/Functions/MillerNotationToString.wl"], 
                    "Hash" -> 
                    "ad355e7ae9945d08d3b294d42c6ccfb43147a6ff16afed57b0d025b74\
aaeb1f6"|>, <|"File" -> File["Kernel/Functions/ReciprocalImageCheck.wl"], 
                    "Hash" -> 
                    "0265f6f726b554f2d76ff741b863ee530042ccd518f63d67fed1b5d34\
533ca9d"|>, <|"File" -> File["Kernel/Functions/ReciprocalSpaceSimulation.wl"],
                     "Hash" -> 
                    "3af58a11f3c5db29d72b015293296204c8b4e412be405e526c6d14ae9\
8f53120"|>, <|"File" -> File["Kernel/Functions/ReflectionList.wl"], "Hash" -> 
                    "2c418b1ef5704978a15b80b03bb1aabec555b163196faa9df092cb015\
822f31a"|>, <|"File" -> File["Kernel/Functions/RelatedFunctionsGraph.wl"], 
                    "Hash" -> 
                    "b76eba42677999b244a47bff6a6d99812490de25e1567493745de3945\
0407c9d"|>, <|"File" -> File["Kernel/Functions/ResetCrystalData.wl"], "Hash" -> 
                    "5d7f36dd2767af65cd3550da1b92b284176e01da6f8198548413d622d\
27a1d38"|>, <|"File" -> File["Kernel/Functions/ResizeStructure.wl"], "Hash" -> 
                    "335d6435f4d9b38d83adc42deba535b7a9ae74926c5ca2c2fa030dc03\
23abe30"|>, <|"File" -> 
                    File["Kernel/Functions/SimulateDiffractionPattern.wl"], 
                    "Hash" -> 
                    "0b1f58e3e536bce50db5a3024f34e71a3375c7d691e2ad1530ec86aac\
53fd2ac"|>, <|"File" -> File["Kernel/Functions/StructureFactorTable.wl"], 
                    "Hash" -> 
                    "3ef81a826eec6f79d480aadfad18ef05d18a29b7be41a477ad7c99e58\
c9e3386"|>, <|"File" -> File["Kernel/Functions/StructureFactor.wl"], "Hash" -> 
                    "a70924effd16473ce4e848e2bdea73ed4e3ffc73cfdba70d7804fcaa3\
c430492"|>, <|"File" -> 
                    File["Kernel/Functions/SymmetryEquivalentPositions.wl"], 
                    "Hash" -> 
                    "727f2caaeb3f217ea540759eda3911e709ef214f69be027156fa7f38f\
cbe35af"|>, <|"File" -> 
                    File["Kernel/Functions/SymmetryEquivalentReflectionsQ.wl"]\
, "Hash" -> 
                    "45cc1ee34485a582311aeec9b207329b639755543ec5d0576e64c45bf\
57336cf"|>, <|"File" -> 
                    File["Kernel/Functions/SymmetryEquivalentReflections.wl"],
                     "Hash" -> 
                    "e0f61a62815314837f9bf5595edfeb53b8646e00bd13bb47fb60bfb08\
1f9d908"|>, <|"File" -> File["Kernel/Functions/SynthesiseStructure.wl"], 
                    "Hash" -> 
                    "dafeeba6b2a12598f9bafa7389b145c47d2228535cf28410b8491a590\
0d0787a"|>, <|"File" -> File["Kernel/Functions/SystematicAbsentQ.wl"], "Hash" -> 
                    "52774d7d4a1de8ed30889b44adb62be91379b9b30e3fe63ae8252dfc9\
310b864"|>, <|"File" -> File["Kernel/Functions/ToStandardSetting.wl"], "Hash" -> 
                    "cc6cbe4c459a650352512cd31668039c1897dfaa3c678ef999d6aa7c5\
707425b"|>, <|"File" -> 
                    File["Kernel/Functions/\
TransformAtomicDisplacementParameters.wl"], "Hash" -> 
                    "f637c2fe9518655bf73bc754769b31d7a075c2d987c160decd5acba02\
4df66bf"|>, <|"File" -> File["Kernel/Functions/UnitCellTransformation.wl"], 
                    "Hash" -> 
                    "76ab89a43bf4b89b720bf5623c525cbb650255d4ea998c765f1d8be27\
a59c31b"|>, <|"File" -> File["Kernel/MaXrd.wl"], "Hash" -> 
                    "bce07db6bcdfb0f84db7e52f209011fc4d0c39b8a261badd17808d02c\
cb305af"|>, <|"File" -> 
                    File["Documentation/English/Guides/PackageOverview.nb"], 
                    "Hash" -> 
                    "08d4b80bc2d57f8cb8f5b8c861753d22bf51ebba8b50787645724cf34\
6af38bb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AttenuationCoefficient.nb"], "Hash" -> 
                    "cbcbd1a934f0803c0255f9100e3c2c5de6f831395b518b551e7475205\
9e1ef1d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BraggAngle.nb"], "Hash" -> 
                    "7a82f9c74369581215fd873a1ab744c54b9892e198fd612d5d95c9cf0\
9db3132"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ConstructDomains.nb"], "Hash" -> 
                    "85070664d058d91445ba918cf21250bbac8ae0740eddfc7ba89a795db\
652dcec"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CrystalDensity.nb"], "Hash" -> 
                    "81cbc9bc42287a18c685102e68cf17c68cb3586a91c845aeacc227f50\
78f5ee6"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CrystalFormulaUnits.nb"], "Hash" -> 
                    "07647ecb193faec15ec63752e8a6fd320cdb9857db8177eaa11b1e8d5\
0d1ac23"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CrystalPlot.nb"], "Hash" -> 
                    "6bbfefae005622a439e4aea3b498f436cd13ca057f3d128b9b54206a4\
9c0ca78"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DarwinWidth.nb"], "Hash" -> 
                    "a77e766d0bd4d10a5eb1d81de35cba3117bfb8f2dc7c6f43493957de1\
c7a8145"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DistortStructure.nb"], "Hash" -> 
                    "bd277f4184049f1a87878b5afcbc619b44725f706b241fb18bb921856\
c3431b3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DomainPlot.nb"], "Hash" -> 
                    "ca6887e61c4019539f81cc589cb63b928a366afd07787a9382226cddf\
d0bba86"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
EmbedStructure.nb"], "Hash" -> 
                    "6dfa176b9f39ec088ad67fe2f27252164a31f0a69799544646c7b81d0\
48b7433"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandCrystal.nb"], "Hash" -> 
                    "722acf4ae3b487a5d201bc0753b1e2865308d38ed99cf8c1dd04cc3b9\
8c52bcb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExportCrystalData.nb"], "Hash" -> 
                    "a8445679e374b67b3f7fb84df79392bfd60e9b424f99ceee68707d53e\
fc7832f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExtinctionLength.nb"], "Hash" -> 
                    "d1341e1af1e82056028bb9c53713cad243f7b9337b1b21b9d79c4a426\
3b1e30e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
FindPixelClusters.nb"], "Hash" -> 
                    "6b0c390424a60ace017f6137dcbe84acd93d8d84d6294818e35f948c0\
be3b758"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetAtomCoordinates.nb"], "Hash" -> 
                    "82ac8e38be13d756b286e0fc533a5318b7d63e9d9d9078a606a64b270\
806b4bc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetAtomicScatteringFactors.nb"], "Hash" -> 
                    "c99fcde3d48fa245c3f87eed14800a2eac024f7ecfcb4e213985a8e61\
a371904"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetCrystalMetric.nb"], "Hash" -> 
                    "b32471121f238da58f0042323e5986cb9e1114f9ee10f3223c628485d\
610ca0c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetElements.nb"], "Hash" -> 
                    "22a8b9c1106dcb2b1cef5cd1556c2c53465fb7495f609ad32d16cca3f\
441c636"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetLatticeParameters.nb"], "Hash" -> 
                    "e6be0b888f75ad82d9bfe14aa211d32fb21d550893981bc84697d3532\
5510a70"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetLaueClass.nb"], "Hash" -> 
                    "9f80a6afbfa9f77d1ecb0eeb3e49559edd9ad73f12a4dc2353952319e\
c9ce765"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetScatteringCrossSections.nb"], "Hash" -> 
                    "b21e5c0606a03961a237f4fdf4fa0eeba1e653067ed48ffb0fc2b341a\
b6f53b1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSymmetryData.nb"], "Hash" -> 
                    "514965f4f185c92a0dc0eb70c37bcfa15d98e5441d271fbb36243c442\
32fd498"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
GetSymmetryOperations.nb"], "Hash" -> 
                    "c9e4a55ac4f003710db20fcd5c986d7f976ab0246489b8c50e79284f0\
3ef3ec6"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ImportCrystalData.nb"], "Hash" -> 
                    "873e6c0bd15dd7ec3ec8dd0b5bbc0a089e7ba744a727cfbe176dd7d24\
8a144a7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InputCheck.nb"], "Hash" -> 
                    "aeb2969d793f2c7fed08b5c1c8fb0f857c4fd89bc47452c047c50c433\
d866899"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
InterplanarSpacing.nb"], "Hash" -> 
                    "026645afcfc4adbb98bc911504b11d4033409f5be45969a27f27805a0\
b82788c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MergeDomains.nb"], "Hash" -> 
                    "694bff0482209739063d0a790baf891aa2902501b6ffbb4ce0d7b9745\
6ca5893"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MergeSymmetryEquivalentReflections.nb"], "Hash" -> 
                    "6a7de05369c13eb6b21d1c1a7f88ab051cd11205ba3f7d9fc362058b2\
fd4369e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MillerNotationToList.nb"], "Hash" -> 
                    "333e16e0e5690ab1ac6a2acc6fdf45da51554e54a488afe4d0e5e758b\
79424a5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MillerNotationToString.nb"], "Hash" -> 
                    "791ce75b30cf63596663824f042dec26929198fc77889ebdf618dbecd\
166c413"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ReciprocalImageCheck.nb"], "Hash" -> 
                    "1639c6fad6f3db2ea0e9ce914eec0bc3032287ff1be248e1cee4c9900\
759a0d8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ReciprocalSpaceSimulation.nb"], "Hash" -> 
                    "565295309effed3336bfe96545cce645bca306752ed6f9705a5aa11a2\
9c7724a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ReflectionList.nb"], "Hash" -> 
                    "21ada9a4a7217dd62832d199f24fd6e8191b1c1fe07254f9a1d86babf\
09380e3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RelatedFunctionsGraph.nb"], "Hash" -> 
                    "540978b091d964c7ddd5606a56b7f7780967bf1330285bdd86b1a1321\
0238837"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ResetCrystalData.nb"], "Hash" -> 
                    "18f7507f4d0efcd63a2289230660fc2d41ad26c7e69f14eda370a97c9\
b3b0bf4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ResizeStructure.nb"], "Hash" -> 
                    "5c220075135140917589ee3c5cb3d4e0c88ded939daab3642377bf9bf\
2150365"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SimulateDiffractionPattern.nb"], "Hash" -> 
                    "441a947e35305d2b1881e7e97be0028d4a44bde200721b1cdd4b5ed09\
2950c15"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StructureFactor.nb"], "Hash" -> 
                    "5bba03da939f93f3ec4f89cf054cc41a73c7f136c9f32b1e3eec23ed6\
3460047"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StructureFactorTable.nb"], "Hash" -> 
                    "cb4453fecd47c231dc76acc04fca4d48aa660728fb691ea7248517da5\
5dc63cb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentPositions.nb"], "Hash" -> 
                    "ef0c0737964bb6c58de396e8dc71ceec720a7dfe0f7ba7ed95b2b2137\
e6beaa3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflections.nb"], "Hash" -> 
                    "602c214c003a84b82467091edfa43a5fa5e0f54de624b97bf1e57b2af\
f1f888e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflectionsQ.nb"], "Hash" -> 
                    "798f13f4d84104486edce99aed5d1205116287cf0b9e6b177743df1b3\
c662fa2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SynthesiseStructure.nb"], "Hash" -> 
                    "4eba9c3a2bd23143d48baf45d4c6999cec43460284d59d689e0401000\
60fd310"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SystematicAbsentQ.nb"], "Hash" -> 
                    "e02a8fc70b5c20d4942d588b92ca6a2f68d3b53df35723dfef973ac70\
9a32ffa"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToStandardSetting.nb"], "Hash" -> 
                    "4c5da3dd25725204c2b2cb0dab65c692d1f64b805df82fb250115f918\
4e78285"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TransformAtomicDisplacementParameters.nb"], "Hash" -> 
                    "56d6b9b2f442f2d3d04b7c976e133e38935237a10fec836fef72a7d55\
a387863"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
UnitCellTransformation.nb"], "Hash" -> 
                    "a1ba27298a471e34fc9e6f301949c448cdca6a97c756369de1d76403f\
6d9d94e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
CrystalData.nb"], "Hash" -> 
                    "32ecb03b87974db7a1754337f83e0835b97d69bfeeb2ee2513ea4e7c5\
2f4f010"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
GroupSymbolRedirect.nb"], "Hash" -> 
                    "156a5b230260705511ff904db26fe9e81b326571426153e065f74b805\
a3d609d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LaueClasses.nb"], "Hash" -> 
                    "c5aca0eec3f009babadabcdfb95b96c64af2a51e136d76a44afc97498\
d059399"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
MaXrdPath.nb"], "Hash" -> 
                    "6ed7c3b70967fbcb6b9fd3820df7b7adb982a5d7eaa38736fae550637\
3e7c5dd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
MaXrdVersion.nb"], "Hash" -> 
                    "697887e2b747a2f9dfbdc3d4147a95e6f565626221b81ed8e9a62df79\
5cbedfc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
PeriodicTable.nb"], "Hash" -> 
                    "d6997149dc759d08d81646e6e1f36b91783faa5274abaa6d77c21debe\
64c8260"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
PointGroups.nb"], "Hash" -> 
                    "31643da4395b2a69aa7fd8c3ee5ee9d10cc1c594b525502876ae50ce0\
c298dae"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SpaceGroups.nb"], "Hash" -> 
                    "b5d62c9542b74b8fd8baa954a61fad0c12e099b4ad0171e59366441c5\
254839d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
TransformationMatrices.nb"], "Hash" -> 
                    "0a32c1abf0868cc6757a06c9326ed7f98dd89484fad53b9bf6a99e142\
a9b061f"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/ApplyingCrystalData.\
nb"], "Hash" -> 
                    "ed0f46fd863b882b9a6224c40f5f932a9a3b77fd34bd6c0cba82a0dce\
c71ceed"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/BasicComputations.\
nb"], "Hash" -> 
                    "8f3e2dd43cd9e199e10e20234c83fd51e3575102f8b10ac4116de5580\
0e6564f"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
ComputationsOnReflections.nb"], "Hash" -> 
                    "56cf4d842eccd4936f01e93d8246534bb47d93fddc4a2777f1207d1a0\
b0f2d27"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
FormulasInCrystallography.nb"], "Hash" -> 
                    "ad274b5c7a01b2e9f55d4a7208e0d96bbc78110c93c2a3821e86009fd\
2ac84fd"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
ImportingCrystalData.nb"], "Hash" -> 
                    "e186cd5b9ecdb446a7c136ed3b97421be50c4541ba19dcbbc468138aa\
32671fe"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
QuickGuideToConditions.nb"], "Hash" -> 
                    "b80d1323be565a72864f1b25038c0c3f959ba7721795c66259fd1975d\
258cb13"|>, <|"File" -> File["Documentation/English/Tutorials/References.nb"],
                     "Hash" -> 
                    "eb106e2d8c359c5ef351d836d74b25c52bb696b27dae005f26183f112\
b3d4692"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
SymmetryCalculations.nb"], "Hash" -> 
                    "3a76b955ea28d4433e58454453a7ba0b6992f3e3250bc02475db595dd\
ab3836a"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
TheAssociationStructureOfCrystallographicData.nb"], "Hash" -> 
                    "c859034547de65ef3d41e67b559fceccd4fc82c6a2401f762dcddf70c\
d0ef502"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
UsingTheRotationOptions.nb"], "Hash" -> 
                    "9e2f1cda1e38c2468ba3a6baa7b81976125f12799d811013896a5e78e\
dac1731"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 272], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 272], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/AutoCompletion.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d481ce3a221fd9183c2bb9896103674cba83f5743614eb61c647fa903\
470ad3e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
BrennanCowan.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d3a55707257e598dae780e0637844f1167227c82f0888748362b3d8ee\
271a784", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Chantler.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d7f639260db5226c1bd37aee9e46a1a450bc48f3901efa8a516d74ed0\
d19a1fc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
CromerLiberman.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0756728aa9dcd6032b4d20a38abb9c225325aa440fe26282783cb3af6\
ef85eab", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
EPDL97.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f6189149f44d414b3b45757e156f1d63c14cb3b7bcfe94d2e45bbe395\
a6f31fa", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Henke.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e15004e5e5e93d5a8cb44cd6d7e532f892eb9928549c09ca355fe2dcc\
517677e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Kissel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "48258c7f6efb5abf104cb49b5beec8f2935851e673201c7e8154877c9\
b2cec2b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Sasaki.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cefc35a3c0f2533edb01db2ccdbd40ea3143845d9d06150a225428824\
5a7346a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
Windt.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "06d00bbd568270b3d13c5921260744c63898ecfdd947d008b637cf216\
9c82433", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/AnomalousCorrections/\
xraylib.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "45d34705d985ec78013d902bf445bd713f3e8b60f06b9b033bb965be6\
7f160fd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/CromerMann.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d691b5e76a3cc36e0490f574bd2dc2a9a22d69e20520a1d5503265816\
4b35108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/EPDL97.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f9097c48262fb96cdb8051dc171cb3f18c6f6c708b7040c3137f50be4\
6ffd54a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/InternationalTablesC(\
3rd).m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "64b1c16641835d84a8da4c066db55a4765fdb7883f8f9937381d6fec1\
eadf9d5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/Kissel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5c823b4880f870ca0b2dbd727f15e517ce2ebd8be6a3c3c6ce4ef56e7\
3efb1cf", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/Kissel(modified).m"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e887aada90e103efca546ba737a7d73069ddf6073cafa51ec29f4c275\
48181a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Kernel/Data/AtomicScatteringFactor/WaasmaierKirfel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8879086a5b3ce8bbd214f1b0b4b7b57ab4a12679f8b83cafd53008651\
5d4e62d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/AtomicScatteringFactor/XOP(2.1).m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "554d7303c334dfa1d920a038590752f9c393df6eb420a5f366ffc162d\
316eef9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/CrossSections/Metadata.txt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "717922da98872311c5918d8cc3e7e5180b15f18d165706f9e5923e0ca\
23b2ebd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/CrossSections/xraylib/Ac.dat"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a10ba733d1e8dd404aafc25383d10527d47cae526ac93c7ab98aa3f50\
c49e3dd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Data/CrossSections/xraylib/Ag.dat"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c5da01797515b0c03d75a5a44e66226d9d1295b9da13112c40a26fd9d\
ae505c7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["272 total \:203a ", ""], 
                    Style[
                    Superscript["272 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"174.93992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"174.93992`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"9.462106`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ConstructDomains.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Guides/PackageOverview.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.819295`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.819295`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
AttenuationCoefficient.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.694681`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.694681`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/BraggAngle.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.752061`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.752061`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ConstructDomains.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.462106`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.462106`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/CrystalDensity.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.377714`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.377714`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
CrystalFormulaUnits.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.2839`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.2839`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/CrystalPlot.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.038369`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.038369`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/DarwinWidth.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.036718`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.036718`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
DistortStructure.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.916509`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.916509`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/DomainPlot.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.262632`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.262632`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/EmbedStructure.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.901113`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.901113`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/ExpandCrystal.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.329252`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.329252`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ExportCrystalData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.277929`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.277929`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ExtinctionLength.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.077825`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.077825`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
FindPixelClusters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.307533`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.307533`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetAtomCoordinates.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.349633`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.349633`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetAtomicScatteringFactors.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.344296`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.344296`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetCrystalMetric.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.09166`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.09166`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/GetElements.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.109142`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.109142`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetLatticeParameters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.184371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.184371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/GetLaueClass.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.885877`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.885877`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetScatteringCrossSections.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.397698`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.397698`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/GetSymmetryData.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.433904`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.433904`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
GetSymmetryOperations.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.738258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.738258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ImportCrystalData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.764203`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.764203`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/InputCheck.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.921115`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.921115`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
InterplanarSpacing.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.414761`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.414761`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/MergeDomains.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.768849`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.768849`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
MergeSymmetryEquivalentReflections.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.142002`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.142002`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
MillerNotationToList.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.176803`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.176803`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
MillerNotationToString.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.334823`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.334823`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ReciprocalImageCheck.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"8.346143`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"8.346143`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ReciprocalSpaceSimulation.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.511358`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.511358`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/ReflectionList.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.174329`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.174329`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
RelatedFunctionsGraph.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.045356`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.045356`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ResetCrystalData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.291975`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.291975`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/ResizeStructure.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.280234`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.280234`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SimulateDiffractionPattern.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.097891`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.097891`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/StructureFactor.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.007966`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.007966`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
StructureFactorTable.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.286251`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.286251`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentPositions.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.861918`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.861918`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflections.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.206217`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.206217`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SymmetryEquivalentReflectionsQ.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.468249`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.468249`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SynthesiseStructure.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.382198`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.382198`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
SystematicAbsentQ.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"2.680513`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.680513`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
ToStandardSetting.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.520066`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.520066`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
TransformAtomicDisplacementParameters.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.57556`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.57556`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/\
UnitCellTransformation.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.241626`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.241626`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$CrystalData.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.578717`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.578717`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$\
GroupSymbolRedirect.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.224299`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.224299`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$LaueClasses.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.093907`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.093907`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$MaXrdPath.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.229035`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.229035`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$MaXrdVersion.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.222824`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.222824`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$PeriodicTable.\
nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.32971`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.32971`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$PointGroups.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.099371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.099371`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$SpaceGroups.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.406325`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.406325`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/ReferencePages/Symbols/$\
TransformationMatrices.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.556618`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.556618`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/ApplyingCrystalData.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.297031`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.297031`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/BasicComputations.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.883837`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.883837`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/ComputationsOnReflections.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.12239`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.12239`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/FormulasInCrystallography.nb\
\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.480235`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.480235`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/ImportingCrystalData.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.940495`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.940495`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/QuickGuideToConditions.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.50773`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.50773`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/References.nb\"", "\[Rule]", 
                    
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.500994`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.500994`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/SymmetryCalculations.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.985133`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.985133`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/\
TheAssociationStructureOfCrystallographicData.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.890715`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.890715`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], ",", 
                    
                    RowBox[{
                    "\"/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/Documentation/English/Tutorials/UsingTheRotationOptions.nb\"\
", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.962498`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.962498`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["67", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["67", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJzsvV2sZFd2HsZm/7FJzpAjjWRJhux2uy2PLLF7//\
8osjjdt7tJethkT1dzOJJlcPZvdw3rVl1V1SXZChTYiG3YcYQkthEggI0YfsiDHwIECAIkeQiQvOUt\
MBwbgZHE0kOQxIjyYCcBHET51qm6t+\
vce7pZVeSQc3nPpTT3dv2cs87ea33rW2uvvXY9M3vhfvj45uSTMqvnZ994azwv071pmYf5cDLGy/\
XM7ML9CX2gnpude3s4m9fnZxcehId4ZXBxsJ9Smc0GLw32d3fD9PGbJeTBmT9fz85evfV4HHaH6e4k\
748Kff35w6+fHZT57OsPHu+VWZn/YLJXxlevzs7fCaNZOXj3mwfvlt1Y8gDilKtXB+fv4/\
qP8ZmXHpTdvRFeXEi4uPDZ2Sv3wrgMyqik+WTavue5+xDj4CbnZxffmA5z+8sHvy/SReitC7NLN/\
fn84NheHH5RIvr/tyd2/emw48gwg/uTCfj+e1xvl9mk/1pKoNLd27fHM53w95s8OpyYPCld/\
GcZUrCkyi3yig8Lnn29cUt7uyPE43400bn3IPpfjl8jBdv7O2VMA1jDP65dybjJ+9cuhlmZTB/\
PCr1uSPPfun2R2G0HzAys0s39ueTXUxxOnz3wt0yfzTJgxfvTQvGdj78aOWiN0bDh+\
PdMp4fDOjswk4hTTn4/eSjb+2Gh2Uw/O2CEbu4HLHDb7Xue/7BcLfMps81Py9/+/AVfPHlnf3pFBf+\
HgQug6/dwfjuhL03y/DhIxLh/L3Jx7jnmdk3b8TZZLQ/L6ufn33tbng4HtZhanR45w8x3S/\
cmYbdZlLPzl5ohofU9/yV3/s7f+sKLnjp1nAKnaFnxvv337i5MxlNptM/0vz849enP9n8/P7r0+\
83P//k9Z2fPXzilwfz6XDv3fFb4739+\
RMtXrz59R2IDsHuhZyH44dH336xEauR58g8vty8czdMHw7Hs1U1pt87z+08d/\
Tvp8ty4YmyH1znzOHvA9s+e9S2jxrZ8quDV67cC2lU5jem6RHG68rg3JVfuXxl8CKuc6vUsD+\
aD35qqfNvzcvujfF4ssCSwdk/+N2/\
t4IdwyvX35tBg67P5sMwvn6rfFRGUPbp9XvTyeyH5UNo1fW74fvTTC/\
8ELNzeVr2JrMh9Pfx8o24Pxzl6wP6/v2wOxuX2QcfNO+8pq4x/LfXSHrlEJ1IoM/\
y7C9deYCHGZGWbv3cuFvr2ucOrs29uWaEt9z8YHD2yuzK4OKspMk4zwaXrgwWf10ZvPDd/TCeD+\
ePn6jQ4PF4Hj65M5nuzs4CbNsPe/CpV5cacMyQDz4xuAiV398dz1bGZ2Gz594u9cnHzuF5j3+\
mA09epJcAcmVejmr9K0thSMIGKdaW5fh91hfo4K4DaAWZ4tp33Xl+85utwPC5IzD8zcGjycdkp+\
OHO4+A4Ylg9OgQvfTOPvzeFPb/4bH3vg6/A0QBYA1nhG9nn8xyc+\
lGHxaYcvSrP2I1OPtgsvfjqwCv0pyMhuNyj1Bk4WsXE3xm58zhpxaO9kshCDujyWxrgnDUs/\
QMoWcIWzCECz1DOF0M4TM87E9fuUnDu5jthX1g5Ld/7mOR5uDcnSEQHvFkd8Q3+\
M0foYZcGbxMd78xfbhPuDY48xc+t4F7dWkhdwNAqMzm2w/Z+RWlOfjrQkfsfakde79GzmPweIZr/+\
AdCFAy2f8PINWHwOYDt3V1tgi7b/zEa4OX3hrDZ4bRrTAPN868NjhPYzOr/+7ykW48/\
9pismhYmkn7me+U6biMrhOe70wwBoXkv/\
bxCB98M8weDb6dleOpyCAEr9lzJ5OI0TtvOJPGqhSDk1VbJQ1XJRqejLI1eCaVZSHLcvyed5b3JCGv\
34AfGaYBIB5aAGS9E0g9r98Yw72MJvuzHcB3aVzq7PpNuIZxGO9MPg7ja7tPJJRBa8us0LZo73Io1r\
HCjLROqcq5sULY5ERlzjmrnDQiyuxKEZYHfOa4hDe3lRBUcTwflemqdLYa6YVhOWohTOIxSxtK8UWZ\
wIPSLCblqvSMQ6dc0Nxkq0pmmfvAazou3ZtbSzed7Jbp20NQ1t3WCDKrMUguBJ9TNkyKqLJgQbqAqU\
5CaCl0CEqxWoQRTlhoQZShmlKdLiEel/Hb28p4+\
96tt71dka0a7jxXviqVFVdRRqUtZpprU3k2MnHooIw2plo8xC5Kx1ik18FUyWs4Ltvr28r2Zhl/\
WFZEgwyMqaLxn5dZB5eiUhjADD2UojovSvReOK18Yj4FqTUGMKekuTXWdpjG1sP2neEMrHlFNuWEds\
nSFEUdYuUMw6R81LGU5KrwUjvNi7FSMJ5scVwrZ23yUaQCE/\
8cZRuEWfhwuCJbKjVJHWRiFaolS46MZ9w35ZgVK0FyJZ3S2WdmMMSAHq2Ec0LpYCWs5nOc0veH4zxf\
tQSTGYsxawMtZ4AJLpP2gsN+LebWSOddSTVnryw+6SJQJlXBjQfAKCmPi3ZjW9E+\
mYbHo2FcnVOdCVUxMLC6BJDjMnsmIkxDx2y5rLJAIlaZiT4yKWG9BhNubOV4NR8X7voawi1QA06whb\
nG86iLNZjFJE1hyjPyAjFDv0XwmDN8pAimgSM8aw1QMdpxAwPWnLnjovzSGqIcBwfPvAV8ApUqnhUK\
5JjmOXHLAQqVu2SqSRbzZJliSXJpKwAX0Ftr1qpDk35tDTGa7Pu48fQgkSHCxe58S07zL65IhgfliR\
uj4DF1dirAL6nEjIEb0EFZo2uO1sF3uuq9tNIBzGpJvIRcfdbbDdAxGNBQSyCmc6w6y1JgUcDIrIBG\
ALa4TQUYlR10BBMpk0lFlapNsRK4wVM9LoZeW4xv7U4yorfSGpcCFxxCBkEoIBAAgqCVibBrG2y2kh\
mfc4WxyRQqfCGgCMifhAU6cccDPy6QWkOg90OY7YZhmX5nOK2tAYI4njkTdJQJxgP95eAMkUUFl6Jt\
iCrA+K2vLjqSKWsJszea66yKER029doa8nz/3XvfEtf46sBorej5MQtS5Qqb8bAcJp328M6i+\
iThYwDnUeF1XaWBCkPBRJbclFL9cUF+YVUQWPFsNjjAlrtljjmYh2vzT+aHElhuPcw2eIyJkJwD+\
LjLDvZd4NC4Y5FrmFTmBmzLVA+yJWSBUkHDSIuOS/Ctp0uwRLfrN9I1CHIoQ+\
CMlAG4W1yGM1Ah1AQn4fAKsMRmZVMoWpiQvEyYHg/\
WAv7JkvJF5i1leNiSIekcGMbCYpIjS0xmqwNsFvNtwODglrjwOvocOEZJJAUPZcCNQTw108luJ8OoJ\
UNxxmvroImSBcW0MaZIOCBdSDNFgQewvphcC8/\
QYOu9NzIWy5mwRvAOYFtHht2WDK5qjDEITYIYOWiRhfRVCh9htS7AR2KSgK1FJ3gkzlVgpWaVcxBwo\
KnDF64jw7StDxmmzxSgmsHVgTgoLsitZTwzLBK8xZbKkk+\
VaW9tVfBEJjsNAa3yusMq1pFh1pKBRQ0CX40FTgnMABxKijBCcLgobAB4W1krQgyMPuZAqYjxKCDR0\
kfLfQdkrSPDvCWDhZfnGmGCwt2heBzaBo4E5gSIMDUCtXMw0MdMlgM6nDjYMbk7hg+\
qLXVyvyWDBOFQyRvvHWM6FOZAFsFya3LQfAlj0RX/\
8SyJrsHpValhzFokoEPhYisZboaWDLX6YDCqLEQnELGUSBBJxsISYlDQXCgsJiYxIRWIruIJn6o8OA\
V4KB1u9U+vIUPbNI1nMSMQQsimFIh0QESUEbPVqqEMwVuABTi30YGTE+\
UwE8aEZiJlVnQH9VlnGEpLBg42hWjIYCYynhdKnzncewYL1VACDL+\
PxUdlVIgZ5Br6mRRiY1gQIiTb4dbXkWHYngqJkRAIzaCOCH2gjsLwGKEE1jgF3TTEI8DgFWgq+\
CnQWUimEMzpbBTbTiVvftiSAZCA2EFUuCLAE0JsInYywaODKRsyVF9B0QtGBNEgfKYNUF3IRpQRBry\
dDG2IAp01iNmVA70ECBuHWwB9EOVZhoCe+\
8RTieA3GAVuYq4ISoGsGtS0xGg6Iq01ZNhpmwXYLqIWgwguhgSHhNhFB9zA1gpQFnARJQNClQAoItT\
zzhQgaGSIcrTwrgMm1zCLnbbX9BxmpwglgZMOdEYpBu8Jjy48piIIOFBnhBKJIV6GEsoIpynhWuBow\
nbosJPbSO09Ip1AUjglIyh3ACgj9NHFeVWTdsHhkaXFZIG3GB4C5WEYgEEwr7bzFjtt0wQzAP6BpFg\
LnwE/7T3if0pMaSdAlWAiqkqQSu0LN0kIBowiNhGZE+\
B828lQ2ypJmRENb5k9qAr8AbxTRLyqS1DwYdEh5gA6RYKLECKPACvYEKgU5xGosp0MbQaDa3qNp1YA\
ABkSQ2hTEZ8l3BpxBRwn/\
k9zgcgMpBpzIsGnE3RXFlhnMB1ZuXVkaDMYBULtPfwCuLxj4NXaIoSAN6qWiQoUiiC8YFTGMV8ZVAa\
jBICykdIhOm05DpP2OACiEH1aYwJQiClbEMI7qcAotE8pJu5jyLEIETER0IRQJYOhyOAQy3clO9aRo\
Q1R4IkCMCkkbiaLRFjBQwRNjMDmkBlZriF6D6ZXoxaASwwGtMGWwhEbbjkXsyMwCRE8NKwAEiJgitI\
BGVE75j+WCNLmgeYSoS9ivQhqVSEx2B/\
mqBLN206GNoOpgjJ2mOwMcEL0ksk7g1sKVRCXIuBEdKHgSE1MHtZL5IariPizwIQRon5KUN4tw7Vbg\
w8GCPrKSvIEjgDBjEdIAxQCfURwBcGMc7mqmJPxIJrQRURkCP0QAJhSMXzRwlLKlsT61uO2aVQQdXi\
CLJlD8ItxCEVqTFKAYsYK/\
hbIdUJJQa1FBmILHRBt2AhvxuV2DOJ2Wy0tHrcGCTIga8Bg40FVFaWIFEiYCpiCS8WwKIrOMSCg/\
4hHNSLD6EFzt5PhCKn1JkmhMrmOXCgv6hDha+\
NL9ip4uK0AhPAV0XmxRgFX4U0VaDciAJdZh2ms4TnvtK2zuuSc46UoocDmPcsCBqvBpeDUYY4WZBMu\
MmXBLBQlUqrWg1U7vB7qdh7jTttrJSgWeLxjIiqbZSLylgBUoiSFEQAuu2CzgCICSCEL6ao0xPENw4\
Bt573vtNXBlRCA/ByGkBxubq3zzAfvE+\
VhLOfwZibWGCRC42Jp2cR5nUH8DfyM6eD2a8jwRptICQQwUsqC5zIiZGfISOAzi4QLN14iDC45eA5E\
wpQoB7PgMAcL+\
mdL0Nuh1BttFqNUSCLAbSBcAIUSZB6IMFNUINRVIaRLDtNlc67SRFhDAqskogG6E0roWFZYR4a2PoA\
jgEcn4B8iXCAFQ8wP02PQTV1xXwuE8rEhu3BrYHwsyxJEthqBoc0dpHYNs3izrQ4IpqFaPmSEN6VSJ\
tPgPyURc5gESg1G4wywKdPtYbwgdwlAFSXDEPHtuP2bR8xCABKBg4jnswFhyAhjAkYCbkmR2+\
Iek2ModWswDiJm/\
D9RLnK3BRC6nQxtMlcAP6V63JlLJhrC5AvcNRgbBjpZYaVOWmMEQBcyPKwHt5EmgFYCxdx2pvlmOyW\
mGHQB4RXifwxzhGuwRggoBribZQX0XsIiS4ZPhecMJZdgrQnCYBhgFlvK0CZSCQTW6WJ5CpR0AvxgO\
KAb+NvaStlkyUEiCngOcLFoJsFqEXci6FVw6NuF/m+\
1wywDKze0hoAoBoDo4cPhCyI0UwZbgUEGFAPcDprpEHtRvIMpwnjAVQSzndN8a9yOLyw4m1UFtD0rq\
x0lAoVjiPLAuA1w0xhalhcYp9wshzShR3Sckpi+az15HRnaSC0wCAAEqANCugqnCRcOCo94B7+dd+\
BuNSvNglfJMgWVSFwXZiqDttquFMgaU/\
Gd9lQULU1u8sQAQ2hd5sxLynooUVPwWkgGcsmUAaGxsngMAnxWAYaxmPN26PCdI/\
wl0fM5TDvLII6x6JIgUgUMW6WrzQTRqiLChnfwgOakEQQkjoEoWneVRqwhw9tth6V8QnRbwVVc9PBc\
8B2YALCpCNhQiDIlSI0KRcFxQ1FkNpgw2Ai8ON502yXM325nggAOnlZwPPeg8SIHhDQsllABC3hOQB\
GCTMxB1ABOk4vEbFXHGWfRG6jFdjK0eRyiTEe5p8gUpr7h0ZzQEvRRB5iBMHCQJVueM6BLwbMoSlUW\
EL9cwbO3kuFuGyU13E/\
lgAgrTU2yyQkizAUeEWMqiG5qgaMU0jDgR2IGMYWnsEcxC6azXSbobhseQFUDMROMK633BSIMgnwWI\
nywCI9xwP9XgAcrJfqYMiXNM3w4eHXckkzebSO1zwIYROUXEmG1paqIYoFVGkytwm2BUUmLOyLqysG\
B30BRq84llkR+Yzuv+c7RjBglvCRHwA3Qy9r56o0FYQV20aoZfGmJHNE+\
twj7XDFgG1BPUpcICN0Oqt+\
Jbds0wQbKdVTvVY3ORNwcfJoiLh7BYEEm4C60ASgKD4gSFHNIRY6WudgxDmvA5DstEXLliVUvAcgeQ\
WYu4LJSJbipCCSIwE3t8QZprbfEHeBUuDNg3ohR3ZZc8p02n4UFRKGLBBeQgGiMBwg+\
FybBHXnmyCgSIkwiFBIYmiktmWQxEb8yhNpOhjaRAw7AAlIKFQFlkVC3SBGcQHATgEUBDM9SgqLQwh\
v4LOaAChfgQypIzJam+U4bJp1i2lN6B09XDS2EI4ZCmGPAmh1IYybcEs4mAFLSCRJ4BIUIkRVUA2i+\
nQx7bX2wYIsI82yJxicREe3AbZYEfw4ClSkx46OF1/Ag0mASEfoDiutSNByMazvP/\
W4bHWhFhgeWaaXXIJBSnqqAmBaw/\
YwZothbYPilBn4bSSu70FYJzC7kybYahnfbySjwtsAwxDC8wiP8MxUrAqwLbkWMoSDYA1iIgoBfC8N\
TSQwD5WoRrkK2rWS410aoAsOn5HtGoOclwsoIO8iamQItzIBDqUw1gAdSW0ybknDxxCEwG1RPsp0Mb\
YSK3IDBJcQyOlKOQTfVYh7BHwOHqVR4BYpTqQgjwHFEhEBS2xg5XD3E6kDJNdThXnsqmmKGaqsUCn4\
wkM47nQRXgAFL5RjBCKJPEgNjmQlAaqO41lSvFsx2q6v32giFKB7mBtgDh6S6HGYR58cCtAZe2KZcD\
QYLSQ2wo8BzR7D/\
DDBT0JaatpShnau2NcH5mMCIoTIVKHWtiMMmYDXl6mWOGCFv4UiApdBeHuBMiqmUPvXbJQXvtR03qB\
ooFHAKtl/gC+Eg8ZiIHWAAFYzOgaz5Jt0CD4qoAwgFVRVOIgJXSm1HJu+1STUDXw0Gg8+\
FFZUSDhXiAKJD4YiyQd4lbuYkVR9ogzmI1kBOm2yQznRVlq0jQ3u1PcECCsYcNAYhH8IqwoekXLIaN\
AkaCGOtlWXYgsPgEHKAcmkPCNUBVrydDEdy1YxqfqiyGbzVRs1BJiKMkVuflFaJOaPAu4HliWeTBQx\
FgcJEBWcP5rkdTN4PR/QBXsKEQivahUma+UwrJBHBHFg+VMQ21S8iJMNoAakw8EowiIiAxLLt7OJ+\
PKIPMUlHmAcinQARAaMcAIUAwYp5SKBvCHwIyJgPkfkEq3UQpXoBwNhShjZ7oNwLXIYAPY0BbktxX+\
EZLJwFpTpMAVhqKvlF5M2IVYDaZB6ocMZbkLntZHh0ZLkd1L3Qyh1nWkYlIm7vcQ9w+\
GhxZ2nwDqcaMVk4wBv/1LBiC89SIeR2MrSDiwy/qDHclmquPSzEqoyoC7E+\
lUklB45gHHyFDVQKFCSjtT2IR0iZoJ3bydC2C6pwQeRG/\
CgJ5TKNf4XjQHBPpZT02Li1gldlMEWQzcghYqIyKahF3U6GQVsnHdwQwBB442RB/\
FBKglUKXmM0GYw2gTxwylwCFyLFn0qCwlgYkYZ/2TLgHaQj/gI+\
wkUuBIJax3TQhVclwCvhLwzmPDgFDqeVkKQIIHaMCigdpQ6z7qpUXsN1D9rD4CQ8ckRwwyJIO+\
ABnNol7hD4WiV5dOBXDaUEV8gOzjLmJEH2KQ7nfjuYHBzJ0FJJILAG4JOgD7BThFEwiEDregmkMYM/\
ZUwLIAIxBaKMhGC3VIvwEzRjuzhv0Cb2GqEdSEzSCCFiLR5oSHBI9eM6J8bB5Wr1TgdmnSZKi7t7k1\
MWQLDUVZS0jgxt+\
iAsIn1E3CoDpmWWIHS5YZfgMc6DWhQGYNAwWchhPQuR1wA6nQKR8C2LswZteJCyVIeI06dKpcywBIX\
pgR4YwZTS4HYhUeVktJQaqxgpJgoCTcQYYJ1qy7k4Qh8k+\
WKfVawmwRgjRsTJQMW7icsIEoVIMyEohptIGiKCYihEwolKg0LYbqn7Qdtt0h4eMCIAAqJcJSrUDsz\
BgivCezKtaIuK0ZZqPzjZJ8RAyOGFFIBJnbcL9B7EY7YJNgSTN6JE66mAFjemsg+\
lIqvALQHvBbqA2M6CY2sgCWhVlFQRU7ejkw/\
aEEXuKEK3QqQiCCWE0ZHDResETNYFhlIV7VOBlw5Q2mKdgmMBSkcYa9gy8H9wdAVH0Mqxp/\
AxM4LkCHoQbQqKOEw2mupycEcvwLUrayAKkU9Q0hUtttSHtusGIMLyS8JkWwOCpHWzciclQECCLEFN\
QfIMnIZEoBszJs1DEBmolBFmtJ0MbYzCFNDGFevA8IXWME2PoXc0DJbW+\
BwUhlGuyLKqEHp6kEiEgyDeOfhatnObD44UNYM/\
kUk6S7uhcG3oXyggdUDtBHOQIPWwTlU5pXG5gzsrtNwCfM9gMdvRqAdtnNSFdrpVSdnRlBFSg1XGbB\
CDg05x2psinRehyqwQbxmEOCBciJE9wiyY8narSO+1pwJhLaLKimjewT/\
6plYOKAQOzZUPjucEzhs1aDa3FeFPoPAbcwWNBLB3DMMaInyvjVA05TVZPBFCaUS9IFXABxc0aAUmv\
1STA0i8YBpeHDab4ClqRuxDhttVpLaGCO+3+WyCCEIJxJPwmqWAHiTQCYlYNlQhAZ5eepgtR/\
ANkJJGOlA5gJnVIFpbxtzfb4NDQbwNP2QzGEMQySQBq6zgzkFY2pfmq4YqIL4RtWraBkureAFRptQg\
U2Y7HvfrbaCGM2gqqb0VtEAgAcTQBC4AGonwyVE6lPtcDAOWwShZzgF8D9whwqVtp5C/\
3sZITpvdYJK0O1UnWiEAoxa0rk7LBKJS1Sz0UwMdEApGhD7RASzgy5WEqW41DL/\
R5g4V2scJFcAbMB6FM2Mw65ongAKDj+DAKp60gJ/OAtrqM1w4DAiMl4UtUw+/\
cWSzAZQOg83AWWlbkKe9WvhXIurImNFwmQ464gGOztvK4FYxBxY4nSln3+G3f74tw+PZfLE3+\
1bZnazupos5Awm9AjJx2FekXR140sokK554k7S0z9Um2gYUYJcJbNch+\
DEOrK4DnH9q9cbHK9CIb1DNKa4SQ6Aqvyw8t6BmDGGdxk0iwnu4TFqlChoxLayACknhNXjyHYr/\
y6s3vP1JoK3k9Mbs+s5bd67vvHvrA0EZXa6vpWFdScuDqCNYSV4IyxkQpyK6C+\
DLHC4RlN4Lk62gCkqQFYMoD046V+FspAWjDtYqninHctv+9Rv7s3kZD+\
elJU0s9MAyBnAghUHJBt63lipBGeCzs5eSARgCZcIgVQiUKaOSbm6oRrFj/tla0twp0+\
lRWRCnMMlLs6IqFRUuU/lbKgpEIsDsIiJ/6ISkKogsC/\
h1AaFyHGIluM0Om3z2DB3I8lZqy8Go5gUsBDQRLDZYZTzEkrQNPFVBWz24VzJ4Djlo2yVMlDuKhzkC\
C6k7eORra8nxdrhpWoIAcqQHW+eUbQweATXIlKq0hmiTC5xbVQ20wthsYENVw8kCz2E5tP7atQ/8+\
nqCDHcm74qjc+\
PhQRFFQw5Qlpyt8x6BTqF9L5a5DKZDy7DwXoh1i8aMOE7JCmC87NLa9fTk7eHd8bvqXksWKSxQM2YJ\
vk87zXlCLEy7QageBzddFIEIH5mIAnGQRUgAR+t4lBEW3SGLXEuWe2U6+\
Wj24VG11QGGUBHvA814dVBGhsjOIPrimXZWMwOKi8i70uY5A1uimN1SfZtLjoWOlMAvrSfOpD0qoM8\
J/KbYGiOILrw6FXCCU+NvOHywe3BxyyGuYxHazcDGKrgO7Z9RqkMMvZ4Y0/\
3ZbBjGN0f77XGpKQmqIjN49ArtYQoQg6EC34saKmQjB8dL0ZCXYTzS/\
i7aZWkYOKHhHWyHryXQYJLD6Ogk8WRCgh5QipRaZARJmfUUfaKuANFrpzQztEWD1mVCMMxDexUcMu3\
B6ypy/DNrCfN+SwqBO2D84e0tAhPHlZbQhAaDQ1EAV66Cot1/iM441VyyAPZDO6ZpP0/+\
tGLsp0oB4tGaGWswCwjHgfPO0m5tbWBGiFIQFgYeQfuDtYw5ilYIcTKIsGcImGh92HcY0HpA+\
xvjQVtldXWmctpoaHQ2uTqqd8seXIOsuoLxIGYplFCALAIOwRNFD9R3wGLQNp0UcjqTVMZHVMMmDG2\
z4RTkA6Qgx6KBskFXcnXGOueVkVTgRsyLcj1GIlhAGOHBVzrg/lefKcVb7+1MP9ibTvI+yPUHHw/\
njz5IC5o0axOFFLIHYnhdKIOgKg2/tTUhgmYFgXKireyUnXdU/ScRWBiFlyxiBZF0B0t+\
NlF48Gg42Z+W0D1KtPAGplbgcjITPEZOhR4adKpI6oaQBebORxcYJkoajjgDswV88RkDxjoSXb/\
4TGl+fZLLMYZg4X1j1hHhcfKaigeMTTGBS+\
WEt4CoFGpDhwpVhYEu0DYTypNWBUm79r49fapuDWulHohgz01fOOqF8kl4SP0PPnj0Ibv2w72HTwyq\
FiA/wpaoS/\
DgU0wIRJSpUk8bWVQFeVasIqLQVGwdiqZqe1GpupjzrgT9zpZyiWvuA270d1riAUrgGqQUIWsvQWwL\
wY3QDEovBaLOCMunVi5gf9xzhDsYOsB0s2lGpQ47e7rDPC7e2wGOYW/\
8RByAGgitA49jVLHrqerAUU4dhlgRC/\
ISwEE9VTNJ0JrAwNYxXJxJFXXsqlP6sxuIc3cynqTRcDxMHzxio9Y4eQK7DLuCl6TtuyCAnjZZIvSO\
ArIhYFWgNAhdofJWV4JsFcHJoHkyqo7E2a9tKdiHr4mWZMwqcIoUhU4iIRxgUCXLIlAK9y4p1iI4Bz\
nDa6VIQ0GOByPSVJQHCt1B0/+\
1DSR7MB126z2iKTJyxAhGw32ChTnrEMrkQrvAkysejAhEUXLbbGYgfaetLfA5gboZfG5i8ZZYkeoXH\
PVJkInWAcGFc0wKFknV4bSWSntVC7kdBcCHQ1EIB+HnE17QXb2dniHWW3fuvDe4fT1DvP1Z+\
WBI7Qv5AaK3mk3Ay4jssg7BQzb4W6AUgszIQEzAd6hpDa0oY26ronQM9MsjWoQPYIH2lx4Xy28mlvh\
gVub7ey2hNITIwAXEwVRR7wWi4UJVPxIkMSvtrQGsSXI6MFlD/\
UHAKVPRIlJE0gGpTyf2t94a7Lw3uF7hZoZl+kHGB9oLOlRqEhij+\
hiLuJgh5ABq0rQZxGEGfAxoBSpkKSHleNGYwQTnGGWBM9rIEy9lOeb0PtCf6E/\
4tdl8uv8E3vGwtIQVhOKK1hAwg7T1AKqN+AxjpUHZDBgTuUGnqbOTpCw3a8A/\
dFjflafKdTxxwYuHAmDUFS2nUFa2UuWvMFTD660zHBGOMlZUquFT1oPwA8zBrR20vqtw60+\
s3v2N6WR/b/B4N05G90tueiWupGks4qxCfbMCmGqRlDmXCh4+0sY0GBR32psQJcycWqJoxOcuSep/\
IE0IsUM9/ujqzRFSDSd5mJqOQqtNjrSFP0WQi+\
sxbnFxgTjKGAR0ivlqCktWUMkKlaylkogo47mpKMcIWTpcxM+\
2bjsZjufNg89WbhqomYmjOyCKi5QlZjxQvtHkGChRDKeEGJMB3zJFwTkoQC84KxypCl3rBa2bUnvnc\
uymsCUPzoAIGvgp4ZThZ8j0SxKU/\
cAAFAClgcrxDEfoBEIHYamgFwSdd20zubp60wfTMJ7VyXS3ad10N8ynw1RW7w/mZCn/KhGeigK+\
y3Qx1KxIFlDxqDOjgoOM+\
Q1agrAmCBg40B0e0bDckWNoTfB7M0D13TKjX7PWBFOnBm0qzWTJSojKaf8fY5hQyhlQ1V0GH4dAmVP\
HC9MkXkQGAXayw9Vead+2TI8mIH+kycdXl3c/\
br4Brk5QNiIVBcyi8jJDPQsQeHM4SpYkoi7BU2r6IVKUU6kfVs2OA2y7LOggyDlovDy7fmM+L+\
P9RcvgCbzdMA3LeL7a0hIRJeDT4YGJH3PEfNQ9JiHsyq5S+RDD40tAa+\
XwPQauu7IEY0omAdW6uob9sWNS3JyGhw9vjB/\
CklfuTIWdntLZxNMjL5KKIgTshop0IJJGvAemBeSsEBHYWRXcjYwINR1V4j5dwZ/ceQf/\
A8BO81uT3TAcz1bvjzClydDB44dCtlZpMyVQjeqmLFUYObDcQP2cqH9DLgl2BQ9IW5Fr5R1ZxSvH77\
/UsjKeDeePV+9eUyLOmqnxA208MLSGYZuVBCfw1AFTDvph4VMbvkQJYScoBQsXw7s07U8/7e7URnd/\
FN4bD+etAbBVeYb4R8RIzfJSMCrR9ucYNeLJCEYSC2zfe+rWEQqsjWreLNwN7TFSHXmYP/\
40Ee6NJi2tizXRLjXBA4gOhl+AKgYq6ywkiHZRwcQFOCLArgShJcJK4bWk6n3w7I4VjuO3vhWmHw/\
H7w/z/NHqrRW8IIIYTKcxhbYbJ9q7Re1RJPxGpKIhm2gXBrVlQ8CRMBFUPQeSg1i7a///\
cbW7NZzB1OeDRvXAIlbvDw5OPVdiogzGYus77bAviBOAsDFFzxhtXhOAGwTUopAHsDlYbUz0XYvwxw\
1uoe1HB71EcFgQOR/AHGn7QVDeM6qtFArxlZM6gN/BVXJqT6PhTWmbtSF+\
EXRn76bjCn97cfZNx3PjGRnoEkIPzkEmQUpgW5SI9VQHAnEw0bXAmUrwKWlhldQ7iknSCCIsT2crK3\
f/ZC+M81LnWrZOLpS6QjFAai5Ka0spFNoGBQVXlANtekbyVCwxiwIZwS8ojAPRtB2D/qe6bo45X/\
Urrc7BwtoKLxUZlxpQa2IVRBMRR0M2cJbijaFCA5+joxoRRRW3YFVUVyk6wP641t3+ZD5c/\
P12GT9saz2VAwtFTRgrGDEYIkDURWm4EFaFxMgDxEjBmAJlM1RzUkrVilblYf4dIcbxAbgzHOd7w0/\
KaGdES0rTFtgU2uTkigiIngMZIGJoOJ0ANgHkM1SpWQWousFw431nqcybU+\
cLQZWsHcTtF44J8EaZU4/\
BnclkmofjMC8tCXxhQUiyYsEx3BhhKRwxZeVFoHawYG0I3iO171QiJ1aqlVFSio9wqQPvrz1NguNdD\
luS0C5qhKIKsZMw2iNqz0KwVFXSiA8qp0bDCGmUSw5+ttJqT6kS3oD6SmGq1lEGSLJUxbuFuN3q/\
V1WzheQCupoAMJGa0m0BS1L472vCDcBuQLBivEhwC0G6qzGvQUZoaamHT7/OPri/\
rdHhdqQtx4dbAbRD7CW9oV7jL9GFA7r54W21hcEvSImUSnpQ31RqGUwQhZpCkandHaA/lbXrd/\
G6IPP3gt04MBRVayBWgO6iHGl8gojFUs5gu9KAc5nab82lTwgRkuJut0KC6rgqbdzpaY0Hc7ncrcM+\
2VnFGZt0iFYUIBBaikpm2FFfECZy0B7DWjCab+oZ9Tpk5r3VUC+bkqAvE6+qxVxpxI+Ub/WYn/\
LIOm54IkQOvLoFMUa1NKRemDB48HJUhkYCH/UgtotUhddhDfUvS6wEn2HQf7JTkke72IGpo+\
PASLsCiYnnAzgNRTceGpmAlUHHkUGKmpoQ3mpVHgE9m1lEPBMiPgMDDV0TMIvPuv27+\
6VaTg2BgoMIGvtQO+\
pfFjHCjYGLyio92uzXxNSMQcpjIF1INIFWRBND3hDqdt1UPGt3We4BXhfuHZD/YVKSkR8oQSZ+\
n7iETOjHbQKHggAYUSFFgAcJDgw7QtMHq5sHTLQnJux86ikD1t3VvB5RgJpZQLgJNrbIxngl3uAUWD\
UOwzBvYBDAggpanICF+\
WpkTG0pavk6DgeL07mG4VxmC6PMFqVQEhaQaJNK87AO9GSQYUK1mbDGUg4qCY4F4IQ6rYOpsJhO6mp\
GKTGhl1dgY+\
b4d0yfVg6uL92msA0BWqiUy2mFgYempSbVNSrTCtXoQEYEUE78mIGaaKYgILOzh2xpvveB/p3+\
7f2hx+FEeDwfqmjDnPMkuFHS2g98CEoKpUXSSAUBE9EPEBVqzCAFIHbdPQA5kE1/\
VkY1aL5Z9QdrUg0HI3K9J3lwQwPJnQMQssc4AAlFeUiqgYRowJRF6k6k0W4Kih8gZEwDdvglMyizaB\
gyrRr0kTqQbBORHpUhsWxUi2IRDwPGEYU7hUVJWdanAdjppq0VCP4iSIGQwpaEUJaAgsEkYANQCm4y\
zojcb+k4d50ksKoSRkftw74ZVrwFSZqrapAfFZBAzll+6CemCvatJ41p6g/\
G1spOqKO5JiQFPwzOiF3ydAkgAZDCtLorRZvC1VTQQdV1GeMQ7YiUnbHQy+\
pkjwhVMJ0iFgoegBUY6JAWylRC6LdVZx4nLM/\
0cijCiFADzDlVEACB2QhCKgri4zCMbCCkrRGvGio12OlAxMqo/0GkA/QVGVX593jIH2/0Fkj+\
fCFN6Zhr0VdEXUW4KEwljr70r6/oMALEZ2Y7D3VksAiitB0CoJVHv6D9otCd6iVQOqai+Ns6T6dS/\
UUjCYckiZTuwYbgAyJ9JO2fME1wxkoDvkYB4pXaiYJ4KAen/Ck+ELgWXawteOOEvcf/\
nbpjJukpBahUgOpwNQIr2kNDkEMKAMiCcpJFTw2bSFPhBg1wFuCvUqqcFmTti51r6wspdxrCERLFxm\
sSzvEY0ApSvTTKR4UwgHEKf1LiWCdLHXDB82nNSZWwGcC7dKtYI1rcbfDIVjQ5kX6d3U0SqWNO6Akh\
Vp6ejBZRrvWcT/KTGn8omZMFvaAyAqxS4YKeNoQ44FtrgMcjk/\
GERnaOSNouKJlI26UldQhHg6btmSDNMqSAaC1JkurSxGfzdYxRQ5MItiABXX46+vHb3/MZRyc/\
tbO3ghbm+ZwEYETp4ZbiirnSw7Sc9BpapRE/dvBshBiWToiJECR4U+\
hFfB1T68CeJYoK97ruy3XoRNcFbXlBmmA+\
YPfUvkqzBXMDRNCZRK0TVkW2miiYTJGJQXCpcG0TdfWI76ZNC1qy6rhtFOakg0KjLJ63Eh74lclaiI\
c1BOExcyBZIr2pTFQP+\
Z4paqeZ2zsXxVmPH8Eq511W22Gb4KFmiia7qZgNhH0wkrnI8dYKQuSJRwMOFWCEEYMnMPlMkbbI7ra\
fhxnlovTkOjguRtxhtFoTYgW1qpsswIGFaqVp2ZEEdiJqA7ewnNpPSg9bFQi4JO0gNAsaHtJwnS1HD\
0uAHnvMM5hmgcF8VbbjadEZIUm2QejqYGBpgo8Kq8Cn/eJO2+pPRBtEKTqK+KWIVjqFGwV/\
PnTFzVXBDhYxFgE3beGM7DN1ESdTwn96IgSUYuH56aGWBThJ0tbUTAUPNsAE0oClNcmWl8ocPEIQgM\
wLldqALEOw6E8604ZjdorLC3TNYFCTyVjVfgjWsGoWFPAxyMSiqB+IDR0pkKAf6NVmMrpWAr4E+\
2T5B1D88pSiuYYsJbzTOCPVLyeMhS8Upd0C5pQBWJMsArwaOozGgGaiAIRcnAglgOfQpwjWSdKXL81\
Sc3xYs1jXb89fjgazh5df2N/mMvs+vI8rnc/KtOPhuXja+P4xH24rIg9UH8TMPsUQVFiE/\
FaLWEOVHOIWDi4qMkEjKJdYom6vFObkNjx1He6RQEqlGkZU/\
hP1QCLJcynroWsSJhiAiQEL1Vl0NFEs0BbjGEjYOJgFXDx1MdHR6gPiCFvOvkIRt2LC+bouIS/\
spGEK+skK1IhSqcjL+hUMU+\
9Ubiu2SEc5iHSMTxa0QlkgopSajZUiZspVZDAxTJ0uqsd5bc3kurYGsqKbAgDqDATWoTY3XM6eycgO\
KFTgIRmlMFxAQqoWMnAFovJ9cF6MFkDsEmlgxL82maytddXViXjmE0fwZQE5RJdMg5xoygIYynUxa8\
oNdiJ58kpTf3IkhB0II6FWpau8oWdbSRrrb2sGgP0m+\
pzuJc10G44ajsDXSoOPDJL0WSknIbpOipfXjSjLo52vPCQRFeBzDbiNUsEK2KZGGuBQIhEm56GElEm\
xkbS1kjEwybRGVAB/\
rvKTP2qPe2pZibQoV4p2A7PuZlYq2s2K2IFquA2tF0uq8xZ0Aj0suNUgAB0BtdAPBCpGU3CzDabtqg\
tai48WSqd7UgVbGYCx9ZzVmSLmTL7iJMUCB4drgDsAjgE8KxEyTyqztCV+\
igLxWuzAd8LxM8mSdoW3jGTm4HGylrPKpQF46g/I3Us4gjRPWhzStr5BCoGAVyQBrgKskFsw0va+\
ofZzXiFILhD/TczzCPrQKsqRgf6WBN9hXIlsJLQxM9wSZaSzoZq+\
yoLhs5x0ZQFN8ANzDVTDnjXtVf/\
z24mWWuNaBVnqXVHhbrTGVFwtVkwTqt04IsIaEAXJOUiQKU8wNU1NfyKdsjARWsBz3FcsBubCnYkUb\
hqAQ7YaiyCGNs0BKed3eCMGSGQRBgK5Gd0xgViMUhXgF8ONCpTw8NknRQdfnwzCzi2trQiGzBB8cJD\
5VSFQjvUSMcR9VkCiywUhKV+\
jDbyKHhzXk2icnbqs4UAtaM7y2YDd3zdqYVoRHAYRiYYBm5IRUOGmhSDnDoVUvYyI6hWiNg9HatFvb\
Y9HYmAKCl2tue8uZFwHWtSq14KKke9M2LhdLISMMIhMKkYO4noHliBcFoWBCVU8A7XQC2fVBRNUVBU\
Xc11/tw20nWtV62Ciae2gUUi2KZSN51kBbZQo0THWBDwnZQEoJ0LKSraOUz9HRzAJ0AFfFdf8M2U79\
ha1ir8SqEs51TaLl0OlMvHZEshqdWroc4snCMK9qVwViW1/\
UdcSMUlhtMRcB0juJnHWl3nWhELWALvmDhnBpomqFF81fCeGrgPKglSq2ukU5mqoY34UmTq4xxkVdS\
qWHbg761NxTq+BrYiXzGx0LYOV60O1KcUEXKh9W4qFwZewFDpoEIHdHG0E0gBj7Oks0/\
BooLtyCr96ubyHayPrcjlqfM9HFOs1FfZZg6ORM05JbVroOxGxmhZWTk1XAYPouZ8QnJ4EsCe7ep7v\
rFBPG3tbFXpBC86MTJHhLLQcyFBASo1uA0kbeCF3IWhAjZH6zY1iQiQDNFUcifHpXx9YylX19VWRNO\
cNvBAEFCM5EWgVGCJFiBIp8IGTgdmUj0TB22hHj2SuognRSZTM1jecdFubyvayppbC0xAKTXCagRZD\
PjAchSMupIm2Gu21VN0DDwxCpExXCsr1NMZH6Y1cLDkz+otjq/\
HreKxlcUkSgxRsWFJuKGjhu9UBM0CzKEghqF+51bYRD3PrcHn4OIctRIJHfuwNiNzK2t1q86/ROEN+\
U1ZRaLFBgaGmRC5NDG9pu0R2VGwQ2tHiSmb6BBACc9Gm206lik382Ed63iroYxoiuMr0J+yS+\
BDCLw410xFYIliUlJlro5FaU+HeVgwPerRRK3CrXMdCLwZlLTW+FY9v1fUmE6B2jJqLsyMzIza/\
cRAZ5kA6jydRMYjdQ2MCtQgW9rIAYSGG+nag3B/\
c7menbNclTYgXqH1PzgNWaIhAOaJepeBIUemOZwHB7tCuFNthj+G4SLojmS1+\
FIHidrMYXSuDa7IRwdBcHATOvmBGiaFZALIC5Wn0B6qoOHaFIAlKDo8pig63q2AP0XriXt1APNm2Zu\
nrBuu8ndP1Vs60oqokdRDhtpkADhosSSJ5nw2RLHJ0r69EjMdpp1jSbSgmxTvmO/\
NRrBzTXFFPm6kx3Ah3KnUvpLKKOCzqKFKoSaatNQsqFE+\
jwV4gti1FAXmRYXPHjDegcxvbSnf0fXGVfdBbVhpRbdUwAwm3VATL6Mpv19g5hEcBX5NCzoDgir6gq\
bcRKDWJVZ0HiK8oZCttchVRsWp+DwQ9HKbQdcdkSYwU0xxNnSQG6dThmthiCNB+AIH+\
sUQK0N0y0rH9G7m2LrXKVeHDjCHyJ95nr2hZl85a2IIYPUWVMYxTwc5ceqb4HTMJB0PXArOwFxd14F\
Km7HkY2uYq7pHPI+Bo8As4WuNDNQOXkjaVA1ukunoK8T/thhfoZAZxJ0FTyegy8hi7WDwmxGWo+\
ubq8NGrb8Y9QgEdWHUeAPWWWTSKdIxaIyq6xFzSzrRBWwFRMViGEFX6fwq+\
dkZ3zPWPlekVFQPrCyiQ8moYprTGUW20PFoDPOZgXuKDsLEk9BRYilnFTU11Bd0GmdXZ5rNBvDomuT\
qAFI7Q0kbMzyVR4OyKPg3OgRWpUTnY0hQBi5NovNqKeKmLSQS9osgBLFSh95thnudS7atrLpSWlIPP\
EV9rTjtK6GyaloYpcMnQ4ASUh+qSCvHMG9EZ5yaDuuMSKgrr/\
KdzeR7xnrqakRUWWJ0cAMC7GioFq2A2hcHcQmKk6VTbjPgpRIFhEZqhHWIdS2FUiF04Mvdzyjm05gC\
E9QROjHarqhAopSxsBvqcqlk0DVoyEgdHuhoB0+\
QU7SNIsCzgEu4Dqbwzucn6HfbHtlB8ajESnGmFB20STVkgTp6E5fhnLpZJ6r2LE3fYqua8lfE6EbUr\
mMwN8vBd63Rrto0AjVqKyxihloqSm+AGoLMqER1sAmGRCaC4CNrn0GkC1OMM4a4r2bZtQFks0jk+\
PrtqjoyEYisIPZIgiEyA4vRzkUvEuJjUQ3VRWkMl9RWSOrM46mDCDQhIJLravGymXDH13ZXR46OBW8\
2CVDOlilEt1T3kxHfaowd/HI1tNanc3WUSwDL5rSS5lSxDt7vuHDvbSbcWuu+\
LVqTqYBVVAS61KknIziBd7OmwB8XCbav4VdoUykCPmkwmlbA2hGmSmed6TDuzdjrU9aEV2M8HhEaCe\
+CssBogCNsokrGvaJicJcyzTtcstUGfD8Xnm1zWCCdwe5Vh1VvFkVdfQpzkIIyMJIOzLG0eBzgoBFZ\
UmlmYU5qIEw2lDxCjFqKgBsv1EYxaYx1ZV1Gspl3udq1DXWV2WgwrAgmI+BEqDaU1+\
pZ068QxLVQbx9htKVDj7mGyEZTu1uKP2U2rKs6bMNxO0xjtTO7SYdEuaAkqbsDeGigXgt0xieGzCSj\
QhUImqB/BhMZ6Ag16KPyLjNNzf4+\
aybhalMKACbT4qh01HGS0RIXrTFFWobJtKkgw6vZQGuOkCrTgiMUH4ZAHSkYtTGgKc0do7XZ4stCqu\
/BOo+ovwF1dpYaQysLdPMYqJyAyFTr6TUsQVO7YtrlHekcEFd8MIJWP0AT4fk+\
80Ly1faG49XVDfgCqA9th4UXYC47TtVDQA6qjAVfdbKGoGkbTQSVyRYkh9P5PYgBHJTyMyvY6p7kVc\
Pk1KOAlmih/\
oF2atCJqInKU0uhE8BS4kl7tWhxCj9raBcz7XuhTshdR4dsKNfqtuXV3KjO1BNMU1N2GBpkwrDgn8F\
QMztwYTpC1EeFvzmQDspORwpQN0OtnOwyyDc2k+\
spO5tXM1ZwkdQdoDJnXKIG5TYw8GMgRaEMpENw5pVTkFdLuI0K4PV0bnqgY8J5V/\
V3t4gP9kGIh4GKT/b2Ro+\
blHInyiJSqMpgrIykXkuRtFuopEDkwOkF7TuOFvNLPbxNYikG16R2y4Kcdgya+\
jSJbobZMO1Mdvf258eTtA5hhEAMI1PGg9PDM8Q21JIZ2p4BW2AdVE5RqSA8IMrgJgMp6Og9Q01r11a\
uJ/KsivLu+CncV5vU0Ek4JYQTUJ1KW3JlJhKsMTh0YGtz5kNS8KbNjjtmMw8sMjqqpiPW+\
VS5lhUcs7fGy7kbTR5S6N+qNgnN4cw6QY84/\
KCvVL6FUIa5wrI3MSbrOEzSyyRoExcvDrGXb8pioWcd82c/\
Ta5FHvsZKsWdSRnOBoEXIjATqEMi9Fs2zWp4JDBQWoF2cGAbJFTGcYloDFZgee3AB/9pIn13f5g+\
bArBHkx2JuN8PMiC481cCjrayuhALUQV+\
D74oaRD6GX1dCiUpQwPgB1BgKYemE0fIO1S7MrRvfZpQh3CRDvag94aqDj1pPBJF9Bonh35YkW9dLS\
IdNpHFIhDqRimCjryqXIuKClhugp5P3XCDuKmnTBKy8xbG9ADVUVoXQLlE8CxCvWeo9g5WDppA35Iw\
CwlFVbRgitGJWoPpxyihOQdjP/\
ep4n04FG5MZtN0rD5wGGQ9G5tqzoY9hHlSk57JiGdRZhJowdPXYyNmk7VbGyzwvlRihgRE52Pmqm2x\
LJE+Sd4o7XZzRNZ35tB1yHw/WUK+\
N29YyNInbN4osNYoE7UEiUGSQ1yAhWQgOxzoSudXeIzGSOU3YM7IiIpOSRuJX9t8PUbeOaPm+\
KVjNvNzj2Y7pfXBi+/Bf4OKQaPwl6pz8/+\
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\
LSTTdC19V04WNMqaKxn+\
eTpNz1BUADjgjDpaiUgNbOuvHaeok6lOQWsMB50Tn8xlrT2Dq6sKpNt2t3e53hrNZGZ1E2734VbVd5\
Wj3lSUKHDUdgsXgZpWPOpaSXBWejgGm7T9SMJ5scVwrZ6l5jEgliRNImS/2truN7Q7CLHw4PIm2+\
8JX1XZTqUnqIBOrCG1lofMnc6Szi2JWrATqe+KUzj4zAxcdEAAr4ZxQOtim8/4JnsrTaLtbU+b3h+\
M8P4mme+mrarrMZMbobEjjhGVRUut97elASkbnPhjpvCuJToxVFp90kc42qYIbn2C/\
Up7kqTyNpntjW9P9ZBoej4bxJBrvi19V41V0GKBl1G1Zl0TnusvsGbgwHZHSHDUtCyyWVUZ9qZiUMX\
oDQm1s5dRe7CRP5Wk03utrGO9iVehuGJ/IFaGXvqqmSgcWRl2sAUumk6bp/G+\
qoopZ5EStd4SgU28F04KFpis+dRSjLlBRas7cSZ7K02iqv7SGqZ7cxZ+\
Xv6pmWj3zNiknjKjUQS9TEz+eE7c8RVnphK9qkgUPtkyxJLmk07xiUabWrNUJjGRfPtVm+\
mtrmGmz6WC83JLcdO6b7XxLTvMvnkTL/\
dpX1XLhKHnixijupM5OBZeDSsyYHLUOis63zNE6J6ur3ksrHc+\
mlsRLyNVnfZKn8jRa7joO9uQu83z9q2qmOjlBR985Vp2ls7GiyAhVBSJSXTS3qYgS6RxaIsoyGTr8u\
mpTrCwVBl5P8lSeRjPVa5vpt3YneViH5WT61Ve+\
qgZbnLOBDkVhhdPpWCloZWKw0gabrWTG51wNszKFSq2mk/BVJWE1nXPIAz/\
JU3kaDVatYbDvhzDbDcMy/c5wWk+\
mg331q2qvMFfPHLWrl6m4GLPg1P2WRRVt1DZEFbgw1lcXHdls1pLh85rTUfDU7fwET+\
VptNfX1rDX779771viGj+RjvUbX1VD1VqR/\
wTLlYpOq85esMAk9Ty2WlSfpJfwrCUqvK6rNKZWBLgiS25Kqf4kT+VpNNRfWDXU1qGv16kbbabm1/\
NP5idvWn/iq2qhllsvBKgvfKqQnA664C67lGSxiFUdi1xXvMKNtsxUX7QXsiCoRYRLUexJnsrTaKHf\
erqFLqsfrt9I12CoJ29if/\
KraqOBMwpGZebF5ayYCqEmoaXDK0wLS8cBhqKFCXQsBuivp8MnKh1L4YvMJ9BGf7K30U+x0Ycn00a/\
+VW1UTrHj8GXWgSZkSUms6UTfRXiTSMEHS3HBR1YlgOHlxVJsSBMxct0lpRO9iRP5VfLRs8tJ/\
r5z6MFHf7x0mB/r0xnaTrcmw++Lqy4PMfFRpd/7y/+F5cHz9WD5nTrfLJvW9e3rVvDxL8QUOhuW/\
f8jzOOdbetexZwbYc9l6hj3IFRt77SMth7zc///PrxP3ZeOLzWSzsw9vLJ/G4Z79fzT65C/\
24g7ucHjyYfX+aX706m5fJ9/Bnmlx88Gs4uN33u8KxfW7CJ25+UtD8neFtvdkL+\
4f5s3pw6MoN1LqCyt7jPSxkH5zBXM9zphTv747R0LWLTmbn5mJR6MJrM6XydunqgyqEGfY1U5fZHYb\
Qf5pNp2wE+UaM/1qiRPlSjWa9Hp1WPzm+oR7NLoBPN6UTTDpXil++Uj8u0h6bTrFJ/+\
Fmg6Y8voelQj3psOrWK9K82VaRDTrZWe9/mo0/tGfyb/85//S+/9Zt/\
8Prs5YOIka7QRftWzj46zuLOzC4uD5PC+z9BLYLpVrc/2ZuWGZ3mPXPrDXR6cs0H0+\
HDh4DfC7Pz7z8aJjqG4eJ741nYLd9dc8CvjsJs/u5y6r4QNv7keKrzg0bQrR979qvrP+LO8W/\
rrb69aMDfPYN1eSzYZ5NrezVY3n67B6MJuYmJ/fAwXtrscg9HkxhGgzSdjEYApkNz+xFCH93j/\
eH8Ub3UlnhNJcbz0/l5V9f8/NWDLxzcZj0LO/\
gWffjqJlZ58KXNbjecvV1CXfRjvzr7lc1u99bKlze77aPmO4tTBptzAW80WacLd8M8PdoIjFYe++\
Ubo+X2hI9afebbR2Ks7VxWZfzuppO+cWprMXrX13N7o9GTodvwKz9mTzJ+\
vPGTHHzli3oSuda3ZqtHaVIyfD1cTotjXVvncG6KL2c2fLDVs0A3/u7RM0M3wtBH4aNCy1XEK8++\
M5k3pC8MR/vT8t2188hUHjIr8+\
WZy3S5LSd2PTIynB0cQHgoNVzfnWkpmytgc6IhrSj8uclwfLhgcrZJo+N/\
350u77DlcG5sdJsPwewi7vOIzsxdib0wIC8uzrOl5xqcbyKx+sITlnn+9m/th9E2HnCRd10sgGx/\
kRVfcBZ/fraLtbzJ4MLiX8uDlp47HmXSooXZYNFi5ejdPsj8EpcuNqWFgwvTsrtcvf/UtAUZ/\
LnPYvDrekua69u7e/\
PHP2pvuQWaLmjfxpxnG4q5Fmzhs6WHrR62ThdsnQ05b5q9X8BXY72bA9dmQV5LiY8FeW2lfnJU9BbB\
74Yc6kkIdq5F41ZSatsEDoNLN2apjPMRqBqcI9rdbaXrCbysiMBVevP88oxtZXY/\
3eRWfNbnoVkv3iqdqvXy/\
fJRmc7K5V7FvgoqtjrNX7SOzc69M2lq4Z5o1wVcr9erk69Xy6ldX6NWGcPBIk5XZdLP7Uz2Hl/\
GKA1JhS7PJ5d3RsO9OAnTfFxpzqzJSeeTnf3ptIznB9ddU3MSZKHbrxvEbUx/Vp/8p5snp9c/\
5anXzVgfPvUWSbHPfYA6FaE18fegW+XJzA/Hl98pH1/eKaOOtfrtJ369GUq4ayPPFzPzi0dvpv6Zj/\
2FzPznPkJPvMrhYjkVI98Ju8PR48Erg8n+NIFuhPHs8r3p5EkxNn2IirF3vt7+4vtl+PDRfHb+\
3igMx08+fmv40ZCOEW4v8r94Zwr/tVhgb63L/z//N/38L0/\
O8n1hsBcSKehheeZzOyv104elAIsSgK4F/LNHFvB/FI/\
5ytvDcbk5LeFDWrscjpc1qN1FA88drSh4Z383Ug/M6Yezo1/8OqVpac6aZ1l5u0mOr6dDw0US/\
ruHy9wrNQvrae6szPf3vjcsHzc5p40cNtxJ96r6oiq9ieY2e4wmOp3k/VZJ7gbDMd/\
do5evzi5epWWNpnR+s68fpPPX8+\
fLpZBt1kDOPqsiYbOnXXLHlbWcDZ93zTos4BvMffFePbM2fVx8jd7p6ePnRx831OhVo9xOUxaqtlTQ\
zRVmUws+985+41S2AcMFkv5IS1mOm9w2NjT7qZUvwRtOZ2X5xssrb7w5+\
JlvEdJcHk8ujybjh2V6mQADnvEXt7lre3PR7OsPpoH2Ew0e78bJ6IsqBGqJ8JNLp7WA/u+\
B0JTZiivdYIH76nyydzNMm1scusIza7rC3fBhachLxiVwgV9Y+dbyowPw7/KDwX488JgRc7aZ0+\
y3UH2ZuPlp2n9mM+1fzulGqHg1TuYg6gdqutxXeGF2YaF7bRJ38X7ZG4VU1gy/\
dptNjof7IK9ePVrjWp//sd34tYT856iuMYw/bBbvWtsgf4z3rGGi7jWdjsazP7P2uvDVw2dd/\
f56wu4dLsl0XWOb5ZfD61zoZKYI5d4ap2lpArLPXPO66Vr4JoO6USFkq4Zx47Ff3uozlG1uNVWbP+\
EXWjK+buhJ/rYZ+ik41CZTvGaN88H1b48WWnsU+xd4c2Z2gfIQZbrz4lHAOTSJp3/\
mqQ5kW7zuSKMcSf22druuJExebr5x/PWVRMrZB5MnmcPj2/\
1XUkg7r3TkS9ZNAnY91TeWPu39adjbK9Obk0+o/GP54uJfFx9M8Aeo36XZT99aRNY/WP5ucizj+\
c7zB1INzi1LL881Srqpu15eY0m2N7rGkqscXON8w9AOL7JxJeRSku9RDf6Gknx0WFW/\
uMabW1zjUfsaFx40/\
PnwKpuz7sV1Lt084DiHl9qKHC2u9sIKfJ37wgo5XsbMjnOY5juT6e66UdOPhqkf6lyD+\
9sa4XMHTTBW+2S0n2pZ1Dv87YO3NyjUbe8aenFnWvDqe+\
9h1jYL945lec8ceevpGdnWbV6lldSPSv5emA6boxIOsXlzXbhwCzR88vhQhFdvlRr2R/\
NDIQcHnzgz+5kD7Gp6bYBAzQ9A7MwTdB+UUUnzRqwjaeEXbudh5xs/\
sfgOPfMSDmfL8rGXBvu7u2H6uCmqe9I+4cL9yceErE+y5BcehIcLrH3pQdlFYDEvi38u+\
ov80Su3JmmfPEUz/Tf3h6N8v8zwnLMrg3NXfuXylcGLuOby2Qc/tXLblSY7Z//gd//eyr2OyTE486/\
X87NvHI7O4l6tT547KvHg4mA/IQqaHT4rcaHBmT+\
Pi77aUqeV5zlQ36833A4TgtgddnAk0f7Ng3fLboQ9L8vsz9/H9R8fHagzh+\
unr1DTmcWETKbtey5ma3mT87OLpFvtLx/8vkgXobcuQN33gXvLYWi7xZ+7c/\
tAJe9MMfG3xzQpzeLG4NKd2zeH892wNxu8uhwYfOldPOeiqU3LuBe3WNnk2Tk6BysJS0V90jHnCA1Z\
MdBjtvvMPZ4X7pb5o0kevHhvWjC2VEjWwVUOEfXCTiFNOfjdRV9aWzWPMhkKsR8Md8ts0cTouZe/\
ffgK5dmW63YNCg2+1vTsCXtvNitB9Ll7k4+bEPKbN+JsMtqfl9XPz752NzwcD+\
swNTq884eY7hcaFrZQ9xea4SH1PX/l9/7O37qCC15aFmt8VFpNRv5I8/OPX5/+ZPPz+69Pv9/8/\
JPXd372CcGjYtm9d8dvjQFLx1aTlphwL2QqPTn69jPo5CptXFXj1RW5Y6tznbJceKLszx+\
i0NZodOnKXRg85nhr7Bm81ga0y5EQ7XJCdDsqQP3LswWoVMQBj69d+\
dxw9KUrD6gjFOnY9rh5tn3tJSQOXuRWXfPSe/GDwdkrwOWLs4I4O88wXoPFX1cGL3x3P4znw/kTh/\
Xi4DEG4ROiMrOzQMr2sx66teX0HbPCQyp2cVm3vDI8K9u0n3DR5Zby9mc6wOBFegkIhek4qrKvLIU5\
2iLs02U5fp/1BTq469G16U+962pssu7NnrEX/\
Zu0Oryojt95FKhlF620H117ftbyMpwG4ABoM6QEzqIJ0mKWm0s3+\
nB06fkLUYNWFPpjpwCvHnQaOKhgOcS/MysEbuElvxTvvjOazLb27kfdQu/ee/e+hXt/\
qXfvJ8i9f4Zn/caVu+GT4e7+LnXh+2xP3BkIHhfpKQNzyV9TRnBmPtu4nPnlwb955sr194Cgs+uz+\
TCMr9+i6jTA4/T6velk9sPyIWDo+t3w/WmmF34Ic748LXvkDCbTx8s3Wnp3/\
fb44Wg4e3T9fqkF6JHKPaj17PoyN3QdpjubT/fT/BYgC1Z4bRyvDM78zuc2R69egZyk6CU3vRI/\
zyk6+wd/+W+tvPxXnirmYPqjGtU39ocZo7nMzrz7UZl+NCwfN4N49g/+9t/\
vcwl9LqEnG19lsvE55BJeuHKjUdTtucbFK0069PNjEReu/\
EgIxCV2zXEvvO7TA316oE8P9OmBPj3Qe+wv2mOfbdtR77G/aI/9GZ7y/BW8v/2o/+\
STYPSdybzEyeTDKz2b6NlEzyY2ZxNPPNtRR93hB1cuP3h5aW9EMUZHqcCzym8GZ/4CPn6YIPnGMVu+\
8fxrgwsLZB6cb/D1tcE5gkV87RCkpn/3H/+TP/UP7P/2+uDiEsFWYOvzLHw588sdiai//\
kXn927MIdP+ggRMSgUhGOKrfYKqT1D1dPdU0N0+QbUJ3eXXjFfG8T5B1VPKnlL2Cao+\
QdV77D5Bdco8dp+g6tlEzyZOOps4sQmqf7H3/D8c/vy/+nISVL/\
zBeenbk7Dw4c38JnS56T6nFTPcE8Fw+\
1zUpsxXKsFM31OqmeRPYvsc1J9Tqr32H1O6rR57D4n1bOJnk2cdDZxYnNSf+N3H//8b73w/\
345Oakfj02RfWqqT031RPerTnT71NQmRPfz2ffek8meTPZksk9N9R6799h9aurEeew+\
NdWziZ5NnHQ2cWJTUz//N3/jW//BP7/\
y7S8lNfWXvvDU1PTxbB5Gt8oY13jcJ6b6xFRPc08Fze0TU5utwEprLVd9Yqqnkj2V7BNTfWKq99h9Y\
uqUeew+MdWziZ5NnHQ2cWITU//2P/2H/+jnX/q/vpyaqb/6JSWmCIr3R+\
G98XDel0312ame654Orttnpzbguhf5NeGk73NTPZvs2WSfm+pzU72/\
7nNTp8pf95mpnkv0XOKkc4kTm5n6T3/9X/7n/8O/9S++nMzUv/HlJKbujSZ92/M+\
IdUT3NNBcPuE1CaLr/Iak06aPiXV08ieRvYpqT4l1XvsPiV12jx2n5Tq2UTPJk46mzixSamf/a0zj/\
72Oy98Ofv4vuik1K0w/Xg4fn+Y54/6pFSflOop7qmguH1SarMdAUway12flOppZE8j+\
6RUn5TqPXaflDplHrtPSvVsomcTJ51NnNik1P/43/7E3y3//v95Svqe38JdJ9P5oOl9vj/tj+\
TrU1M90T0dRLdPTW1GdD03mvX1Uj2Z7Mlkn5rqU1O9x+5TU6fNY/epqZ5N9GzipLOJE5ua+gf/\
6P33z/+D/+/LSU39zhedmWoO4uv38PU5qZ7hnhqG2+ekNmG4+powwkjR56R6FtmzyD4n1eekeo/\
d56ROmcfuc1I9m+jZxElnEyc2J3Xrr/3Swz94+\
adOyVl8txfJnr5Yqk9M9TT3NNHcPjG1WasKzzjnsk9M9VSyp5J9YqpPTPUeu09MnTKP3SemejbRs4m\
TziZObGLqf3/ur/2Xv61f+XISU3/xC09MfbIXxnnZ+LzPS/V5qZ7lngqW2+elNmO5Unih+\
4Kpnkn2TLLPS/V5qd5j93mp0+ax+7xUzyZ6NnHS2cSJzUtdvBr+p3f+/\
otfTl7qL38JeanJdL7MS90K89DnpvrcVM90TwXT7XNTmzBdcU1Y60XfYKpnkz2b7HNTfW6q99h9buq\
0eew+N9WziZ5NnHQ2cWJzU6//s3/+3wv//JeTm/rCe5/f/mQ+XNCqt8v4YX8sX5+\
a6onuKSG6fWpqM6LLrHVC96mpnkz2ZLJPTfWpqd5j96mpU+ax+9RUzyZ6NnHS2cSJTU1973f+4/8s/\
ofPnZKyqTvDcb43/\
KSMdkb7M7KcPjfV56Z6pnsqmG6fm9qM6UpmtexbTfVssmeTfW6qz031HrvPTZ02j93npno20bOJk84\
mTmxu6j/5q3/jn/7D/S+pbOqvfNG5qTfK/\
AZGfmcymcL5Ak775FSfnOqp7umgun1yakOqq7zpk1M9nezpZJ+\
c6pNTvcfuk1OnzmP3yameTfRs4qSziRObnPqP/v/23j3Y0qssE8+\
dJjASCBdRAzFGBKG713196yeXdE4nIZJOOn06ZKCAsK7pTZ8+\
p3MuSToQBBGCIM44IM4QrFEspIACsWpqdMBCqPkHB6ooJgaGkVIspQRBHCWCOmJ+\
z7vP6e79nfN1OHuz+2z27CUqSffp/t51ed/3eZ71rnd97i/DYz8zIXHqbRMSpzDvQAL4y+\
FF13rScqpIVUWqCnlnA/\
JWkWrIFqtKCWeqSFVhZYWVVaSqIlXN2FWkmrGMXUWqiiYqmph2NDG1ItXlz/jzq5/2yQk1Rd/\
xxlPX5ZMd0YFtlnuxSlNVmqpAdyaAbpWmhgC6u+\
Qe5ripylTFkhVLVmWqKlM1YVdlasYSdhWmKpioYGLawcTUClPv/OzfP/\
f3P7ZrMsLUa3del7pmIdOP12qpKklVhDsbCLdKUsOdvXJAXDXOB6krjKwwssLIqknVjF0zdtWkpiFj\
V1GqoomKJqYdTUytKPXAP+z/whv/bEKi1H0TqJa6wa9i3vHrlE1rO/QqT1WwOzNgt8pTw/\
Wv4I2Slld5qgLKCiirPFXlqZqxqzw1Yxm7ylMVTVQ0Me1oYmrlqTe896Ov+\
7UT505Gnvq5SahTa3luwa9UVaqqUhXjzgbGrarUMBiX72ka3VhbVamKIyuOrKpUVaVqxq6q1Ixl7Kp\
KVTRR0cS0o4mpVaUuW1t92due868vmJk+6Kc7oM/\
hGyvzuT9DVaSqIlWFvLMBeatINeTTP84a11SRqsLKCiurSFVFqpqxq0g1Yxm7ilQVTVQ0Me1oYmpFq\
ife893rX7Pn/MmUTv38JESqE8eO5dXlE/v9qq/\
KVFWmKs6dCZxblanhcK6S0jFVlamKJSuWrMpUVaZqxq7K1Ixl7KpMVTRR0cS0o4mpVaau/\
OPHvv89d09ImXrzBJWpm/AZXyunqj5V0e7soN2qTw2Hdq1shK6VUxVRVkRZ9amqT9WMXfWpWcvYVZ+\
qaKKiiWlHE1OrTz33Scc/+62/unAy+tQv7LQ+df2x40vLq3PLJ1ZW/\
UKtnaraVEW6M4N0qzY1JNI1SjBZtamKJiuarNpU1aZqxq7a1Ixl7KpNVTRR0cS0o4mp1aYWLk53Pvm\
yiyajTd2709IUJcG5IzkerZpU1aQqwp0JhFs1qeEQrhOcc101qYoiK4qsmlTVpGrGrprUjGXsqklVN\
FHRxLSjianVpJ7+hTe95Y5XPGoymtQbd7xeqq8+\
LfhFv7zhyFWcquJUhbozAXWrODVk6wqurBnne9QVTlY4WeFkFadqxq4Zu4pT05CxqzhV0URFE9OOJq\
ZWnDr/qifZxZsn1Gzq53ZYmzqQl2/P+\
zHzvdpiqqpSFePOCMatqtRw71Fb0zTKVVWq4siKI6sqVVWpmrGrKjVjGbuqUhVNVDQx7WhialUp8fB\
X71cH/uUFE1GlfnWnS6b6stTJJujX3LEGuLaAP4ufJrNrP/\
QqVlXoOzPQt4pVwx3IciUYE1WsqvCywssqVlWxqmbsKlbNWMauYlVFExVNTDuamFqx6lc/9tm/+\
9wV506mhOq+\
HReregsLefnGjYB4eImsqPJUlacq2J0JsFvlqSHBrjVNbYleAWUFlFWeqvJUzdhVnpq5jF3lqYomKp\
qYdjQxtfLUHR/69kee8qoJyVO/\
OGl5at2RqkBVBaoKd2cC7laBaji4K6VqRBWoKqSskLIKVFWgqhm7ClSzlrGrQFXRREUT044mplag+\
sQ7b/3w733ovBmpnzqEXX8cE+UX+otRn++\
r8lQFu7MDdqs8NQzYbfZIZbiq8lQFlBVQVnmqylM1Y1d5atYydpWnKpqoaGLa0cTUylO/eM8n3+d+\
9/LJyFO/NDl5ivwYi3FsbaH/\
B6tGVTWqinhnAvFWjWq4A1nNudRN1agqqqyosmpUVaOqGbtqVDOWsatGVdFERRPTjiamVqN6XnjoS1\
c/5YLJaFSv33mN6mRjdPp+FaaqMFVh7kzA3CpMDdvKQklRH/\
KrULJCySpMVWGqZuwqTM1axq7CVEUTFU1MO5qYWmHqdQ8deNdFeULNp96888IUxdB0ElutXLfsjx+\
p+lTVpyranQm0W/WpYdCu3MOUltpUfaoiyoooqz5V9amasas+NWMZu+pTFU1UNDHtaGJq9an9R6+5/\
y9etmsy+tQbdl6fwsLMLZ9YWfUL+/\
2qr9JUlaYq0J0JoFulqeEOYoXjzuoqTVUwWcFklaaqNFUzdpWmZixjV2mqoomKJqYdTUytNLXn4R//\
7rdvmVBb9J+fgDSF+Yf7rMXVteVclamqTFWcOxM4typTw+\
Bcvkc0TEhVlamKJSuWrMpUVaZqxq7K1Ixl7KpMVTRR0cS0o4mpVaa+/J63v/\
fzr37oBRNRpt6208rURgv0vL9XCvkO/shBv4qv1JboVaSqkHc2IG8VqYa8J+\
Bs43gVqSqsrLCyilRVpKoZu4pUM5axq0hV0URFE9OOJqZWpPrOO9596as/\
NaGbfTtePnWqcOpaTwpOVaaqMlVx7kzg3KpMDYlzmXWm9pyqWLJiyapMVWWqZuyqTM1axq7KVEUTFU\
1MO5qYWmXqa58/es/\
BSyakTN03YWXqMI2hylNVnqpgdybAbpWnhgO7ojFC18KpCigroKzyVJWnasau8tSsZewqT1U0UdHEt\
KOJqZWnLnnHn3z7eT978WTkqV/\
ecXnqxLFjeXX5xDV3rAGpLVAa3ljNlapSVZWqYt6ZwLxVpRqu12pjuONNVakqrqy4sqpUVaWqGbuqV\
DOWsatKVdFERRPTjiamVqW654MfntNfuWgyKtW/\
n7xKhR8ki6tOVXWqinpnBvVWnWrIN4GYEdxWnaoiy4osq05VdaqasatONWMZu+\
pUFU1UNDHtaGJqdaoP7rJPveW3z52MTvUrP1A61c1VqKpCVYW9MwF7q1A1HOxVphHKVaGqQssKLatQ\
VYWqmrGrUDVjGbsKVRVNVDQx7WhiaoWqL1/69cP/\
9PHzJyNUvWnnharF1SN5pUfetdGfqqpTVZ2qWHcmsG5Vp4bBumqPbAR39bpfxZMVT1Z1qqpTNWNXdW\
rWMnZVpyqaqGhi2tHE1KpTfxPe9bVX3Pf4yahTv7Dz6tQKNg1NPGAC/\
lCtnKraVEW6s4F0qzY13DmsaZjmsmpTFU1WNFm1qapN1YxdtakZy9hVm6pooqKJaUcTU6tNPXjhH3z\
mI3dcOCPa1OGl+VW/mPxyAqRahQ9VbapqUxXpzgTSrdrUcEhXC8bG+\
nJ1RZMVTVY0WbWpmrFrxq7a1DRk7KpNVTRR0cS0o4mp1aZ+4ynffNkPP+uCyWhT/\
3HHtSkApJWCQLwP89+L+3srCKoxH+vnY0qv5E1Vr6p6VUW/M4F+\
q141BPrdBfRrta5yVQWYFWBWuarKVTVhV7lqxhJ2VasqmKhgYtrBxNSqVY9+\
8n3yD981IbXqF3darbplsbc6lxcWTqlW/T9V5akqT1W0OxNot8pTwxzOyj1CcSOqPlUhZYWUVZ+q+\
lTN2FWfmrWMXQWqiiYqmph2NDG1AtWur3783V/85qMnI1D93A7rU1fOLZ9YWfUL+/\
2qr6pUVaUqxp0JjFtVqSGvDNjGjvXF6oojK46sOLKqUjVj14xdValpyNhVlapooqKJaUcTU6tKPeOy\
r7zS/OYFk1Gl7tvpsqkrr1teWju+/m+Hcuqn+\
CpPVXmqgt2ZALtVnhoO7AqhhBvnO9UVUFZAWQFlladqxq4Zu8pT05CxqzxV0URFE9OOJqZWnvoZ9Zx\
rX/7pc2ekaOoGv5bnFjymqXaaqqpUxbizgXGrKjUcxmVOOlaLpiqOrDiyqlJVlaoZu6pSs5axqypV0\
URFE9OOJqZWlbr3G3sOHvrEOZNRpe7daVWq/2cO+\
tUjVZOqmlRFuDOBcKsmNey5q2NSV02qosiKIqsmVTWpmrGrJjVjGbtqUhVNVDQx7WhiajWp3mW3HLj\
kwQlVSr1uxy/y9f/Mi/\
HF2va86lIV5c4Kyq261LAoVzRCVV2qIsmKJKsuVXWpmrGrLjVjGbvqUhVNVDQx7WhianWpe37som/\
d+qkJ6VKv33Fd6mBe7i2lXjxM1ldhqgpTFebOBMytwtRwr09L4SyvulRFkhVJVl2q6lI1YVddarYSd\
pWlKpioYGLawcTUylLy4FMffv5vnTcjjaUOLmHv93uf18ZSVZOqEHc2IG7VpIZ7cZo5J6soVXFkxZF\
VlKqiVM3YVZSauYxdVamKJiqamHY0MbWq1IMv/+KFb/\
j0rhlRpch7c1WlqipVMe4MYdyqSg2HcRUzUtTWUhVHVhxZVamqStWMXVWpWcvYVZWqaKKiiWlHE1Or\
Sn3glYcP/dRVj5mMKvWWHb/CdxgIaaUgEvd//\
ICHI8X6IF9VqCrenRG8WxWq4VpWaG0Mb6pCVTFlxZRVoaoKVc3YVaGasYxdFaqKJiqamHY0MbUK1W1\
fP/QTD61cMBmF6sTZEqgOY36XezBtL2DRwglyluUTK6t+Yb9f9VWPqnpURbczgW6rHjVkC1Vnmaz3+\
CqCrAiy6lFVj6oZu+pRs5axqx5V0URFE9OOJqZWj7pr73f+6OZXTqi71F1nX4/CqvXi3NIxZL/+\
j9TqqKpGVWw7G9i2qlHDYFu+p2lkI21Voyp+\
rPixqlFVjaoZu6pRM5axqxpV0URFE9OOJqZWjXr9Xz99v7jyX1/w/\
1ZXqdNq1KAQddPioVzIvqpKVVWqYtyZwbhVlRruOR8uhHRVlKowssLIKkpVUaom7CpKzVbCrppUBRM\
VTEw7mJhaTeriL330/vf98zn/j3U6P61JUdRdW/Ar1y9u3NlbWLp92R8/\
cqJqUlWTqhB3JiBu1aSGO3dVDROydjqvOLLiyCpKVVGqZuwqSs1axq6qVEUTFU1MO5qYWlXqaQfNVy\
7+ne9MplLqnrOvSl1/\
7PjS8mptJFUFqQpvZxDeVkFqOHjrFFOuClIVQlYIWQWpKkjVjF0FqVnL2FWQqmiioolpRxNTK0g96g\
H2mv2PfXgygtRrzr4gdfNaLx69bq2X8uElmJR69d5elaQqwJ0dgFslqWGuAfA9mlkrqyJVMWTFkFWR\
qopUTdhVkZqthF0FqQomKpiYdjAxtYLUi5996Wvf//R/\
nIwgdfzsC1KHcsmAAZiaKkJVEapi2pnAtFWEGu6UVTPmnKoqVAWOFThWFaqqUDVjVxVqxjJ2laEqmq\
hoYtrRxNTKUM/48hde+IQLJiRD7cBFvfkTx47l1eUTc34hri34WhVVBakKb2cH3lZBasiy/\
0ZzWcuiKoSsELIKUlWQqhm7ClKzlrGrIFXRREUT044mplaQ+uDLL/2fP/LfJ3RR7+\
3nnn1F6vCRvG9lZSn21mPg6vJaXF1bzjeVdn/zXqw9papUVYHvzADfKlUN+\
bi0Y5bXnlIVXFZwWaWqKlXVjF2lqlnL2FWqqmiioolpRxNTK1U9/Ffstldc9a+\
TkaruPftK1S0r8JTDR/KhjSB40/\
FaPlU1qYpwZwfhVk1qyMNYI5RrqiZVUWRFkVWTqppUzdhVk5qxjF01qYomKpqYdjQxtZrUweX7DqRy\
9sunzv/bX3jH2ALfE6641vcWcroW/29lbmltcXX0KHguG6NZBzPQ3uJqf1FyymnsGehCztgeyj4/\
iexzfONrjz753SvmH3dyYbFLV0vv7rOfhJ50OouMYznOM3Zspj35ig3vKGsLP2i2XXrF/\
NEeIPsP2h7+MWCK5dvz6q1LCwV488XILvjgej4Z3cALuMSu/QHBPU+\
8oiVkd0HPCnwq8KnAZyqAzxO2OvO+i3fPP/owvH9hC9y5/f4ffeDSP81XnYI7u+\
cfd8Df3Tu2dowC8cbPn5zV03/usv/w0mf+p29ccfrPzb/+3LN0nnaqEeZBzFq/IUFYWljZCzy10q/\
93o8J7PVP1XbP/1A79+6b2z1//CyZ1X8rZmXvQR+Pwq6b7szLd/byXbBiHCj017/wv37yA/\
avXzCwLPft8PzuWwVcXVvXh5ZyKb3Ywx8d0/geOn7eA73L/u/g+F69s8O7etnffvs+/Ewe05De+\
rYTl92x618Gh/QD4BLjGNkWX989/\
3M7PLCNR8LzIv6OE2Ma1i996YEHL3vMtwcX7Bd2esHWx0UkZG3B37LYWx3Xmv2Xl/zDf/\
vfb3locHCvmcjYDi4sjStoPPWOc4+848ZdV01uTPv98l29xVt7afXImMb0p//jCb+e3/l/\
Jhk19iO3Ly2vnrpINaaRfeDBW2+98AP/OsEQvx4Fx7gB97/52bf/7WOfNMFAeM16cc54V+rr57z5Y/\
foxw0O67U7PKy7j/vFtBExxjSqR13p/+zG91w8OKqf32HPwrDgWCeT1/ptxHEM7QV//\
o3PC3feVRMMGtfcvdpbP4+9IS/ePrZw+OJ7P/xfw38+Z5KLdm1vMR3s3Z0X5hbWVohTj2lov/\
umt37pgbXWor1hh4d2XV7dB7o5t7S0nHqLfjWPa2y//bm/DI/\
9TGtsb53M2ECkowdzIVnkWk9VieMa4+XP+POrn/bJiyfpdBjjRjA5kFeXe3FMI3vnZ//+ub//\
sUniKgzsmoVMPz6u1XrgH/Z/4Y1/1hrTG3d+tW7AVuzRr1OlwhhjyRve+9HX/dqJcwdHd+\
8EBreW5xb8ytho5trqy972nBZgnEAQOR0+5vCNlfkcT9Zsj2OMT7znu9e/Zs/\
5gwv3ugmMcaOn5xghyZV//Nj3v+fu1sDeNLmB3YTP+HGu23OfdPyz3/qrCyeJS64/\
dnbA5MLF6c4nX3bRVZPjaf1SrLkjOR4d05Ce/oU3veWOVzxqklBr/VrHgl/0yxsHRWMa2/\
lXPcku3nz+BEP/gbx8ex6vwige/ur96kBLO337Di9Yf1Qn48c1d6z17vQL+LP46YXxpoBf/dhn/+\
5zV5w7SWRyoLewkJdv3DgOPrxEpztjGt0dH/r2R57yqtbodvrgYvPo1s9IxzS+T7zz1g//3ofOm+\
TqHcqxdxzW+4X+OeI4A+cv3vPJ97nfvXxwdG+\
Z2Ogobub53rGNruNjGuLzwkNfuvopF0xQwzsdUsbod6976MC7LsrnThJ/\
HcpUl5JO1umvXEdduMalvB695v6/eNmuSZLvQ3SUP374tefhH//ut285b5KMACPr3ZPHrSp/+T1vf+\
/nX/3QJOncRvDI+3ulUIEM/\
sjBPrsbVzD5zjvefemrP7Vrkot3atnW1a4xDexrnz96z8FLJiqfbBrYYSqvHdPoLnnHn3z7eT/\
bkvJ+aadHtwVpnqwmGhfOvOeDH57TX2nxul+e+CDHD6c/uMs+9ZbfbiW+f/eDNMybxxVOL/364X/\
6eIv37XS1AlUEHkGuWBl7rvib8K6vveK+x09SXplHYs/9Srx9YQV/aFzr9uCFf/\
CZj9wxUeWIKJBfTH45zefV1fFxod94yjdf9sPPakHpd+700Jb94kpZWj62fvazv7dyfAGs4Vj/\
PuGYRfdHP/k++YfvumCS1JYqhObywsKpYY+TGe366sff/\
cVvPnqCytKV44fXz7jsK680v3nBJIHMldctL60dX/+3Qzn1r9GOaXQ/o55z7cs/\
PclzoCtPnQKN7TD53m/sOXjoE+dMUJC+sv9nQBXGRV97l91y4JIHW+\
u0wxU260PauL0yLoT5Yxd969ZPnTtBKeXKg3m5t5R6cZzsQB586sPP/\
63zJulUB5d6i6v9sDEup3rw5V+\
88A2f3jXJQfX1vLEO6gOvPHzop656zOCg3rzTwb2dig94qssYWyi87euHfuKhlVb2uuusdy3bd/\
z4won++fe4k/Fde7/zRze/suVZa2d9OFf7lV6cWzp2fG11rEfCr//rp+\
8XV7bKFc6WR50ezOA4blocP5u++Esfvf99/3zOToSJ04PaKH9fuX6x/YLDuAr9n3bQfOXi3/\
nO4ErdfdYHtX5cf1bc6FEPsNfsf+zDg+O556yP5+a1Xjzav/N0eGkOHx2rVvXiZ1/62vc//\
R8HR7R41kd0KqKPaxRbngLeiX12hvd5xyKtbX5JZvf8r5yt9Dr68y7jGOmWRqRnj3JspzvoOIa0pY/\
F7vlLNjeJmDsHv7i5RUPrb1nvPPUS5IONH9s9f+kpgwb+ornd80/s6i1Av/\
H4LRf76buPO4CfBZQ6eZ99/tmt+bo80MAuj8h3dPM3Xb5y6m9fOLFn9/yPnPlW/\
obRP03tss5KN9l7f1Au7v+bKw76iOmpN/brjf16Y39qb+w/ZsCL9124e/7frP/7vuV4pHdnnr/9+\
85E/Vi6d57+/CF/bGUxr9x2W/93dqs9DP853v/eGXsEvL159nue8Y4jg6TgiX1j1+\
1cbwyIr9ESUJCff+lZtHj+h9a/esAv9kpeb0dJSACrtu/c3fMX9rNM+fcbC0y5sm/TKdt++\
EV5Gcu1l5Zxbj27kCJ21wJ+8IV+\
5cj8VUk1PGbpheAlOd7IKEJwjTOcSWNVDL6RRVslDVc5GB6NssU7JpVlPsm89ZvXbnyT7NzbfUtl77\
5F7KqFpTVkyOXlDVK392rg00W/OLd0l1/cc+\
y0hdJrbZkV2mbtmuSzbVhmRtpGqcK5sULY2IjCmqaxqpFGBJmanIXlHj+\
z1cKrR7UQgWxxdSEvD1pni5FOGJaCFsJEHpK0PmeXlfHcK81CVE2RjnFku8ZrbpJVObHEneclbrXuh\
SNbt7x0LC/\
f0ENAPdaaQWY1Jqnx3qWYDJMiqCSYl43HUkchtBTae6VYycKIRljsgiB9Mbk0Ovuw1carRrXxmoP7b\
3B2wLZieOO4ckWppLgKMihtsdJcm8KTkZFjD8pgQyzZweysdAhZOu1Nkbz4rba9YFTbXpgXj+\
YB02ADYypr/\
MfJpH0Tg1KYwIR9KEVpnMjBOdFo5SJz0UutMYEpRs2tsbbDNUaethf1AEEXBmxTjdBNtLREQftQOMM\
0KRd0yDk2RTipG82zsVIwHm1uuFaNtdEFETNcfIy2zfsVf7Q3YFvMJUrtZWQFW0vmFBhP+\
G5MISmWveRKNkonl5jBFCP0aCWaRijtrYTXjHFJb+\
0tptVBTzCJsRCSNtjlDGGCy6id4PBfi7U1snFNjiUlpyx+sgmIMrEIbhwCjJJyq2n7RjXt7mV/\
YqEXBtdUJ4qqmBh4XUSQ4zI5JgJcQ4dkuSwywyJWmAkuMCnhvQYLbmzh+\
NW01bi92zBuPWogwbRirnE86GwNVjFKk5lyjLJASNjfwjusGX4kC6YRR3jSGkHF6IYbOLDmrNlqyrO\
3YcrW4OCYswifiEoFY8UGapjmKXLLERQKb6IpJlqsk2WKRcmlLQi4CL2lJK06dtLzt2FG/zbDYp+\
DAB/06dLcM+\
VyetaAZRgoj9wYhYypU6M88pKKzBikAe2VNbqkYBvkzqY4J61sEMxKjjz7VFzSo03QljCgsS0RMZuG\
lcay6FkQcDIrsCMQtriNGTEqNdgjWEgZTcwqF22ylYgbPJatZuhtm/\
HMY0upV3q5NS8ZKdj7BICQASAQCLxWJsCvrbfJSmZcSgXOJqMvyIUIRYj8UVhEJ95wz7capLZh0K3e\
rxzzvbz8ot5yaU0QzHGsMV4HGeE82L8cmCGwoJBStPVBeTi/daUJDdmUtITbG811UtmIDp/avQ17/\
u1NB58p9vDBidFa0fixClKlAp9x8BwmG+2QnUVxUSLHIJwHhV/\
XRRpsYWwwkSQ3ORe31ZBnDBrSur6390BexRqs+j2rd6+essBy6+C23mFOhOQcgY83qYF/\
ZyQ03rDANVwqcQO0ZYoD2BIyY1Nhh9Eu2mrBM89swUZ027sv7oEhp2zwnNFmQNzNTUIyUN6XiCTR4F\
cQS2xSNvqshfHRyYjlcUAtwJ8sKpdlGtGG21s2RJ08w1xYLHJgkclktYfPYr0NEBzSEhdOB5c8xyyJ\
qJChDLAxgKdmOtrRbFho2ZAb47RtsBMl84ppY0yWSEA6084UGRnAumxSyTxhB1vnnJEhW86ENYJ3BL\
bt2HCsZUNTNOYYgCbCjOS1SEK6IoUL8NrGI0dikRBbs47ISJwrz3JJKiUvkEBjRy7cjg3L7f2Q4PpM\
IVQzpDoAB8UFpbWEMcMjgVtsLiy6WJh21haFTGRSo2GgVU53eMV2bFhp2cCCBoAvxiJOCawAEkoMcE\
JguCCsR/C2shRQDMw+\
1kCpgPnIANHSBctdR8jajg2rLRsssjzXoAkKX8fG49htwEhATggRpgRE7eQN9mMizwEcjhzomNIdww\
+qEffkWssGCcChojPONYxpn1kDsAiUW2KDnS/\
hLLrgPzxJgmtIekVqOLMWEdEhczGSDVf7lg2lOG8wq8yHRoCx5EAhkpyFRXBQwFxsWCxMZEIqAF3FI\
36qcN8ohIfckVZ/\
ahs2tF3TOBYSiBAom1IA0h6MKIGzlaKxGbyzCBbA3EZ7TkmUw00YE5qJmFjWHdBnO9OQWzZwoCmwIY\
OVSBgvNn3iSO8JKFRjE2D6XcguKKN8SADX2J9RgRvDg8CQbEda344NvfZSSMyEADXDdgT1wXYUhoeA\
TWBNo7A3DeEIIHgFmAp8iugsJFMgczoZxUbbklcfbdmAkADuIApSEcITKDYBOxmR0YGUDTmqK4DoGT\
MCNoicaT22LmwjyAgHHs2GdogCnDXg7KoBvEQQNg0+\
gegDlmcZCD13kcccgG8wC9yEVEBKEVk1oGkOwXQwrW3YMNd2C6BdsBYDBhd8REICd9EeH7ClICgLpI\
icEEKVQFAE1XONyYiggYHlaOGajjC5DbeYa2dNx+F2iqIk4mQDOKMUQ/ZERhcOS+\
EFEmhjhBKRgS9jE8qApCmRWpBo/GjRYS61I7VzYDqerGiUDIDcHkEZ1EfnxqkSdeMbDFlaLBZwi+\
Hekw7DEBgEc2q0bDHXdk0gA8Q/gBRrkTOQp50D/\
ydhSjcCUAkuoooEqNQucxOFYIhRhCYCawQw32g2lPaWJGVEI1smB6iCfIDsFMBXdfYKOSw04ByIToH\
ChfeBBwQr+BCgFOcBUWU0G9oIBn+n0xi1QgCQPjJQmwJ+\
FvFp8AokTvyv5gLMDKAaayKBpyP2rszwTm86VLnt2NBGMAqA2jnkBWD5hgFXawsKgWxULBMFUSgA8A\
JRmYa5wrBlMEsIUDaQHKLjiPOw1J4HhCiwT2uMRxRiymZQ+EYqIArtYgyRu+BTyEIELAR2gi+\
SwVGkb8Dlu8SO7djQDlHAiQJhUkh8TGYJWsF9AEwMiM0+MfJcQ/\
AeSK8ELRAuMRnYDTZnDm444lqsbAqTMMFhh2WEhIAwRXJAAmvH+occANocorkE9QXXC4BWBRYD/\
WGNCsG80WxoI5giSLHDYicEJ7CXRNkZ2FKoDF4Kwgl2oZBITYgO3kvghqsA/pnhwqCo34OUd9uwZ//\
8bfMgfXlAPEEiAJlxoDSIQoCPIFcwzDRNKiqkaByAJvYiGBmoHwiAyQXTFyw8JY8IrPefaLtGAVBHJ\
kiSNSC/mAefpcYieWzMUIDfPKVObFJAa5EQsYX2YBs2IJtxORqCuKa9LS2GW7wEGJDFY7IxUFVEziJ\
6MqYgTCGlYloUsXNMCOA/+\
KgGMwwOMHc0GzaBWmeiFCpR6kiZdNEGDF8bl5NT3iFteUQIV8DOszUKcRXZVAF2gwE0iXW4xjYy57V\
t7yxNbJqG56yEApp3LAk4rAaWQlKHO1qATaTImASz2CiBpFoHVN3g130ZLWNc285aERsLOL5hIiibZ\
CTwFhGoRI4KM4C43HibBDYiAilsob0qDWF8wzBho2Xva9vbocneI/\
JzOEJs8HFrG8ecdy6SDmM5RzYzoQQvQY2zpWOTxukE4G+QZ0wHtt+\
GDde1gZQAgZFSZozLCJ8aQ06CnJklUrhxEjQ4J+84IhKWRDVwCw53sIB/\
Nns9WpS6ro1ilPJReKQN0AVAKEHuAYYZgwKgLgqULjZYLptSkSbAGyJQJQENwB2ffcexwnZsaO8HYA\
Tg6Ij4B4aLSMHA+\
eF6DHtTF3zXIkK50Ae7SGtAfCzJ7EWyGsTQpg5Quw23eGF7O4BMY2s5n0BvciEl0+A/\
SoJzmAhIDUTTGMSmRJ+H8wLcRQSqIBmmiI+G7V+\
4yS0EQiLiIPh8MgAMCTTGYyaQlhSlLe6wOIakW4N5ECHh/\
whyUbrNCKGj2dAGcxnhJxeHL3PJRB8wuYx0DcSGiY5WWKmj1pgBwIWEDOuAbaTxgJWIYs1orvnCtiS\
mGPYC6BX4P6Y5IDVYIwQ2BrCbZRnwXsIjc0JOReb0OWVvrfHCYBrgFiPa0AZSEQC20dny6El0QvjBd\
GBv4J+tLaQmSw4QkYFzEBezZhKoFrwTpFchoY9G/\
a9v0ywDLzd0hgAWg4DokMORCwJ2pvS2IAYZQAxgO+zMBtyL+A6WCPOBVOHNaEnz+\
sU2v7DAbFZlwPakrG5ICBQNA8sD4jaIm8bQsbzAPKX+\
cUifeoSGk4jpus6Tt2NDO1ILTAICArYDKF1B0kQKB4QH38F/\
N64BditJaeadipYpbInIdWamMOxW2yWBbGMpXtReiqylSX2dGMEQuy5x5iSpHkqU6J0WkgFcMmUAaK\
zMDpOAnJURw1hIabTo8KJN+CXS+\
BosO0sAjiHrHGFSQRi2ShebKESrAoaN7OAQmqMGCYgcE5G17iqN2IYNN7QTlnIR7LYAqzTBIXMhd2A\
BgKYCwoYCy5QANcpnhcSNjSKTwYLBR5DF8ZvNaIL5DW0lCMHB0QmO4w4wXiQPSsNC9gVhAeNEKALJx\
BoEjcBpUpZYrdJwxllwBttiNBvaOA4ssyHtKTCFpe/\
jaE7REvBRe7iBMEiQOVmeEkKXQmZRJFVmAL9UgLNHsuFAO0pqpJ/\
CESKsNCXKviYImot4RIgpg92UjEQppGGIH5EZcApHtEcxC6QzmhJ0oB0eAFU9IRPMK533eQIMgnIWG\
D5QhMM84P8KggfLObgQE4nmCTkcuDqMCCYPtCO1SwIxiMovJGi1paqIbBGrNJBaQdoCopIWXwTrSr4\
BvsFGLTrlkCPljdGy5o2bFTESvCQH4UbQS7pxxRkLwIrYRadmyKU5cLB9bkH7mmyANrA9absEhNDRQ\
vWNoe2bxltPWkdxTpXQmICPA08T4+\
IBCBZgAulCGwRF4RCiBHEOqSjRsiZ0zMM2wuSNLRNS4ZEVJxGQHUhmysCyUkWkqYBIEBA3tcNv0K51\
lrADkgpvDJA3OGozIpa8sY1n4QFB6CyBBSRCNOYDAJ8LE5GOHGvIKSIYJgEKiRiaSJaMMpuA/\
0owajQb2kAOcQAeEKMvIJRZYrsFYnAC5MYjFnkgPEsCRaaDN+\
BZrAEVLiCHFICYEV3zxnaYbBTTjuQdjK4YOggHhwLNMUDNDUBjorglGhsRkKKOsMCBFIIiK2wNRPPR\
bDje3g8WaBE0z+\
ZgXBQBbAdpM0fkcwCoRMKMCxZZwwFIA0kE7B9A3CYGw4G4RsvcN7WjA53IcM8SnfQaECnlqAqIaQHf\
T1gh4t4C0y814reRdLKL3SoRszNlspGm4aa2GAXc5hmmGI6XeUB+pmJFBOuMTxFiyCB7CBYig/\
BrYXjMkWGimpJFU2DbSDYcbEeoDMcn8T2B6DkJWhngB0kzk7ELE8KhVKYYhAfatlg2JZHiCUNgNaie\
ZDQb2hEqcAMEF8FldCCNQferxRzIHwOGKVR4BYhTqAjDI3EEUCCpbQgcqR5mdUTJbWyHg+\
2l6BczFFukUMiDnvZ8o6PgCmHAUjmGN4Lgk8TEWGY8IrVRXGuqV/NmtNPVg+\
0IBRYPd0PYA4akuhxmwfNDRrRGvLD9cjU4LCw1iB0ZmTsA/ScEM4XdUuKINrS1alsiko/\
xjBAqU56ka0UYNiJWk1YvU8AMOYtEgliK3cs9kkk2heRTN5ooeLCduAHVAKEQp+\
D7GbkQCRLDBHeAAxQgugZgzfXlFmRQsA5EKGxV0UgwcKXUaGDyYBtUM+\
BVbzD5XFhRSHAoMAch2mcOlg3wLvGxRlL1gTZYg2AN7LTRetmYrsqy7djQPm2P8ICMOQeMAeUDraL4\
EFUTrQZMwg6Es5bCEnyhweRQ5ADk0g4hVHt48Wg2bNKqGdX8UGUzcKsNmgNMBDgjty4qrSJrjALuRi\
yPPJkk4CgKECYoJHsgz9HC5CG/aT8gSxif6UQ7M0krn+iEJIDMAeVji9h+\
9Yvw0TA6QMoMuBIIIoCQWDaaXxwKm/ZDiLKhmAcgHREiPGbZIxQiCBasQwR8A/\
GhQMacD8xFeG0DU4oTCBgj2tBGD6S9IGUIwNPgkbYUdwWZwSJZkNRhMoKlppJfMG9GqALQJnFPhTPO\
AsyNZsORTcftgO6ZTu440zIoEfB5h28AwweLL0uD3+FUIyYzR/\
DGv2p4sUVmKTByNBva5CIhL2pMt6WaawcPsSqBdYHrU5lUbIARTINcYT2VAnnJ6GwP5lGkjNido9nQ\
9guqcAFzI3wUhWoSzX9B4gC5p1JKGjY+\
rZBVGVwRYDNwmBipTArbooxmw3x7TzZIQwiGiDeNzOAPOUd4peAlBJOAaCPAAyflEnEhEP9UEhDGwo\
k08suIhHc+\
bsoXyBFN4EKA1DZMe515UQK4EvnCYM19o4DhtBKSNgKAHaMCyoakw6S7KpW3kbrn29PQSGTkAHLDAk\
A7wgMwdRN5A+JrleShAb7qQ0pghdQgWYYUJcA+8XDuRguT85sUWioJRKxB8InYD/\
BT0Cg4hKdzvQjQmICfEpYFIQKcAiwjguzmYkE/\
ATNG43nzbWCvQe0AYqIGhQglO0RDCodUP65TZBxYrhTXaM9sownS4uvOpJgEIljsKkrajg1t+\
CAsmD4Yt0oI0zJJALrUR5fAMY0DtMgMgUHDZWGHdcwHXjzgdPQEwkcszppvhwcpc2nAOF0sVMoMT1B\
YHuwDI5hSGtjOR6qcDJaksYKZYiKDaIJjAHWqEddiE3yQlItdUqGYCGcMmJFGeirejVwGgCgwzQhSj\
DQRNUwExFBgwpFKg7wf7aj7cDtt0h0eICIEBLBcJQq2HZCDBVZE9mRa0RUVoy3VfnDyT5gByuGEFAi\
TOo1G9A6HLb4JNASXNyIH66iAFh+msg+lAiuIWwLZC3AB3M4CY2tEEsCqIKkipowGJw+\
3QxSlo4C95QMVQSghjA4cKVpHxGSd4ShF0T0VZGmPTZtto5BYEKUDnNWPSPwPbz7BEXRy7Ig+\
JkYhOQAeBBu9IgyTjKa6HHzRCWDtwvohCszHK9lkLUbcD+3UjYAIz88Ri20NAJLW/\
ZM7KREEJMAStilAnkHSkCC6IWHRHAyRnkoZ4Uaj2dCOUVgCurhiGyB8oTVc02HqG5oGS2d8DTYMI63\
IsqJAPR1AJOgggHfyruTR0ubhTUXNwE/kko2l21D4u7H/fAaoQ9SOcAcJUA/\
vVIWTjMsbpLNMxy2I7wkoZjQYdbgdJ3Wmm25FkjoaEyg1UGVIBhwccIrT3RTZOOGLTAp8y4DiAHCBI\
zvQLLjyaKdIt7SXArQWrLKAzTfIj65fK4coBAzNlfMNTxGYN2jAbG4L6I8n+o21wo5EYO+\
Yhm2Y8OJ2hKIlL9FiRKDSYL0AVYgPjdeAFVj8XEzyAPGCaWRx+\
GxEpigJ3Icct6tIbRsm3NrGsxEmCCXAJ5E1cwY8iIATElzWFyERPJ10cFsO8o0gJY1sAOUQzKwG0Bq\
Rc//bdnDI4NvIQzYBMXgRTRTwygLs7IWle2muaGwF8BtRiqZrsHSK58EypQaYMqPhuJe0AzWSQb+\
S2llBBwQSgRg7gQsEjUjxqSE5lLuUDUMsg1OylDzwHrBDQEobbUO+\
pB0jOV12g0vS7VQd6YQAiFrQuTodE4hCVbPYnxrRAVQwgPqEBsECuVxJuOpI0/DSNnYo2H2cogJwA+\
Yjc2YMVl3ziKDAkCM4YhWPWiBPJ4Hd6hJSOBwIiJf5EaWHl266bIBNh8lmwKx0LcjRXS38WyToyJjR\
SJkN9ohDcGycLQxpFWtgEacTafYdefuytg2nWh/tz8eWBm/\
ThZQQCZ1CZOLwr0C3OjDSwiTLjnCTtHTP1Ua6BuThlxFotwH5MQ1QXUdwftLgh7dWoBHeoJpT/\
C3Be6ryS8JxC2jGQOs0PhJA75Ey6ZTKa3BaeAEVkiJr8Og6Nv5zBj94zd2erpLTb6zsnbv+2r1zN+\
2/TZCiy/We2CsDsjyAOshKdEJYzhBxCtidB17mSImA9E6YZAVVUAKsGLA8JOlURGMDHRh1oFbxiHZs\
NBTZu4/eslzsreaWNSHTgGXwwEAKk5IMsm/\
JRQIyIGcnJyVDYPCkhMEq70kpo5JubqhGsWP92basuTYvL2+2BTyFSZ77J6pSUeEylb/\
FrAAkPNwugPljT0iqgkgyA19nAKqGw6yItNnhk4+\
8QidtuT627WBU8wIUApgIFOutMg5mSboGHougqx7cKekdhx107RIuyhviwxzEQuoOHLl7W3bc4K82L\
UMQcqQDWuekNnoHQg0wpQqdIdrYeM6tKga7wthk4ENFI8kinsNz6Py16x743u0Z0ptbuklsXhuHDAo\
WDTsAWVKyjXMgOpnuvVjWJCAdOoZF9gLXzRor0nASKxDjZdeu3d4+\
uaF3YPEmdbBlixQWUTMkCbxPN815BBem2yBUj4OPrheBCBeYCAI8yIISINE2PMgAj+\
6wRW7LloN5eenOlaObt632cIQCvo9oxkuDzcjA7AzYF090s5oZQFww70KX5wx8iTi7pfq2JjbMd0gC\
z96eOUvtWQF8jsA32ZYQAHSR1amAE5ga/\
4yED3QPLG45zG1YwO5mQGMFWIfuzyjVYYbenhnLaysrPb949cJae15KjIKqyAyGXrB7mEKIwVQB7wW\
NLWQDB8aLwVCWYTzQ/S66ZWkYMKHhHWiHb8ug+aXkFzYvEo/GR+\
wDkkipRYaXpKzH4CJ1BQhON0ozQ1c06FzGe8Mcdq9CQqY7eF1Fjj+\
9LWNubVkh8AXMP7K9BTFpuNISO6Efg31WCK5ceUW3/8DOONVcMg/0Qzem6T5P+\
l7F2Ge0AsCjtTLWYBVAxxHnG0u3tbWBG4GlgBZ6HgD7vbWMNcRWKOIkAGHHQJjofNh1OND2Au1LF+\
fbW1aXxhROFw2NTiaVhurdkgPWIK8uQDzgLJkEBdgikBAcQXRPfQcsJm3YRaGksxTz4qatYSOmtn/\
hFOADoCCFrBFlvS6U6oxtGqeMpAI3Ql6k9RgJsgAa4YBXOsL9cx/RiutvmVu+\
7fjyUloDuL7trt7qkdviOkxaaQOF6JNDxHA6k4KgCk2/tSWCQbMMohzpKjup8w1V/\
0kQC6PwSxZcQUTdgZIfGSgcPtJbWlvOvnuW6OANSC0j5SQmeAicCj004FSW1A0hCaydC41nWChpOHg\
GVgvxxSVMGOsQup71iNa8ZCnlLQjBIvuGpAPocXSaigeMjSECS6WI30JEJaqNPZSpKgxwga6ZkE5aF\
Cztuvt25qUaeDKo3/uJeqHc7W+n/ge3HTnK9rzq+\
O2nHapkRH7QlqCzd8BTTAgwyliop43MqgA8K1bAKDQVW/usqdpeFKou5rxLoJ8b0S6xp7mNG/\
2ilnkIJUgNUgqftJMAtpnCjdAMm14KsM4Az6dWLkB/3HHQHUwdwnT/0oyKHX525oS51TzqD7/n+\
OJpcxDUAGgb4DhGFbuOqg4a0tThiAVckGcPDOqomkkC1ngGtI7p4kyqoENXndLzhjDnwNLiUlzoLfb\
ibUfYQmueHAW7BL9ClqTruwCAji5ZgnoHAdtAWBUgDagrtrzVhUK2CsBk2HkyqA7h7PkjGnZ0t2hZx\
qwCpohB6Cgi6ADDVrIsIErh2zmGkgXnAGf4tZylIZLjgIg0FeUBQnfA9J8ZwrLDy73ufQ82RU4OjmA\
00idQWGMbUJmU6RZ4bLIDIgJQlNz2LzPQfqerLcg5nroZjM0s3jIrUP1CQ30SZKRzQGDhFKKCR1J1O\
J2l0l3VTGlHIeAjoSjQQeT5iF/QXb2dHsGs66+99pb5a/YmmLe2km/r0VO2/\
GREbzWbQJYRqUnaewfbkG8RpUAyAwMwAd6hpjV0ooy1LYrkGOwvB7aIHMA83S/\
dapYbzixx20peXTveMkrDiIS4AB5MFfVOgA1nqvqRAIlJaWcNwpqkpAOXNdQfBJgyZi0CMZKOkHpmY\
L//+vm5W+b3FqSZXl6+\
LeEH2gc6VGriGaP6GAtezEA5EDVp2Qx4mAEeQ7QCFLIkSDU8a6xgRHIMMiMZDZWJN2zZkvRu03fru/\
meldXltdPhHYOlIywvFFd0hoAVpKsH2NrgZ5grDchmgJgoDTaaOjtJUrlZP/j7Du+\
74ox2bRUueHbYAJh1RccppMoWqvwVhmp4nW0MB8NRxopCNXzKOgB+\
BHNg6wa7vqtw68cHv971NslpmcaCZ2Xqm+\
WBVLMk5VwqZPhAF9PgULzRzvgg4ebUEkWDnzdRUv8DabwPHdvjRwc/3n69YaDJkbbIpyC5+PsYt/\
jLBXiUMSB0irliMotWUMkKlazFHAkoY9xUlGOEzB0p4qmtzw68rnD6o56amTT0BbC4QCox4570RpOC\
J6EYSQkckyG+\
JWLBySuEXmBWJFLlu84LWh8dfP1goMFViA6YAQwa8VMiKSPPkOvnKEj9wARkBEqDLccTEmEjQB2EpY\
JeAHTedc3kysGPnuFxgmMDIZxKXLiSoKciA+\
8ynQ01K5IZUDzoxKjgIGF9vZYArBEGeo7ojoxoWOrQGFoLfAt1+N1o9LvSWmDq1KBNoZXMSQlRON3/\
YwwLSpoBVd0l4HEYlDh1vDB94UUkAOBGdqTaK9qfzcubBcizKj5esvH1re7rkeoEqRExK8QsKi8z1L\
MAxJsjUbIowboEj7HfD5FYTqF+WCU1HMG2y4NOkpxT76zu3be6mhfX+\
ks8t4Rs14u9vLg62NISjBLhs8GACR9zcD7qHhNBu1JTqHyIYfgSobVw5B6D1F1YhDNFExHVurqGPW2\
LFVcv+9tv37d4Ozx54MtU2OlIziacHniWVBQh4DdUpAOTNPgekBYiZ4GJiJ1FId3IAKrZUCXumTf46\
S/P4f/124SffJR84PugKX2FDhnfZ/K1QpcpEdWobspShVEDlOupnxP1b0g5wq+\
QAekqcim8Q1W8Yuv3N3ZZXlzprZ4Y/HqJkTBrosYPdPHA0BmG7Z8kNAKj9lhywA+\
LnNrHSyQIN4IkWKQY3rXTfupMX994RIFeCGtNgC3KMfAfEQI1y4veqEjXn0PQ4JMBiCRk+\
L5z1K3DZ3gb1bxZpBu6Y6Q6dJinn8mEgwtLrV0XSqRbaoJ7AB1MvwBU9FTWmckQ3QQFFxfAiAh22Qs\
tQSuF05Kq94GzO044tn56v1++q7d4ay+\
tHhn8tEIWBInBchqT6bpxpLtb1B5FIm8EKhqykW5hUFs2EI6IhaDqOYAccO2u+/9bt93+\
3gpcffX0W4gD3wcGp54rIZKCsX71nW7YZ/AERNgQg2OMLq8JhBsQapEpA9jkrTYmuK5D+\
K0Ot77bN096DsCwAHLOAznS9QOvnGNUWykU+FUjtQe+Q6rk1J5GI5vSNWtD+\
MLrzt5NWzf8NcewZzrHjTEywCVQD84BJgFK4FskxDqqA4E5WOiSkUwl8JS08ErqHcUk7QgCLGdGKwN\
fv/u4X0wbe67l65RCqSsUQ0hNWWltSUKha1DY4Io00H7PSB6zJWSRYSPwBdE4AE3bMek/\
2fVxrPlgXml1DhbWFmSpwLjUCLUmFEEwETwatgGzZGcMFRq4FBqqEVFUcQtURXWVoiPYb91119y92l\
v/5xvy4u3tXU/\
lwEJRE8YCRAyEiCDaBGm4EFb5yCgDhEBkTAGyGao5ybloRafycP8OirF1Aq7tLaaDvbvzwtwCHSktt\
4JNpktOTRYe7NmTA4JDI+l4oAlEPkOVmkUAqhtMN36/\
sVTmzanzhaBK1g7g9owtBlyXV6nH4NzS0nLqLfrV3LLAZeaFJC8WHNONGZaiIaSsnPDUDhaoDeQ9UP\
tOJVJkuVgZJEl8FJc64v2eM1mwtcthyxK6RQ0qqsCdhNEOrD0JwWJRUYMfFE6NhkFpVBMb5NlCpz25\
SGQD6iuFpdrOZrju1IvkBzJhu8HvN0k1LgNUUEcDADY6S6IraEka51wB3UTIFSArxnmPtOipsxp3Fm\
CEmpp25Pyt0Rffv2ah/9pma+hAM2A/iLV0L9xh/\
jVYOLyfZ7pan0F6RYiikOhDfVGoZTAoizQZs5M7O0A/s+vTN2D2e/\
Qg16mHPgdTr6fWgE3AvFJ5hZGKxRSAd6UA5rN0X5tKHsDRYqRut8ICKjjq7VyoKU1H8rm824aN5w9b\
gUgwrxAGqaWk7E8r+\
AEpl57uGtCC031Rx6jTJzXvKwj5ul8C5HR0Xa2IOzfh6e3XOuxvOSSNC5kI1JGHRhHXoJaO1AMLGQ9\
JlsrAAPiDFtRukbrogt5Q9zrPcnAdDvkTnZZsPEKzJSDCr+\
ByopEeuIbIjaNmJtjqiEeBAYoaulCeCxUeAX1b6QUyExifgaP6jkV41iN9/\
qbjedlvmQMFBJC0bgDvqXxYhwI0hiwoqPdr/74mrGINrDAG3gGmC7Ag+\
j3gDUm324mK6689nSEtIPsitRvqL5RjJOCLTZCo7yeGmBjdoFXIQAgQRhTsAgQHCQxM9wKjQyrbDhi\
4nhSeuSM5Hm19WSHnGYlIKyMCTqS7PZIh/\
HKHYOQZ9Q4DuRdISAhCipqcIEU5amSM3dJVcrQ1Hvd7Ax9f8It+\
eeOBjUELhKQTJLq00hhkJzoyKNiCpX/\
hDCAcUBOYCySEuq0DqXD4TuxXDFJjw66uwFvd8EBevj13YH/\
daAqm0VMTnWKxtHBw35fcpKJeZVo1BTsAMyLoRl5IAE3ECYh0dt6INd3ffuR3zgf9QTL8j5bY9YgPX\
lGpvIgCVBA4EXyAqlbhADEgbtPTA1gH1e/\
PwqgWzT1C3dGARb2Fhbx848aTMYeX6BmEljsgAUoqygWrBhCjAtEmUHUmC0hV2PAZTsI0fIOTmEWXQ\
YGU6dakCdSDYDuMdLMN64+etEIk+\
DzCMFi4U1SUnOhwHoiZatJiCcAnihAMbdACCmkpWIBEImwglAK7bGcmDuXYO768FP1CXzLe6h3Iy3T\
gK0zQWhUBflYAAzmpfdieWCu6tJ40J9afjC3EjqgjORYkevcInZC7bOgLQPO9YxuPdLVwmy+\
aCjqooj5hHpIVgdQdh31JleQRVAnLIUIm9oBQjYUCbCWhFkC7qzhxK2Y/\
vSM3bwgBeIAlpwISJCALQwBdWWBEx4AKctQafNFQr8dCDyYURvcNYB9CU5FdnXe3BulDmZ4+Sqd+\
4Tp6wqvFFS2igVfCWOrsS/f+\
vAIuBDsxyTmqJYFHZKHpFQSrHPIH3RfF3qFWArFrLbaipUP0tMsZYjTFIWkStWuwHpEh0v6kK19IzU\
gGisM+xhHFCzWTROCgHp/\
IpPgDnifZgda2Jkp8v3dP7uRNUlKLUKkRqYDUKF7TGRxIDCADmARpUhnDpivkkSJG8ciWQK+\
SKly2CVs39l4eOEo52AcQrb3I4F26AR9DlCKhn17xIAqHIE7yLwnBOlrqhg+\
YT2dMLAPPeLqlW4Aat4XdTk3BOmxel38HZyMXurgDSJKppacDkmV0ax3fI2VK47+\
oGZOFP4BZgbskbAFHF2IcYlvTERy2LsYmG9qaEXa4omMjbpSV1CEeCZuuZAM0ypwQQEuJlk6XAn422\
YYpSmASZAMe1JGv9279/\
JaUcfJtorZ6I2zpN4cLIE6cGm4pqpzPyUvHAaepURL1bwfKAsWy9ESIx0ZGPsWuQK47cxXAI5kykL1\
ubqUOHZGqqC03QAPcH/\
iWylfhrkBuWBAqk6BryjLTRRMNlzEqKgAuDaRtuq4e8eGsaUFbVgynm9IkNiggyuLwIe0IX+\
WgCXBQTxAWEkckU3QvjQH6sYYXqup5hIv9g8Ysrh6B1650e21CboKHmiD63U2BbALghZWNCxxzpSxA\
lmjgwLFQCGGEwDlSLmN0PaKr7cdWZDmPcJX7703tCyuYjdaCaGGtSjYpxKBMtfLUjCggdoLVIVs4Lq\
0DpIePShA+SQcI/\
QNtJ8mYrpajWw2g7O0Xk19O83l1dVMaj5HACi2y80ZTAwNNFXhUXgU87yJvnKX2QHRBkKqvCFt6b6l\
TsFXI52c+1Bww4OQhxjrp3t9bAdqMfdZ5BupHT5SIkh0yNzXEIoYfLV1FwVTwZD1cKApAXhvpfCEjx\
YOEesS4VKgBxHYQDumsc3lhoX3C0nJd44l6KhmKwj8EKxgVawrkeDChAOgHQENvKnjkNzqFKZyepUA\
+0S5K3jE1j9uwov8QVit5RuBHKl6PCRu8UJd0C5hQBDgmUAVwNPUZDQiaYIGgHBwRqwGeAs+\
RrDNKnOHxyv77ryt7D/p4FIDqpjvz8p29fNeexXA6fTRJEXqg/iZA9jEAooQ+\
47Vawh2o5hBc2DdBkwsYRbfEInV5pzYhoWPU1w71HvcZzkIGLIwhIiR4J1Vh2KORVoGuGMNHgMSBKp\
DiqY+PDtg+AIa838lHMOpenLFGWy38/\
4aycOCcZMAqsHR68oJeFXPUG4XrkhrQYe4DPcOjFb1AJqgopSRDlbiJpIIILJawp7vaUV41lFVbzlA\
GbAMNoMJM7CJwd8fp7R0PckKvAAnNSMFpPDagYjkhtlgsrvPWAckaBJuYOyDB84ezrX2+\
MmgZx2q6AKQkSEtsomnAG0UGjSWqi/8KUgOdOB4bpakfWRSCHsSx2Ja5q3xhbhTLWmcvg86A/\
U31OdzJ4uk2HLWdwV7KDXBkkqKvSDUarttQ+fJ6M+rc0I0X7qPoKpAZxbz+EcGAWSaEkmEQmGi/\
p6EEy8TcSLoaCT5sIr0B5ZG/\
i0zUr9rRnWpmPD3qFb3tyJzDmTV4ZjNglqcKbkPX5ZJKnHkNopcaTgUIiM7AGuADgZrRRKxs/\
9IWtUVNmUdLpbMdUsFwLrDlPGfAtpBI2QdPUgB49LgCYheCgwfOiiTmUXWGLtRHWShe+hfwnQB/\
NlHStfCOlRwuaAyc9QyGMm8a6s9IHYs4KLoDbI5RNy4CisGAxkuDuAqwQWjDSbr6h9VN+\
BUKwR3bfzjH3HQONLjF6EEfa4Ir2FwRqMT3+TNSkiXR2VBtX2He0DsumlRwg7iBtWaqQbzruqv/\
vOEsa50RDcZZat1RsN3pjSik2iQYp1M64EUQGsAFSVoEoJRDcG36NfyKbsggRWuBzLHVsH3DGrZJKB\
z0gAax1ViQGNtvCE43u4EZEyiQBA1F5Gf0xgW4GKzLiF8NYFSihofRNlJ05PHhPGDL2dKAbYgJimfu\
C6cqFLqhRnscrM9SsEhCwVjqx2gDD4L336uJVM5OfbZAUDu6sww3cVvPnVoRjQAOw8x4w4ANqWjIUJ\
NigNNG+ZicTCDVCozd0bNa1Gvb0ZMIYEmhsz3n1UMZ13EmNZilsOWod0bInF5WQoxoQEwK5k6C3SNW\
gE7LDFJCBe9IDdTySQXRLwoKqqu5zs+\
OYl3XedVgMHHUNjBLkG0qddNRFsQWapTYMOYFcieJAHRzIQZFN4epv0OD4OOxBVxXX/DhNt+\
Ws6zB8CuFspxTabtskictH4sthaRWr4Y6s3AOFuxy5qxIavsPXkjFJYbTE3AdMzhcxho85xowC7EE2\
TFyzgx2mqBG8UUje2rEfUBJgFpdAr3KVAxdxJciUR9nL4uiVsWyI/7uH9asrWdgA/\
ZlEzJd62iK1Z76lIIhZzrvpnJhxAs4Kj1U2CC6NHQTSCEeJ0lvnwJFeduhKj13ePtOno8N2OWo8z0S\
UyjUV9kmDoxEzTkltWsgdSNhtqwsnBouAwdRcz4hOTIJwp7t6ns+\
tEOc6exscNMJnnVk5I6gstjnQgICFGpw68lazzOlC0MFbA2d25QoAoKkD6ZQOtlq5QuGtnLwXG3ANM\
3pAg8MAcSITniSAnOwCIL0Kqzn9GAm1TNxwBbq0SOpi3hU5DIlAeVtNe2aUU0bOHNrBRNASg1aDZLF\
EB9YCoJRV9IIf022OGLHiCdGgRkjtbJMPZ3xw3QGDpT8/WaLredxg/\
HYymwiCUNUbJgjPthQw3cqgmYe7pDBYajfuRU2Us9za/BzSHENtRLxHfewhgNzA2d1g8k/B+\
EM5U1ZRKTDBgaEGcFc+pxe0/WI1BDZobOjyJSN9AigRGajyzYdx5TD5bCOc7xBKiP6xfEF0Z/\
UJeAhEC/ONVMBsUQxKakyV4estKPHPCyQHvVoolbhtmk6IvBwoaR1xjeY+\
Z2ixnQK0JZRc2FmZGLU7id4essEoc7RS2Q8UNfAoAANkqWLHIjQSCNddxAODW/XI2uWg9Z68BU6/\
0PSkDkYCsA8Uu8yIOTANEfy4EBXoDvFJuRjOC5IdyCvxR/qAFHDJYzOs8EB++ghCA5sQi8/\
UMMkH40HeKHyFLpD5TVSm0Jg8Yoej8mKnnfLwE/BOsJeHYF5OPXmDOeGg/\
jdUfWWDnQiaiT1kKE2GQgcdFgSRf99NrDYaOneXg6JHtNOIUc60I2Kd6z3cDPYeaY4YB830mG6QHcK\
ta+kMgrkLGqokqmJJh01C2qUz0NGPAF3zVkBeVHhs0MY74jM149o3+\
bzxsH0QW1Y6UQ3F4QZLLqhJl5Gk76f4eYBGAV5TQt6A4Iq+\
rwmbcJT6xIrOh8RHtLI1lnkIKLiVHzuKfRymwDXGwJNQKZY4mToITdOrwyXzMAjAfg8R/\
QLPhQGdstyx/\
IOl9i6zykHpw5hDsyfOZ6coWZfKWlCCED1FlCmYY4ecuLUN6HRIZF13HMpOANybboeVBoOJW85wxzc\
e4TzGDAK3BK51khP7eCFpEvVwCaJnr4C/\
7fZuIINmQDcmXf0AroMLJQOBD8cYNl8vjk4bdT6i1GPQEAXRo034J1ZRh0DPYPGqLoenFvSiy5AKwA\
qFtMIuErvV8nvH/\
E9wtnngJWK6oGVBTuUjCqmOb1RZDM9j8awnglxT9FDmBgJPSUWU1JBU0N9Qa9xdnWmGW4CN59JDk4g\
tTOUdDHDUXk0IItCfqNHYFWM9D6GBGTg0kR6r5YYN10hkfBfkBBwpY59N1zc6zyybanqSmlJPfAU9b\
XidK+EyqrpYJQen/\
Qem5D6UAU6OYZ7g51xajqsE5hQl67youHse4Tz1EFGVFhk9HADCHYwVIuWAe1zA3MpFEdLr9wmhJdC\
EBA7UoPWgetaolLed8SXA9+nmWdCCkxQR+\
jI6LqiAohSxsJvqMulkl4Xr2EjdXigpx0chZysbRAemQVYoulACjeOz9Cb2xm5wcajEivFmVL00CbV\
kHnq6E1YhnPqZh2p2jP3+xZb1S9/\
BUc3onQ9gzmcBt91Rjvo0yBq1FZYhIRtqUjeADQEmFGR6mAjHIlcBOQjaZcApDNTjDMG3leS7LoAMh\
wT2Xp+O7gdmfAEVsA9omBgZkAxummCExH8WBRDdVEa0yW1FZI68zjqIIKd4MHkulq8DGfc1rPdwZmj\
Z8H7lwRIs2UK7JbqfhL4rcbcIS8XQ2d9OpWGtASgbE4naY3KtkH222rcLcMZt61z3xasSVTAKgqILn\
XqSSAnyG7WZOTjLIH2NfIKXSoF4ZMGs2kFvB00VTa2MR3OPRx6PcOZ8CDH4wHUSLjGK4sYjeAInyiS\
caeoGLyJidYdKdlqA7yfMk+2/1ggvcHuVIdXD8eirjwDcpCCFBhJD+\
ZYOjz2SNBgllSamVkjNSJMMiQegaPmLJDGM7VRjBpzXViXkwyXXa7suoY6iGw0EFYAkhFIIlQbyktx\
rN+vEMA1U28fYbSlR4+5hslGU7tb4p8yGdZVHTbkvJ2SsdrKbtQ+\
khYUJXV3AA711GuB3vjElJlolC8CpAn7z2AhPT2hhv2oXJOYpmZ/36+ScGW/\
FABIpoVR6anjKIMlLFpCDHQMk+\
hSQUJWs57OHGFVogNHbHw4AnWkYNTGgJY0dczWcIcv61a9GN65afsbQOfGUmNoZRHdHCYqRURkqvV0\
Gp6gqV0x3fIO9A5Ik503gk4/ABOR+b7vg+\
Qr2xeOB083kAuwfeg6LLIAa1LDqXoIkYMqY4FXG1m813SNJgDKJAuQw+n9HnCABpvy+\
95gg3eSBx2TU48COqLF9vd0U4NeRI1UnpozvQAWI4/\
aqfUWp8izhm4x070X6oTc9XTIkHYNXlse1EZ1op5gmpqyw9FgE6YF/+oNNbMDFqYnRF1Q+\
GeOSIfNTk8KUDdDrRrZ5ZDXDWfXGW42DypWSJHUHaCwxjSRGpRbz4CPESkyKZANyJlTjYK9WiJtFAR\
eR++me3omnHdVf3ebeHgNgLjnqfjk+\
PGFE31JuTPKgikUZTBXRlKvpUC7W6ioAOSA6QXdOw4W60s9vE1kMfimL+3mdXDaMWnqe1l0tV/\
pxbmlY8fXVreKtA1ohACHkTFh4DR4Bm5DLZmx2xPCFlAHlVMUKgj3YBncJEQKenrPUNPabW+u0/\
YMmnLT4hmwrzaxDyeRlEAnsHUKXcmViUCwxuTQg639Nx+iQjbt37hjNnHPAqOnajq4zve0a6OCY+\
X6xY21W1i6nah/q9rE9x9n1hH7iCMPukLlW6AyrMksORNCtA2HSzoZBV3i4rkB93L9sljss471s9/\
LrnUd+xG2FG9MTEg2IF5gYMZTh0Tsb9lvVsMDBQOlFWAHR2yDhco0XIKNwQssLx3xwX0vk25e68Wj/\
UKww0tzS4tpK8lC4k1cCnraymhPLUQV8D7woaRH6GVx9CiUJYUHgR0kQFMPzH4fIN3E0KXR7f5eRp0\
KE222h31rsMWpJ4WLOgNG89RQLlbUS0eLQK99BAEeSsUwRdCTT4VzQaKE6Srk/\
Z4LdpI3zfmFuKG8tQO6p6oIrbMnPQEYK1PvOeLO3tJLG8hDAm4pqbCKDlwxK0E7JGUfJCzvQPwHv5d\
Jh4/kfSsrS7HX/\
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"}\
, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2022.09.16", "CreationTimestamp" -> 
  3.891137643751445`16.34265158281757*^9, "UpdatedTimestamp" -> 
  3.891137643751481`16.342651582817577*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "92ce7a395baccd06b35bc67811577346991d7e35"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}, 
  "AutoUpdate" -> True, 
  "Openers" -> {
   "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed, "6" -> Closed, "7" -> Closed}, 
    "ExampleSection" -> {
     "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> Closed}}, 
  "TryRealOnly" -> False, 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Users/stian/Developer/Prosjekter/MaXrd/Project \
repository/MaXrd/build/StianRamsnes__MaXrd-4.0.0.paclet", "FileHashes" -> 
    ByteArray[CompressedData["
1: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
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], CurrentValue[
                    RSNB`cell, {TaggingRules, "Refreshing"}] = False]], 
                    Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "13.2 for Mac OS X ARM (64-bit) (January 30, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"083a2df2-911b-4d69-8a41-d0d33e683de4"
]

