AttenuationCoefficient::usage="\!\(\*RowBox[{\"AttenuationCoefficient\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns the linear attenuation coefficient for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"AttenuationCoefficient\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"returns the linear attenuation coefficient for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)";


BraggAngle::usage="\!\(\*RowBox[{\"BraggAngle\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" returns the Bragg angle of reflection \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at the stored wavelength.\"}]\)\n\!\(\*RowBox[{\"BraggAngle\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns the Bragg angle of reflection \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"BraggAngle\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns the Bragg angle of the \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" reflections \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at the stored wavelength.\"}]\)\n\!\(\*RowBox[{\"BraggAngle\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns the Bragg angle of the \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" reflections \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"BraggAngle\", \"[\", StyleBox[\"G\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns the Bragg angle of reflection \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" associated with metric \", Cell[BoxData[StyleBox[\"G\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"BraggAngle\", \"[\", StyleBox[\"G\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns the Bragg angle of reflection \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" associated with metric \", Cell[BoxData[StyleBox[\"G\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)";


CrystalDensity::usage="\!\(\*RowBox[{\"CrystalDensity\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" calculates the mass density of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


CrystalFormulaUnits::usage="\!\(\*RowBox[{\"CrystalFormulaUnits\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" calculates the number of formula units \", Cell[BoxData[StyleBox[\"Z\", \"TI\"]], \"InlineFormula\"], \" for the crystal.\"}]\)";


CrystalPlot::usage="\!\(\*RowBox[{\"CrystalPlot\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" plots the atom structure of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


DarwinWidth::usage="\!\(\*RowBox[{\"DarwinWidth\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" calculates the Darwin width of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at the stored wavelength.\"}]\)\n\!\(\*RowBox[{\"DarwinWidth\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"calculates the Darwin width of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"DarwinWidth\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"calculates the Darwin width of the \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"DarwinWidth\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \",\", SubscriptBox[StyleBox[\"\[Gamma]\", \"TR\"], StyleBox[\"o\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"\[Gamma]\", \"TR\"], StyleBox[\"h\", \"TI\"]], \"]\"}]\) \!\(\*RowBox[{\"calculates the Darwin width of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \", using the factors \", Cell[BoxData[FormBox[SubscriptBox[\"\[Gamma]\", \"o\"], TraditionalForm]], \"InlineMath\"], \" and \", Cell[BoxData[FormBox[SubscriptBox[\"\[Gamma]\", \"h\"], TraditionalForm]], \"InlineMath\"], \" of the experimental setup.\"}]\)";


DISCUSPlot::usage="\!\(\*RowBox[{\"DISCUSPlot\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" performs a diffraction simulation for the \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" structure and plots the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" plane.\"}]\)\n\!\(\*RowBox[{\"DISCUSPlot\", \"[\", StyleBox[\"file\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"performs a diffraction simulation for the structure stored in \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" and plots the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" plane.\"}]\)";


DistortStructure::usage="\!\(\*RowBox[{\"DistortStructure\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"F\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"F\", \"TI\"], StyleBox[\"3\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"3\", \"TR\"]]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" distorts the atoms in \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" by an amount given by vector field \", Cell[BoxData[StyleBox[\"F\", \"TI\"]], \"InlineFormula\"], \" and its variables \", Cell[BoxData[StyleBox[\"x\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


EmbedStructure::usage="\!\(\*RowBox[{\"EmbedStructure\", \"[\", StyleBox[\"sourceUnits\", \"TI\"], \",\", StyleBox[\"targetPositions\", \"TI\"], \",\", StyleBox[\"targetCrystal\", \"TI\"], \",\", StyleBox[\"outputCrystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" embeds \", Cell[BoxData[StyleBox[\"sourceUnits\", \"TI\"]], \"InlineFormula\"], \" at \", Cell[BoxData[StyleBox[\"targetPositions\", \"TI\"]], \"InlineFormula\"], \" in \", Cell[BoxData[StyleBox[\"targetCrystal\", \"TI\"]], \"InlineFormula\"], \" to create a new structure \", Cell[BoxData[StyleBox[\"outputCrystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


EquivalentIsotropicADP::usage="\!\(\*RowBox[{\"EquivalentIsotropicADP\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" calculates the equivalent isotropic atomic displacement parameters (ADPs) of the atoms in \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ExpandCrystal::usage="\!\(\*RowBox[{\"ExpandCrystal\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" expands the asymmetric unit of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" to the complete the unit cell.\"}]\)\n\!\(\*RowBox[{\"ExpandCrystal\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"B\", \"TI\"], \",\", StyleBox[\"C\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"completes the unit cell of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and expands it to a structure of \", Cell[BoxData[StyleBox[RowBox[{\"A\", \"\[Times]\", \"B\", \"\[Times]\", \"C\"}], \"TI\"]], \"InlineFormula\"], \" unit cells.\"}]\)";


ExportCrystalData::usage="\!\(\*RowBox[{\"ExportCrystalData\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"file\", \"TI\"], \",\", StyleBox[\"format\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"exports the data associated with \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" to \", Cell[BoxData[StyleBox[\"file\", \"TI\"]], \"InlineFormula\"], \" in a given \", Cell[BoxData[RowBox[{StyleBox[\"format\", \"TI\"], \".\"}]], \"InlineFormula\"]}]\)";


ExtinctionLength::usage="\!\(\*RowBox[{\"ExtinctionLength\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"calculates the extinction distance of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at the stored wavelength.\"}]\)\n\!\(\*RowBox[{\"ExtinctionLength\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"calculates the extinction distance of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ExtinctionLength\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"calculates the extinction distance of the \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" reflections for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ExtinctionLength\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \",\", SubscriptBox[StyleBox[\"\[Gamma]\", \"TR\"], StyleBox[\"o\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"\[Gamma]\", \"TR\"], StyleBox[\"h\", \"TI\"]], \"]\"}]\) \!\(\*RowBox[{\"calculates the extinction distance of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \", using the factors \", Cell[BoxData[FormBox[SubscriptBox[\"\[Gamma]\", \"o\"], TraditionalForm]], \"InlineMath\"], \" and \", Cell[BoxData[FormBox[SubscriptBox[\"\[Gamma]\", \"h\"], TraditionalForm]], \"InlineMath\"], \" of the experimental setup.\"}]\)";


GetAtomicScatteringFactors::usage="\!\(\*RowBox[{\"GetAtomicScatteringFactors\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns an association between the chemical elements in \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and the atomic form factor \", Cell[BoxData[FormBox[SubscriptBox[\"f\", \"0\"], TraditionalForm]], \"InlineMath\"], \" based on \", Cell[BoxData[FormBox[RowBox[{RowBox[{\"sin\", \"(\", \"\[Theta]\", \")\"}], \"/\", \"\[Lambda]\"}], TraditionalForm]], \"InlineMath\"], \" value corresponding to reflection \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetAtomicScatteringFactors\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"returns an association between the chemical elements in \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and the atomic form factor \", Cell[BoxData[FormBox[RowBox[{SubscriptBox[\"f\", \"0\"], \"+\", SuperscriptBox[\"f\", \"\[Prime]\", MultilineFunction -> None], \"+\", RowBox[{\"\[ImaginaryI]\", \" \", SuperscriptBox[\"f\", \"\[Prime]\[Prime]\", MultilineFunction -> None]}]}], TraditionalForm]], \"InlineMath\"], \", where anomalous corrections are based on wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetAtomicScatteringFactors\", \"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"k\", \"TI\"]]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns an association between the \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" elements \", Cell[BoxData[SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" and the atomic form factor \", Cell[BoxData[FormBox[SubscriptBox[\"f\", \"0\"], TraditionalForm]], \"InlineMath\"], \", based on the \", Cell[BoxData[StyleBox[\"k\", \"TI\"]], \"InlineFormula\"], \" values of \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"j\", \"TI\"]], \"=\", SubscriptBox[RowBox[{\"[\", RowBox[{StyleBox[\"sin\", \"TI\"], StyleBox[\"\[NegativeThinSpace]\", \"TI\"], RowBox[{RowBox[{\"(\", StyleBox[\"\[Theta]\", \"TR\"], \")\"}], \"\[NegativeMediumSpace]\", \"/\", \"\[NegativeThinSpace]\", \"\[Lambda]\"}]}], \"]\"}], StyleBox[\"j\", \"TI\"]]}]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetAtomicScatteringFactors\", \"[\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"k\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"returns an association between the \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" elements \", Cell[BoxData[SubscriptBox[StyleBox[\"X\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" and the atomic form factor \", Cell[BoxData[FormBox[RowBox[{SubscriptBox[\"f\", \"0\"], \"+\", SuperscriptBox[\"f\", \"\[Prime]\", MultilineFunction -> None], \"+\", RowBox[{\"\[ImaginaryI]\", \" \", SuperscriptBox[\"f\", \"\[Prime]\[Prime]\", MultilineFunction -> None]}]}], TraditionalForm]], \"InlineMath\"], \",  based on the \", Cell[BoxData[StyleBox[\"k\", \"TI\"]], \"InlineFormula\"], \" values of \", Cell[BoxData[RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"j\", \"TI\"]], \"=\", SubscriptBox[RowBox[{\"[\", RowBox[{StyleBox[\"sin\", \"TI\"], StyleBox[\"\[NegativeThinSpace]\", \"TI\"], RowBox[{RowBox[{\"(\", StyleBox[\"\[Theta]\", \"TR\"], \")\"}], \"\[NegativeMediumSpace]\", \"/\", \"\[NegativeThinSpace]\", \"\[Lambda]\"}]}], \"]\"}], StyleBox[\"j\", \"TI\"]]}]], \"InlineFormula\"], \" and where anomalous corrections are based on wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)";


GetCrystalMetric::usage="\!\(\*RowBox[{\"GetCrystalMetric\", \"[\", \"{\", RowBox[{StyleBox[\"a\", \"TI\"], \",\", StyleBox[\"b\", \"TI\"], \",\", StyleBox[\"c\", \"TI\"], \",\", StyleBox[\"\[Alpha]\", \"TR\"], \",\", StyleBox[\"\[Beta]\", \"TR\"], \",\", StyleBox[\"\[Gamma]\", \"TR\"]}], \"}\", \"]\"}]\)\!\(\*RowBox[{\" returns the metric for the given lattice parameters \", Cell[BoxData[RowBox[{StyleBox[\"a\", \"TI\"], \",\", StyleBox[\"b\", \"TI\"], \",\", StyleBox[\"c\", \"TI\"], \",\", StyleBox[\"\[Alpha]\", \"TR\"], \",\", StyleBox[\"\[Beta]\", \"TR\"], \",\", StyleBox[\"\[Gamma]\", \"TR\"]}]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetCrystalMetric\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns the metric for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


GetElements::usage="\!\(\*RowBox[{\"GetElements\", \"[\", StyleBox[\"formula\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns a list of the chemical elements contained in \", Cell[BoxData[StyleBox[\"formula\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetElements\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns a list of all chemical elements contained in \", Cell[BoxData[\"$CrystalData\"], \"InlineFormula\"], \" for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


GetLatticeParameters::usage="\!\(\*RowBox[{\"GetLatticeParameters\", \"[\", StyleBox[\"G\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns the lattice parameters corresponding to the metric \", Cell[BoxData[StyleBox[\"G\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetLatticeParameters\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns the lattice parameters of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


GetLaueClass::usage="\!\(\*RowBox[{\"GetLaueClass\", \"[\", StyleBox[\"pg\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns the Laue class of point group \", Cell[BoxData[StyleBox[\"pg\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetLaueClass\", \"[\", StyleBox[\"sg\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns the Laue class of space group \", Cell[BoxData[StyleBox[\"sg\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"GetLaueClass\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"returns the Laue class of the space group of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


GetScatteringCrossSections::usage="\!\(\*RowBox[{\"GetScatteringCrossSections\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\)\!\(\*RowBox[{\" returns an association on the form \", Cell[BoxData[RowBox[{StyleBox[\"X\", \"TI\"], StyleBox[\"\[Rule]\", FontSlant -> \"Plain\"], StyleBox[\"\[Sigma]\", \"TI\"]}]], \"InlineFormula\"], \" where \", Cell[BoxData[StyleBox[\"X\", \"TI\"]], \"InlineFormula\"], \" is a chemical element in \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and \", Cell[BoxData[StyleBox[\"\[Sigma]\", \"TR\"]], \"InlineFormula\"], \" the corresponding scattering cross section.\"}]\)\n\!\(\*RowBox[{\"GetScatteringCrossSections\", \"[\", StyleBox[\"X\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"returns an association between the chemical element \", Cell[BoxData[StyleBox[\"X\", \"TI\"]], \"InlineFormula\"], \" and its scattering cross section for the given wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)";


GetSymmetryData::usage="\!\(\*RowBox[{\"GetSymmetryData\", \"[\", StyleBox[\"group\", \"TI\"], \",\", StyleBox[\"label\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" extracts the data associated with \", Cell[BoxData[StyleBox[\"label\", \"TI\"]], \"InlineFormula\"], \" from the given point- or space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


GetSymmetryOperations::usage="\!\(\*RowBox[{\"GetSymmetryOperations\", \"[\", StyleBox[\"group\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns the symmetry operations of \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ImportCrystalData::usage="\!\(\*RowBox[{\"ImportCrystalData\", \"[\", StyleBox[\"cif\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"extracts information from a \", Cell[BoxData[StyleBox[\"cif\", \"TI\"]], \"InlineFormula\"], \" file and stores the data in \", Cell[BoxData[\"$CrystalData\"], \"InlineFormula\"], \" under the \", Cell[BoxData[StyleBox[\"cif\", \"TI\"]], \"InlineFormula\"], \" file name.\"}]\)\n\!\(\*RowBox[{\"ImportCrystalData\", \"[\", StyleBox[\"cif\", \"TI\"], \",\", StyleBox[\"label\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"extracts information from a \", Cell[BoxData[StyleBox[\"cif\", \"TI\"]], \"InlineFormula\"], \" file and stores the data in \", Cell[BoxData[\"$CrystalData\"], \"InlineFormula\"], \" under \", Cell[BoxData[StyleBox[\"label\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ImportCrystalData\", \"[\", RowBox[{\"{\", RowBox[{StyleBox[\"label\", \"TI\"], \",\", StyleBox[\"formula\", \"TI\"], \",\", StyleBox[\"Z\", \"TI\"], \",\", StyleBox[\"sg\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"lattice\", \"TI\"], \",\", StyleBox[\"atomData\", \"TI\"], \",\", StyleBox[\"notes\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"stores the data in \", Cell[BoxData[\"$CrystalData\"], \"InlineFormula\"], \" under \", Cell[BoxData[StyleBox[\"label\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ImportCrystalData\", \"[]\"}]\) \!\(\*RowBox[{\"opens a dialogue for entering the data.\"}]\)";


InputCheck::usage="\!\(\*RowBox[{\"InputCheck\", \"[\", StyleBox[\"input\", \"TI\"], \",\", SubscriptBox[StyleBox[\"label\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"label\", \"TI\"], StyleBox[\"n\", \"TI\"]], \"]\"}]\)\!\(\*RowBox[{\" checks \", Cell[BoxData[StyleBox[\"input\", \"TI\"]], \"InlineFormula\"], \" according to each \", Cell[BoxData[SubscriptBox[StyleBox[\"label\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \".\"}]\)";


InterplanarSpacing::usage="\!\(\*RowBox[{\"InterplanarSpacing\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" calculates the distance between planes with Miller indices \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" using the lattice parameters of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"InterplanarSpacing\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"n\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"n\", \"TI\"]]}], \"}\"}]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"calculates the distance between planes with Miller indices \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" using the lattice parameters of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


MergeSymmetryEquivalentReflections::usage="\!\(\*RowBox[{\"MergeSymmetryEquivalentReflections\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" merges reflections \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" that are symmetry equivalent in the given \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


MillerNotationToList::usage="\!\(\*RowBox[{\"MillerNotationToList\", \"[\", StyleBox[\"hkl\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" converts Miller index string \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" to an expression on the form \", Cell[BoxData[RowBox[{\"{\", RowBox[{\"h\", \",\", \"k\", \",\", \"l\"}], \"}\"}]], \"InlineFormula\"], \".\"}]\)";


MillerNotationToString::usage="\!\(\*RowBox[{\"MillerNotationToString\", \"[\", \"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\", \"]\"}]\)\!\(\*RowBox[{\" converts reflection \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" to Miller index notation.\"}]\)";


ReciprocalSpaceSimulation::usage="\!\(\*RowBox[{\"ReciprocalSpaceSimulation\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"origin\", \"TI\"], \",\", SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"min\", \"TI\"]], \"]\"}]\)\!\(\*RowBox[{\" plots a simulation of the reciprocal space of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \", with \", Cell[BoxData[SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"1\", \"TR\"]]], \"InlineFormula\"], \" and \", Cell[BoxData[SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"2\", \"TR\"]]], \"InlineFormula\"], \" defining the layer plane centred at \", Cell[BoxData[StyleBox[\"origin\", \"TI\"]], \"InlineFormula\"], \" and \", Cell[BoxData[SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"min\", \"TI\"]]], \"InlineFormula\"], \" the resolution.\"}]\)\n\!\(\*RowBox[{\"ReciprocalSpaceSimulation\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"origin\", \"TI\"], \",\", SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"min\", \"TI\"]], \"]\"}]\) \!\(\*RowBox[{\"plots a simulation of the reciprocal space of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \", with \", Cell[BoxData[SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"1\", \"TR\"]]], \"InlineFormula\"], \" and \", Cell[BoxData[SubscriptBox[StyleBox[\"L\", \"TI\"], StyleBox[\"2\", \"TR\"]]], \"InlineFormula\"], \" defining the layer plane centred at \", Cell[BoxData[StyleBox[\"origin\", \"TI\"]], \"InlineFormula\"], \" and \", Cell[BoxData[SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"min\", \"TI\"]]], \"InlineFormula\"], \" the resolution.\"}]\)";


ReflectionList::usage="\!\(\*RowBox[{\"ReflectionList\", \"[\", StyleBox[\"n\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"generates a list of all possible \", Cell[BoxData[RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}]], \"InlineFormula\"], \" combinations up to an integer \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ReflectionList\", \"[\", StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"condition\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"generates a list of all possible \", Cell[BoxData[RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}]], \"InlineFormula\"], \" combinations up to an integer \", Cell[BoxData[StyleBox[\"n\", \"TI\"]], \"InlineFormula\"], \" that also satisfies \", Cell[BoxData[StyleBox[\"condition\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ReflectionList\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"generates a list of reflections for the given \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and the corresponding wavelength stored in \", Cell[BoxData[\"$CrystalData\"], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ReflectionList\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"generates a list of reflections for the given \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ReflectionList\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", StyleBox[\"condition\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"generates a list of reflections for the given \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" and wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \", also taking \", Cell[BoxData[StyleBox[\"condition\", \"TI\"]], \"InlineFormula\"], \" into account.\"}]\)";


RelatedFunctionsGraph::usage="\!\(\*RowBox[{\"RelatedFunctionsGraph\", \"[\", StyleBox[\"f\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns a graph showing the closest related functions to \", Cell[BoxData[StyleBox[\"f\", \"TI\"]], \"InlineFormula\"], \" in the \", Cell[BoxData[\"MaXrd`\"], \"InlineFormula\"], \"-context.\"}]\)";


StructureFactor::usage="\!\(\*RowBox[{\"StructureFactor\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" calculates the structure factor of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength stored in \", Cell[BoxData[\"$CrystalData\"], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"StructureFactor\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\)\!\(\*RowBox[{\" calculates the structure factor of the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"StructureFactor\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\)\!\(\*RowBox[{\" calculates the structure factor of the \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" reflections for \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" at wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)";


StructureFactorTable::usage="\!\(\*RowBox[{\"StructureFactorTable\", \"[\", StyleBox[\"crystal\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" produces a table of structure factors, phases, Bragg angles, extinction lengths and Darwin widths for a given \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"StructureFactorTable\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \"]\"}]\) \!\(\*RowBox[{\"produces the same table for a given \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" but using wavelength \", Cell[BoxData[StyleBox[\"\[Lambda]\", \"TR\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"StructureFactorTable\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"\[Lambda]\", \"TR\"], \",\", StyleBox[\"condition\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"produces the same table, but reflections that do not follow the pattern of \", Cell[BoxData[StyleBox[\"condition\", \"TI\"]], \"InlineFormula\"], \" will be disregarded.\"}]\)";


SymmetryEquivalentPositions::usage="\!\(\*RowBox[{\"SymmetryEquivalentPositions\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" returns a list of coordinates that are equivalent to \", Cell[BoxData[RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \"}\"}]], \"InlineFormula\"], \" under the symmetry of \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"SymmetryEquivalentPositions\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns a list of coordinates, each entry containg the equivalents of \", Cell[BoxData[SubscriptBox[RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \"}\"}], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" under the symmetry of \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


SymmetryEquivalentReflections::usage="\!\(\*RowBox[{\"SymmetryEquivalentReflections\", \"[\", StyleBox[\"group\", \"TI\"], \"]\"}]\)\!\(\*RowBox[{\" returns a list of reflections that are equivalent to a general reflection under the symmetry of \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"SymmetryEquivalentReflections\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns a list of reflections that are equivalent to \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" under the symmetry of \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


SymmetryEquivalentReflectionsQ::usage="\!\(\*RowBox[{\"SymmetryEquivalentReflectionsQ\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" yields \", Cell[BoxData[\"True\"], \"InlineFormula\"], \" if all reflections \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" are symmetry equivalent in the given point \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \", and \", Cell[BoxData[\"False\"], \"InlineFormula\"], \" otherwise.\"}]\)";


SystematicAbsentQ::usage="\!\(\*RowBox[{\"SystematicAbsentQ\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" returns \", Cell[BoxData[\"True\"], \"InlineFormula\"], \" if the \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" reflection is systematically absent for space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \", and \", Cell[BoxData[\"False\"], \"InlineFormula\"], \" otherwise.\"}]\)\n\!\(\*RowBox[{\"SystematicAbsentQ\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"h\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"l\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) \!\(\*RowBox[{\"returns a list where each reflection \", Cell[BoxData[SubscriptBox[StyleBox[\"hkl\", \"TI\"], StyleBox[\"i\", \"TI\"]]], \"InlineFormula\"], \" has been checked for systematical absence for space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


ToStandardSetting::usage="\!\(\*RowBox[{\"ToStandardSetting\", \"[\", StyleBox[\"group\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"], \",\", StyleBox[\"l\", \"TI\"]}], \"}\"}], \"]\"}]\)\!\(\*RowBox[{\" returns the \[LeftGuillemet]standard setting\[RightGuillemet] of reflection \", Cell[BoxData[StyleBox[\"hkl\", \"TI\"]], \"InlineFormula\"], \" under the symmetry operations of the given point- or space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)\n\!\(\*RowBox[{\"ToStandardSetting\", \"[\", StyleBox[\"group\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"checks the space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \" and returns a non-ambiguous formatted version.\"}]\)\n\!\(\*RowBox[{\"ToStandardSetting\", \"[\", StyleBox[\"group\", \"TI\"], \",\", StyleBox[\"ext\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"checks the space \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \" and retuns a non-ambiguous formatted version with extension \", Cell[BoxData[RowBox[{StyleBox[\"group\", \"TI\"], \":\", StyleBox[\"ext\", \"TI\"]}]], \"InlineFormula\"], \".\"}]\)";


UnitCellTransformation::usage="\!\(\*RowBox[{\"UnitCellTransformation\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", RowBox[{SubscriptBox[StyleBox[\"setting\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"value\", \"TI\"], StyleBox[\"i\", \"TI\"]]}], \",\", \" \", StyleBox[\"\[Ellipsis]\", \"TR\"], \"]\"}]\)\!\(\*RowBox[{\" transforms the unit cell of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" according to the given settings.\"}]\)\n\!\(\*RowBox[{\"UnitCellTransformation\", \"[\", StyleBox[\"crystal\", \"TI\"], \",\", StyleBox[\"group\", \"TI\"], \"]\"}]\) \!\(\*RowBox[{\"transforms the unit cell of \", Cell[BoxData[StyleBox[\"crystal\", \"TI\"]], \"InlineFormula\"], \" to the target space group \", Cell[BoxData[StyleBox[\"group\", \"TI\"]], \"InlineFormula\"], \".\"}]\)";


$CrystalData::usage="\!\(\*$CrystalData\)\!\(\*RowBox[{\" is an association containing data on crystals or compounds for calculation purposes.\"}]\)";


$GroupSymbolRedirect::usage="\!\(\*$GroupSymbolRedirect\)\!\(\*RowBox[{\" is an an association for fast inquiry of point group and space group information.\"}]\)";


$LaueClasses::usage="\!\(\*$LaueClasses\) \!\(\*RowBox[{\"is a subset of the \", Cell[BoxData[\"$PointGroups\"], \"InlineFormula\"], \" association, containing only the 11 centrosymmetric point groups.\"}]\)";


$MaXrdChangelog::usage="\!\(\*$MaXrdChangelog\)\!\(\*RowBox[{\" prints the entry of the change log corresponding to the current version.\"}]\)";


$MaXrdFunctions::usage="\!\(\*$MaXrdFunctions\)\!\(\*RowBox[{\" returns a list of all functions associated with the \", Cell[BoxData[\"MaXrd`\"], \"InlineFormula\"], \" context.\"}]\)";


$MaXrdPath::usage="\!\(\*$MaXrdPath\)\!\(\*RowBox[{\" is the path to the directory containing the \", StyleBox[\"MaXrd\", FontSlant -> \"Italic\"], \" package.\"}]\)";


$MaXrdVersion::usage="\!\(\*$MaXrdVersion\)\!\(\*RowBox[{\" returns the current version of the \", StyleBox[\"MaXrd\", FontSlant -> \"Italic\"], \" package.\"}]\)";


$PeriodicTable::usage="\!\(\*$PeriodicTable\)\!\(\*RowBox[{\" associates the symbols of the elements with their atomic masses.\"}]\)";


$PointGroups::usage="\!\(\*$PointGroups\)\!\(\*RowBox[{\" is an association containing data on the 32 crystallographic point groups.\"}]\)";


$SpaceGroups::usage="\!\(\*$SpaceGroups\)\!\(\*RowBox[{\" is an association containing data on the \", StyleBox[\"230\", Deletable -> True], \" crystallographic space groups.\"}]\)";


$TransformationMatrices::usage="\!\(\*$TransformationMatrices\)\!\(\*RowBox[{\" is an association containing the matrices for transforming between different unit cell settings.\"}]\)";


